{"version":3,"sources":["TrancheWelcome/TrancheWelcome.module.scss","SmartNumber/SmartNumber.js","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","RoundIconButton/RoundIconButton.js","CardIconButton/CardIconButton.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","Faquestion/Faquestion.js","ActiveCoverages/ActiveCoverages.js","PortfolioEquity/PortfolioEquity.js","GenericSelector/GenericSelector.js","TxProgressBar/TxProgressBar.js","theme.js","IconBox/IconBox.js","AssetSelector/AssetSelector.js","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","GenericChart/GenericChart.js","utilities/components/Header.module.scss","ExecuteTransaction/ExecuteTransaction.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","utilities/components/BuyModal.js","DashboardCard/DashboardCard.module.scss","DashboardCard/DashboardCard.js","TableRow/TableRow.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","CustomList/CustomList.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","Staking/Staking.js","GenericFaqs/GenericFaqs.js","SendTxWithBalance/SendTxWithBalance.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","TrancheHarvests/TrancheHarvests.js","TrancheDepositRedeem/TrancheDepositRedeem.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TranchesList/TranchesList.js","TrancheBox/TrancheBox.js","TrancheFlash/TrancheFlash.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","StatsCardSmall/StatsCardSmall.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","PolygonBridgeTransactions/PolygonBridgeTransactions.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","PolygonBridge/PolygonBridge.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","../node_modules/@maticnetwork/meta/network sync /^/.//.*//index/.json$","../node_modules/@maticnetwork/meta/network sync /^/.//.*/.json$","ConnectBox/ConnectBox.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetsList/AssetsList.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","Footer/Footer.module.scss","utilities/components/ModalCard.js","AssetsUnderManagement/AssetsUnderManagement.js","VariationNumber/VariationNumber.js","colors.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","FlexLoader/FlexLoader.js","Title/Title.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","ChartCustomTooltip/ChartCustomTooltip.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","CustomField/CustomField.js","ImageButton/ImageButton.js","RoundButton/RoundButton.js","ExtLink/ExtLink.js","TrancheField/TrancheField.js","AssetField/AssetField.js"],"names":["module","exports","trancheFlash","mobile","SmartNumber","functionsUtil","this","setProps","props","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","width","alignItems","flexDirection","justifyContent","Object","keys","length","forEach","p","showUnit","unit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unitProps","Component","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","showPathMobile","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","id","handleClick","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","buttonProps","border","height","iconSize","iconName","text","ml","fontSize","fontWeight","color","hoverColor","onClick","isMobile","path","map","index","link","pathLink","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","theme","colors","divider","key","e","goToSection","ShortHash","state","componentUnmounted","loadData","prevProps","prevState","hash","newState","callback","setState","resolveAddress","shortenHash","getENSName","ensName","setStateSafe","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","size","assign","display","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","RoundIconButton","borderRadius","mainColor","disabled","minWidth","react__WEBPACK_IMPORTED_MODULE_6___default","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","name","CardIconButton","cardProps","py","px","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","isInteractive","isActive","isDisabled","backgroundColor","margin","my","align","image","src","imageProps","useIconOnly","icon","iconColor","iconProps","mr","isSidebar","iconBgColor","transactions","actionBg","redeem","textProps","CustomTooltip","point","left","data","itemPos","xFormatted","mb","textAlign","children","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","selectedToken","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","_this3","onMouseLeave","tooltipFormat","v","sliceLabel","value","radialLabel","tooltip","container","inline","background","cardBg","labels","fontFamily","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","top","right","bottom","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","position","zIndex","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","CustomTooltipRow","pr","flexBasis","flex","textTransform","dangerouslySetInnerHTML","__html","Faquestion","isShowingAnswer","preventDefault","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","isOpened","boxShadow","cursor","h4","question","answer","Base","loaded","activeCoverages","loadCoverages","account","getActiveCoverages","coverages","c","availableTokens","includes","collateral","statusColors","status","statusIcon","statusColor","completed","failed","pending","statusIconProps","portfolioCoverage","react__WEBPACK_IMPORTED_MODULE_9___default","title","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","titleProps","_CustomList_CustomList__WEBPACK_IMPORTED_MODULE_10__","rows","row","fileClaimUrl","openWindow","cols","fields","themeMode","parentProps","funcProps","actionLabel","actionDisabled","actionUrl","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","JSON","stringify","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","tx","token","BNify","action","Math","min","parseInt","timeStamp","tokenAmount","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","tokenAddress","_context4","getAvailableTokenAddress","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","floor","toUpperCase","yFormatDecimals","gridYStep","gridYValues","gridYValue","axisBottomIndex","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","tickValues","legendPosition","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","menuIsOpen","noShadow","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","notInteractive","CustomIndicatorSeparator","CustomMenu","mt","outerColor","selectProps","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","searchInput","dark","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isDashboard","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","TxProgressBar","txCount","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","transaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","web3","eth","err","_x","_x2","abrupt","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","getRequiredNetwork","provider","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txHash","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","currentNetwork","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","target","rel","href","getEtherscanTransactionUrl","explorer","cancelTransaction","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","copy","serif","counter","space","radii","widths","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","tick","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","green","connect","newblue","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider2","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","menuIconActive","cardBgContrast","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","blacks","whites","zIndices","messageStyle","shade","tint","success","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","IconBox","isVisible","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","bg","twitterIcon","radioBtn","button","GenericChart","addEventListener","handleWindowSizeChange","bind","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","undefined","loaderText","gradientButton","empty","select","selectDark","input","ExecuteTransaction","txStatus","loading","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","network","progressBarProps","execute","componentProps","TransactionField","loadField","hashChanged","accountChanged","output","bgColor","fieldProps","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","tokenSymbol","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","regenerator_default","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","enabled","idle","getDistribution","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","currentNetworkId","totalSpeed","_args10","_context10","availableStrategies","getRequiredNetworkId","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","toBN","n","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","console","getContractByName","networkId","required","contract","contracts","current","isCorrectNetwork","contractsNetworks","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","duration","start","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","startLen","endLen","shortHash","txStart","txEnd","switchEthereumChain","chainId","getCurrentWeb3","currentProvider","request","toHex","method","addEthereumChain","networkConfig","chainName","providerConfig","blockExplorerUrl","rpcUrls","publicRpc","rpc","nativeCurrency","baseToken","symbol","blockExplorerUrls","ensConfig","TTL","ens","addressCheck","supportedNetworks","checkAddress","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","portfolio","tranches","avgAPY","totalEarnings","totalAmountLent","totalEarningsPerc","_args5","tranchesBalance","totalBalance","protocol","protocolConfig","_ref4","_ref5","tranche","trancheConfig","trancheTokenBalance","tranchePool","tranchePrice","tokenBalance","trancheUserInfo","trancheApy","poolShare","amountDeposited","trancheEarnings","loadTrancheFieldRaw","getTrancheUserInfo","toConsumableArray","trancheInfo","trancheWeight","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args8","tokensToMigrate","totalBalanceConverted","_ref11","_ref13$","migrationEnabled","oldContractBalanceFormatted","tokenKey","tokenBalanceConverted","checkMigration","strategy","getIdleTokenPrice","_ref15","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getTokenAprs","getAmountDeposited","avgApy","requiredNetwork","web3RpcKey","web3Rpc","ethereum","Web3","providers","HttpProvider","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args9","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","prevAvgBuyPrice","getAvgBuyPrice","_args11","idleTokensBalance","getFirstDepositTx","deposits","firstDepositTx","getDashboardSectionUrl","section","env","envUrl","baseUrl","origin","asyncTimeout","ms","getDepositTimestamp","_callee13","firstDepositTxs","_args13","_context13","reduce","acc","getTrancheStakingRewardsDistributions","_ref22","_callee15","stakingDistributions","stakingRewards","_context15","_ref23","_callee14","eventFilters","transfers","_context14","CDO","CDORewards","getContractEvents","fromBlock","toBlock","_x9","getTrancheHarvests","_ref24","_callee17","_ref25","_ref26","stakingRewardsDistributions","autoFarming","harvestsList","_context17","_ref27","_callee16","_context16","_x12","_x10","_x11","getTrancheRewardTokensInfo","_ref28","_callee19","tokensDistribution","_context19","_ref29","_callee18","firstHarvest","latestHarvest","firstBlock","govTokenConfig","_ref30","_ref31","prevBlockInfo","lastBlockInfo","lastBlockPoolSize","poolSize","elapsedBlocks","elapsedSeconds","lastAmount","totalAmount","tokensPerBlock","tokensPerSecond","tokensPerDay","tokensPerYear","convertedTokensPerYear","tokenApr","tokenApy","_context18","_address","getBlockInfo","genericContractCallCached","returnValues","total","apr2apy","apr","apy","_x15","_x13","_x14","_ref32","_callee21","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters","_ref33","_ref34","underlying_transfers","trancheToken_transfers","totalAmountDeposited","_context21","_ref35","_callee20","trancheTokenTransferEvent","tokenTransferEvent","trancheTokenAmount","blockInfo","hashKey","_context20","trancheTokens","_x19","_x16","_x17","_x18","getTrancheUserTransactions","_ref36","_callee22","_context22","_x20","_x21","_x22","getTrancheFirstDepositTx","_ref37","_callee23","_context23","_x23","_x24","_x25","getAmountDepositedTranche","_ref38","_callee24","_context24","_x26","_x27","_x28","_ref39","_callee25","_ref40","_ref41","userAvgPrice","_context25","_x29","_x30","getAmountLent","_callee26","amountLents","_args26","_context26","getBaseToken","getCurrentNetwork","getCurrentNetworkId","defaultNetwork","getPolygonBridgeTxs","_callee32","txs","covalentInfo","etherscanInfo","stateSenderConfig","erc20PredicateConfig","etherPredicateConfig","depositManagerConfig","rootChainManagerConfig","polygonNetworkId","covalentApiUrl","polygonAvailableTokens","polygonEndpoint","ethereumNetworkId","etherscanApiUrl","etherscanEndpoint","etherscanTxlistEndpoint","etherscanTxlistInternalEndpoint","_ref44","_ref45","last_state_id","polygonTxs","etherscanTxlist","etherscanTxlistInternal","rootTokensAddresses","childTokensAddresses","depositTxs","exitTxs","depositTxsHashes","depositETHInputRexExp","depositETHTxs","exitETHTxs","_args32","_context32","getCachedData","endpoints","getPolygonCurrentLastStateId","makeCachedRequest","makeEtherscanApiRequest","childToken","rootToken","result","_ref46","_callee27","ethereumTx","txReceipt","stateSenderLog","tx_state_id","_context27","bridgeType","getTxReceipt","web3Infura","log","hexToNumberString","topics","included","_x31","_ref47","_callee28","_context28","_x32","match","_ref48","_callee29","_context29","_x33","_ref49","_callee30","_context30","_x34","items","to_address","_ref50","_callee31","polygonTx","_context31","normalizePolygonTx","exited","maticPOSClient","exitERC20","encodeAbi","_x35","sort","getPolygonBaseTxs","_callee33","debug","baseTxs","baseEndpoint","cachedRows","lastCachedTx","lastCachedBlockNumber","covalentEndpointLastBlock","latestTxs","latestBlockNumbers","requestCount","requestStatus","dataToCache","_args33","_context33","getCachedRequest","block_height","filterPolygonTxs","tx_hash","saveFetchedTransactions","makeRequest","now","addKeyToCachedDataWithLocalStorage","getEtherscanBaseTxs","_callee34","firstBlockNumber","endBlockNumber","firstIdleBlockNumber","etherscanEndpointLastBlock","_args34","_context34","filterEthereumTxs","_callee35","_args35","_context35","filterCurveTxs","endpoint","txsToStore","cachedRequest","saveCachedRequest","_callee36","resultData","_resultData","allAvailableTokens","_args36","_context36","processStoredTxs","t1","_callee37","contractInstance","_context37","web3Polygon","Contract","constant","inputs","outputs","internalType","payable","stateMutability","methods","lastStateId","call","checkPolygonTransactionIncluded","_ref56","_callee38","_ref57","_ref58","_context38","getTransactionReceipt","_x36","_ref59","_callee39","_args39","_context39","_x37","depositLogEvent","log_events","sender_address","decoded","param","redeemLogEvent","withdrawLogEvent","tokenDecimal","idleToken","block_signed_at","_d","logEvent","raw_log_topics","from_address","gasUsed","gas_spent","gas_price","_ref60","_callee40","processTransactions","idleTokensAddresses","_args40","_context40","mappedTx","_x38","_x39","filterEtherscanTxs","_ref61","_callee41","processTxs","_args41","_context41","_x40","_ref62","_callee42","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args42","_context42","tokenMigrationToolParams","curveTokenConfig","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenValue","newValue","iTxs","withdrawnValue","_x41","addStoredTransaction","txKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref63","_callee47","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args47","_context47","baseTokenConfig","baseTokenAddress","_ref64","_callee46","minedTxs","_context46","_ref65","_callee45","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context45","getCurveTokenPrice","_ref66","_callee43","_context43","_x46","_x47","baseTokensConfig","t2","_ref67","_callee44","_context44","_x48","_x49","_x44","_x45","_x43","_x42","_ref68","_callee53","txsToProcess","_args53","_context53","_ref69","_callee52","_context52","_ref70","_callee51","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context51","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref71","_callee48","_context48","_x54","_x55","_ref72","_callee49","_context49","_x56","_x57","oldContract","events","raw","_ref73","_callee50","_context50","_x58","_x59","abi","decodeLog","_token","_x52","_x53","_x51","_x50","alias","getCustomAddress","setCustomAddress","customAddress","cachedRequests","_ref74","_callee54","error_callback","config","_args54","_context54","catch","_x60","_ref75","_callee55","apiKeyIndex","apiKey","_args55","_context55","message","_x61","_ref76","_callee56","return_data","_args56","_context56","_x62","code","errorCode","split","getGlobalConfigs","array","prop","shift","configs","getAppUrl","baseURL","getCurrentEnvironment","environments","checkUrlPolygon","polygonUrl","checkUrlOrigin","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee57","page","googlePageviewInfo","isOrigin","_args57","_context57","ga","_ref78","_callee59","googleEventsInfo","debugEnabled","originOk","_args59","_context59","analytics","google","addPostfixForTestnet","availableNetworks","_ref79","_callee58","_context58","hitCallback","hitCallbackFail","_x64","_x65","_x63","createContract","_ref80","_callee60","_context60","_x66","_x67","_x68","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","defaultUrl","baseurl","getEtherscanAddressUrl","decimalCount","decimal","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee63","activeOnly","whitelist","proposals","currTime","validProposals","_args63","_context63","addr","msg","payload","end","_ref82","_callee62","checkedStrategies","_context62","snapshot","metadata","strategies","_ref83","_callee61","_context61","_x70","_x69","getAprsFromApi","_callee64","endpointInfo","aprs","_args64","_context64","_ref85","_callee65","startTimestamp","endTimestamp","forceStartTimestamp","frequency","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args65","_context65","_x71","getTokenExchangeRate","_ref86","_callee66","exchangeRateParams","exchangeRate","_context66","_x72","_x73","getTokenDecimals","_ref87","_callee67","_context67","_x74","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee68","idleTokenConfig","feeDistributorConfig","_context68","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee69","contractPaused","_args69","_context69","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref90","_callee71","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context71","lastAllocationsPromise","_ref91","_callee70","lastAllocations","_context70","_x76","_x77","alloc","_x75","_ref92","_callee72","oldContractBalance","oldContractTokenDecimals","oldContractName","_context72","getContractBalance","_x78","_x79","_ref93","_callee73","eventName","_args73","_context73","getContractPastEvents","_x80","_x81","estimateMethodGasUsage","_ref94","_callee74","methodParams","_contract$methods","functionCall","gasLimit","_ref95","_ref96","_args74","_context74","getGasPrice","estimateGas","_x82","_x83","_ref97","_callee75","userAddress","signedParameters","callback_receipt","_contract$methods2","_context75","on","once","confirmationNumber","receipt","_x84","_x85","_x86","_x87","_x88","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref98","_callee76","biconomyInfo","res","_context76","limits","apiId","headers","x-api-key","_x89","sendTxWithPermit","_ref99","_callee77","_contract$methods3","messageToSign","_this$getSignaturePar","_context77","encodeABI","personal","sign","_x90","_x91","_x92","_x93","_x94","_x95","buildBiconomyErc20ForwarderTx","_ref100","_callee78","permitType","callData","buildParams","_context78","txGas","erc20ForwarderClient","buildTx","_x96","_x97","_x98","_x99","_x100","_ref101","_callee80","_context80","_ref102","_callee79","_context79","_x102","_x103","_x101","sendBiconomyTxWithErc20Forwarder","_ref103","_callee81","req","metaInfo","txResponse","fetchReceiptIntervalId","_context81","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x104","_x105","_x106","_x107","sendBiconomyTxWithPersonalSign","_ref104","_callee82","_this$getSignaturePar2","_context82","getNonce","_x108","_x109","_x110","_x111","signPermitEIP2612","_ref105","_callee83","erc20Name","owner","spender","deadline","domain","permit","domainData","_context83","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x112","_x113","_x114","_x115","_x116","_x117","_x118","_x119","signPermit","_ref106","_callee84","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args84","_context84","net","getId","round","nonceMethod","pow","allowed","response","_x120","_x121","_x122","_ref107","_callee85","permitParams","methodAbi","useNonce","_args85","_context85","_jsonInterface","f","unshift","_x123","_x124","_x125","_x126","_x127","_x128","_x129","sendSignedTx","_ref108","_callee86","MetaTransaction","dataToSign","_context86","_x130","_x131","_x132","_x133","_x134","checkTokenApproved","_ref109","_callee87","contractAddr","walletAddr","_ref110","_ref111","allowance","_context87","getAllowance","gte","_x135","_x136","_x137","_ref112","_callee88","_context88","_x138","_x139","_x140","contractMethodSendWrapperWithValue","txData","send_raw","raw_tx_data","disableERC20","toTwosComplement","enableERC20","getBestToken","_callee90","highestValue","_args90","_context90","lendRates","aprInfo","tokenAPR","_ref114","_callee89","_context89","_x141","getTrancheStakedBalance","_ref115","_callee91","stakedBalance","_args91","_context91","_x142","_x143","getTrancheStakingRewards","_ref116","_callee93","_context93","_ref117","_callee92","tokenGlobalConfig","_context92","_x146","_x144","_x145","_ref118","_callee94","field","addGovTokens","_args94","_context94","loadTrancheField","_x147","_x148","_x149","_x150","_x151","_x152","_x153","_x154","_ref119","_callee95","formatValue","addTokenName","strategyConfig","idleStrategyAddress","idleGovTokenConfig","_ref120","_ref121","totalSupply","virtualPrice","_ref122","_ref123","staked1","lastPrice1","_ref124","_ref125","deposited1","lastPrice","_ref126","_ref127","redeemable1","staked2","_ref128","_ref129","earningsStart","trancheApy2","deposited3","earningsEnd","_ref130","_ref131","trancheFee","earningsCounter","feesStart","feesEnd","_ref132","_ref133","deposited4","redeemable3","_ref134","_ref135","deposited2","redeemable2","_ref136","_ref137","earningsPerc","secondsFromFirstTx","rewardsTokensInfo","_ref138","_ref139","rewardsTokens","incentiveTokens","govTokens","_args95","_context95","Strategy","initContract","AA","BB","getTokenTotalSupply","IDLE","rewardTokenAddr","govTokenAddress","getGovTokenConfigByAddress","stakingRewardsTokenConfig","_x155","_x156","_x157","_x158","_x159","_x160","_x161","loadAssetField","_ref140","_callee96","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref141","_ref142","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref143","_ref144","amountLentCurve1","redeemableBalanceCurve","_ref145","_ref146","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref147","_ref148","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref149","_ref150","tokenPriceFirstDeposit","_ref151","_ref152","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref153","_ref154","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref155","_ref156","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref157","_ref158","amountLentCurve2","redeemableBalanceCurve1","_ref159","_ref160","redeemableBalance2","_args96","_context96","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x162","_x163","_x164","_x165","getIdleTokenSupply","_ref161","_callee97","idleTokenSupply","_args97","_context97","_x166","getIdleTokenPriceWithFee","_ref162","_callee98","_ref163","_ref164","fee","priceWFee","_args98","_context98","eq","_x167","_x168","_ref165","_callee99","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args99","_context99","_x169","clearCachedData","clear_all","parent_key","useLocalStorage","expirationDate","_ref166","_callee100","_ref167","_ref168","idleTokensTotalSupply","userShare","_context100","_x170","_x171","open","_callee102","coverProtocolConfig","nexusMutualConfig","_args102","_context102","_ref170","_callee101","coverage","coverageTokens","protocolImage","_context101","tokens","expirationTimestamp","utc","_x172","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref171","_callee104","incidentsInfo","_ref172","_ref173","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context104","directProps","startBlock","contractInfo","buyer","_ref174","_callee103","cover","coverId","claimSubmittedEvent","_ref175","_ref176","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref177","_ref178","_context103","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x174","_x173","getBatchedDepositExecutions","_ref179","_callee105","_context105","_x175","getBatchedDeposits","_callee107","filter_by_status","batchDepositConfig","batchedDeposits","_args107","_context107","_ref181","_callee106","currBatchIndex","batchIndex","_ref182","_ref183","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context106","_x176","getETHBalance","_ref184","_callee108","fixDecimals","_args108","_context108","_x177","_ref185","_callee109","_ref186","_ref187","_args109","_context109","_x178","_x179","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","_ref188","_callee110","_args110","_context110","_x180","_ref189","_callee111","_args111","_context111","_x181","_ref190","_callee112","_args112","_context112","_x182","_x183","getProtocolBalance","_ref191","_callee113","_context113","_x184","_x185","getAprs","_ref192","_callee114","_context114","addresses","_x186","genericIdleCall","_ref193","_callee115","callParams","_args115","_context115","_x187","_ref194","_callee116","_contract$methods4","_args116","_context116","_x188","_x189","_ref195","_callee118","_args118","_context118","_ref196","_callee117","_context117","_x191","_x192","_x190","getTxDecodedLogs","_ref197","_callee120","logAddr","decodeLogs","internalTransfers","_context120","_ref198","_callee119","_context119","_x197","_x198","_x193","_x194","_x195","_x196","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee121","_context121","_ref200","_callee122","_context122","getBlock","_x199","_ref201","_callee123","_args123","_context123","getPastEvents","_x200","_x201","_ref202","_callee124","_args124","_context124","_x202","_x203","cachedContractCall","_ref203","_callee125","_args125","_context125","_x204","_x205","_ref204","_callee126","_contract$methods5","_args126","_context126","_x206","_x207","_ref205","_callee127","async","_args127","_context127","_x208","_x209","getUnlentBalance","_ref206","_callee128","unlentBalance","_context128","_x210","_ref207","_callee129","_args129","_context129","_x211","getLastAllocations","_ref208","_callee131","tokenAllocations","_context131","_ref209","_callee130","_context130","_x213","_x214","_x212","_ref210","_callee132","protocolsAprs","_ref211","_ref212","govTokensBalances","_args132","_context132","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","_x215","getSushiswapPoolTokenPrice","_ref213","_callee133","_ref214","_ref215","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref216","_ref217","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context133","getSushiswapConversionRate","_x216","_ref218","_callee134","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context134","_x217","_x218","_ref219","_callee135","unires","_context135","addressForPrice","_x219","_x220","getCurveDepositedTokens","_ref220","_callee136","idleTokensBalances","remainingCurveTokens","_args136","_context136","_x221","getCurveUnevenTokenAmounts","_ref221","_callee137","amounts","max_burn_amount","unevenAmounts","_context137","getCurveDepositContract","_x222","_x223","_callee138","curveRatesInfo","_context138","strategyTokens","getCurveAPYContract","_callee139","blocksForPrevTokenPrice","_ref224","_ref225","prevTokenPrice","blocksMultiplier","curveAPR","_context139","getCurveTokenSupply","_callee140","_context140","getCurvePoolContract","_callee141","_args141","_context141","_callee142","_args142","_context142","_ref229","_callee143","_ref230","_ref231","_context143","_x224","_callee144","depositContractInfo","_context144","getCurveZapContract","_callee145","zapContractInfo","_context145","_callee146","poolContractInfo","_context146","getCurveSwapContract","_callee147","migrationContractInfo","_context147","getCurveIdleTokensAmounts","_callee149","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args149","_context149","_ref237","_callee148","coinIndex","curveIdleTokens","_context148","migrationParams","_x225","getCurveTokensAmounts","_callee151","useCoinIndex","_args151","_context151","_ref239","_callee150","_ref240","_ref241","idleTokenPrice","totalTokenSupply","_context150","_x226","getCurveAmounts","_ref242","_callee153","_args153","_context153","_ref243","_callee152","_context152","_x229","_x227","_x228","getCurveTokenAmount","_ref244","_callee154","_args154","_context154","_x230","getCurveSlippage","_ref245","_callee155","uneven_amounts","depositContract","_ref246","_ref247","Sv","_args155","_context155","_x231","_x232","_ref248","_callee156","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","disabledTokens","aaveIncentivesController_address","IAaveIncentivesController_name","_ref249","_ref250","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args156","_context156","IAaveIncentivesController","emissionPerSecond","_x233","_callee158","_args158","_context158","_ref252","_callee157","_ref253","_ref254","_context157","_x234","getWMaticApr","_ref255","_callee159","maticConversionRate","wMaticTokenConfig","wMaticApr","distributionSpeed","destTokenConfig","wMaticValue","_args159","_context159","_x235","_x236","getStkAaveApr","_ref256","_callee160","aaveConversionRate","stkAaveAPR","stkAaveValue","_args160","_context160","_x237","_x238","getCompAPR","_ref257","_callee161","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args161","_context161","_x239","_x240","getCompSpeed","_ref258","_callee162","cTokenAddress","compSpeed","_context162","_x241","_ref259","_callee163","cTokenInfo","compoundAllocationPerc","_ref260","_ref261","cTokenTotalSupply","compoundPoolShare","_args163","_context163","_x242","_callee165","_args165","_context165","_ref263","_callee164","_ref264","_ref265","_context164","_x243","_callee167","_args167","_context167","_ref267","_callee166","_ref268","_ref269","compApr","_context166","_x244","getTokensCsv","_callee170","csv","_context170","prototype","sum","pv","cv","avg","_ref271","_callee169","_context169","_ref272","_callee168","rates","header","aprAvg","scoreAvg","lastRow","_context168","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x246","_x245","_callee172","govToken","convertToken","_args172","_context172","_ref274","_callee171","compTokenBalance","_context171","_x247","getGovTokensFarming","tokenGovTokens","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref275","_callee174","govTokensUserDistribution","_args174","_context174","_ref276","_callee173","_context173","_x249","_x248","getGovTokensDistributionSpeed","_ref277","_callee176","govTokensDistribution","_args176","_context176","_ref278","_callee175","govSpeed","_context175","_x251","_x250","getGovTokensAprs","_ref279","_callee178","govTokensAprs","_args178","_context178","_ref280","_callee177","_ref281","_ref282","_ref283","_ref284","cTokenConfig","_context177","aprTooltipMode","_x254","_x252","_x253","_callee180","_args180","_context180","_ref286","_callee179","govTokenBalance","tokenConversionRate","fromTokenConfig","_context179","_x255","_callee181","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args181","_context181","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref288","_callee183","govTokensAmounts","_context183","getGovTokensUserAmounts","_ref289","_callee182","govTokenIndex","_context182","getGovTokenAddessByIndex","_x258","_x259","_x256","_x257","_ref290","_callee184","_context184","_x260","_x261","_ref291","_callee185","_context185","_x262","_x263","_callee188","govTokenConfigForced","_args188","_context188","_ref293","_callee187","_context187","_ref294","_callee186","_context186","_x265","_x266","_x264","getTokenFees","_callee189","_args189","_context189","_callee190","_ref297","_ref298","feePercentage","gain","fees","_args190","_context190","_ref299","_callee191","_args191","_context191","_x267","getTotalTVL","_callee192","tokensTVL","_context192","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee196","_context196","_ref302","_callee195","_context195","_ref303","_callee194","oldTokenTVL","idleTokenName","_ref304","_ref305","oldTokenConfig","_ref309","_ref310","oldTokenPrice","oldTotalSupply","_context194","showAUM","_ref306","_callee193","_ref307","_ref308","govTokenConversionRate","govTokenBalanceConverted","_context193","_x270","oldProtocols","oldProtocol","protocolPos","_x269","_x268","getSubstackLatestFeed","_callee197","idleSubstackFeed","latestFeed","_context197","getTrancheAggregatedStats","_callee201","totalAUM","_args201","_context201","_ref313","_callee200","_context200","_ref314","_callee199","_context199","_ref315","_callee198","_ref316","_ref317","_context198","_x273","_x272","_x271","getAggregatedStats","_callee203","allNetworks","networkIds","_args203","_context203","_ref319","_callee202","tvls","_context202","getAggregatedStats_chain","_x274","_callee207","avgAPR","_args207","_context207","_ref321","_callee206","_context206","_ref322","_callee205","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context205","_ref323","_callee204","_ref324","_ref325","_context204","_x277","_x276","_x275","getTokenApy","_ref326","_callee208","_context208","_x278","getTokensToMigrate","_callee211","_args211","_context211","_ref328","_callee210","_context210","_ref329","_callee209","_ref330","_context209","_x280","_x279","getProtocolsTokensBalances","_callee213","tokenBalances","minTokenBalance","protocolsTokens","_args213","_context213","_ref332","_callee212","tokenContract","_context212","_x281","_ref333","_callee214","_args214","_context214","_x282","_x283","_x284","getAvgAPYStats","_ref334","_callee215","apiResults","_args215","_context215","_x285","_x286","_ref335","_callee216","count","_conversionRate","ToTokenConfig","_args216","_context216","_x287","_x288","getTokenScore","_ref336","_callee217","_ref337","_ref338","tokenScore","_context217","protocolScore","getTokenScoreApi","_x289","_x290","_ref339","_callee218","scores","_context218","_x291","_x292","_ref340","_callee219","idleGovTokenShowAPR","idleAPR","_args219","_context219","_x293","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","Fragment","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","getInitParams","render","closeModal","goBack","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","remoteResources","scriptID","remoteResourceParams","precall","parentElement","head","stylesheetId","methodInfo","loadAvailableMethods","_this4","caption","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","imageSrc","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","placeholder","noOptionsMessage","inputValue","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","closeFunc","Header","Body","Footer","React","defaultOpacity","hidden","interactive","rainbow","DashboardCard","mouseOver","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","titleParentProps","lineHeight","description","placement","TableRow","FieldComponent","fieldComponent","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","cardId","rowProps","rowId","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","colProps","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","CustomList","rowsPerPage","totalPages","processedRows","processRows","totalRows","paginationEnabled","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","rowIndex","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_8__","CustomField","prevPage","nextPage","cDAI","anonymous","indexed","ERC20","5","best","DAI","govTokensDisabled","minAmountForMint","wyre","destCurrency","ramp","swapAsset","defiPrime","IdleTokenV4","aToken","functions","risk","80001","137","crToken","USDC","WETH","42","cToken","1337","IdleTokenV3","yToken","IdleConverterPersonalSignV4","iToken","CHAI","USDT","SUSD","skipMintForDeposit","TUSD","WBTC","RAI","enabledEnvs","fToken","FEI","1","defiScoreDisabled","canDeposit","disabledMessageRedeemKey","disabledMessageDepositKey","Staking","selectedOption","toolProps","SelectedComponent","component","AssetField","FlexLoader","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","borderBottom","q","toggleAnswer","SendTxWithBalance","permitEnabled","showPermitBox","approveEnabled","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","executeTx","_amount","_params","checkLimit","eventValue","getPermitTransactionParams","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","viewOnly","connectorName","infoBox","steps","step","stepIndex","ExtLink","checked","togglePermitEnabled","approveDescription","RoundButton","balanceSelectorInfo","ConnectBox","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","componentDidUpdate","ModalCard","iconHeight","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","balanceProp","trancheBalance","selectedAction","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","trancheAPY","trancheDetails","cdoConfig","cantUnstake","cantWithdraw","trancheLimit","otherTrancheType","otherTrancheDetails","stakingEnabled","showSelectButton","contrastColor","hex","selectTrancheType","TrancheField","setSelectedAction","src_SendTxWithBalance_SendTxWithBalance","transactionSucceeded","contractApprovedCallback","components_LimitReachedModal","ShareModal","confettiEnabled","tweet","TrancheHarvests","distributions","tokenIcon","Title","stakeEnabled","unstakeEnabled","selectedTrancheOption","selectedStakeAction","selectedActionChanged","selectedStakeActionChanged","trancheType","isStake","isDeposit","isWithdraw","option","selectTranche","ImageButton","setStakeAction","PortfolioEquityTranches","transactionsList","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","src_PortfolioEquityTranches_PortfolioEquityTranches","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","transactionsChanged","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","rewardToken","rewardTokenInfo","staked","reedemable","Button","claimCallback","TranchePage","userHasFunds","componentLoaded","loadTransactions","balanceInfo","tranchesDetails","filteredTranchesTypes","TrancheDepositRedeem","src_TrancheDetails_TrancheDetails","src_FundsOverviewTranche_FundsOverviewTranche","src_StakingRewardsTranche_StakingRewardsTranche","src_TrancheHarvests_TrancheHarvests","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","TranchesList","enabledProtocols","alt","showTooltip","baseName","justifyItems","long","features","feature","TrancheFlash","flashData","bold","subtitle","openTooltipModal","helpcircle","arrows","seniorinfo","juniorinfo","TrancheWelcome","AssetsUnderManagement","loaderAlign","aggregatedStatsMethod","src_TrancheFlash_TrancheFlash","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","translateY","symbolSize","anchor","direction","itemTextColor","symbolShape","effects","valueHover","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","contractsInitialized","counterStyle","oldState","build_default","delay","separator","useEasing","formattingFn","countUpRef","ref","TotalEarningsCounter","Tranches","trancheRoute","useTrancheType","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","loadPortfolio","then","urlParams","param1","param3","param2","availableTranchesChanged","tranchesTokens","tranchesBalances","tranchesConfig","weight","portfolioDonutData","balanceValue","tokenPercentage","trancheName","_this5","breadcrumbPath","src_TranchePage_TranchePage","aligItems","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","setPortfolioEquityQuickSelection","src_TranchesList_TranchesList","src_TrancheWelcome_TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","programEnded","rewardMultiplier","accountingData","programEndDate","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","isUnstake","isStats","txAction","poolLink","statInfo","setAction","IdleStaking","maxApr","lockPeriods","lockedEnd","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","_this8","isLock","isClaim","isIncrease","canIncrease","StatsCardSmall","maxHeight","reward","setIncreaseAction","changelockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","selectedUnderlyingChanged","loadTokenData","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","PortfolioDonut","totalFunds","parentWidth","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","setEstimationStepsPerc","tokenIndex","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","borderTop","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","PolygonBridgeTransactions","bridgeEnabled","polygonTransactions","polygonTransactionsAvailableTokens","polygonBridgeConfig","actionIcon","actionIconProps","StrategyPage","remainingTokens","portfolioLoading","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","apyLong","yieldFarming","strategyName","toolsToShow","toolName","toolConfig","src_PortfolioDonut_PortfolioDonut","toolIndex","src_DashboardIconButton_DashboardIconButton","ActiveCoverages","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","src_PolygonBridgeTransactions_PolygonBridgeTransactions","BatchDeposit","canClaim","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","obj","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","PolygonBridge","txsToExit","dataLoaded","defaultTransaction","selectedTransaction","rootTokenConfig","childTokenConfig","encodeParameter","depositData","sendValue","exitCalldata","ERC20Predicate","DepositManager","depositedTokensLog","depositedTokensEvent","EtherPredicate","maticNetwork","mainNetworkId","mainNetworkName","withdrawnTokensEvent","withdrawnTokensLog","withdrawnTokens","Transfer","paramIsToken","defaultAction","loadPolygonTxs","isExit","selectTransaction","exitCallback","getExitTransactionParams","setRequiredNetwork","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","process","appName","forumURL","telegramURL","discordURL","twitterURL","darkModeEnabled","live","beta","polygon","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","messages","scoreShort","apyShort","totalProfitPerc","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","riskAdjustedDisabledMessageDeposit","riskScore","curveInstructions","riskAdjustedDisabledMessageRedeem","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","12","7","delegates","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","SLP","showAPR","showPrice","COMP","stkAAVE","WMATIC","ProtocolDataProvider","ChildChainManager","UniswapRouter","UniswapV2Router02","SushiswapRouter","SushiV2Router02","RootChainManager","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","BalancerExchangeProxy","zeroExInstant","orderSource","affiliateInfo","feeRecipient","tranchflash","rgb","bubble","stake","unstake","extraicons","iconDark","iconInactive","iconInactiveDark","tools","forum","leaderboard","overview","delegate","landingStrategies","comingSoon","titlePostfix","govTokensEnabled","chartColor","descLong","descShort","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","ETH","MATIC","USD","disabledCharts","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","fuse","skipRebalance","metaTransactionsEnabled","skipMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","3","4","isForked","requiredConfirmations","enabledNetworks","accountBalanceMinimum","infura","REACT_APP_INFURA_KEY","networkPairs","nexus","covalent","REACT_APP_COVALENT_KEY","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","urls","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","stakePolygon","nexusMutual","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","polygonBridge","StateSender","ChildERC20","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","idleDAIv2","IdleTokenV2","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","captionPos","envParams","accountId","prod","referrerAccountId","dest","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","RampInstantSDK","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","./mainnet/v1/index.json","./testnet/mumbai/index.json","webpackContext","webpackContextResolve","./mainnet/v1/artifacts/fx-portal/FxChild.json","./mainnet/v1/artifacts/fx-portal/FxERC1155ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC1155RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC20ChildToken.json","./mainnet/v1/artifacts/fx-portal/FxERC20ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC20RootToken.json","./mainnet/v1/artifacts/fx-portal/FxERC20RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC721ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC721RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxRoot.json","./mainnet/v1/artifacts/genesis/BorValidatorSet.json","./mainnet/v1/artifacts/genesis/IStateReceiver.json","./mainnet/v1/artifacts/genesis/Migrations.json","./mainnet/v1/artifacts/genesis/StateReceiver.json","./mainnet/v1/artifacts/genesis/System.json","./mainnet/v1/artifacts/genesis/TestBorValidatorSet.json","./mainnet/v1/artifacts/genesis/TestCommitState.json","./mainnet/v1/artifacts/genesis/TestStateReceiver.json","./mainnet/v1/artifacts/genesis/TestSystem.json","./mainnet/v1/artifacts/genesis/ValidatorSet.json","./mainnet/v1/artifacts/genesis/ValidatorVerifier.json","./mainnet/v1/artifacts/plasma/BaseERC20.json","./mainnet/v1/artifacts/plasma/ChainIdMixin.json","./mainnet/v1/artifacts/plasma/ChildChain.json","./mainnet/v1/artifacts/plasma/ChildERC20.json","./mainnet/v1/artifacts/plasma/ChildERC20Proxified.json","./mainnet/v1/artifacts/plasma/ChildERC721.json","./mainnet/v1/artifacts/plasma/ChildERC721Mintable.json","./mainnet/v1/artifacts/plasma/ChildERC721Proxified.json","./mainnet/v1/artifacts/plasma/ChildToken.json","./mainnet/v1/artifacts/plasma/ChildTokenProxy.json","./mainnet/v1/artifacts/plasma/Common.json","./mainnet/v1/artifacts/plasma/ContractReceiver.json","./mainnet/v1/artifacts/plasma/ContractWitRevertingFallback.json","./mainnet/v1/artifacts/plasma/ContractWithFallback.json","./mainnet/v1/artifacts/plasma/ContractWithoutFallback.json","./mainnet/v1/artifacts/plasma/DelegateProxy.json","./mainnet/v1/artifacts/plasma/DepositManager.json","./mainnet/v1/artifacts/plasma/DepositManagerHeader.json","./mainnet/v1/artifacts/plasma/DepositManagerProxy.json","./mainnet/v1/artifacts/plasma/DepositManagerStorage.json","./mainnet/v1/artifacts/plasma/DrainStakeManager.json","./mainnet/v1/artifacts/plasma/Drainable.json","./mainnet/v1/artifacts/plasma/ECVerify.json","./mainnet/v1/artifacts/plasma/ERC165.json","./mainnet/v1/artifacts/plasma/ERC20.json","./mainnet/v1/artifacts/plasma/ERC20Detailed.json","./mainnet/v1/artifacts/plasma/ERC20Mintable.json","./mainnet/v1/artifacts/plasma/ERC20NonTransferable.json","./mainnet/v1/artifacts/plasma/ERC20Predicate.json","./mainnet/v1/artifacts/plasma/ERC20PredicateBurnOnly.json","./mainnet/v1/artifacts/plasma/ERC721.json","./mainnet/v1/artifacts/plasma/ERC721Enumerable.json","./mainnet/v1/artifacts/plasma/ERC721Full.json","./mainnet/v1/artifacts/plasma/ERC721Metadata.json","./mainnet/v1/artifacts/plasma/ERC721MetadataMintable.json","./mainnet/v1/artifacts/plasma/ERC721Mintable.json","./mainnet/v1/artifacts/plasma/ERC721PlasmaMintable.json","./mainnet/v1/artifacts/plasma/ERC721Predicate.json","./mainnet/v1/artifacts/plasma/ERC721PredicateBurnOnly.json","./mainnet/v1/artifacts/plasma/ERCProxy.json","./mainnet/v1/artifacts/plasma/ExitNFT.json","./mainnet/v1/artifacts/plasma/FallbackManager.json","./mainnet/v1/artifacts/plasma/GnosisSafe.json","./mainnet/v1/artifacts/plasma/GnosisSafeProxy.json","./mainnet/v1/artifacts/plasma/Governable.json","./mainnet/v1/artifacts/plasma/Governance.json","./mainnet/v1/artifacts/plasma/GovernanceLockable.json","./mainnet/v1/artifacts/plasma/GovernanceLockableTest.json","./mainnet/v1/artifacts/plasma/GovernanceProxy.json","./mainnet/v1/artifacts/plasma/IDepositManager.json","./mainnet/v1/artifacts/plasma/IERC165.json","./mainnet/v1/artifacts/plasma/IERC20.json","./mainnet/v1/artifacts/plasma/IERC721.json","./mainnet/v1/artifacts/plasma/IERC721Enumerable.json","./mainnet/v1/artifacts/plasma/IERC721Metadata.json","./mainnet/v1/artifacts/plasma/IERC721Receiver.json","./mainnet/v1/artifacts/plasma/IErcPredicate.json","./mainnet/v1/artifacts/plasma/IGovernance.json","./mainnet/v1/artifacts/plasma/IParentToken.json","./mainnet/v1/artifacts/plasma/IPredicate.json","./mainnet/v1/artifacts/plasma/IRootChain.json","./mainnet/v1/artifacts/plasma/ISignatureValidator.json","./mainnet/v1/artifacts/plasma/ISlashingManager.json","./mainnet/v1/artifacts/plasma/IStakeManager.json","./mainnet/v1/artifacts/plasma/IStakeManagerLocal.json","./mainnet/v1/artifacts/plasma/IValidatorShare.json","./mainnet/v1/artifacts/plasma/IWithdrawManager.json","./mainnet/v1/artifacts/plasma/LibEIP712Domain.json","./mainnet/v1/artifacts/plasma/LibTokenTransferOrder.json","./mainnet/v1/artifacts/plasma/Lockable.json","./mainnet/v1/artifacts/plasma/MRC20.json","./mainnet/v1/artifacts/plasma/Marketplace.json","./mainnet/v1/artifacts/plasma/MarketplacePredicate.json","./mainnet/v1/artifacts/plasma/MarketplacePredicateTest.json","./mainnet/v1/artifacts/plasma/MarketplaceToken.json","./mainnet/v1/artifacts/plasma/MasterCopy.json","./mainnet/v1/artifacts/plasma/MaticWETH.json","./mainnet/v1/artifacts/plasma/Merkle.json","./mainnet/v1/artifacts/plasma/Migrations.json","./mainnet/v1/artifacts/plasma/MintableERC721Predicate.json","./mainnet/v1/artifacts/plasma/MinterRole.json","./mainnet/v1/artifacts/plasma/Module.json","./mainnet/v1/artifacts/plasma/ModuleManager.json","./mainnet/v1/artifacts/plasma/Ownable.json","./mainnet/v1/artifacts/plasma/OwnableLockable.json","./mainnet/v1/artifacts/plasma/OwnerManager.json","./mainnet/v1/artifacts/plasma/ParentTokenMock.json","./mainnet/v1/artifacts/plasma/PredicateUtils.json","./mainnet/v1/artifacts/plasma/PriorityQueue.json","./mainnet/v1/artifacts/plasma/Proxy.json","./mainnet/v1/artifacts/plasma/ProxyStorage.json","./mainnet/v1/artifacts/plasma/ProxyTestImpl.json","./mainnet/v1/artifacts/plasma/ProxyTestImplStorageLayoutChange.json","./mainnet/v1/artifacts/plasma/Registry.json","./mainnet/v1/artifacts/plasma/RootChain.json","./mainnet/v1/artifacts/plasma/RootChainHeader.json","./mainnet/v1/artifacts/plasma/RootChainProxy.json","./mainnet/v1/artifacts/plasma/RootChainStorage.json","./mainnet/v1/artifacts/plasma/RootChainable.json","./mainnet/v1/artifacts/plasma/RootERC721.json","./mainnet/v1/artifacts/plasma/SlashingManager.json","./mainnet/v1/artifacts/plasma/StakeManager.json","./mainnet/v1/artifacts/plasma/StakeManagerProxy.json","./mainnet/v1/artifacts/plasma/StakeManagerStorage.json","./mainnet/v1/artifacts/plasma/StakeManagerTest.json","./mainnet/v1/artifacts/plasma/StakeManagerTestable.json","./mainnet/v1/artifacts/plasma/StakingInfo.json","./mainnet/v1/artifacts/plasma/StakingNFT.json","./mainnet/v1/artifacts/plasma/StateReceiver.json","./mainnet/v1/artifacts/plasma/StateSender.json","./mainnet/v1/artifacts/plasma/StateSyncerVerifier.json","./mainnet/v1/artifacts/plasma/TestMRC20.json","./mainnet/v1/artifacts/plasma/TestToken.json","./mainnet/v1/artifacts/plasma/TransferWithSigPredicate.json","./mainnet/v1/artifacts/plasma/TransferWithSigUtils.json","./mainnet/v1/artifacts/plasma/UpgradableProxy.json","./mainnet/v1/artifacts/plasma/ValidatorShare.json","./mainnet/v1/artifacts/plasma/ValidatorShareFactory.json","./mainnet/v1/artifacts/plasma/ValidatorShareProxy.json","./mainnet/v1/artifacts/plasma/ValidatorShareTest.json","./mainnet/v1/artifacts/plasma/WETH.json","./mainnet/v1/artifacts/plasma/WithdrawManager.json","./mainnet/v1/artifacts/plasma/WithdrawManagerHeader.json","./mainnet/v1/artifacts/plasma/WithdrawManagerProxy.json","./mainnet/v1/artifacts/plasma/WithdrawManagerStorage.json","./mainnet/v1/artifacts/pos/AccessControl.json","./mainnet/v1/artifacts/pos/AccessControlMixin.json","./mainnet/v1/artifacts/pos/ChainConstants.json","./mainnet/v1/artifacts/pos/ChildChainManager.json","./mainnet/v1/artifacts/pos/ChildChainManagerProxy.json","./mainnet/v1/artifacts/pos/ChildERC1155.json","./mainnet/v1/artifacts/pos/ChildERC20.json","./mainnet/v1/artifacts/pos/ChildERC721.json","./mainnet/v1/artifacts/pos/ChildMintableERC721.json","./mainnet/v1/artifacts/pos/ChildTunnel.json","./mainnet/v1/artifacts/pos/DummyERC1155.json","./mainnet/v1/artifacts/pos/DummyERC20.json","./mainnet/v1/artifacts/pos/DummyERC721.json","./mainnet/v1/artifacts/pos/DummyMintableERC721.json","./mainnet/v1/artifacts/pos/DummyStateSender.json","./mainnet/v1/artifacts/pos/EIP712Base.json","./mainnet/v1/artifacts/pos/ERC1155.json","./mainnet/v1/artifacts/pos/ERC1155Predicate.json","./mainnet/v1/artifacts/pos/ERC1155PredicateProxy.json","./mainnet/v1/artifacts/pos/ERC1155Receiver.json","./mainnet/v1/artifacts/pos/ERC165.json","./mainnet/v1/artifacts/pos/ERC20.json","./mainnet/v1/artifacts/pos/ERC20Predicate.json","./mainnet/v1/artifacts/pos/ERC20PredicateProxy.json","./mainnet/v1/artifacts/pos/ERC721.json","./mainnet/v1/artifacts/pos/ERC721Predicate.json","./mainnet/v1/artifacts/pos/ERC721PredicateProxy.json","./mainnet/v1/artifacts/pos/EtherPredicate.json","./mainnet/v1/artifacts/pos/EtherPredicateProxy.json","./mainnet/v1/artifacts/pos/ICheckpointManager.json","./mainnet/v1/artifacts/pos/IChildChainManager.json","./mainnet/v1/artifacts/pos/IChildToken.json","./mainnet/v1/artifacts/pos/IERC1155.json","./mainnet/v1/artifacts/pos/IERC1155MetadataURI.json","./mainnet/v1/artifacts/pos/IERC1155Receiver.json","./mainnet/v1/artifacts/pos/IERC165.json","./mainnet/v1/artifacts/pos/IERC20.json","./mainnet/v1/artifacts/pos/IERC721.json","./mainnet/v1/artifacts/pos/IERC721Enumerable.json","./mainnet/v1/artifacts/pos/IERC721Metadata.json","./mainnet/v1/artifacts/pos/IERC721Receiver.json","./mainnet/v1/artifacts/pos/IERCProxy.json","./mainnet/v1/artifacts/pos/IMintableERC721.json","./mainnet/v1/artifacts/pos/IRootChainManager.json","./mainnet/v1/artifacts/pos/IStateSender.json","./mainnet/v1/artifacts/pos/ITokenPredicate.json","./mainnet/v1/artifacts/pos/MaticWETH.json","./mainnet/v1/artifacts/pos/Merkle.json","./mainnet/v1/artifacts/pos/MerklePatriciaTest.json","./mainnet/v1/artifacts/pos/Migrations.json","./mainnet/v1/artifacts/pos/MintableERC1155Predicate.json","./mainnet/v1/artifacts/pos/MintableERC1155PredicateProxy.json","./mainnet/v1/artifacts/pos/MintableERC20Predicate.json","./mainnet/v1/artifacts/pos/MintableERC20PredicateProxy.json","./mainnet/v1/artifacts/pos/MintableERC721Predicate.json","./mainnet/v1/artifacts/pos/MintableERC721PredicateProxy.json","./mainnet/v1/artifacts/pos/MockCheckpointManager.json","./mainnet/v1/artifacts/pos/NativeMetaTransaction.json","./mainnet/v1/artifacts/pos/NetworkAgnostic.json","./mainnet/v1/artifacts/pos/Proxy.json","./mainnet/v1/artifacts/pos/ProxyTestImpl.json","./mainnet/v1/artifacts/pos/ProxyTestImplStorageLayoutChange.json","./mainnet/v1/artifacts/pos/RootChainManager.json","./mainnet/v1/artifacts/pos/RootChainManagerProxy.json","./mainnet/v1/artifacts/pos/RootChainManagerStorage.json","./mainnet/v1/artifacts/pos/RootTunnel.json","./mainnet/v1/artifacts/pos/UpgradableProxy.json","./networks.json","./testnet/mumbai/artifacts/fx-portal/FxChild.json","./testnet/mumbai/artifacts/fx-portal/FxERC1155ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC1155RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC20ChildToken.json","./testnet/mumbai/artifacts/fx-portal/FxERC20ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC20RootToken.json","./testnet/mumbai/artifacts/fx-portal/FxERC20RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC721ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC721RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxRoot.json","./testnet/mumbai/artifacts/genesis/BorValidatorSet.json","./testnet/mumbai/artifacts/genesis/IStateReceiver.json","./testnet/mumbai/artifacts/genesis/Migrations.json","./testnet/mumbai/artifacts/genesis/StateReceiver.json","./testnet/mumbai/artifacts/genesis/System.json","./testnet/mumbai/artifacts/genesis/TestBorValidatorSet.json","./testnet/mumbai/artifacts/genesis/TestCommitState.json","./testnet/mumbai/artifacts/genesis/TestStateReceiver.json","./testnet/mumbai/artifacts/genesis/TestSystem.json","./testnet/mumbai/artifacts/genesis/ValidatorSet.json","./testnet/mumbai/artifacts/genesis/ValidatorVerifier.json","./testnet/mumbai/artifacts/plasma/BaseERC20.json","./testnet/mumbai/artifacts/plasma/ChainIdMixin.json","./testnet/mumbai/artifacts/plasma/ChildChain.json","./testnet/mumbai/artifacts/plasma/ChildERC20.json","./testnet/mumbai/artifacts/plasma/ChildERC20Proxified.json","./testnet/mumbai/artifacts/plasma/ChildERC721.json","./testnet/mumbai/artifacts/plasma/ChildERC721Mintable.json","./testnet/mumbai/artifacts/plasma/ChildERC721Proxified.json","./testnet/mumbai/artifacts/plasma/ChildToken.json","./testnet/mumbai/artifacts/plasma/ChildTokenProxy.json","./testnet/mumbai/artifacts/plasma/Common.json","./testnet/mumbai/artifacts/plasma/ContractReceiver.json","./testnet/mumbai/artifacts/plasma/ContractWitRevertingFallback.json","./testnet/mumbai/artifacts/plasma/ContractWithFallback.json","./testnet/mumbai/artifacts/plasma/ContractWithoutFallback.json","./testnet/mumbai/artifacts/plasma/DelegateProxy.json","./testnet/mumbai/artifacts/plasma/DepositManager.json","./testnet/mumbai/artifacts/plasma/DepositManagerHeader.json","./testnet/mumbai/artifacts/plasma/DepositManagerProxy.json","./testnet/mumbai/artifacts/plasma/DepositManagerStorage.json","./testnet/mumbai/artifacts/plasma/DrainStakeManager.json","./testnet/mumbai/artifacts/plasma/Drainable.json","./testnet/mumbai/artifacts/plasma/ECVerify.json","./testnet/mumbai/artifacts/plasma/ERC165.json","./testnet/mumbai/artifacts/plasma/ERC20.json","./testnet/mumbai/artifacts/plasma/ERC20Detailed.json","./testnet/mumbai/artifacts/plasma/ERC20Mintable.json","./testnet/mumbai/artifacts/plasma/ERC20NonTransferable.json","./testnet/mumbai/artifacts/plasma/ERC20Predicate.json","./testnet/mumbai/artifacts/plasma/ERC20PredicateBurnOnly.json","./testnet/mumbai/artifacts/plasma/ERC721.json","./testnet/mumbai/artifacts/plasma/ERC721Enumerable.json","./testnet/mumbai/artifacts/plasma/ERC721Full.json","./testnet/mumbai/artifacts/plasma/ERC721Metadata.json","./testnet/mumbai/artifacts/plasma/ERC721MetadataMintable.json","./testnet/mumbai/artifacts/plasma/ERC721Mintable.json","./testnet/mumbai/artifacts/plasma/ERC721PlasmaMintable.json","./testnet/mumbai/artifacts/plasma/ERC721Predicate.json","./testnet/mumbai/artifacts/plasma/ERC721PredicateBurnOnly.json","./testnet/mumbai/artifacts/plasma/ERCProxy.json","./testnet/mumbai/artifacts/plasma/ExitNFT.json","./testnet/mumbai/artifacts/plasma/FallbackManager.json","./testnet/mumbai/artifacts/plasma/GnosisSafe.json","./testnet/mumbai/artifacts/plasma/GnosisSafeProxy.json","./testnet/mumbai/artifacts/plasma/Governable.json","./testnet/mumbai/artifacts/plasma/Governance.json","./testnet/mumbai/artifacts/plasma/GovernanceLockable.json","./testnet/mumbai/artifacts/plasma/GovernanceLockableTest.json","./testnet/mumbai/artifacts/plasma/GovernanceProxy.json","./testnet/mumbai/artifacts/plasma/IDepositManager.json","./testnet/mumbai/artifacts/plasma/IERC165.json","./testnet/mumbai/artifacts/plasma/IERC20.json","./testnet/mumbai/artifacts/plasma/IERC721.json","./testnet/mumbai/artifacts/plasma/IERC721Enumerable.json","./testnet/mumbai/artifacts/plasma/IERC721Metadata.json","./testnet/mumbai/artifacts/plasma/IERC721Receiver.json","./testnet/mumbai/artifacts/plasma/IErcPredicate.json","./testnet/mumbai/artifacts/plasma/IGovernance.json","./testnet/mumbai/artifacts/plasma/IParentToken.json","./testnet/mumbai/artifacts/plasma/IPredicate.json","./testnet/mumbai/artifacts/plasma/IRootChain.json","./testnet/mumbai/artifacts/plasma/ISignatureValidator.json","./testnet/mumbai/artifacts/plasma/ISlashingManager.json","./testnet/mumbai/artifacts/plasma/IStakeManager.json","./testnet/mumbai/artifacts/plasma/IStakeManagerLocal.json","./testnet/mumbai/artifacts/plasma/IValidatorShare.json","./testnet/mumbai/artifacts/plasma/IWithdrawManager.json","./testnet/mumbai/artifacts/plasma/LibEIP712Domain.json","./testnet/mumbai/artifacts/plasma/LibTokenTransferOrder.json","./testnet/mumbai/artifacts/plasma/Lockable.json","./testnet/mumbai/artifacts/plasma/MRC20.json","./testnet/mumbai/artifacts/plasma/Marketplace.json","./testnet/mumbai/artifacts/plasma/MarketplacePredicate.json","./testnet/mumbai/artifacts/plasma/MarketplacePredicateTest.json","./testnet/mumbai/artifacts/plasma/MarketplaceToken.json","./testnet/mumbai/artifacts/plasma/MasterCopy.json","./testnet/mumbai/artifacts/plasma/MaticWETH.json","./testnet/mumbai/artifacts/plasma/Merkle.json","./testnet/mumbai/artifacts/plasma/Migrations.json","./testnet/mumbai/artifacts/plasma/MintableERC721Predicate.json","./testnet/mumbai/artifacts/plasma/MinterRole.json","./testnet/mumbai/artifacts/plasma/Module.json","./testnet/mumbai/artifacts/plasma/ModuleManager.json","./testnet/mumbai/artifacts/plasma/Ownable.json","./testnet/mumbai/artifacts/plasma/OwnableLockable.json","./testnet/mumbai/artifacts/plasma/OwnerManager.json","./testnet/mumbai/artifacts/plasma/ParentTokenMock.json","./testnet/mumbai/artifacts/plasma/PredicateUtils.json","./testnet/mumbai/artifacts/plasma/PriorityQueue.json","./testnet/mumbai/artifacts/plasma/Proxy.json","./testnet/mumbai/artifacts/plasma/ProxyStorage.json","./testnet/mumbai/artifacts/plasma/ProxyTestImpl.json","./testnet/mumbai/artifacts/plasma/ProxyTestImplStorageLayoutChange.json","./testnet/mumbai/artifacts/plasma/Registry.json","./testnet/mumbai/artifacts/plasma/RootChain.json","./testnet/mumbai/artifacts/plasma/RootChainHeader.json","./testnet/mumbai/artifacts/plasma/RootChainProxy.json","./testnet/mumbai/artifacts/plasma/RootChainStorage.json","./testnet/mumbai/artifacts/plasma/RootChainable.json","./testnet/mumbai/artifacts/plasma/RootERC721.json","./testnet/mumbai/artifacts/plasma/SlashingManager.json","./testnet/mumbai/artifacts/plasma/StakeManager.json","./testnet/mumbai/artifacts/plasma/StakeManagerProxy.json","./testnet/mumbai/artifacts/plasma/StakeManagerStorage.json","./testnet/mumbai/artifacts/plasma/StakeManagerTest.json","./testnet/mumbai/artifacts/plasma/StakeManagerTestable.json","./testnet/mumbai/artifacts/plasma/StakingInfo.json","./testnet/mumbai/artifacts/plasma/StakingNFT.json","./testnet/mumbai/artifacts/plasma/StateReceiver.json","./testnet/mumbai/artifacts/plasma/StateSender.json","./testnet/mumbai/artifacts/plasma/StateSyncerVerifier.json","./testnet/mumbai/artifacts/plasma/TestMRC20.json","./testnet/mumbai/artifacts/plasma/TestToken.json","./testnet/mumbai/artifacts/plasma/TransferWithSigPredicate.json","./testnet/mumbai/artifacts/plasma/TransferWithSigUtils.json","./testnet/mumbai/artifacts/plasma/UpgradableProxy.json","./testnet/mumbai/artifacts/plasma/ValidatorShare.json","./testnet/mumbai/artifacts/plasma/ValidatorShareFactory.json","./testnet/mumbai/artifacts/plasma/ValidatorShareProxy.json","./testnet/mumbai/artifacts/plasma/ValidatorShareTest.json","./testnet/mumbai/artifacts/plasma/WETH.json","./testnet/mumbai/artifacts/plasma/WithdrawManager.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerHeader.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerProxy.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerStorage.json","./testnet/mumbai/artifacts/pos/AccessControl.json","./testnet/mumbai/artifacts/pos/AccessControlMixin.json","./testnet/mumbai/artifacts/pos/ChainConstants.json","./testnet/mumbai/artifacts/pos/ChildChainManager.json","./testnet/mumbai/artifacts/pos/ChildChainManagerProxy.json","./testnet/mumbai/artifacts/pos/ChildERC1155.json","./testnet/mumbai/artifacts/pos/ChildERC20.json","./testnet/mumbai/artifacts/pos/ChildERC721.json","./testnet/mumbai/artifacts/pos/ChildMintableERC721.json","./testnet/mumbai/artifacts/pos/ChildTunnel.json","./testnet/mumbai/artifacts/pos/DummyERC1155.json","./testnet/mumbai/artifacts/pos/DummyERC20.json","./testnet/mumbai/artifacts/pos/DummyERC721.json","./testnet/mumbai/artifacts/pos/DummyMintableERC721.json","./testnet/mumbai/artifacts/pos/DummyStateSender.json","./testnet/mumbai/artifacts/pos/EIP712Base.json","./testnet/mumbai/artifacts/pos/ERC1155.json","./testnet/mumbai/artifacts/pos/ERC1155Predicate.json","./testnet/mumbai/artifacts/pos/ERC1155PredicateProxy.json","./testnet/mumbai/artifacts/pos/ERC1155Receiver.json","./testnet/mumbai/artifacts/pos/ERC165.json","./testnet/mumbai/artifacts/pos/ERC20.json","./testnet/mumbai/artifacts/pos/ERC20Predicate.json","./testnet/mumbai/artifacts/pos/ERC20PredicateProxy.json","./testnet/mumbai/artifacts/pos/ERC721.json","./testnet/mumbai/artifacts/pos/ERC721Predicate.json","./testnet/mumbai/artifacts/pos/ERC721PredicateProxy.json","./testnet/mumbai/artifacts/pos/EtherPredicate.json","./testnet/mumbai/artifacts/pos/EtherPredicateProxy.json","./testnet/mumbai/artifacts/pos/ICheckpointManager.json","./testnet/mumbai/artifacts/pos/IChildChainManager.json","./testnet/mumbai/artifacts/pos/IChildToken.json","./testnet/mumbai/artifacts/pos/IERC1155.json","./testnet/mumbai/artifacts/pos/IERC1155MetadataURI.json","./testnet/mumbai/artifacts/pos/IERC1155Receiver.json","./testnet/mumbai/artifacts/pos/IERC165.json","./testnet/mumbai/artifacts/pos/IERC20.json","./testnet/mumbai/artifacts/pos/IERC721.json","./testnet/mumbai/artifacts/pos/IERC721Enumerable.json","./testnet/mumbai/artifacts/pos/IERC721Metadata.json","./testnet/mumbai/artifacts/pos/IERC721Receiver.json","./testnet/mumbai/artifacts/pos/IERCProxy.json","./testnet/mumbai/artifacts/pos/IMintableERC721.json","./testnet/mumbai/artifacts/pos/IRootChainManager.json","./testnet/mumbai/artifacts/pos/IStateSender.json","./testnet/mumbai/artifacts/pos/ITokenPredicate.json","./testnet/mumbai/artifacts/pos/MaticWETH.json","./testnet/mumbai/artifacts/pos/Merkle.json","./testnet/mumbai/artifacts/pos/MerklePatriciaTest.json","./testnet/mumbai/artifacts/pos/Migrations.json","./testnet/mumbai/artifacts/pos/MintableERC1155Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC1155PredicateProxy.json","./testnet/mumbai/artifacts/pos/MintableERC20Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC20PredicateProxy.json","./testnet/mumbai/artifacts/pos/MintableERC721Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC721PredicateProxy.json","./testnet/mumbai/artifacts/pos/MockCheckpointManager.json","./testnet/mumbai/artifacts/pos/NativeMetaTransaction.json","./testnet/mumbai/artifacts/pos/NetworkAgnostic.json","./testnet/mumbai/artifacts/pos/Proxy.json","./testnet/mumbai/artifacts/pos/ProxyTestImpl.json","./testnet/mumbai/artifacts/pos/ProxyTestImplStorageLayoutChange.json","./testnet/mumbai/artifacts/pos/RootChainManager.json","./testnet/mumbai/artifacts/pos/RootChainManagerProxy.json","./testnet/mumbai/artifacts/pos/RootChainManagerStorage.json","./testnet/mumbai/artifacts/pos/RootTunnel.json","./testnet/mumbai/artifacts/pos/UpgradableProxy.json","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","renderedTxs","lastBlockNumber","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","Tos","h1","h2","listStyle","theme_dark","exit","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","isSupportedNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","RimbleTransactionContext","createContext","currentWeb3","permitClient","web3Providers","accountBalance","initWeb3","maticPlasmaClient","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","handleNetworkChanged","_args2","reload","networkInitialized","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","customAddressChanged","contextAccountChanged","accountDisconnected","gnosisSafeLoaded","setNetwork","initCurrentWeb3","useWeb3Provider","web3InfuraRpc","connectorNameChanged","web3Host","web3Provider","forceCallback","polygonConfig","web3PolygonRpc","maticProvider","parentProvider","maticPOSClientConfig","maticPlasmaClientConfig","web3Callback","originalWeb3","biconomyWeb3Provider","_args7","netId","providerRpc","library","IFrameEthereumProvider","MaticJs","MaticPOSClient","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","initContractWithoutSet","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","requiredNetworkId","contractsToInitialize","newContracts","availableStrategiesNetworks","contractFound","contractIndex","_ref20","balanceOf","determineAccountLowBalance","openConnectionModal","_args21","getNetworkType","getNetworkId","currentNetworkChanged","requiredNetworkChanged","_args23","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args24","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","IdleCDO","IdleStrategy","IdleCDOTrancheRewards","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","_args","cachedKeyFound","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCurrentEnvironment","loadCustomAddress","tokenChanged","strategyChanged","networkChanged","_this9","hasMetamask","store","themeDark","_this10","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","recreateOnNetworkChange","recreateOnAccountChange","RimbleWeb3","needsPreflight","initContractCustomProvider","react_router","react","fallback","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","footer","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","subtitleProps","BackButton","totalAUMEndOfYear","loadTotalAUM","aggregatedStatsMethodParams","_this$props","_this$functionsUtil","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","react_countup__WEBPACK_IMPORTED_MODULE_9___default","VariationNumber","IconDirection","iconPos","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","loading-dots","loading-dots--dot","dot-keyframes","HeadingComponent","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","TwitterShareButton","share","parent","escape","customText","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","componentHasChildren","fieldPath","rimble_ui__WEBPACK_IMPORTED_MODULE_10__","customFieldName","customFieldProps","fieldName","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","trancheChanged","protocolChanged","fieldChanged","buttonLabel","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_11__","feesCounter","react_countup__WEBPACK_IMPORTED_MODULE_8___default","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_10__","tooltipProps","formattedValue","_isBigNumber","earningsCurveStart","earningsCurveEnd","tokenAPY2","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","apiResultsAprChart","totalItems","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","random","aprChartRowElement","$aprChartRowElement","lineWidth","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","icon1","icon2","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__"],"mappings":"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","file":"static/js/main.7280c9f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"trancheFlash\":\"TrancheWelcome_trancheFlash__2aaz5\",\"mobile\":\"TrancheWelcome_mobile__fIBQP\"};","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = this.props.unit && formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const hashChanged = prevProps.hash !== this.props.hash;\n    if (hashChanged){\n      this.loadData();\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    if (ensName){\n      text = ensName;\n    }\n    this.setStateSafe({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from \"react\";\nimport { Flex, Button } from \"rimble-ui\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner.js\";\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n      <Button onClick={this.props.handleClick} {...this.props.buttonProps}>\n        <Flex\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n        >\n          <Flex width={1} display={this.props.isLoading ? \"flex\" : \"none\"}>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={this.props.isLoading ? \"none\" : \"flex\"}>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n      </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import React, { Component } from \"react\";\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign(\n      {\n        py: 1,\n        width: \"auto\",\n        px: [\"12px\", 3]\n      },\n      this.props.cardProps\n    );\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isInteractive={true}\n        isActive={this.props.isActive}\n        isDisabled={this.props.isDisabled}\n        handleClick={this.props.handleClick}\n        backgroundColor={\"blue\"}\n      >\n        <Flex\n          mx={this.props.margin ? this.props.margin : 0}\n          my={1}\n          alignItems={\"center\"}\n          flexDirection={\"row\"}\n          justifyContent={this.props.align ? this.props.align : \"center\"}\n        >\n          {this.props.image ? (\n            <Image\n              align={\"center\"}\n              src={this.props.image}\n              height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              {...this.props.imageProps}\n            />\n          ) : this.props.useIconOnly ? (\n            <Icon\n              align={\"center\"}\n              name={this.props.icon}\n              size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n              {...this.props.iconProps}\n            />\n          ) : (\n            <Flex\n              mr={this.props.isSidebar ? 0 : 2}\n              p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n              borderRadius={\"50%\"}\n              alignItems={\"center\"}\n              justifyContent={\"center\"}\n              backgroundColor={\n                this.props.iconBgColor\n                  ? this.props.iconBgColor\n                  : this.props.theme.colors.transactions.actionBg.redeem\n              }\n            >\n              <Icon\n                align={\"center\"}\n                name={this.props.icon}\n                size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n                {...this.props.iconProps}\n              />\n            </Flex>\n          )}\n          <Text fontWeight={3} fontSize={[1, 3]} {...this.props.textProps}>\n            {this.props.text}\n          </Text>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  state = {\n    loaded:false,\n    activeCoverages:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadCoverages();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadCoverages();\n    }\n  }\n\n  async loadCoverages(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const coverages = await this.functionsUtil.getActiveCoverages(this.props.account);\n    const activeCoverages = [];\n    if (coverages && coverages.length>0){\n      coverages.forEach( c => {\n        if (!this.props.availableTokens || !this.props.availableTokens.length || this.props.availableTokens.includes(c.collateral)){\n          const statusColors = this.props.theme.colors.transactions.status;\n          let statusIcon = 'VerifiedUser';\n          let statusColor = statusColors.completed;\n          switch (c.status){\n            case 'Expired':\n              statusIcon = 'Error';\n              statusColor = statusColors.failed;\n            break;\n            case 'Claimed':\n              statusIcon = 'Error';\n              statusColor = statusColors.pending;\n            break;\n            default:\n            case 'Active':\n              statusIcon = 'VerifiedUser';\n              statusColor = statusColors.completed;\n            break;\n          }\n\n          const statusIconProps = {\n            color:statusColor\n          };\n\n          const portfolioCoverage = c.portfolioCoverage || 'N/A';\n\n          activeCoverages.push(Object.assign(c,{\n            statusIcon,\n            statusIconProps,\n            portfolioCoverage\n          }));\n        }\n      })\n    }\n\n    this.setState({\n      loaded:true,\n      activeCoverages\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.activeCoverages && this.state.activeCoverages.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.activeCoverages && this.state.activeCoverages.length>0 ? (\n            <CustomList\n              rows={this.state.activeCoverages}\n              handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n              cols={[\n                {\n                  title:'PROTOCOL',\n                  props:{\n                    width:[0.28,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:[this.props.themeMode === 'dark' ? 'protocolImageDark' : 'protocolImage']\n                    },\n                    {\n                      type:'text',\n                      path:['protocolName'],\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.33,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:['collateralIcon']\n                    },\n                    {\n                      type:'text',\n                      path:['collateral'],\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.24, 0.12],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['balance'],\n                      props:{\n                        decimals: this.props.isMobile ? 2 :  4,\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                      props:{\n                        ml:[1,2],\n                        style:{\n                          textTransform:'uppercase'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'EXPIRATION DATE',\n                  props:{\n                    width:0.19,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['expirationDate'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'COVERED FUNDS',\n                  props:{\n                    width:0.14,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['portfolioCoverage'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.15,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      name:'custom',\n                      path:['statusIcon'],\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'',\n                  mobile:false,\n                  props:{\n                    width:0.17,\n                  },\n                  parentProps:{\n                    width:1\n                  },\n                  fields:[\n                    {\n                      type:'button',\n                      name:'custom',\n                      funcProps:{\n                        label:(props) => (props.row.actionLabel),\n                        disabled:(props) => (props.row.actionDisabled)\n                      },\n                      props:{\n                        width:1,\n                        fontSize:3,\n                        fontWeight:3,\n                        height:'45px',\n                        borderRadius:4,\n                        boxShadow:null,\n                        mainColor:'redeem',\n                        size: this.props.isMobile ? 'small' : 'medium',\n                        handleClick:(props) => props.row.status!=='Expired' && props.row.actionUrl && this.functionsUtil.openWindow(props.row.actionUrl)\n                      }\n                    }\n                  ]\n                }\n              ]}\n              {...this.props}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default Base;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || !tx.action || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      const tokenAddress = this.functionsUtil.getAvailableTokenAddress(token,this.props.selectedStrategy);\n      tokensData[token] = await this.functionsUtil.getTokenApiData(tokenAddress,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    // debugger;\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    let axisBottomIndex = 0;\n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        tickValues:'every day',\n        legendPosition: 'middle',\n        format: (value) => {\n          if (axisBottomIndex++ % daysFrequency === 0){\n            return this.functionsUtil.strToMoment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n          }\n        },\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged) {\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents() {\n\n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p: 2,\n          width: 1,\n          style: { cursor: 'pointer' }\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen) {\n        cardProps.boxShadow = this.props.noShadow ? 0 : 4;\n      }\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n          isInteractive={this.props.notInteractive ? false : true}\n        >\n          <Flex\n            width={1}\n            height={'100%'}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps, {\n        mt: 2,\n        zIndex: 1,\n        boxShadow: null,\n        position: 'absolute',\n        backgroundColor: this.props.outerColor ? this.props.outerColor : \"cardBg\"\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable) {\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput, this.props.themeMode === 'dark' ? styles.dark : null, !props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map(o => o.value).indexOf(selectedValue) === -1 && this.props.defaultValue) {\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value) {\n        return null;\n      }\n\n      // console.log('CustomOption',this.props.customOptionProps);\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{ cursor: 'pointer' }}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={this.props.isDashboard ? 'cardBg' : (props.isFocused ? 'selectBgFocused' : 'selectBg')}\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={v => this.props.onChange(v.value)}\n        components={{\n          Menu: this.state.CustomMenu,\n          Option: this.state.CustomOption,\n          Control: this.state.ControlComponent,\n          Input: this.state.CustomInputContainer,\n          SingleValue: this.state.CustomValueContainer,\n          IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    if (currentNetwork.provider === 'polygon'){\n      return 30;\n    } else {\n      let prediction = null;\n      if (this.state.predictTable){\n        this.state.predictTable.forEach((p,i) => {\n          if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n            prediction = p;\n            return true;\n          }\n        });\n      }\n\n      if (this.state.blockTime && prediction){\n        const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n        const blocksWait = pdValues[0];\n        const blockInterval = this.state.blockTime.block_time;\n        let txMeanSecs = blocksWait * blockInterval;\n        txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n        this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n        return txMeanSecs; // Customized\n      }\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in {this.functionsUtil.capitalize(currentNetwork.explorer)}\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from \"polished\";\n\n// theme.js\nexport default {\n  breakpoints: [\"52em\", \"64em\"],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: [\"0\", \"4px\", \"8px\", \"16px\", \"2rem\"],\n  widths: [0, 16, 32, 64, 128, 256, 550],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, \"1px solid #eee\", \"1px solid #b6c2ff\"],\n  borderWidths: [\"0\", \"1px\", \"2px\", \"4px\"],\n  shadows: [\n    \"0\",\n    \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n    \"0 7px 14px rgba(50,50,93,.1)\",\n    \"1px 1px 0px rgba(0,0,0,0.2)\",\n    \"0px 0px 16px 2px rgba(0,54,255,0.3)\"\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: blue.base,\n    \"gradient-bg\": \"linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)\",\n    \"primary-light\": blue.light[1],\n    \"primary-dark\": blue.dark[1],\n    bgBlue: \"#0030e0\",\n    blue: \"#0036ff\",\n    tick: \"#00b84a\",\n    \"dark-blue\": \"#00219a\",\n    skyBlue: \"#00abfe\",\n    lightBlue: \"#79f4e1\",\n    copyColor: \"#3F3D4B\",\n    subColor: \"#a7a7a7\",\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#000000\",\n    border: \"#EAEAEA\",\n    connect: \"#0042F5\",\n    newblue: \"#2B65D9\",\n    alert: \"#ff9900\",\n    arrowActive: \"#4f4f4f\",\n    arrowInactive: \"#d8d8d8\",\n    selectBgFocused: \"#fbfbfb\",\n    selectBg: \"#ffffff\",\n    backButtonBg: \"#ffffff\",\n    lineChartStroke: \"#dbdbdb\",\n    wrongNetworkBannerBg: \"#ffffff\",\n    dashboardBg: \"#f9fafd\",\n    statValue: \"#959595\",\n    boxBorder: \"#eeeeee\",\n    cellTitle: \"#a3a4a5\",\n    cellText: \"#a6a6a6\",\n    divider: \"#d8d8d8\",\n    divider2: \"#EBEBEB\",\n    counter: \"#5d5d5d\",\n    redeem: \"#00a9fe\",\n    link: \"#0036ff\",\n    deposit: \"#0239ff\",\n    migrate: \"#00a9fe\",\n    legend: \"#c9c9c9\",\n    menuBg: \"#fff\",\n    menuHover: \"#f3f6ff\",\n    cardBg: \"#fff\",\n    flashColor: \"#3f4e9a\",\n    menuRightBorder: \"#eee\",\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#fafafa\",\n    cardHoverShadow: \"0px 0px 0px 1px rgba(0, 54, 255, 0.3)\",\n    cardBgHover: \"#f7f8ff\",\n    cardBorder: \"#eee\",\n    pageActive: \"#4f4f4f\",\n    pageInactive: \"#d8d8d8\",\n    transactions: {\n      action: {\n        send: \"#10a0dd\",\n        swap: \"#3d53c0\",\n        boost: \"#ffff00\",\n        redeem: \"#10a0dd\",\n        swapout: \"#10a0dd\",\n        deposit: \"#3d53c0\",\n        curvein: \"#10a0dd\",\n        receive: \"#3d53c0\",\n        migrate: \"#3d53c0\",\n        default: \"#4f4f4f\",\n        curveout: \"#3d53c0\",\n        withdraw: \"#10a0dd\",\n        curvedepositin: \"#10a0dd\",\n        curvedepositout: \"#3d53c0\"\n      },\n      actionBg: {\n        send: \"#ceeff6\",\n        swap: \"#ced6ff\",\n        boost: \"#ff7979\",\n        redeem: \"#ceeff6\",\n        swapout: \"#ceeff6\",\n        deposit: \"#ced6ff\",\n        curvein: \"#ceeff6\",\n        default: \"#dadada\",\n        receive: \"#ced6ff\",\n        migrate: \"#ced6ff\",\n        withdraw: \"#ceeff6\",\n        curveout: \"#ced6ff\",\n        curvedepositin: \"#ceeff6\",\n        curvedepositout: \"#ced6ff\"\n      },\n      status: {\n        completed: \"#00b84a\",\n        pending: \"#a5a5a5\",\n        failed: \"#fa0000\"\n      }\n    },\n    blacks: [\n      \"rgba(0,0,0,.0125)\",\n      \"rgba(0,0,0,.025)\",\n      \"rgba(0,0,0,.05)\",\n      \"rgba(0,0,0,.1)\",\n      \"rgba(0,0,0,.2)\",\n      \"rgba(0,0,0,.3)\",\n      \"rgba(0,0,0,.4)\",\n      \"rgba(0,0,0,.5)\",\n      \"rgba(0,0,0,.6)\",\n      \"rgba(0,0,0,.7)\",\n      \"rgba(0,0,0,.8)\",\n      \"rgba(0,0,0,.9)\"\n    ],\n    whites: [\n      \"rgba(255,255,255,.0125)\",\n      \"rgba(255,255,255,.025)\",\n      \"rgba(255,255,255,.05)\",\n      \"rgba(255,255,255,.1)\",\n      \"rgba(255,255,255,.2)\",\n      \"rgba(255,255,255,.3)\",\n      \"rgba(255,255,255,.4)\",\n      \"rgba(255,255,255,.5)\",\n      \"rgba(255,255,255,.6)\",\n      \"rgba(255,255,255,.7)\",\n      \"rgba(255,255,255,.8)\",\n      \"rgba(255,255,255,.9)\"\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, \"#AAA\"),\n      backgroundColor: tint(0.9, \"#AAA\"),\n      borderColor: \"#AAA\"\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: \"#f3f6ff\",\n      borderColor: \"#b6c2ff\"\n    }\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      \"--main-color\": blue.base,\n      \"--contrast-color\": blue.text\n    },\n    normal: {\n      color: baseColors.black,\n      \"--contrast-color\": baseColors.black\n    },\n    success: {\n      \"--main-color\": green.base,\n      \"--contrast-color\": green.text\n    },\n    danger: {\n      \"--main-color\": red.base,\n      \"--contrast-color\": red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: \"0.75rem\",\n      height: \"2rem\",\n      minWidth: \"2rem\",\n      padding: \"0 1rem\"\n    },\n    medium: {\n      fontSize: \"1rem\",\n      height: \"3rem\",\n      minWidth: \"3rem\"\n    },\n    large: {\n      fontSize: \"1.5rem\",\n      height: \"4rem\",\n      minWidth: \"4rem\",\n      borderRadius: \"2rem\"\n    }\n  }\n};\n","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      // console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    if (!params){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(transaction.hash)}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        const tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol.toUpperCase()}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      const disabledTokens = this.functionsUtil.getArrayPath(['disabledTokens',currentNetworkId],this.tokenConfig);\n\n      if (disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import Web3 from \"web3\";\nimport React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\nimport availableTokens from '../configs/availableTokens';\nimport IAaveIncentivesController from '../abis/aave/IAaveIncentivesController.json';\n\nconst ethereumjsABI = require('ethereumjs-abi');\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName,networkId=null) => {\n    networkId = networkId || this.props.network.required.id;\n    let contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    if (this.props.network && this.props.network.required && this.props.network.current && (!this.props.network.isCorrectNetwork || networkId !== this.props.network.current.id) && this.props.contractsNetworks && this.props.contractsNetworks[networkId]){\n      contract = this.props.contractsNetworks[networkId].find(c => c && c.name && c.name === contractName);\n    } else {\n      contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    }\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0,1).toUpperCase()+str.substr(1) : '';\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1,arr2,props=null) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p]==='function'){\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p]==='object'){\n          arr1[p] = {...arr1[p],...this.replaceArrayPropsRecursive(arr1,arr2[p],props)};\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    if (!tokenConfig.idle){\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = (hash,startLen=7,endLen=4) => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, startLen);\n    const txEnd = shortHash.substr(shortHash.length - endLen);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n\n  switchEthereumChain = (chainId) => {\n    const web3 = this.getCurrentWeb3();\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function'){\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network','availableNetworks',chainId]);\n\n    if (!networkConfig){\n      return false;\n    }\n\n    const params = [{\n      chainId:web3.utils.toHex(chainId)\n    }];\n\n    return web3.currentProvider.request({\n      params,\n      method:'wallet_switchEthereumChain',\n    });\n  }\n\n  addEthereumChain = (chainId) => {\n    const web3 = this.getCurrentWeb3();\n\n    // console.log('addEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function'){\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network','availableNetworks',chainId]);\n\n    if (!networkConfig){\n      return false;\n    }\n\n    if (chainId === 1){\n      return this.switchEthereumChain(chainId);\n    }\n\n    const chainName = networkConfig.chainName || networkConfig.name;\n    const providerConfig = this.getGlobalConfig(['network','providers',networkConfig.provider]);\n    const blockExplorerUrl = this.getGlobalConfig(['network','providers',networkConfig.explorer,'baseUrl',chainId]);\n    const rpcUrl = (providerConfig.publicRpc && providerConfig.publicRpc[chainId]) || (providerConfig.rpc[chainId]+providerConfig.key);\n    const params = [{\n      chainName,\n      rpcUrls:[rpcUrl],\n      chainId: web3.utils.toHex(chainId),\n      nativeCurrency: {\n        decimals: 18,\n        name: networkConfig.baseToken,\n        symbol: networkConfig.baseToken\n      },\n      blockExplorerUrls: [blockExplorerUrl]\n    }];\n\n    // console.log('addEthereumChain',params);\n\n    return web3.currentProvider.request({\n      params,\n      method:'wallet_addEthereumChain',\n    });\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.getRequiredNetworkId();\n    const ensConfig = this.getGlobalConfig(['network','providers','ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)){\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3){\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1){\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name){\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,ensName.name,TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches=null,account=null) => {\n    const portfolio = {\n      transactions:[],\n      tranchesBalance:[],\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches){\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches),async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig),async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(Object.keys(tranches),async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const trancheTokenBalance = await this.loadTrancheFieldRaw('trancheDeposited',{},protocol,token,tranche,tokenConfig,trancheConfig,account);\n\n          // console.log('trancheTokenBalance',protocol,token,tranche,trancheTokenBalance);\n\n          if (trancheTokenBalance){\n            const [\n              tranchePool,\n              tranchePrice,\n            ] = await Promise.all([\n              this.loadTrancheFieldRaw('tranchePool',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              this.loadTrancheFieldRaw('tranchePrice',{},protocol,token,tranche,tokenConfig,trancheConfig,account)\n            ]);\n            const tokenBalance = trancheTokenBalance.times(tranchePrice);\n\n            if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tokenBalance).isNaN()){\n              const [\n                trancheUserInfo,\n                trancheApy,\n              ] = await Promise.all([\n                this.getTrancheUserInfo(tokenConfig,trancheConfig,account),\n                this.loadTrancheFieldRaw('trancheApy',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              ]);\n\n              const poolShare = tokenBalance.div(tranchePool);\n              const amountDeposited = trancheUserInfo.amountDeposited;\n              const trancheEarnings = tokenBalance.minus(amountDeposited);\n\n              // console.log('trancheBalance',protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(),'tranchePrice',tranchePrice.toFixed(),'tokenBalance',tokenBalance.toFixed(),'trancheApy',trancheApy.toFixed(),'amountDeposited',amountDeposited.toFixed());\n              portfolio.transactions = [...portfolio.transactions,...trancheUserInfo.transactions];\n\n              portfolio.tranchesBalance.push({\n                token,\n                tranche,\n                protocol,\n                poolShare,\n                trancheApy,\n                tranchePrice,\n                tokenBalance,\n                trancheEarnings,\n                amountDeposited, \n                trancheTokenBalance\n              });\n\n              // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n              // Increment total balance\n              portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach( trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings){\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy){\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited){\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n      }\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      tokensToMigrate:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        },\n        idleTokenBalance\n      ] = await Promise.all([\n        this.checkMigration(tokenConfig,this.props.account),\n        this.getTokenBalance(tokenConfig.idle.token,account)\n      ]);\n\n      if (migrationEnabled){\n        const tokenKey = this.props.selectedStrategy ? token : tokenConfig.idle.token;\n        portfolio.tokensToMigrate[tokenKey] = {\n          token,\n          tokenConfig,\n          oldContractBalanceFormatted,\n          strategy:this.props.selectedStrategy\n        };\n      }\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        tokenAprs,\n        amountDeposited\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig),\n        this.getAmountDeposited(tokenConfig,account)\n      ]);\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurrentWeb3 = () => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const networkConfig = this.getGlobalConfig(['network','availableNetworks',requiredNetwork.id]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.getGlobalConfig(['network','providers',provider,'rpc',requiredNetwork.id])+web3RpcKey;\n\n    let currentWeb3 = null;\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    } else {\n      currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Rpc));\n    }\n\n    return currentWeb3;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section,env=null) => {\n    const envUrl = this.getGlobalConfig(['environments',env,'url']);\n    const baseUrl = env && envUrl ? envUrl : window.location.origin;\n    return `${baseUrl}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n    return null;\n  }\n  getTrancheStakingRewardsDistributions = async (tokenConfig,trancheConfig) => {\n    const stakingDistributions = {};\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from:tokenConfig.CDO.address,\n        to:trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token,'Transfer',{fromBlock: tokenConfig.blockNumber,toBlock:'latest',filter:eventFilters});\n\n      if (transfers && transfers.length>0){\n        stakingDistributions[token] = transfers;\n      }\n    });\n\n    return stakingDistributions;\n  }\n  getTrancheHarvests = async (tokenConfig,trancheConfig) => {\n    const [\n      stakingRewardsDistributions,\n      autoFarming\n    ] = await Promise.all([\n      this.getTrancheStakingRewardsDistributions(tokenConfig,trancheConfig),\n      this.loadTrancheFieldRaw('autoFarming',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig)\n    ])\n\n    const harvestsList = stakingRewardsDistributions || {};\n    \n    await this.asyncForEach(Object.keys(autoFarming),async (token) => {\n      const eventFilters = {\n        to:tokenConfig.CDO.address\n      }\n      const transfers = await this.getContractEvents(token,'Transfer',{fromBlock: tokenConfig.blockNumber,toBlock:'latest',filter:eventFilters});\n\n      if (transfers && transfers.length>0){\n        harvestsList[token] = transfers;\n      }\n    });\n\n    // console.log('getTrancheHarvests',stakingRewards,autoFarming,harvestsList);\n    return harvestsList;\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig,trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from:tokenConfig.CDO.address,\n        to:trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token,'Transfer',{fromBlock: tokenConfig.blockNumber,toBlock:'latest',filter:eventFilters});\n\n      if (transfers && transfers.length>0){\n        const firstHarvest = transfers.length ? transfers[0] : null;\n        const latestHarvest = transfers[transfers.length-1];\n        const firstBlock = firstHarvest ? firstHarvest.blockNumber : tokenConfig.blockNumber;\n\n        const govTokenConfig = this.getGlobalConfig(['govTokens',token]);\n        const DAITokenConfig = {\n          address:this.getContractByName('DAI')._address\n        };\n        const [\n          prevBlockInfo,\n          lastBlockInfo,\n          conversionRate,\n          lastBlockPoolSize\n        ] = await Promise.all([\n          this.getBlockInfo(firstBlock),\n          this.getBlockInfo(latestHarvest.blockNumber),\n          this.getUniswapConversionRate(DAITokenConfig,govTokenConfig),\n          this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue',[],{},latestHarvest.blockNumber)\n        ]);\n\n        if (prevBlockInfo && lastBlockInfo){\n          const poolSize = this.fixTokenDecimals(lastBlockPoolSize,tokenConfig.CDO.decimals);\n          const elapsedBlocks = latestHarvest.blockNumber-firstBlock;\n          const elapsedSeconds = lastBlockInfo.timestamp-prevBlockInfo.timestamp;\n\n          const lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value,govTokenConfig.decimals);\n          const totalAmount = transfers.reduce( (total,t) => {\n            total = total.plus(this.fixTokenDecimals(t.returnValues.value,govTokenConfig.decimals));\n            return total;\n          },this.BNify(0));\n\n          const tokensPerBlock = totalAmount.div(elapsedBlocks);\n          const tokensPerSecond = totalAmount.div(elapsedSeconds);\n          const tokensPerDay = tokensPerSecond.times(86400);\n          const tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network','secondsPerYear']));\n          const convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          const tokenApr = convertedTokensPerYear.div(poolSize);\n          const tokenApy = this.apr2apy(tokenApr);\n\n          tokensDistribution[token] = {\n            lastAmount,\n            totalAmount,\n            apr:tokenApr,\n            apy:tokenApy,\n            tokensPerDay,\n            firstHarvest,\n            tokensPerYear,\n            latestHarvest,\n            tokensPerBlock,\n            tokensPerSecond,\n            convertedTokensPerYear\n          };\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig,trancheConfig,account) => {\n    account = account || this.props.account;\n    const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const defaultEventsConfig = {to:'to',from:'from',value:'value'};\n    const underlyingEventsConfig = this.getGlobalConfig(['events',tokenConfig.token,'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters = {};\n    underlyingEventsFilters[underlyingEventsConfig.to] = [this.props.account,tokenConfig.CDO.address];\n    underlyingEventsFilters[underlyingEventsConfig.from] = [this.props.account,tokenConfig.CDO.address];\n\n    const [\n      underlying_transfers,\n      trancheToken_transfers\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:underlyingEventsFilters}),\n      this.getContractEvents(trancheConfig.name,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:{from:['0x0000000000000000000000000000000000000000',this.props.account],to:['0x0000000000000000000000000000000000000000',this.props.account]}})\n    ]);\n\n    // console.log('getAmountDepositedTranche',trancheConfig.name,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find( t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase() );\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent){\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value],tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value,trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = await this.getBlockInfo(tokenTransferEvent.blockNumber);\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats','protocols',tokenConfig.protocol]);\n      const protocolIcon = `images/protocols/${protocolConfig.icon || `${tokenConfig.protocol}.svg`}`;\n\n      const tx = {\n        hashKey,\n        action:null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value:tokenAmount,\n        status:'Completed',\n        token:tokenConfig.token,\n        tranche:trancheConfig.tranche,\n        protocol:protocolConfig.label,\n        tokenSymbol:tokenConfig.token,\n        trancheTokens:trancheTokenAmount,\n        hash:tokenTransferEvent.transactionHash,\n        blockNumber:tokenTransferEvent.blockNumber,\n        timeStamp:blockInfo ? blockInfo.timestamp : null,\n      };\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        // Set first deposit tx\n        if (!firstDepositTx){\n          firstDepositTx = tx;\n        }\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n\n        tx.action = 'Deposit';\n        // console.log('Deposit',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),tranchePrice.toFixed(),avgBuyPrice.toFixed());\n      // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        if (amountDeposited.lt(0)){\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n        }\n        // console.log('Redeem',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),avgBuyPrice.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig,trancheConfig,account) => {\n      const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n      if (trancheUserInfo){\n        return trancheUserInfo.firstDepositTx;\n      }\n      return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getBaseToken = () => {\n    const networkConfig = this.getCurrentNetwork();\n    return networkConfig ? networkConfig.baseToken : this.getGlobalConfig(['baseToken']);\n  }\n  getCurrentNetwork = () => {\n    const networkId = this.getCurrentNetworkId();\n    const network = this.getGlobalConfig(['network','availableNetworks',networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetwork = () => {\n    const networkId = this.getRequiredNetworkId();\n    const network = this.getGlobalConfig(['network','availableNetworks',networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    return this.props.network && this.props.network.required ? this.props.network.required.id || defaultNetwork : defaultNetwork;\n  }\n  getCurrentNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    return this.props.network && this.props.network.current ? this.props.network.current.id || defaultNetwork : defaultNetwork;\n  }\n  getPolygonBridgeTxs = async (account=false,enabledTokens=[]) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !this.props.web3){\n      return [];\n    }\n\n    const cachedDataKey = `polygonBridgeTxs_${account}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    account = account.toLowerCase();\n\n    let txs = [];\n    const currentNetwork = this.getRequiredNetwork();\n    const currentNetworkId = this.getRequiredNetworkId();\n    const covalentInfo = this.getGlobalConfig(['network','providers','covalent']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const stateSenderConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','StateSender']);\n    const erc20PredicateConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','ERC20Predicate']);\n    const etherPredicateConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','EtherPredicate']);\n    const depositManagerConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','DepositManager']);\n    const rootChainManagerConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','RootChainManager']);\n\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? currentNetworkId : this.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]);\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[polygonNetworkId]){\n      const covalentApiUrl = covalentInfo.endpoints[polygonNetworkId];\n      const polygonAvailableTokens = this.getGlobalConfig(['tools','polygonBridge','props','availableTokens']);\n      const polygonEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=0&key=${covalentInfo.key}`;\n\n      const ethereumNetworkId = this.getGlobalConfig(['network','providers','polygon','networkPairs',polygonNetworkId]);\n      const etherscanApiUrl = etherscanInfo.endpoints[ethereumNetworkId];\n      const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistEndpoint =`${etherscanApiUrl}?module=account&action=txlist&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistInternalEndpoint =`${etherscanApiUrl}?module=account&action=txlistinternal&address=${this.props.account}&sort=desc`;\n\n      const [\n        last_state_id,\n        polygonTxs,\n        etherscanTxs,\n        etherscanTxlist,\n        etherscanTxlistInternal\n      ] = await Promise.all([\n        this.getPolygonCurrentLastStateId(),\n        this.makeCachedRequest(polygonEndpoint,120),\n        this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,120),\n        this.makeEtherscanApiRequest(etherscanTxlistEndpoint,etherscanInfo.keys,120),\n        this.makeEtherscanApiRequest(etherscanTxlistInternalEndpoint,etherscanInfo.keys,120),\n      ]);\n\n      // console.log('polygonTxs',polygonTxs);\n      // console.log('etherscanTxs',etherscanTxs);\n      // console.log('etherscanTxlist',etherscanTxlist);\n      // console.log('etherscanTxlistInternal',etherscanTxlistInternal);\n\n      const rootTokensAddresses = [];\n      const childTokensAddresses = [];\n      Object.values(polygonAvailableTokens).forEach( tokenConfig => {\n        if (tokenConfig.childToken){\n          childTokensAddresses.push(tokenConfig.childToken.address.toLowerCase())\n        }\n        if (tokenConfig.rootToken){\n          rootTokensAddresses.push(tokenConfig.rootToken.address.toLowerCase())\n        }\n      });\n\n      let depositTxs = [];\n\n      if (etherscanTxs && etherscanTxs.data && etherscanTxs.data.result && typeof etherscanTxs.data.result.filter === 'function'){\n        depositTxs = etherscanTxs.data.result.filter( tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) &&  [erc20PredicateConfig.address.toLowerCase(),depositManagerConfig.address.toLowerCase()].includes(tx.to.toLowerCase())  && tx.from.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(depositTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === tx.tokenSymbol );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Deposit';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash,this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find( log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase() ) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id>=tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n        const exitTxs = etherscanTxs.data.result.filter( tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(),depositManagerConfig.address.toLowerCase()].includes(tx.from.toLowerCase()) && tx.to.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(exitTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === tx.tokenSymbol );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      const depositTxsHashes = depositTxs.map( tx => tx.hash.toLowerCase() );\n      const depositETHInputRexExp = new RegExp(this.props.account.replace('0x','').toLowerCase()+'$');\n      if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n        const depositETHTxs = etherscanTxlist.data.result.filter( tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.to.toLowerCase() === rootChainManagerConfig.address.toLowerCase() && tx.input.toLowerCase().match(depositETHInputRexExp) && tx.from.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(depositETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === 'WETH' );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Deposit';\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash,this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find( log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase() ) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id>=tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (etherscanTxlistInternal && etherscanTxlistInternal.data && etherscanTxlistInternal.data.result && typeof etherscanTxlistInternal.data.result.filter === 'function'){\n        const exitETHTxs = etherscanTxlistInternal.data.result.filter( tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.from.toLowerCase() === etherPredicateConfig.address.toLowerCase() && !tx.input.toLowerCase().match(depositETHInputRexExp) && tx.to.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(exitETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === 'WETH' );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.timeStamp = parseInt(tx.timeStamp);\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (polygonTxs && polygonTxs.data && polygonTxs.data.data && polygonTxs.data.data.items && Object.values(polygonTxs.data.data.items).length){\n        const filteredTxs = polygonTxs.data.data.items.filter( tx => tx.to_address && childTokensAddresses.includes(tx.to_address.toLowerCase()) );\n        // console.log('polygonTxs',polygonTxs,filteredTxs);\n        await this.asyncForEach(filteredTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( tokenConfig => (tokenConfig.childToken && tx.to_address && tokenConfig.childToken.address.toLowerCase() === tx.to_address.toLowerCase()) );\n          if (!tokenConfig || !tokenConfig.childToken){\n            return;\n          }\n          tokenConfig.address = tokenConfig.childToken.address;\n          if (!enabledTokens || !enabledTokens.length || enabledTokens.includes(tokenConfig.token)){\n            const polygonTx = this.normalizePolygonTx(tx,tokenConfig);\n            // console.log('polygonTx',polygonTx);\n            if (polygonTx.action === 'Withdraw'){\n              const tx_state_id = this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(polygonTx.logs[polygonTx.logs.length-1].topics[1])) : 0;\n              polygonTx.exited = false;\n              polygonTx.networkId = polygonNetworkId;\n              polygonTx.bridgeType = tokenConfig.bridgeType;\n              polygonTx.included = last_state_id && tx_state_id ? last_state_id>=tx_state_id : false;\n              try {\n                await this.props.maticPOSClient.exitERC20(polygonTx.hash, {from: this.props.account, encodeAbi:true});\n              } catch (error){\n                if (error.toString().match('EXIT_ALREADY_PROCESSED')){\n                  polygonTx.exited = true;\n                }\n              }\n              txs.push(polygonTx);\n            }\n          }\n        });\n        // debugger;\n      }\n    }\n\n    txs = txs.sort((a,b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    // console.log('getPolygonBridgeTxs',cachedDataKey,txs);\n\n    return this.setCachedData(cachedDataKey,txs,120);\n  }\n  getPolygonBaseTxs = async (account=false,enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n    const requiredNetwork = this.getRequiredNetworkId();\n    // const selectedStrategy = this.props.selectedStrategy;\n    const covalentInfo = this.getGlobalConfig(['network','providers','covalent']);\n\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[requiredNetwork]){\n      const covalentApiUrl = covalentInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&key=${covalentInfo.key}`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data && baseTxs.data.data && baseTxs.data.data.items && Object.values(baseTxs.data.data.items).length){\n\n        const cachedRows = Object.values(baseTxs.data.data.items).length;\n        const lastCachedTx = Object.values(baseTxs.data.data.items).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.block_height ? parseInt(lastCachedTx.block_height)+1 : 0;\n\n        const covalentEndpointLastBlock = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=${cachedRows}`;\n        let latestTxs = await this.makeCachedRequest(covalentEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.data.items && latestTxs.data.data.items.length){\n          latestTxs = await this.filterPolygonTxs(latestTxs.data.data.items,enabledTokens);\n          // latestTxs = await this.filterEthereumTxs(latestTxs,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.block_height)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.data.items).includes(tx.tx_hash);\n                if (!txFound){\n                  baseTxs.data.data.items[tx.tx_hash] = tx;\n                }\n              });\n\n              // Save covalent txs\n              this.saveFetchedTransactions(baseEndpoint,baseTxs.data.data.items);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          // const cachedRequests_polygon = this.getCachedDataWithLocalStorage('cachedRequests_polygon',{});\n          const dataToCache = {\n            data:txs,\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests_polygon',baseEndpoint,dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests_polygon',cachedRequests_polygon);\n        }\n      }\n\n      if (txs && txs.data && txs.data.data && txs.data.data.items){\n        results = txs.data.data.items;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${etherscanInfo.keys[0]}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - baseTxs',baseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data.result && Object.values(baseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(baseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        // let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n        let latestTxs = await this.makeEtherscanApiRequest(etherscanEndpointLastBlock,etherscanInfo.keys,15);        \n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEthereumTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  baseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveFetchedTransactions(baseEndpoint,baseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          // const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          const dataToCache = {\n            data:txs,\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests',baseEndpoint,dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveFetchedTransactions = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n\n    let resultData = null;\n    const currentNetwork = this.getRequiredNetwork();\n\n    switch (currentNetwork.explorer){\n      case 'polygon':\n        resultData = await this.getPolygonBaseTxs(account,enabledTokens,debug);\n      break;\n      case 'etherscan':\n      default:\n        resultData = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n      break;\n    }\n\n    // Initialize prevTxs\n    let txs = {};\n\n    if (resultData){\n      let {\n        results,\n        baseTxs,\n        baseEndpoint\n      } = resultData;\n\n      if (baseTxs){\n        // Filter txs for token\n        txs = await this.processStoredTxs(results,enabledTokens);\n      } else {\n        const allAvailableTokens = Object.keys(this.props.availableTokens);\n        // Save base endpoint with all available tokens\n        switch (currentNetwork.explorer){\n          case 'polygon':\n            txs = await this.filterPolygonTxs(results,allAvailableTokens);\n            // console.log('polygon txs',results,allAvailableTokens,txs);\n          break;\n          case 'etherscan':\n          default:\n            txs = await this.filterEthereumTxs(results,allAvailableTokens);\n          break;\n        }\n\n        // Store filtered txs\n        if (txs && Object.keys(txs).length){\n          this.saveFetchedTransactions(baseEndpoint,txs);\n        }\n      }\n    }\n\n    // console.log('DEBUG - TXS -',txs);\n\n    return Object\n            .values(txs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  getPolygonCurrentLastStateId = async () => {\n    const contractInstance = new this.props.web3Polygon.eth.Contract(\n      [\n        {\n          constant: true,\n          inputs: [],\n          name: \"lastStateId\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n          payable: false,\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ],\n      \"0x0000000000000000000000000000000000001001\"\n    );\n\n    return parseInt(await contractInstance.methods.lastStateId().call());\n  }\n  checkPolygonTransactionIncluded = async (txHash) => {\n    const [\n      last_state_id,\n      tx,\n    ] = await Promise.all([\n      this.getPolygonCurrentLastStateId(),\n      this.props.web3Polygon.eth.getTransactionReceipt(txHash)\n    ]);\n\n    const tx_state_id = tx && tx.logs && tx.logs.length && this.props.web3.utils ? this.props.web3.utils.hexToNumberString(tx.logs[tx.logs.length-1].topics[1]) : null;\n\n    return tx_state_id ? parseInt(last_state_id) >= parseInt(tx_state_id) : null;\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  normalizePolygonTx = (tx,tokenConfig=null) => {\n    tokenConfig = tokenConfig || Object.values(this.props.availableTokens).find( tokenConfig => tx.to_address && tokenConfig.idle.address.toLowerCase() === tx.to_address.toLowerCase() );\n    \n    const depositLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find( log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param=>param.name==='from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param=>param.name==='to').value.toLowerCase() === tokenConfig.idle.address.toLowerCase() ) : null;\n    const redeemLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find( log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param=>param.name==='to').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param=>param.name==='from').value.toLowerCase() === tokenConfig.idle.address.toLowerCase() ) : null;\n    const withdrawLogEvent = tx.log_events && tokenConfig && tokenConfig.address ? tx.log_events.find( log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param=>param.name==='from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param=>param.name==='to').value.toLowerCase() === '0x0000000000000000000000000000000000000000' ) : null;\n\n    const tokenDecimal = tokenConfig.decimals;\n    const tokenSymbol = tokenConfig.name || tokenConfig.token;\n    const hashKey = `${tx.tx_hash}_${tokenSymbol}`;\n    const idleToken = tokenConfig.idle ? tokenConfig.idle.token : null;\n    const action = depositLogEvent ? 'Deposit' : (redeemLogEvent ? 'Redeem' : (withdrawLogEvent ? 'Withdraw' : null));\n    const timeStamp = parseInt(this.strToMoment(tx.block_signed_at)._d.getTime()/1000);\n\n    let logEvent = null;\n    switch (action){\n      case 'Deposit':\n        logEvent = depositLogEvent;\n      break;\n      case 'Redeem':\n        logEvent = redeemLogEvent;\n      break;\n      case 'Withdraw':\n        logEvent = withdrawLogEvent;\n      break;\n      default:\n      break;\n    }\n\n    const logs = tx.log_events ? tx.log_events.map( log => ({\n      topics:log.raw_log_topics\n    })) : [];\n    const value = logEvent ? this.fixTokenDecimals(logEvent.decoded.params.find( param => param.name==='value' ).value,tokenDecimal) : this.fixTokenDecimals(tx.value,tokenDecimal);\n\n    const blockNumber = tx.log_events && tx.log_events.length ? tx.log_events[0].block_height : null;\n\n    return {\n      logs,\n      value,\n      action,\n      hashKey,\n      timeStamp,\n      idleToken,\n      tokenSymbol,\n      blockNumber,\n      tokenDecimal,\n      hash:tx.tx_hash,\n      to:tx.to_address,\n      status:'Completed',\n      from:tx.from_address,\n      gasUsed:tx.gas_spent,\n      gasPrice:tx.gas_price,\n      token:tokenConfig.token,\n      contractAddress:tokenConfig.address,\n    };\n  }\n  filterPolygonTxs = async (txs,enabledTokens,processTransactions=true) => {\n    const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => tokenConfig.idle.address.toLowerCase() );\n    const polygonTxs = txs ? txs.filter( tx => tx.to_address && idleTokensAddresses.includes(tx.to_address.toLowerCase()) ).reduce( (output,tx) => {\n      const mappedTx = this.normalizePolygonTx(tx);\n      output[mappedTx.hashKey] = mappedTx;\n      return output;\n    },{}) : {};\n\n    return processTransactions ? await this.processTransactions(polygonTxs,enabledTokens) : polygonTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    return await this.filterEthereumTxs(results,enabledTokens,processTxs,processStoredTxs);\n  }\n  filterEthereumTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.getRequiredNetworkId();\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    return this.addKeyToCachedDataWithLocalStorage('cachedRequests',key,dataToCache);\n    // return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeEtherscanApiRequest = async (endpoint,keys=[],TTL=120,apiKeyIndex=0) => {\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp-cachedRequests[endpoint].timestamp<TTL){\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint+'&apikey='+apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK'){\n      const dataToCache = {\n        data,\n        timestamp\n      };\n      // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      this.addKeyToCachedDataWithLocalStorage('cachedRequests',endpoint,dataToCache);\n      return data;\n    } else if (apiKeyIndex<keys.length-1) {\n      return await this.makeEtherscanApiRequest(endpoint,keys,TTL,apiKeyIndex+1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n\n    // console.log('makeCachedRequest',endpoint,TTL,cachedRequests[key],(cachedRequests[key] ? timestamp-cachedRequests[key].timestamp : null));\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    const dataToCache = {\n      data,\n      timestamp\n    };\n\n    // console.log('makeCachedRequest - CACHE',key,dataToCache);\n\n    // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests',key,dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    if (!array){\n      return null;\n    }\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] !== undefined ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  getAppUrl = (path) => {\n    return globalConfigs.baseURL+'/'+path;\n  }\n  getCurrentEnvironment = () => {\n    let environment = Object.keys(globalConfigs.environments).find( env => {\n      const envUrl = globalConfigs.environments[env].url;\n      return envUrl.toLowerCase() === window.location.origin.toLowerCase();\n    });\n    return environment || 'beta';\n  }\n  checkUrlPolygon = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.polygonUrl.toLowerCase());\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page=null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics','google','pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga){\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash,requiredNetwork=null) => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network','availableNetworks',requiredNetwork,'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network','providers',explorer,'baseUrl',requiredNetwork]) || defaultUrl;\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address,requiredNetwork=null) => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network','availableNetworks',requiredNetwork,'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network','providers',explorer,'baseUrl',requiredNetwork]) || defaultUrl;\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    // console.log('getSnapshotProposals',proposals);\n\n    if (proposals && !proposals.error){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,p.address,s.name,checkedStrategies);\n          });\n          \n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n  }\n  getAprsFromApi = async (networkId=null) => {\n    const config = this.getGlobalConfig(['stats','config']);\n    if (!networkId || !this.getGlobalConfig(['network','enabledNetworks']).includes(networkId)){\n      networkId = this.getRequiredNetworkId();\n    }\n    const endpointInfo = this.getGlobalConfig(['stats','aprs']);\n    const aprs = await this.makeCachedRequest(endpointInfo.endpoint[networkId],endpointInfo.TTL,true,false,config);\n    return aprs;\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    const networkId = this.getRequiredNetworkId();\n    // const statsConfig = this.getGlobalConfig(['stats']);\n    // const statsEnabled = statsConfig.enabled && statsConfig.availableNetworks.includes(networkId);\n    // if (!statsEnabled){\n    //   return [];\n    // }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${networkId}_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n      if (filteredCachedData && filteredCachedData.length>0){\n        let filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          filteredData = filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n          if (filteredData.length>0){\n            return filteredData;\n          }\n        }\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = this.getGlobalConfig(['stats','rates']);\n    let endpoint = `${apiInfo.endpoint[networkId]}${address}`;\n\n    // console.log('getTokenApiData',cachedDataKey,apiInfo,endpoint);\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName,exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName,exchangeRateParams.name,exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,exchangeRate,null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName){\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName,'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,decimals,null);\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n      return etherscanTxlist.data.result.filter( tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0) ));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    if (!tokenDecimals){\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]){\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n      \n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({from: account})\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit){\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice,9).times(gasLimit),9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null,error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName,tokenAddress,permitType,callData,gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data:callData,\n      token:tokenAddress,\n      to:contract._address,\n      txGas:parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise( async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req,metaInfo,callback,callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({req,metaInfo});\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null,true);\n      return false;\n    }\n\n    if (!transactionHash){\n      // console.log('!transactionHash ERROR');\n      callback(null,true);\n      return false;\n    }\n    \n    const tx = {\n      method:'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(()=> {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt)=> {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if(!err && receipt){\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx,err);\n\n          if (typeof window.updateTransaction === 'function'){\n            window.updateTransaction(tx,transactionHash,tx.status,null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce=0, value=null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce>0){\n      nonce = parseInt(nonce)+parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters){\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n      const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n      if (!isNaN(parseInt(nonce)) && useNonce){\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null,'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName,methodName,params,value,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData=null,send_raw=false,raw_tx_data=null) => {\n    try{\n      this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n        if (typeof callback === 'function'){\n          callback(tx);\n        }\n      }, (tx) => {\n        if (typeof callback_receipt === 'function'){\n          callback_receipt(tx);\n        }\n      }, null, txData, send_raw, raw_tx_data);\n    } catch (error) {\n      callback(null,error);\n    }\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  getBestToken = async (networkId=null,availableTokens=null) => {\n    let highestValue = null;\n    let selectedToken = null;\n    if (!networkId){\n      networkId = this.getRequiredNetworkId();\n    }\n    const aprs = await this.getAprsFromApi(networkId);\n    if (aprs && aprs.lendRates){\n      aprs.lendRates.forEach( aprInfo => {\n        const tokenAPR = this.BNify(aprInfo.apy);\n        if (tokenAPR){\n          const token = aprInfo.tokenSymbol;\n          if ((!highestValue || highestValue.lt(tokenAPR)) && (!availableTokens || availableTokens[token])){\n            highestValue = tokenAPR;\n            selectedToken = token;\n          }\n        }\n      });\n    } else if (availableTokens) {\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAPR = await this.getTokenAprs(tokenConfig);\n        if (tokenAPR && tokenAPR.avgApr !== null){\n          if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n            highestValue = tokenAPR.avgApr;\n            selectedToken = token;\n          }\n        }\n      });\n    }\n    return selectedToken;\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null) => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName,'usersStakes',[walletAddr]);\n    if (stakedBalance){\n      if (decimals){\n        stakedBalance = this.fixTokenDecimals(stakedBalance,decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,stakedBalance,30);\n      }\n    }\n    return this.BNify(0);\n  }\n  getTrancheStakingRewards = async (account,trancheConfig) => {\n    const stakingRewards = {};\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getGlobalConfig(['stats','tokens',tokenConfig.token]);\n      tokenConfig = {...tokenConfig,...tokenGlobalConfig};\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name,'expectedUserReward',[account,tokenConfig.address]);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount,tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens=true) => {\n    return await this.loadTrancheField(field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,false);\n  }\n  loadTrancheField = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account=null,addGovTokens=true,formatValue=true,addTokenName=true) => {\n    let output = null;\n    const maxPrecision = (fieldProps && fieldProps.maxPrecision) || 5;\n    const decimals = (fieldProps && fieldProps.decimals) || (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && fieldProps.minPrecision) || (this.props.isMobile ? 3 : 4);\n    const tokenName = this.getGlobalConfig(['stats','tokens',token,'label']) || this.capitalize(token);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const idleStrategyAddress = await this.genericContractCallCached(tokenConfig.CDO.name,'strategy'); \n    if (idleStrategyAddress){\n      await this.props.initContract(strategyConfig.name,idleStrategyAddress,strategyConfig.abi);\n    }\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    switch (field){\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats','protocols',protocol,'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches',tranche,'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue');\n        if (!this.BNify(poolSize).isNaN()){\n          output = this.fixTokenDecimals(poolSize,tokenConfig.CDO.decimals);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision);\n          }\n        }\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name,'latest',180),\n          this.loadTrancheField('tranchePrice',fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()){\n          output = this.fixTokenDecimals(totalSupply,tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue){\n          output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig,trancheConfig,account);\n\n        output = output || this.BNify(0);\n\n        output = this.BNify(deposited);\n        if (output.gt(0)){\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name,'fee');\n        if (output){\n          output = this.BNify(output).div(this.BNify(100000));\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'virtualPrice',[trancheConfig.address]);\n        if (output){\n          output = this.fixTokenDecimals(output,trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        let [\n          staked1,\n          lastPrice1\n        ] = await Promise.all([\n          this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,trancheConfig.CDORewards.decimals),\n          this.loadTrancheField(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n\n        output = formatValue ? '-' : null;\n        if (staked1 && lastPrice1){\n          output = this.BNify(staked1).times(lastPrice1);\n          // console.log('trancheStaked',staked1.toString(),lastPrice1.toString(),output.toString());\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name,account),\n          this.loadTrancheFieldRaw(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice){\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2){\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheApy`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n        ]);\n\n\n        if (deposited3 && earningsStart && trancheApy2){\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter){\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n          const feesEnd =  earningsCounter.earningsEnd.times(trancheFee);\n\n          // console.log('feesCounter',feesStart.toString(),feesEnd.toString());\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3){\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n        output = redeemable2.div(deposited2).minus(1).times(100);\n        if (formatValue){\n          output = output.toFixed(decimals)+'%';\n        }\n      break;\n      case 'trancheApy':\n        let trancheApy = await this.genericContractCallCached(tokenConfig.CDO.name,'getApr',[trancheConfig.address]);\n        // console.log('trancheApy',this.props.network.required,tokenConfig.CDO.name,trancheConfig.address,trancheApy);\n        if (trancheApy){\n          const apr = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n          const apy = this.apr2apy(apr.div(100)).times(100);\n          if (apy.gt(1000)){\n            output = this.BNify(1000);\n          } else {\n            output = this.BNify(apy);\n          }\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n            if (apy.gt(1000)){\n              output = `>${output}`;\n            }\n          }\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig,trancheConfig,account),\n          this.loadTrancheFieldRaw(`earningsPerc`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx){\n          const secondsFromFirstTx = parseInt(Date.now()/1000)-parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        output = this.BNify(0);\n        const rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE){\n          if (field === 'trancheIDLEDistribution'){\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond,idleGovTokenConfig.distributionFrequency);\n            if (formatValue){\n              output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue){\n              output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE <a href=\"${this.getEtherscanTransactionUrl(rewardsTokensInfo.IDLE.latestHarvest.transactionHash)}\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">(last harvest)</a>`\n            }\n          }\n        } else {\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE/${idleGovTokenConfig.distributionFrequency}`\n          }\n        }\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCall(strategyConfig.name,'getRewardTokens'),\n          this.genericContractCall(tokenConfig.CDO.name,'getIncentiveTokens')\n        ]);\n\n        const govTokens = field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter( rewardTokenAddr => incentiveTokens && !incentiveTokens.map( addr => addr.toLowerCase() ).includes(rewardTokenAddr.toLowerCase()) ) : incentiveTokens);\n\n        if (govTokens){\n          govTokens.forEach( govTokenAddress => {\n            const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n            // Skip reward token if globally disabled\n            if (govTokenConfig && !govTokenConfig.enabled){\n              return;\n            }\n            // Skip reward token if not enabled for this specific tranche\n            const stakingRewardsTokenConfig = trancheConfig ? trancheConfig.CDORewards.stakingRewards.find( tokenConfig => tokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase() ) : null;\n            if (stakingRewardsTokenConfig && !stakingRewardsTokenConfig.enabled){\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency,tokenConfig.distributionMode);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()){\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = {\n            address:this.getContractByName('DAI')._address\n          };\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken,blockNumber);\n    if (idleTokenSupply){\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = (clear_all=false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData(null,clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  addKeyToCachedDataWithLocalStorage = (parent_key,key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      const cachedData = this.getCachedDataWithLocalStorage(parent_key,{});\n      cachedData[key] = data;\n      this.props.setCachedData(parent_key,cachedData,TTL,true);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || cachedData.expirationDate>=parseInt(Date.now()/1000));\n\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n    if (nexusMutualConfig.enabled){\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach( coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance','nexusMutual','label']);\n        const protocolImage = this.getGlobalConfig(['insurance','nexusMutual','image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance','nexusMutual','imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil)<=currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n    \n    await Promise.all([\n      this.props.initContract(incidentsInfo.name,incidentsInfo.address,incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n       this.getContractEvents(feeDistributorConfig.name,'CoverBought',{fromBlock, toBlock:'latest',filter:{buyer:account}}),\n       this.getContractEvents(feeDistributorConfig.name,'ClaimSubmitted',{fromBlock, toBlock:'latest',filter:{buyer:account}})\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents,async (cover) => {\n    // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find( claim => parseInt(claim.returnValues.coverId)===coverId );\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name,'getCover',[coverId]),\n        this.getContractEvents(incidentsInfo.name,'IncidentAdded',{fromBlock:cover.blockNumber, toBlock:'latest',filter:{productId:cover.contractAddress}})\n      ]);\n\n      if (!coverDetails){\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents ? incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n        this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n        this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n        parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      }) : [];\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find( tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase() );\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured,yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find( underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase() );\n      const expiryDate = this.strToMoment(coverDetails.validUntil*1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name,'getPayoutOutcome',[claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent){\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find( log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase() ) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data,16),coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured,coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount,coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token,account,false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice,yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance,yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2)+'%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? {...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date)} : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance,30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,totalSupply);\n  }\n  getTokenPrice = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName,'tokenPrice',[],{},blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice,60);\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,balance,30);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    return await this.getContractBalance(contractName,address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs){\n      const result = {\n        aprs:aprs[1],\n        addresses:aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey,result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxReceipt = async (txHash,web3=null) => {\n    web3 = web3 || this.props.web3;\n    if (!web3 || !web3.eth){\n      return null;\n    }\n    return await (new Promise( async (resolve, reject) => {\n      web3.eth.getTransactionReceipt(txHash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    if (!this.props.web3){\n      return false;\n    }\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber) => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n    return blockInfo ? this.setCachedDataWithLocalStorage(cachedDataKey,blockInfo,null) : null;\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    // console.log('getContractPastEvents',contractName,methodName);\n\n    return await contract.getPastEvents(methodName, params);\n  }\n\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL=180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest'){\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,result,TTL);\n  }\n\n  cachedContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL=180) => {\n    return await this.genericContractCallCached(contractName, methodName, params, callParams, blockNumber, TTL);\n  }\n\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', count=0) => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      // console.log(`genericContractCall - ${contractName} - ${methodName} - [${params.join(',')}]`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n      // if (count<=3){\n      //   await this.asyncTimeout(1000);\n      //   return await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, count+1);\n      // }\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    let output = [];\n    if (async){\n      output = await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        output.push(await callback(array[index], index, array));\n      }\n    }\n    return output;\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getLastAllocations = async (tokenConfig) => {\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    const aprs = await this.getAprs(tokenConfig.idle.token);\n    const allAvailableTokens = aprs ? aprs.addresses : null;\n    if (allAvailableTokens){\n      const tokenAllocations = await this.asyncForEach(allAvailableTokens, async (protocolAddr,index) => {\n        return await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[index]);\n      });\n      return allAvailableTokens.reduce( (lastAllocations,protocolAddr,index) => {\n        lastAllocations[protocolAddr.toLowerCase()] = tokenAllocations[index];\n        return lastAllocations;\n      },{});\n    }\n\n    return {};\n  }\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n    \n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      lastAllocations,\n      tokenUsdConversionRate,\n      totalSupply,\n      govTokensBalances,\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getLastAllocations(tokenConfig),\n      this.getTokenConversionRate(tokenConfig,false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n    ]);\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply,18).times(tokenPrice).minus(unlentBalance);\n\n    if (lastAllocations){\n      Object.keys(lastAllocations).forEach( (protocolAddr) => {\n        const protocolInfo = tokenConfig.protocols.find( p => p.address.toLowerCase() === protocolAddr.toLowerCase() );\n        if (protocolInfo && protocolInfo.enabled){\n          const protocolAllocationPerc = this.BNify(lastAllocations[protocolAddr]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total){\n      if (tokenUsdConversionRate){\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate){\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName,'token0'),\n      this.genericContractCallCached(contractName,'token1'),\n      this.genericContractCallCached(contractName,'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply){\n      const token0_config = {\n        address:token0_address\n      };\n      const token1_config = {\n        address:token1_address\n      };\n      const DAITokenConfig = {\n        address:this.getContractByName('DAI')._address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig,token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig,token1_config)\n      ]);\n\n      if (token0_price && token1_price){\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0],18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1],18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply,18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      // console.log('getSushiswapConversionRate',path,res);\n\n      if (res){\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    if (tokenConfigDest.addressForPrice){\n      tokenConfigDest = Object.assign({},tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log('getUniswapConversionRate - CACHED',cachedDataKey,cachedData);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      // console.log('getUniswapConversionRate',path,unires);\n      \n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig,aTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const currentNetworkId = this.getRequiredNetworkId();\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find( p => p.name === stkAAVETokenConfig.protocol );\n\n    // console.log('getStkAaveDistribution_1',tokenConfig.idle.token,aTokenConfig.token);\n    const disabledTokens = this.getArrayPath(['disabledTokens',currentNetworkId],stkAAVETokenConfig) || [];\n\n    if (!aTokenConfig || disabledTokens.includes(tokenConfig.idle.token)){\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token,'getIncentivesController');\n\n    if (!aaveIncentivesController_address){\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aaveIncentivesController_address}`;\n    await this.props.initContract(IAaveIncentivesController_name,aaveIncentivesController_address,IAaveIncentivesController);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig,false,false),\n      this.genericContractCall(IAaveIncentivesController_name,'assets',[aTokenConfig.address]),\n    ]);\n\n    // console.log('getStkAaveDistribution',IAaveIncentivesController_name,aTokenConfig.address,assetData);\n\n    if (assetData && tokenAllocation){\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)){\n        if (!aTokenIdleSupply){\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token,'balanceOf',[tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData.emissionPerSecond);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network','secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize){\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        if (!this.BNify(aaveDistribution).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find( p => (p.name === stkAAVETokenConfig.protocol) );\n      if (aTokenInfo){\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getStkAaveDistribution(tokenConfig,null,false),\n        ]);\n\n        if (aaveDistribution && userPoolShare && !this.BNify(aaveDistribution).isNaN() && !this.BNify(userPoolShare).isNaN() ){\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getWMaticApr = async (token,tokenConfig,maticConversionRate=null) => {\n    const wMaticTokenConfig = this.getGlobalConfig(['govTokens','WMATIC']);\n    if (!wMaticTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getWMaticApr_${tokenConfig.idle.token}_${maticConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let wMaticApr = this.BNify(0);\n    const distributionSpeed = await this.getStkAaveDistribution(tokenConfig);\n\n    if (distributionSpeed && this.BNify(distributionSpeed).gt(0)){\n\n      // Get COMP conversion rate\n      if (!maticConversionRate){\n        const DAITokenConfig = {\n          address:this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address:wMaticTokenConfig.addressForPrice || wMaticTokenConfig.address\n          };\n          maticConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!maticConversionRate || maticConversionRate.isNaN()){\n          maticConversionRate = this.BNify(1);\n        }\n      }\n\n      const wMaticValue = this.BNify(maticConversionRate).times(distributionSpeed);\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),tokenAllocation);\n\n      if (tokenAllocation){\n        wMaticApr = wMaticValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),wMaticValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),wMaticApr.toFixed());\n\n        if (!this.BNify(wMaticApr).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,wMaticApr);\n        }\n      }\n    }\n\n    return wMaticApr;\n  }\n  getStkAaveApr = async (token,tokenConfig,aaveConversionRate=null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    if (!stkAAVETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)){\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate){\n        const DAITokenConfig = {\n          address:this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address:stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()){\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = {\n        address:this.getContractByName('DAI')._address\n      };\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      console.log('getCompAPR',tokenConfig.idle.token,compConversionRate.toFixed(5),compDistribution.toFixed(5),compValue.toFixed(5),tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller','compSupplySpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token,tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = this.fixTokenDecimals(compDistribution,18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    } else {\n      this.idleGovToken.setProps(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getGovTokensFarming = () => {\n    const output = {};\n    const availableTokens = this.props.availableTokens;\n\n    Object.keys(availableTokens).forEach( token => {\n      const tokenGovTokens = this.getTokenGovTokens(availableTokens[token]);\n      Object.keys(tokenGovTokens).forEach( govToken => {\n        output[govToken] = tokenGovTokens[govToken];\n      });\n    });\n\n    return output;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const currentNetworkId = this.getRequiredNetworkId();\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      const disabledTokens = this.getArrayPath(['disabledTokens',currentNetworkId],govTokenConfig) || [];\n      if (!govTokenConfig.enabled || disabledTokens.includes(tokenConfig.idle.token) || (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(currentNetworkId))){\n        return;\n      }\n\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency='day',mode='block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network','secondsPerYear']));\n    const multipliers = {\n      'day':{\n        'block':blocksPerYear.div(365.242199),\n        'second':secondsPerYear.div(365.242199)\n      },\n      'week':{\n        'block':blocksPerYear.div(52.1429),\n        'second':secondsPerYear.div(52.1429)\n      },\n      'month':{\n        'block':blocksPerYear.div(12),\n        'second':secondsPerYear.div(12)\n      },\n      'year':{\n        'block':blocksPerYear.div(1),\n        'second':secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n    \n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken){\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n        break;\n        case 'WMATIC':\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig,null,false);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'WMATIC':\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation){\n                const aTokenConfig = tokenConfig.protocols.find( p => (p.name === govTokenConfig.protocol) );\n                if (aTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]){\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const cTokenConfig = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (cTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const destTokenConfig = {\n        address:govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${availableTokens ? JSON.stringify(Object.keys(availableTokens)) : 'null'}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account,tokenConfig) => {\n    if (!account){\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token,account);\n    if (govTokensAmounts){\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token,govTokenIndex);\n\n        if (govTokenAddress){\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig){\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token,govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'govTokens',[govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress,null);\n  }\n  getGovTokensUserAmounts = async (token,account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'getGovTokensAmounts',[account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token,account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token,govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = {\n      address:this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint[networkId],false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAvailableTokenAddress = (token,strategy) => {\n    const networkId = this.getRequiredNetworkId();\n    const tokenConfig = this.getArrayPath([networkId,strategy,token],availableTokens);\n    return tokenConfig ? tokenConfig.address : null;\n  }\n  getTrancheAggregatedStats = async (tranches=null) => {\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    if (!tranches || !tranches.length){\n      tranches = Object.keys(this.getGlobalConfig(['tranches']));\n    }\n    await this.asyncForEach(Object.keys(this.props.availableTranches),async (protocol) => {\n      const protocolConfig = this.props.availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig),async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(tranches,async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const [\n            trancheApy,\n            tranchePool\n          ] = await Promise.all([\n            this.loadTrancheFieldRaw('trancheApy',{},protocol,token,tranche,tokenConfig,trancheConfig,null),\n            this.loadTrancheFieldRaw('tranchePool',{},protocol,token,tranche,tokenConfig,trancheConfig,null)\n          ]);\n\n          avgAPY = avgAPY.plus(this.BNify(trancheApy).times(this.BNify(tranchePool)));\n          totalAUM = totalAUM.plus(this.BNify(tranchePool));\n        });\n      });\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats = async (addGovTokens=true,allNetworks=false) => {\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    let networkIds = [networkId];\n    if (allNetworks){\n      networkIds = Object.keys(endpointInfo.endpoint);\n    }\n\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n\n    await this.asyncForEach(networkIds, async (networkId) => {\n      let tvls = await this.makeCachedRequest(endpointInfo.endpoint[networkId],endpointInfo.TTL,true,false,config);\n      if (!tvls){\n        tvls = await this.getAggregatedStats_chain();\n      }\n\n      if (tvls){\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalTVL)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalTVL));\n      }\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = {\n      address:this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = {\n      address:this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats','tokens',tokenConfig.token]) : tokenConfig;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,ToTokenConfig);\n    if (!this.BNify(conversionRate).isNaN()){\n      return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats','rates']);\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)){\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length>0 ? tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) ) : null;\n          if (protocolInfo){\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)){\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig){\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()){\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = await this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats','scores']);\n\n    if (!apiInfo.endpoint[networkId]){\n      return this.BNify(0);\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (scores && scores.length>0){\n      let tokenData = scores.find( s => s.address.toLowerCase() === tokenConfig.address.toLowerCase() );\n      if (tokenData){\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)){\n          // Set cached data\n          return this.setCachedData(cachedDataKey,tokenScore);\n        // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now()/1000);\n          const startTimestamp = parseInt(timestamp)-(60*60*24);\n          tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n          const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n          if (filteredTokenData.length){\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle){\n      return tokenAprs;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${networkId}_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    // console.log('getTokenAprs-1',tokenConfig.idle.token,networkId,cachedDataKey,cachedData);\n\n    if (cachedData && (cachedData.avgApr && this.BNify(cachedData.avgApr).gt(0)) && (cachedData.avgApy && this.BNify(cachedData.avgApy).gt(0)) ){\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCall(tokenConfig.idle.token,'getAvgAPR');\n    if (tokenAprs.avgApr){\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr,18);\n    }\n\n    // console.log('getTokenAprs-2',tokenConfig.idle.token,networkId,this.getContractByName(tokenConfig.idle.token)._address,tokenAprs);\n\n    if (tokenAprs.avgApr){\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs-3',tokenConfig.idle.token,networkId,tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()){\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()){\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value,decimals=3,maxPrecision=5,minPrecision=0) => {\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'icon']) || `images/tokens/${token}.svg`;\n                return (\n                  <ImageButton\n                    caption={token}\n                    imageSrc={imageSrc}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  width={1}\n                  maxWidth={this.props.showInline ? '31em' : 'initial'}\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'icon']) || `images/tokens/${token}.svg`;\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={imageSrc} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver: false\n  }\n\n  setMouseOver(mouseOver) {\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p: 0,\n      border: 1,\n      boxShadow: 1,\n      borderRadius: 2,\n      borderColor: null,\n      position: 'relative',\n      minHeight: 'initial',\n      backgroundColor: 'cardBg'\n    };\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length) {\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    if (isActive || (isInteractive && this.state.mouseOver)) {\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]) {\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length > 0 &&\n          <Flex\n            mt={[3, 4]}\n            ml={[3, 4]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            {...this.props.titleParentProps}\n          >\n            <Heading.h4\n              fontWeight={4}\n              fontSize={[2, 3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Heading.h4>\n            {\n              this.props.description && this.props.description.length > 0 &&\n              <Tooltip\n                placement={'top'}\n                message={this.props.description}\n              >\n                <Icon\n                  ml={2}\n                  name={\"Info\"}\n                  size={'1em'}\n                  color={'cellTitle'}\n                />\n              </Tooltip>\n            }\n\n          </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        const CustomComponent = fieldInfo.fieldComponent;\n\n                        let fieldProps = fieldInfo.props;\n\n                        // Merge with funcProps\n                        if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                          fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                        }\n\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            {\n                              CustomComponent ? (\n                                <CustomComponent\n                                  {...this.props}\n                                  {...fieldProps}\n                                />\n                              ) : (\n                                <FieldComponent\n                                  {...this.props}\n                                  fieldInfo={fieldInfo}\n                                  colProps={colInfo.props}\n                                  parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                />\n                              )\n                            }\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport { Flex, Link, Icon, Text } from \"rimble-ui\";\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {\n    page:1,\n    rowsPerPage:5,\n    totalPages:null,\n    processedRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.processRows();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const rowsChanged = JSON.stringify(prevProps.rows) !== JSON.stringify(this.props.rows);\n\n    if (rowsChanged){\n      this.setState({\n        page:1,\n      },()=>{\n        this.processRows();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processRows();\n    }\n  }\n\n  processRows = (page=null) => {\n    page = page ? page : this.state.page;\n\n    const totalRows = this.props.rows.length;\n    const totalPages = Math.ceil(totalRows/this.state.rowsPerPage);\n    \n    let processedRows = [];\n    if (this.props.paginationEnabled){\n      this.props.rows.forEach((row, i) => {\n        if (i>=((page-1)*this.state.rowsPerPage) && i<((page-1)*this.state.rowsPerPage)+this.state.rowsPerPage) {\n          processedRows.push(row);\n        }\n      });\n    } else {\n      processedRows = this.props.rows;\n    }\n\n    this.setState({\n      totalPages,\n      processedRows\n    });\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processRows(page);\n    this.setState({\n      page\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.state.processedRows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n        {\n          this.props.paginationEnabled && (\n            <Flex\n              height={'50px'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n              id={'transactions-list-pagination'}\n            >\n              <Flex mr={3}>\n                <Link mr={1} onClick={ e => this.prevPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowLeft'}\n                    size={'2em'}\n                    color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n                <Link onClick={ e => this.nextPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowRight'}\n                    size={'2em'}\n                    color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n              </Flex>\n              <Flex alignItems={'center'}>\n                <Text \n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                >\n                  Page {this.state.page} of {this.state.totalPages}\n                </Text>\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  // Goerli\n  5:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  80001:{ // Mumbai-Testnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      /*\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      */\n    },\n    risk:{\n      \n    }\n  },\n  137:{ // Matic Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x8a999F5A3546F8243205b2c0eCb0627cC10003ab',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crDAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x4eCEDdF62277eD78623f9A94995c680f8fd6C00e',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x27F8D03b3a2196956ED754baDc28D73be8830A6e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x1ee6470CD75D5686d0b2b90C0305Fa46fb0C89A1',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:16,\n            name:'cream',\n            enabled:true,\n            token:'crUSDC',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x73CF8c5D14Aa0EbC89f18272A568319F5BAB6cBD',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amUSDC',\n            address:'0x1a13F4Ca1d028320A707D99520AbFefca3998b7F',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xfdA25D931258Df948ffecb66b5518299Df6527C4',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crWETH',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x7ef18d0a9C3Fb1A716FF6c3ED0Edf52a2427F716',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            token:'aWETH',\n            name:'aavev2',\n            address:'0x28424507fefb6f7f8E9D3860F56504E4e5f5f390',\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  // Ethereum\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        token: 'USDC',\n        decimals: 6,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        ramp: {\n          swapAsset: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols: [\n          {\n            decimals: 16,\n            enabled: true,\n            token: 'cUSDC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk: {\n\n    }\n  },\n  1337: {\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crRAI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  },\n  1: { // Mainnet\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.8,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            defiScore: 8.8,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.9,\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          /*\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            token:'crRAI',\n            enabled:false,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          */\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aRAI',\n            enabled: true,\n            name: 'aavev2',\n            functions: {\n            },\n            address: '0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aFEI',\n            enabled: true,\n            functions: {},\n            name: 'aavev2',\n            address: '0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n\n      const txSucceeded = tx && tx.status === 'success';\n\n      // Send Google Analytics event\n      if (tx){\n        const eventData = {\n          eventLabel: tx.status,\n          eventCategory: `CurveDeposit`,\n          eventValue: inputValue.toFixed(),\n          eventAction: this.props.tokenConfig.token,\n        };\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    let params = null;\n\n    // Check contract approved without permit\n    let contractName = this.props.contractInfo.name;\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n      contractName = params.contractName || this.props.contractInfo.name;\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    \n    const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n    return contractApproved;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const approveEnabled = this.props.approveEnabled !== false;\n\n    if (this.props.contractInfo){\n      await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    }\n    // console.log('initContract',this.props.contractInfo);\n\n    const contractApproved = await this.checkContractApproved();\n\n    this.setState({\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport { Flex, Text, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const stakingEnabled = this.state.userHasAvailableFunds && stakingRewards.length>0;\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        maxWidth={['100%','45em']}\n      >\n        {\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${trancheDetails.color.hex}`}\n          > \n            <Image\n              mr={2}\n              src={trancheDetails.image}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[3,4]}\n              color={'copyColor'}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Auto-Farming\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Staking Rewards\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                APY\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApy',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              {\n                stakingRewards.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Text\n                      fontSize={1}\n                      fontWeight={2}\n                      lineHeight={'1'}\n                      color={'cellText'}\n                    >\n                      +\n                    </Text>\n                    <TrancheField\n                      {...this.props}\n                      fieldInfo={{\n                        name:'trancheIDLELastHarvest',\n                        props:{\n                          decimals:4,\n                          fontSize:1,\n                          fontWeight:2,\n                          lineHeight:'1',\n                          color:'cellText'\n                        }\n                      }}\n                      token={this.props.selectedToken}\n                      tranche={this.props.selectedTranche}\n                      tokenConfig={this.props.tokenConfig}\n                      protocol={this.props.selectedProtocol}\n                      trancheConfig={this.props.trancheConfig}\n                    />\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n          {\n            /*\n            (this.functionsUtil.BNify(this.state.stakedBalance).gt(0) || this.functionsUtil.BNify(this.state.trancheBalance).gt(0)) && (\n              <Flex\n                py={2}\n                style={{\n                  flexBasis:'0',\n                  flex:'1 1 0px',\n                  flexWrap:'wrap',\n                  borderBottom:`1px solid ${this.props.theme.colors.divider}`\n                }}\n                alignItems={'flex-start'}\n                justifyContent={'flex-start'}\n              >\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Deposited\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheDeposited',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Staked\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Redeemable\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheRedeemable',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n              </Flex>\n            )\n            */\n          }\n          {\n            this.props.showSelectButton ? (\n                <Button\n                  mt={3}\n                  width={1}\n                  contrastColor={'cardBg'}\n                  icon={trancheDetails.icon}\n                  mainColor={trancheDetails.color.hex}\n                  onClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </Button>\n            ) : this.state.balanceProp && this.state.tokenConfig ? (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <Flex\n                  mt={3}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Deposit'}\n                    iconColor={'deposit'}\n                    icon={'ArrowDownward'}\n                    iconBgColor={'#ced6ff'}\n                    isActive={ this.state.selectedAction === 'deposit' }\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  {\n                    this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) ? (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isActive={ this.state.selectedAction === 'unstake' }\n                        handleClick={ e => this.setSelectedAction('unstake') }\n                      />\n                    ) : (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        isDisabled={ !stakingEnabled }\n                        isActive={ this.state.selectedAction === 'stake' }\n                        handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('stake') : null }\n                      />\n                    )\n                  }\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Withdraw'}\n                    icon={'ArrowUpward'}\n                    iconColor={'redeem'}\n                    iconBgColor={'#ceeff6'}\n                    isDisabled={ !this.state.userHasAvailableFunds }\n                    isActive={ this.state.selectedAction === 'withdraw' }\n                    handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('withdraw') : null }\n                  />\n                </Flex>\n                {\n                  this.state.infoText && (\n                    <IconBox\n                      cardProps={{\n                        p:2,\n                        mt:3,\n                        width:1,\n                      }}\n                      isActive={true}\n                      isInteractive={false}\n                      iconProps={{\n                        size:'1.2em',\n                        color:'flashColor'\n                      }}\n                      textProps={{\n                        fontWeight:500,\n                        color:'flashColor',\n                        textAlign:'center',\n                        fontSize:['13px','15px']\n                      }}\n                      icon={'LightbulbOutline'}\n                      text={this.state.infoText}\n                    />\n                  )\n                }\n                <Flex\n                  mt={2}\n                >\n                  <SendTxWithBalance\n                    error={null}\n                    {...this.props}\n                    buttonProps={{\n                      width:[1,0.45]\n                    }}\n                    permitEnabled={false}\n                    tokenConfig={this.state.tokenConfig}\n                    tokenBalance={this.state.balanceProp}\n                    contractInfo={this.state.contractInfo}\n                    checkLimit={this.checkLimit.bind(this)}\n                    approveEnabled={this.state.approveEnabled}\n                    buttonDisabled={this.state.buttonDisabled}\n                    callback={this.transactionSucceeded.bind(this)}\n                    approveDescription={this.state.approveDescription}\n                    changeInputCallback={this.changeInputCallback.bind(this)}\n                    contractApproved={this.contractApprovedCallback.bind(this)}\n                    getTransactionParams={this.getTransactionParams.bind(this)}\n                    action={this.functionsUtil.capitalize(this.state.selectedAction)}\n                  >\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <BuyModal\n                        {...this.props}\n                        showInline={true}\n                        availableMethods={[]}\n                        buyToken={this.props.selectedToken}\n                      />\n                    </Flex>\n                  </SendTxWithBalance>\n                </Flex>\n              </Flex>\n            ) : !this.props.account ? (\n              <ConnectBox\n                {...this.props}\n              />\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TrancheHarvests extends Component {\n\n  state = {\n    rows:[]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    let rows = [];\n    const distributions = await this.functionsUtil.getTrancheStakingRewardsDistributions(this.props.tokenConfig,this.props.trancheConfig);\n\n    await this.functionsUtil.asyncForEach(Object.keys(distributions), async (token) => {\n      const txs = distributions[token];\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token]);\n      await this.functionsUtil.asyncForEach(txs, async (tx) => {\n        const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token}.svg`;\n        const blockInfo = await this.functionsUtil.getBlockInfo(tx.blockNumber);\n        const timeStamp = blockInfo.timestamp*1000;\n        const date = this.functionsUtil.strToMoment(timeStamp).format('YYYY/MM/DD HH:mm');\n        const amount = this.functionsUtil.fixTokenDecimals(tx.returnValues.amount||tx.returnValues.value,tokenConfig.decimals);\n        // console.log(token,date,amount.toString());\n        rows.push({\n          date,\n          token,\n          timeStamp,\n          tokenIcon,\n          hash:tx.transactionHash,\n          amount:this.functionsUtil.formatMoney(amount.toString(),8),\n          shortHash:this.functionsUtil.shortenHash(tx.transactionHash,10,6)\n        });\n      });\n    });\n\n    rows = rows.sort((a,b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    return this.setState({rows});\n  }\n\n  render() {\n    return this.state.rows.length>0 ? (\n      <Flex\n        mb={[0,4]}\n        width={1}\n        flexDirection={'column'}\n        id={'funds-overview-container'}\n      >\n        <Title my={[3,4]}>Staking Rewards Distribution</Title>\n        <CustomList\n          rows={this.state.rows}\n          paginationEnabled={true}\n          handleClick={ props => this.functionsUtil.openWindow(this.functionsUtil.getEtherscanTransactionUrl(props.row.hash)) }\n          cols={[\n            {\n              mobile:false,\n              title:'HASH',\n              props:{\n                width:[0.25,0.25]\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['shortHash'],\n                }\n              ]\n            },\n            {\n              title:'DATE',\n              props:{\n                width:[0.35,0.25],\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['date'],\n                }\n              ]\n            },\n            {\n              title:'TOKEN',\n              props:{\n                width:[0.35,0.25]\n              },\n              fields:[\n                {\n                  type:'image',\n                  props:{\n                    mr:2,\n                    size:this.props.isMobile ? '1.2em' : '1.8em'\n                  },\n                  path:['tokenIcon']\n                },\n                {\n                  type:'text',\n                  path:['token'],\n                }\n              ]\n            },\n            {\n              title:'AMOUNT',\n              props:{\n                width:[0.30,0.25],\n                justifyContent:['center','flex-start']\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['amount'],\n                  props:{\n                    decimals: this.props.isMobile ? 4 : 8\n                  }\n                },\n              ]\n            }\n          ]}\n          {...this.props}\n        />\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default TrancheHarvests;\n","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport { Flex, Text, Image, Box, Icon } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\n// import StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    actionLabel:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakeEnabled:true,\n    stakedBalance:null,\n    unstakeEnabled:true,\n    trancheBalance:null,\n    stakingEnabled:true,\n    approveEnabled:null,\n    buttonDisabled:false,\n    selectedTranche:null,\n    availableTranches:null,\n    approveDescription:null,\n    selectedAction:'deposit',\n    selectedTrancheOption:null,\n    selectedStakeAction:'stake',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const selectedStakeActionChanged = prevState.selectedStakeAction !== this.state.selectedStakeAction;\n    if (selectedActionChanged || selectedStakeActionChanged){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    const availableTranches = Object.values(this.functionsUtil.getGlobalConfig(['tranches'])).map( trancheInfo => ({\n      value:trancheInfo.type,\n      icon:trancheInfo.image,\n      label:trancheInfo.name,\n      tranche:trancheInfo.type,\n      trancheConfig:this.props.tokenConfig[trancheInfo.type]\n    }));\n\n    const selectedTrancheOption = availableTranches.find( trancheInfo => trancheInfo.value === this.props.selectedTranche );\n    const selectedTranche = selectedTrancheOption.value;\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    let stakingEnabled = stakingRewards.length>0;\n    const stakeEnabled = stakingEnabled && userHasAvailableFunds;\n    const unstakeEnabled = stakedBalance && this.functionsUtil.BNify(stakedBalance).gt(0);\n\n    if (!stakingEnabled && unstakeEnabled){\n      stakingEnabled = true;\n    }\n\n    let selectedStakeAction = 'stake';\n    if (!stakeEnabled && unstakeEnabled){\n      selectedStakeAction = 'unstake';\n    }\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      stakeEnabled,\n      tranchePrice,\n      stakedBalance,\n      stakingEnabled,\n      trancheBalance,\n      unstakeEnabled,\n      selectedTranche,\n      availableTranches,\n      selectedStakeAction,\n      selectedTrancheOption,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    let actionLabel = this.state.selectedAction;\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        actionLabel = this.state.selectedStakeAction;\n        switch (this.state.selectedStakeAction){\n          case 'stake':\n            approveEnabled = true;\n            tokenConfig = this.props.trancheConfig;\n            balanceProp = this.state.trancheBalance;\n            contractInfo = this.props.trancheConfig.CDORewards;\n          break;\n          case 'unstake':\n            approveEnabled = false;\n            tokenConfig = this.props.trancheConfig;\n            contractInfo = this.props.trancheConfig.CDORewards;\n            balanceProp = this.state.stakedBalance;\n            if (!this.state.canUnstake){\n              buttonDisabled = true;\n              infoText = trancheDetails.description.cantUnstake;\n            }\n          break;\n          default:\n          break;\n        }\n        if (this.state.stakingEnabled){\n          infoText = trancheDetails.description[this.state.selectedStakeAction];\n        } else {\n          infoText = null;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = tokenConfig ? `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.` : null;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      actionLabel,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      if (this.state.selectedAction === 'stake'){\n        methodName = this.props.trancheConfig.functions[this.state.selectedStakeAction];\n      }\n\n      methodParams = [amount];\n    }\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setStakeAction(selectedStakeAction){\n    this.setState({\n      selectedStakeAction\n    });\n  }\n\n  selectTranche(trancheType){\n    // console.log('selectTranche',trancheType);\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',trancheType]);\n    if (trancheDetails){\n      this.props.selectTrancheType(trancheDetails.route);\n    }\n  }\n\n  render() {\n\n    const isStake = this.state.selectedAction === 'stake';\n    const isDeposit = this.state.selectedAction === 'deposit';\n    const isWithdraw = this.state.selectedAction === 'withdraw';\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n\n    const CustomOptionValue = props => {\n      const selectedOption = props.options.find( option => option.value === props.value );\n      if (!selectedOption){\n        return null;\n      }\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={selectedOption.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.options.find( option => option.value === props.selectProps.value.value );\n      // console.log('CustomValueContainer',props.selectProps.options,props.selectProps.value,selectProps);\n      if (!selectProps){\n        return null;\n      }\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <Image\n              mr={2}\n              src={selectProps.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {selectProps.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTranches ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tranches...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n              maxWidth={['100%','42em']}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Tranche:\n                </Text>\n                <GenericSelector\n                  {...this.props}\n                  name={'tranches'}\n                  isSearchable={false}\n                  CustomOptionValue={CustomOptionValue}\n                  options={this.state.availableTranches}\n                  onChange={this.selectTranche.bind(this)}\n                  CustomValueContainer={CustomValueContainer}\n                  defaultValue={this.state.selectedTrancheOption}\n                />\n              </Box>\n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Tranche details:\n                </Text>\n                <DashboardCard\n                  cardProps={{\n                    py:1,\n                    px:3,\n                    mb:2\n                  }}\n                  isActive={false}\n                >\n                  <Flex\n                    mt={1}\n                    mb={1}\n                    width={1}\n                    style={{\n                      flexBasis:'0',\n                      flex:'1 1 0px',\n                      flexWrap:'wrap'\n                    }}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Protocol\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Token\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Pool Size\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tranchePool',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Auto-Farming\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'autoFarming',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Staking Rewards\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'stakingRewards',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        APY\n                      </Text>\n                      <Flex\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheApy',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        {\n                          stakingRewards.length>0 && (\n                            <Flex\n                              width={1}\n                              flexDirection={'row'}\n                              alignItems={'flex-start'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={2}\n                                lineHeight={'1'}\n                                color={'cellText'}\n                              >\n                                +\n                              </Text>\n                              <TrancheField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'trancheIDLELastHarvest',\n                                  props:{\n                                    decimals:4,\n                                    fontSize:1,\n                                    fontWeight:2,\n                                    lineHeight:'1',\n                                    color:'cellText'\n                                  }\n                                }}\n                                token={this.props.selectedToken}\n                                tranche={this.props.selectedTranche}\n                                tokenConfig={this.props.tokenConfig}\n                                protocol={this.props.selectedProtocol}\n                                trancheConfig={this.props.trancheConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Action:\n                </Text>\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={['column','row']}\n                  justifyContent={'space-between'}\n                >\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isDeposit ? 2 : 0\n                    }}\n                    caption={'Deposit'}\n                    width={[1,'32%']}\n                    imageSrc={'images/deposit.png'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isDeposit}\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isStake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Stake / Unstake'}\n                    imageSrc={'images/mint.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isStake}\n                    handleClick={ e => this.setSelectedAction('stake') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isWithdraw ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isWithdraw}\n                    handleClick={ e => this.setSelectedAction('withdraw') }\n                  />\n                </Flex>\n              </Box>\n              {\n                isStake && this.state.stakingEnabled && (\n                  <Box\n                    mb={2}\n                    width={1}\n                  >\n                    <Text mb={1}>\n                      Choose stake action:\n                    </Text>\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        handleClick={ e => this.setStakeAction('stake') }\n                        isActive={ this.state.selectedStakeAction === 'stake' }\n                      />\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isDisabled={ !this.state.unstakeEnabled }\n                        isActive={ this.state.selectedStakeAction === 'unstake' }\n                        handleClick={ e => this.state.unstakeEnabled ? this.setStakeAction('unstake') : null }\n                      />\n                    </Flex>\n                  </Box>\n                )\n              }\n              {\n                this.state.infoText && this.props.account && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:3,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.2em',\n                      color:'flashColor'\n                    }}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    icon={'LightbulbOutline'}\n                    text={this.state.infoText}\n                  />\n                )\n              }\n              <Flex\n                width={1}\n                alignItems={'stretch'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  isStake && !this.state.stakingEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        mt: 3\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'DoNotDisturb'}\n                        />\n                        <Text\n                          mt={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Staking is not enabled for this Tranche.\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      buttonProps={{\n                        width:[1,0.45]\n                      }}\n                      permitEnabled={false}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      checkLimit={this.checkLimit.bind(this)}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      contractApproved={this.contractApprovedCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.functionsUtil.capitalize(this.state.actionLabel)}\n                    >\n                      {\n                        isDeposit ? (\n                          <Flex\n                            width={1}\n                            alignItems={'stretch'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <BuyModal\n                              {...this.props}\n                              showInline={true}\n                              availableMethods={[]}\n                              buyToken={this.props.selectedToken}\n                            />\n                          </Flex>\n                        ) : isStake ? (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any <strong>{this.state.tokenConfig.label}</strong> token to {this.state.selectedStakeAction}.\n                              </Text>\n                            </Flex>\n                          </DashboardCard>\n                        ) : isWithdraw && (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.selectedToken} to withdraw.<br />If you have staked your <strong>{this.state.tokenConfig.label}</strong> tokens please unstake them to be able to withdraw your {this.props.selectedToken}.\n                            </Text>\n                            </Flex>\n                          </DashboardCard>\n                        )\n                      }\n                    </SendTxWithBalance>\n                  )\n                }\n              </Flex>\n              <LimitReachedModal\n                {...this.props}\n                limit={trancheLimit}\n                closeModal={this.resetModal}\n                isOpen={this.state.activeModal === 'limit'}\n              />\n              <ShareModal\n                confettiEnabled={true}\n                icon={`images/medal.svg`}\n                title={`Congratulations!`}\n                account={this.props.account}\n                closeModal={this.resetModal}\n                tokenName={this.props.selectedToken}\n                isOpen={this.state.activeModal === 'share'}\n                text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n                tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n\n          if (!tranchePrice.isNaN() && !tranchePrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenAmount,\n              tranchePrice,\n              trancheTokens\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(Date.now()/1000)+86400;\n\n    const tokensData = {};\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n      tokensData[token] = [];\n    });\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'decimals']);\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const trancheTokens = trancheTokenBalance[token];\n              const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n              let newBalance = trancheTokens.times(tranchePrice);\n\n              // Set new balance and tranchePrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tranchePrice = tranchePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tranchePrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Deposit':\n                trancheTokenBalance[token] = trancheTokenBalance[token].plus(tx.trancheTokens);\n              break;\n              default:\n                trancheTokenBalance[token] = trancheTokenBalance[token].minus(tx.trancheTokens);\n                if (trancheTokenBalance[token].lt(0)){\n                  trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = trancheTokenBalance[token].times(lastTx.tranchePrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Staked Amount\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheStaked',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import Title from '../Title/Title';\nimport { Button, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      stakingRewards,\n      trancheBalance,\n      rewardTokensInfo,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',rewardToken]);\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.lastAmount : null;\n      const tokenAmount = !this.functionsUtil.BNify(stakingRewards[rewardToken]).isNaN() ? this.functionsUtil.BNify(stakingRewards[rewardToken]) : this.functionsUtil.BNify(0);\n      if (trancheBalanceInfo && distributionSpeed){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+` ${rewardToken} (last harvest)` : this.functionsUtil.BNify(0).toFixed(8)\n      });\n    });\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:Button,\n                      componentProps:{\n                        style:{\n                          width:'100%'\n                        },\n                        value:'Claim',\n                        borderRadius:4,\n                        mainColor:'redeem',\n                        size:this.props.isMobile ? 'small' : 'medium'\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      methodName:'claim',\n                      callback:this.claimCallback.bind(this),\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport TrancheHarvests from '../TrancheHarvests/TrancheHarvests';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TrancheDepositRedeem from '../TrancheDepositRedeem/TrancheDepositRedeem';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    userHasFunds:false,\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTransactions();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged){\n      this.loadTransactions();\n    }\n  }\n\n  loadTransactions(){\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n\n    // console.log('loadTransactions',this.props.selectedProtocol,this.props.selectedToken,this.props.trancheType,transactions);\n    const componentLoaded = true;\n\n    // console.log('portfolio',this.props.portfolio);\n    const userHasFunds = this.props.portfolio && this.props.portfolio.tranchesBalance.find( balanceInfo => balanceInfo.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && balanceInfo.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || balanceInfo.tranche.toLowerCase() === this.props.trancheType.toLowerCase()) ) ? true : false;\n\n    this.setState({\n      transactions,\n      userHasFunds,\n      componentLoaded\n    });\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,(1/filteredTranchesTypes.length)-0.02]}\n                  >\n                    {\n                      this.props.trancheType ? (\n                        <TrancheDepositRedeem\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      ) : (\n                        <TrancheDetails\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      )\n                    }\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <Flex\n              width={1}\n              mb={[0,4]}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.props.trancheType && (\n            <TrancheHarvests\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n          )\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              width={1}\n              mb={[3,4]}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','1.6em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              const tranche = this.props.trancheType || null;\n              return Object.keys(protocolConfig).map( token => (\n                <TableRow\n                  {...this.props}\n                  token={token}\n                  tranche={tranche}\n                  protocol={protocol}\n                  rowId={`tranche-col-${protocol}`}\n                  tokenConfig={protocolConfig[token]}\n                  cardId={`tranche-card-${protocol}`}\n                  key={`tranche-${protocol}-${token}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                />\n              ))\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","import React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheField from \"../TrancheField/TrancheField\";\nimport { Box, Flex, Icon, Text, Image } from \"rimble-ui\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass Base extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const strategyInfo = this.functionsUtil.getGlobalConfig([\n      \"strategies\",\n      \"tranches\"\n    ]);\n\n    const tokenConfig =\n      this.props.tokenConfig ||\n      this.props.availableTranches[strategyInfo.protocol][strategyInfo.token];\n\n    return (\n      <Box\n        my={[3, 0]}\n        boxShadow={1}\n        borderRadius={2}\n        width={[1, 0.49]}\n      >\n        <Flex\n          p={0}\n          mx={0}\n          border={\"0\"}\n          height={\"100%\"}\n          borderRadius={2}\n          overflow={\"hidden\"}\n          flexDirection={\"column\"}\n          backgroundColor={\"cardBg\"}\n          borderColor={\"transparent\"}\n          justifyContent={[\"center\",trancheDetails.type === \"AA\" ? \"left\" : \"right\"]}\n        >\n          <Box\n            width={1}\n            borderBottom={`1px solid ${this.props.theme.colors.divider2}`}\n          >\n            <Flex\n              pb={2}\n              mx={2}\n              my={3}\n              flexDirection={\"column\"}\n            >\n              <Flex mt={3} alignItems={\"center\"}>\n                <Image\n                  ml={3}\n                  mr={1}\n                  alt={trancheDetails.name}\n                  src={trancheDetails.image}\n                  size={this.props.isMobile ? \"2em\" : \"2.4em\"}\n                />\n                <Flex mx={1}>\n                  <Text\n                    ml={[2, 0]}\n                    fontWeight={4}\n                    fontSize={[4, 5]}\n                    lineHeight={1}\n                  >\n                    {trancheDetails.name}\n                  </Text>\n                </Flex>\n              </Flex>\n              <Box\n                ml={5}\n                mr={3}\n                mt={3}\n                alignItems={\"flex-start\"}\n                flexDirection={\"column\"}\n              >\n                <Flex\n                  mr={1}\n                  flexDirection={\"row\"}\n                  alignItems={\"baseline\"}\n                >\n                  <TrancheField\n                    fieldInfo={{\n                      showTooltip: false,\n                      name: `${trancheDetails.baseName}Apy`,\n                      props: {\n                        decimals: 2,\n                        fontWeight: 4,\n                        lineHeight: \"1\",\n                        fontSize: [3, 4],\n                        textAlign: \"center\",\n                        flexProps: {\n                          justifyItems: \"flex-end\"\n                        },\n                        color: this.props.trancheDetails.color.hex\n                      }\n                    }}\n                    {...this.props}\n                    tokenConfig={tokenConfig}\n                    token={strategyInfo.token}\n                    tranche={strategyInfo.tranche}\n                    protocol={strategyInfo.protocol}\n                  />\n                  <Text\n                    my={1}\n                    ml={[2, 3]}\n                    fontSize={1}\n                    lineHeight={\"1\"}\n                    textAlign={\"left\"}\n                    color={\"cellText\"}\n                  >\n                    Current APY (variable)\n                  </Text>\n                </Flex>\n                <Text\n                  mt={3}\n                  fontWeight={2}\n                  fontSize={[1, 2]}\n                  textAlign={\"left\"}\n                  lineHeight={\"1.5\"}\n                  color={\"copyColor\"}\n                >\n                  {trancheDetails.description.long}\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n          <Box\n            height={\"100%\"}\n            bg={\"cardBgContrast\"}\n          >\n            <Box\n              mt={3}\n              my={3}\n              pl={2}\n              width={1}\n            >\n              {trancheDetails.features.map((feature, index) => (\n                <Flex\n                  mb={2}\n                  my={1}\n                  px={2}\n                  mt={[2, 1]}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    ml={3}\n                    name={\"Done\"}\n                    color={\"tick\"}\n                    size={this.props.isMobile ? \"1.6em\" : \"1.8em\"}\n                  />\n                  <Text ml={[2, 1]} fontSize={[1, 2]} fontWeight={\"500\"}>\n                    {feature}\n                  </Text>\n                </Flex>\n              ))}\n            </Box>\n            <Flex\n              width={1}\n              height={\"auto\"}\n              alignItems={\"flex-end\"}\n              justifyContent={\"center\"}\n            >\n              <RoundButton\n                buttonProps={{\n                  my: 3,\n                  width: 0.85,\n                  fontSize: 2,\n                  contrastColor: \"white\",\n                  mainColor: trancheDetails.color.hex\n                }}\n                handleClick={e =>\n                  this.props.selectTrancheType(trancheDetails.route)\n                }\n              >\n                {this.props.tokenConfig\n                  ? `Go to ${trancheDetails.name}`\n                  : `Enter the ${trancheDetails.name}`}\n              </RoundButton>\n            </Flex>\n          </Box>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from \"react\";\nimport { Link, Flex, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass TrancheFlash extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const flashData = this.functionsUtil.getGlobalConfig([\"tranchflash\"]);\n    return (\n      <Flex\n        width={1}\n        mx={4}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent={\"center\"}\n      >\n        <Flex mx={2} my={[2, 4]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex justifyContent={\"left\"} my={3} width={[1, 0.7]}>\n            <Text\n              bold={\"true\"}\n              fontWeight={4}\n              lineHeight={1}\n              color={\"white\"}\n              fontSize={[5, 6]}\n              textAlign={\"left\"}\n            >\n              {flashData.subtitle}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            width={1}\n            mb={[2, 3]}\n            justifyContent={\"left\"}\n          >\n            <Text\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n            >\n              {flashData.desc}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            mb={2}\n            width={1}\n            flexDirection={\"column\"}\n          >\n            {\n              flashData.questions.map( (question,index) => (\n                <Flex\n                  my={2}\n                  key={`question_${index}`}\n                  alignItems={\"flex-start\"}\n                >\n                  <Link\n                    fontSize={2}\n                    fontWeight={2}\n                    opacity={\"50%\"}\n                    color={\"white\"}\n                    textAlign={\"left\"}\n                    onClick={e =>\n                      this.props.openTooltipModal(question.desc, question.msg)\n                    }\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={\"flex-start\"}\n                    >\n                      <Image\n                        mr={2}\n                        src={flashData.helpcircle}\n                      />\n                      {question.desc}\n                    </Flex>\n                  </Link>\n                </Flex>\n              ))\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          mt={6}\n          width={0.2}\n          hidden={this.props.isMobile ? 1 : 0}\n          alignItems={\"flex-start\"}\n        >\n          <Image hidden={this.props.isMobile ? 1 : 0} src={flashData.arrows} />\n        </Flex>\n        <Flex ml={2} my={[3, 5]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"AA\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.seniorinfo\n              }}\n            ></Text>\n          </Flex>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              ml={[0, 4]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"BB\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.juniorinfo\n              }}\n            ></Text>\n          </Flex>\n        </Flex>\n        {/*<Flex width={0.3}>\n          <Text>ABC</Text>\n        </Flex>*/}\n      </Flex>\n    );\n  }\n}\nexport default TrancheFlash;\n","import Title from \"../Title/Title\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport styles from \"./TrancheWelcome.module.scss\";\nimport TrancheBox from \"../TrancheBox/TrancheBox\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheFlash from \"../TrancheFlash/TrancheFlash\";\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\n\nclass TrancheWelcome extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig([\"tranches\"]);\n    return (\n      <Flex\n        width={1}\n        alignItems={\"center\"}\n        flexDirection={'column'}\n        justifyContent={\"center\"}\n      >\n        <AssetsUnderManagement\n          {...this.props}\n          flexProps={{\n            mb:[3,0]\n          }}\n          loaderAlign={'flex-end'}\n          subtitle={'Total Value Locked on Tranches'}\n          aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n        />\n        <Flex\n          mb={3}\n          width={1}\n          maxWidth={8}\n          alignItems={\"center\"}\n          flexDirection={\"column\"}\n          justifyContent={\"center\"}\n        >\n          {!this.props.tokenConfig ? (\n            <>\n              <Title fontSize={[5, 6]}>Perpetual Yield Tranches</Title>\n              <Flex\n                mt={[2,3]}\n                border={1}\n                borderRadius={2}\n                borderColor={\"transparent\"}\n                backgroundColor={\"newblue\"}\n                className={[\n                  styles.trancheFlash,\n                  this.props.isMobile ? styles.mobile : null\n                ]}\n              >\n                <TrancheFlash {...this.props}></TrancheFlash>\n              </Flex>\n            </>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3, 4]}\n              color={\"copyColor\"}\n              textAlign={\"center\"}\n            >\n              Select your preferred Tranche\n            </Title>\n          )}\n          <Flex my={3} mx={0} justifyContent={\"center\"}>\n            <Flex\n              width={1}\n              flexDirection={[\"column\", \"row\"]}\n              justifyContent={\"space-between\"}\n            >\n              {Object.keys(tranchesDetails).map((trancheType, index) => (\n                <TrancheBox\n                  {...this.props}\n                  key={`tranche_${index}`}\n                  tokenConfig={this.props.tokenConfig}\n                  trancheDetails={tranchesDetails[trancheType]}\n                />\n              ))}\n            </Flex>\n          </Flex>\n          <Flex\n            mt={3}\n            width={1}\n            px={[0,5]}\n            justifyContent={\"center\"}\n          >\n            <Text\n              fontSize={[0,1]}\n              color={'statValue'}\n              textAlign={\"center\"}\n            >\n              If you're still unsure in which Tranche to pick, reach out to us on our <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['forumURL'])}>Forum</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['discordURL'])}>Discord</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['telegramURL'])}>Telegram</ExtLink> or <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['twitterURL'])}>Twitter</ExtLink>.<br />The team and the community would be happy to help!\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheWelcome;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat ? this.props.tooltipFormat : (v => v),\n      sliceLabel: this.props.sliceLabel,// ? this.props.sliceLabel : (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: this.props.theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.valueHover || this.state.selectedSlice.value}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip, Image } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    transactions:[],\n    tokenConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    this.loadPortfolio().then( () => {\n      const componentLoaded = true;\n      const trancheRoute = this.props.urlParams.param1;\n      const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n      const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n      if (trancheDetails !== undefined){\n        const trancheType = trancheDetails.type;\n        const useTrancheType = !this.state.userHasFunds;\n        const selectedToken = this.props.urlParams.param3;\n        const selectedProtocol = this.props.urlParams.param2;\n        const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null) : null;\n\n        if (this.state.userHasFunds && !tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        this.setState({\n          trancheType,\n          tokenConfig,\n          trancheRoute,\n          selectedToken,\n          trancheDetails,\n          useTrancheType,\n          selectedProtocol\n        });\n      } else {\n        const selectedToken = this.props.urlParams.param2;\n        const selectedProtocol = this.props.urlParams.param1;\n        const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n        if (tokenConfig){\n          this.setState({\n            tokenConfig,\n            selectedToken,\n            selectedProtocol\n          });\n        }\n      }\n\n      this.setState({\n        componentLoaded\n      });\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n\n    if (portfolio){\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenPercentage = tranchesTokens[token].div(portfolio.totalAmountLent).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          valueHover:balanceValue,\n          value:Math.round(tokenPercentage),\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig.icon || `images/tokens/${token}.svg`,\n        };\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      // console.log('loadPortfolio - userHasFunds',portfolio,userHasFunds);\n\n      this.setState({\n        portfolio,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        portfolioDonutData,\n        allocationChartData\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedToken}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedToken){\n      breadcrumbPath.push(this.state.selectedToken);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={2}\n                      src={this.state.trancheDetails.image}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Title\n                    mb={3}\n                  >\n                    Perpetual Yield Tranches\n                  </Title>\n                </Box>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            tooltipFormat={v => v+'%'}\n                            defaultLabel={'Total Funds'}\n                            sliceLabel={d => {\n                              if (parseFloat(d.value)>=5){\n                                return d.value+'%';\n                              } else {\n                                return null;\n                              }\n                            }}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                mb={[3,4]}\n                id={\"migrate-assets\"}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,4]}\n                    fontWeight={[3,4]}\n                  >\n                    Available Tranches\n                  </Heading.h4>\n                </Flex>\n                <TranchesList\n                  enabledProtocols={[]}\n                  trancheType={this.state.trancheType}\n                  availableTranches={this.props.availableTranches}\n                  handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                  cols={[\n                    {\n                      title:'PROTOCOL',\n                      props:{\n                        width:[0.23,0.15]\n                      },\n                      fields:[\n                        {\n                          name:'protocolIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          name:'protocolName'\n                        }\n                      ]\n                    },\n                    {\n                      title:'TOKEN',\n                      props:{\n                        width:[0.15, 0.12],\n                      },\n                      fields:[\n                        {\n                          name:'tokenIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          mobile:false,\n                          name:'tokenName'\n                        }\n                      ]\n                    },\n                    /*\n                    {\n                      title:'TYPE',\n                      props:{\n                        width:[0.29,0.13],\n                      },\n                      fields:[\n                        {\n                          name:'trancheTypeIcon',\n                          props:{\n                            flexProps:{\n                              mr:2\n                            },\n                            size:'1.4em'\n                          }\n                        },\n                        {\n                          name:'trancheType'\n                        }\n                      ],\n                      visible:this.state.useTrancheType\n                    },\n                    */\n                    {\n                      title:'POOL',\n                      props:{\n                        width:[0.25, 0.14],\n                      },\n                      fields:[\n                        {\n                          name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}Pool` : 'pool',\n                          props:{\n                            decimals:2\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.29,this.state.useTrancheType ? 0.12 : 0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'seniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.29,this.state.useTrancheType ? 0.12 : 0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'juniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      mobile:false,\n                      title:'AUTO-FARMING',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.18 : 0.15],\n                      },\n                      fields:[\n                        {\n                          name:'autoFarming'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'STAKING REWARDS',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.18 : 0.13],\n                      },\n                      fields:[\n                        {\n                          name:'stakingRewards'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:true,\n                      title:'TOKENS',\n                      props:{\n                        width:[0.16,0.17],\n                      },\n                      fields:[\n                        {\n                          name:'govTokens'\n                        }\n                      ]\n                    },\n                    {\n                      title:'',\n                      mobile:false,\n                      props:{\n                        width:[0.29, 0.16],\n                      },\n                      parentProps:{\n                        width:1\n                      },\n                      fields:[\n                        {\n                          name:'button',\n                          label: 'Deposit',\n                          props:{\n                            width:1,\n                            fontSize:3,\n                            fontWeight:3,\n                            height:'45px',\n                            borderRadius:4,\n                            boxShadow:null,\n                            mainColor:'deposit',\n                            size: this.props.isMobile ? 'small' : 'medium',\n                            handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                          }\n                        }\n                      ]\n                    }\n                  ]}\n                  {...this.props}\n                />\n              </Flex>\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    programEnded:false,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    programEndDate:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },0) : null;\n\n    const programEndDate = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programEndDate\n    });\n\n    const programEnded = programEndTime && programEndTime*1000<=Date.now();\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      programEnded,\n      totalRewards,\n      programEndDate,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = {\n          address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n        };\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = {\n      address:this.functionsUtil.getContractByName('DAI')._address\n    };\n    const rewardTokenConfig = {\n      address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n    };\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                isStake && this.state.programEnded ? (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      mt:1\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        name={'Warning'}\n                        color={'cellText'}\n                        size={this.props.isMobile ? '1.8em' : '2.3em'}\n                      />\n                      <Text\n                        mt={1}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        The {this.props.selectedToken} staking program ended on {this.state.programEndDate}.\n                      </Text>\n                    </Flex>\n                  </DashboardCard>\n                ) : (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const cardProps = {\n      p:3,\n      mb:2,\n      width:'49%',\n      ...this.props.cardProps\n    };\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        title={this.props.title}\n        titleProps={{\n          fontSize:1,\n          fontWeight:3,\n        }}\n        titleParentProps={{\n          mt:0,\n          ml:0\n        }}\n        description={this.props.description}\n      >\n        {\n          this.props.value ? (\n            <Text\n              mt={1}\n              fontSize={[2,3]}\n              color={'statValue'}\n              {...this.props.textProps}\n            >\n              {this.props.value}\n            </Text>\n          ) : (this.props.children || null)\n        }\n      </DashboardCard>\n    );\n  }\n}\n\nexport default Base;\n","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    // console.log('checkButtonDisabled',this.state.selectedAction,this.state.increaseAction,buttonDisabled);\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n        // console.log('getTransactionParams',methodName,methodParams);\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}}) : []\n    ]);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    if (claimEvents){\n      await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n        if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n          const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n          if (blockInfo){\n            const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n            totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n            claimedRewards.push({\n              amount:claimedAmount,\n              hash:e.transactionHash,\n              tokenName:this.props.contractInfo.rewardToken,\n              date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n            });\n          }\n        }\n      });\n    }\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0].value : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1].value : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2].value : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents ? depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0)) : this.functionsUtil.BNify(0);\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  changelockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // console.log('changelockPeriodInput',lockPeriodTimestamp);\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      });\n    }\n  }\n\n  selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n    let mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    // Check if after 4 years from now\n    if (mDate.isAfter(maxDate)){\n      mDate = maxDate;\n    }\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // console.log('selectLockPeriod',lockPeriodInput,lockPeriodTimestamp);\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const statsLoaded = false;\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      statsLoaded,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    // const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year').format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCardSmall\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCardSmall\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Box\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.45 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.4 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.15 : 0.3}\n                              >\n                                { this.props.isMobile ? '' : 'Hash' }\n                              </Text>\n                            </Flex>\n                            <Box\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              overflow={['visible','scroll']}\n                              maxHeight={['initial','500px']}\n                            >\n                              {\n                                this.state.distributedRewards.map( (reward,index) => (\n                                  <Flex\n                                    width={1}\n                                    py={[2,1]}\n                                    flexDirection={'row'}\n                                    key={`rewards_${index}`}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.45 : 0.4}\n                                    >\n                                      {reward.date}\n                                    </Text>\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.4 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      {reward.amount.toFixed(4)} {reward.tokenName}\n                                    </Text>\n                                    <Flex\n                                      width={this.props.isMobile ? 0.15 : 0.13}\n                                      justifyContent={this.props.isMobile ? 'flex-end' : 'flex-start'}\n                                    >\n                                      <ExtLink\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          {\n                                            !this.props.isMobile && (\n                                              <Text\n                                                fontSize={2}\n                                                fontWeight={2}\n                                                color={'link'}\n                                              >\n                                                {this.functionsUtil.shortenHash(reward.hash)}\n                                              </Text>\n                                            )\n                                          }\n                                          <Icon\n                                            ml={1}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                            size={this.props.isMobile ? '1.4em' : '1.2em'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    </Flex>\n                                  </Flex>\n                                ))\n                              }\n                            </Box>\n                          </Box>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changelockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          color:'hsl('+tokenColorHsl+')',\n          value:Math.round(tokenPercentage),\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass PolygonBridgeTransactions extends Component {\n\n  state = {\n    loaded:false,\n    bridgeEnabled:false,\n    polygonTransactions:null,\n    polygonTransactionsAvailableTokens:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (!this.props.account){\n      return false;\n    }\n\n    let polygonTransactionsAvailableTokens = null;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const bridgeEnabled = polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id);\n\n    if (!bridgeEnabled){\n      return this.setState({\n        loaded:true,\n        bridgeEnabled\n      });\n    }\n\n    const polygonTransactions = await this.functionsUtil.getPolygonBridgeTxs(this.props.account);\n\n    // console.log('polygonTransactions',this.props.account,this.props.web3,polygonTransactions);\n\n    if (polygonTransactions && polygonTransactions.length>0){\n      polygonTransactionsAvailableTokens = polygonTransactions.map( (tx) => {\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge','props','availableTokens',tx.tokenSymbol]);\n        let actionIcon = null;\n        switch (tx.action){\n          default:\n          case 'Deposit':\n            actionIcon = 'ArrowDownward';\n          break;\n          case 'Withdraw':\n            actionIcon = 'ArrowUpward';\n          break;\n          case 'Exit':\n            actionIcon = 'Undo';\n          break;\n        }\n        const depositInfo = {\n          actionIcon,\n          amount:tx.value,\n          token:tx.tokenSymbol,\n          action:tx.action.toUpperCase(),\n          bridgeType:tx.bridgeType.toUpperCase(),\n          status:tx.included ? 'Completed' : 'pending',\n          hash:this.functionsUtil.shortenHash(tx.hash),\n          statusIcon:tx.included ? 'Done' : 'Timelapse',\n          actionIconProps:{\n            color:this.props.theme.colors.transactions.action[tx.action.toLowerCase()],\n            bgColor:this.props.theme.colors.transactions.actionBg[tx.action.toLowerCase()]\n          },\n          url:this.functionsUtil.getEtherscanTransactionUrl(tx.hash,tx.networkId),\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('DD MMM, YYYY'),\n          statusIconProps:{\n            color:tx.included ? this.props.theme.colors.transactions.status.completed : this.props.theme.colors.transactions.status.pending\n          },\n          tokenIcon:tokenConfig.icon || this.functionsUtil.getGlobalConfig(['stats','tokens',tx.tokenSymbol,'icon']) || `images/tokens/${tx.tokenSymbol}.svg`\n        };\n        return depositInfo;\n      });\n    }\n\n    // console.log('PolygonBridgeTransactions',polygonTransactions,polygonTransactionsAvailableTokens);\n\n    this.setState({\n      loaded:true,\n      bridgeEnabled,\n      polygonTransactions,\n      polygonTransactionsAvailableTokens\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded || !this.state.bridgeEnabled){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0 ? (\n            <CustomList\n              paginationEnabled={true}\n              handleClick={(props) => this.functionsUtil.openWindow(props.row.url)}\n              cols={[\n                {\n                  title:'HASH',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.18],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'bgIcon',\n                      path:['actionIcon'],\n                    },\n                    {\n                      type:'text',\n                      path:['hash'],\n                      props:{\n                        ml:[0,2]\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  props:{\n                    width:[0.25,0.14],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['action'],\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['date'],\n                    },\n                  ]\n                },\n                {\n                  title:'BRIDGE',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['bridgeType'],\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      mobile:false,\n                      path:['statusIcon'],\n                      props:{\n                        mr:2,\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.25, 0.15],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['amount'],\n                      props:{\n                        decimals: 4\n                      }\n                    },\n                    {\n                      name:'tokenName',\n                      props:{\n                        ml:2\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.25,0.13]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      path:['tokenIcon'],\n                      props:{\n                        mr:2,\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                    }\n                  ]\n                },\n              ]}\n              {...this.props}\n              rows={this.state.polygonTransactionsAvailableTokens}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default PolygonBridgeTransactions;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport PolygonBridgeTransactions from '../PolygonBridgeTransactions/PolygonBridgeTransactions';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    portfolioLoading:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week',\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      this.setStateSafe({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return await this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n    // const currentNetwork = this.functionsUtil.getRequiredNetwork();\n\n    if (this.state.portfolioLoaded || this.state.portfolioLoading){\n      return false;\n    }\n\n    await this.setStateSafe({\n      portfolioLoading:true\n    });\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load and process Etherscan Txs\n      this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n\n      // Load data\n      const [\n        batchedDeposits,\n        portfolio,\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n      newState.depositedTokens = [];\n      newState.tokensToMigrate = [];\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        // let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        // let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            // tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            // this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          // if (!tokenScore.isNaN() && tokenScore.gt(0)){\n          //   avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n          //   totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          // }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n        //   avgScore = avgScore.div(totalBalanceWithScore);\n        // }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        // newState.avgScore = avgScore;\n        newState.tokensToMigrate = portfolio.tokensToMigrate;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.portfolioLoaded = true;\n      newState.portfolioLoading = false;\n      \n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        portfolioLoading:false,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title']);\n    const toolsToShow = ['addFunds','nexusMutual','tokenSwap'].filter( toolName => {\n      const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n      return toolConfig.enabled && (!toolConfig.availableNetworks.length || toolConfig.availableNetworks.includes(parseInt(currentNetwork.id)));\n    })\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {strategyName} strategy\n        </Title>\n        {\n          /*\n          currentNetwork.id === 137 ? (\n            <Flex\n              width={1}\n              minHeight={'45vh'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  width:[1,0.5],\n                }}\n              >\n                <Flex\n                  aligItems={'center'}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'AccessTime'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Hang on, please!<br />The {strategyName} strategy has not yet been activated in Polygon.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,1/2]\n                    }}\n                    handleClick={e => this.props.goToSection(`stake`)}\n                  >\n                    Go to Staking\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          ) :\n          */\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    mt={1}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    {\n                                      /*\n                                      <Flex\n                                        width={0.45}\n                                        alignItems={'center'}\n                                        justifyContent={'flex-end'}\n                                      >\n                                        <Text\n                                          fontSize={1}\n                                          fontWeight={3}\n                                          fontFamily={this.props.theme.fonts.counter}\n                                          color={this.props.theme.colors.transactions.status.completed}\n                                        >\n                                          +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                        </Text>\n                                      </Flex>\n                                      <Text\n                                        mx={1}\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >|</Text>\n                                      */\n                                    }\n                                    <TotalEarningsCounter\n                                      {...this.props}\n                                      unit={'+$'}\n                                      decimals={4}\n                                      counterStyle={{\n                                        fontSize:14,\n                                        fontWeight:600,\n                                        color:this.props.theme.colors.transactions.status.completed\n                                      }}\n                                      portfolio={this.state.portfolio}\n                                    />\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: '<small>+</small>'+this.state.portfolio.totalEarningsPerc.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Profit\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','totalProfitPerc'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && toolsToShow.length>=2 && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                              width={[1,1/toolsToShow.length]}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                nexusMutualConfig.enabled && nexusMutualConfig.availableNetworks.includes(currentNetwork.id) && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.26,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                showLoader:false,\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'OLD APY',\n                            props:{\n                              width:[0.26,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'oldApy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            props:{\n                              width:[0.21,0.11],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.13],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.15],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:true,\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            props:{\n                              width:[0.21, 0.13],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'FARMING',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.22,0.16],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(this.functionsUtil.getGovTokensFarming())}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id) && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                    id={'polygon-transactions'}\n                  >\n                    <PolygonBridgeTransactions\n                      {...this.props}\n                      title={'Polygon Bridge Transactions'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass PolygonBridge extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    txsToExit:[],\n    infoBox:null,\n    polygonTxs:[],\n    inputValue:null,\n    dataLoaded:false,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    availableTokens:null,\n    availableNetworks:[],\n    approveEnabled:false,\n    contractApproved:false,\n    defaultTransaction:null,\n    approveDescription:null,\n    selectedTransaction:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  async loadPolygonTxs(){\n    const polygonTxs = await this.functionsUtil.getPolygonBridgeTxs();\n    this.setState({\n      polygonTxs,\n      dataLoaded:true\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const rootTokenConfig = tokenConfig.rootToken;\n      const childTokenConfig = tokenConfig.childToken;\n\n      // Init contracts\n      await Promise.all([\n        rootTokenConfig ? this.props.initContract(rootTokenConfig.name,rootTokenConfig.address,rootTokenConfig.abi) : null,\n        childTokenConfig ? this.props.initContract(childTokenConfig.name,childTokenConfig.address,childTokenConfig.abi) : null\n      ]);\n\n      this.setState({\n        tokenConfig\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.updateData();\n      }\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n  }\n\n  getTransactionParams(amount){\n    let value = null;\n    let methodName = null;\n    let methodParams = [];\n    let contractName = null;\n    amount = this.functionsUtil.toBN(amount);\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        switch (this.state.selectedToken){\n          case 'WETH':\n            methodName = 'depositEtherFor';\n            contractName = 'RootChainManager';\n            value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            methodParams = [this.props.account];\n          break;\n          default:\n            const depositData = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            switch (bridgeType){\n              case 'plasma':\n                contractName = 'DepositManager';\n                methodName = 'depositERC20ForUser';\n                methodParams = [this.state.tokenConfig.rootToken.address,this.props.account,depositData];\n              break;\n              default:\n              case 'pos':\n                methodName = 'depositFor';\n                contractName = 'RootChainManager';\n                methodParams = [this.props.account,this.state.tokenConfig.rootToken.address,depositData];\n              break;\n            }\n          break;\n        }\n      break;\n      case 'Withdraw':\n        methodName = 'withdraw';\n        methodParams = [amount];\n        contractName = this.state.tokenConfig.childToken.name;\n        if (this.state.tokenConfig.sendValue){\n          value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',{\n    //   value,\n    //   methodName,\n    //   methodParams,\n    //   contractName\n    // });\n\n    return {\n      value,\n      methodName,\n      methodParams,\n      contractName\n    };\n  }\n\n  exitCallback(){\n\n  }\n\n  async getExitTransactionParams(){\n    const txHash = this.state.selectedTransaction;\n    const exitCalldata = await this.props.maticPOSClient.exitERC20(txHash, { from:this.props.account, encodeAbi: true })\n    if (exitCalldata && exitCalldata.data){\n      return exitCalldata.data;\n    }\n    return null;\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async selectTransaction(selectedTransaction){\n    this.setState({\n      selectedTransaction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    /*\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        const depositedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      break;\n      case 'Withdraw':\n        const withdrawnTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (tx.txReceipt && tx.txReceipt.events && tx.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(tx.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n      break;\n      default:\n      break;\n    }\n    */\n    const transactionSucceeded = tx;\n    this.setState({\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(){\n    const newState = {};\n    const isETH = this.state.selectedToken==='WETH';\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        newState.steps = [];\n        newState.permitEnabled = false;\n        newState.availableNetworks = [1,5];\n        newState.approveEnabled = !isETH;\n        newState.approveDescription = `Approve the contract to deposit your ${this.state.selectedToken}`;\n        newState.contractInfo = bridgeType === 'pos' ? this.props.toolProps.contracts.ERC20Predicate : this.props.toolProps.contracts.DepositManager;\n        newState.balanceProp = isETH ? await this.functionsUtil.getETHBalance(this.props.account) : await this.functionsUtil.getTokenBalance(this.state.tokenConfig.rootToken.name,this.props.account);\n        if (this.state.transactionSucceeded){\n          let depositedTokensLog = null;\n          let depositedTokensEvent = null;\n          if (!isETH){\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          } else {\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          }\n          const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : ( depositedTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensEvent.raw.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully deposited <strong>${depositedTokens.toFixed(4)} ${this.state.selectedToken}</strong> in the Polygon chain. Please wait ~7-8 minutes for your balance to be accounted in the Polygon chain.`\n          }\n        } else {\n          newState.infoBox = {\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n            text:`Please note that deposit of funds takes ~7-8 minutes to be accounted in the Polygon chain.`\n          }\n        }\n        // console.log('updateData',newState);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.availableNetworks = [137,80001];\n        newState.contractInfo = this.state.tokenConfig.childToken;\n        newState.balanceProp = await this.functionsUtil.getTokenBalance(this.state.tokenConfig.childToken.name,this.props.account);\n\n        const currentNetwork = this.functionsUtil.getRequiredNetwork();\n        const maticNetwork = currentNetwork.name;\n        const mainNetworkId = this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetwork.id]);\n        const mainNetworkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',mainNetworkId,'name']);\n        newState.steps = [\n          {\n            icon:'LooksOne',\n            completed:false,\n            description:`Withdraw ${this.state.selectedToken} from ${maticNetwork} network`\n          },\n          {\n            icon:'LooksTwo',\n            completed:false,\n            description:`Wait for the checkpoint to be submitted`\n          },\n          {\n            icon:'Looks3',\n            completed:false,\n            description:`Exit ${this.state.selectedToken} from ${mainNetworkName} network`\n          },\n        ];\n        if (this.state.transactionSucceeded){\n          const withdrawnTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events && this.state.transactionSucceeded.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(this.state.transactionSucceeded.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : ( withdrawnTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensEvent.raw.data,16),this.state.tokenConfig.decimals)  : this.functionsUtil.BNify(0)));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully withdrawn <strong>${withdrawnTokens.toFixed(4)} ${this.state.selectedToken}</strong> from the Polygon chain. Please wait up to 2-3 hours to be able to complete the withdrawal.`\n          }\n        } else {\n          let text = '';\n          switch (bridgeType){\n            case 'plasma':\n              text = `Please note that withdraw of funds takes ~7 days in Plasma.`;\n            break;\n            default:\n            case 'pos':\n              text = `Please note that withdraw of funds takes ~45 mins to 1 hour in PoS.`;\n            break;\n          }\n          newState.infoBox = {\n            text,\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          }\n        }\n      break;\n      case 'Exit':\n        newState.availableNetworks = [1,5];\n        newState.txsToExit = this.state.polygonTxs.filter( tx => tx.included && tx.action === 'Withdraw' && !tx.exited && tx.tokenSymbol === this.state.selectedToken ).map( tx => {\n          const label = this.functionsUtil.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm')+' - '+tx.value.toFixed(6)+' '+tx.token;\n          return {\n            label,\n            data:tx,\n            value:tx.hash\n          }\n        });\n\n        newState.defaultTransaction = newState.txsToExit.length>0 ? newState.txsToExit[0] : null;\n        newState.selectedTransaction = newState.defaultTransaction ? newState.defaultTransaction.data.hash : null;\n      break;\n      default:\n      break;\n    }\n\n    if (!newState.balanceProp){\n      newState.balanceProp = this.functionsUtil.BNify(0);\n    }\n\n    // console.log('updateData',newState);\n\n    this.setState(newState);\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          label:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const paramIsToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2];\n    const selectedToken = paramIsToken ? this.props.urlParams.param2 : (this.props.selectedToken || this.state.selectedToken || availableTokens[0].value);\n    const selectedOption = availableTokens.find( t => t.value === selectedToken );\n    const defaultAction = !paramIsToken ? (currentNetwork.provider === 'infura' ? 'Deposit' : 'Withdraw') : 'Deposit';\n    const selectedAction = this.props.action || this.state.action || defaultAction;\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n\n    // console.log('loadData',this.props.urlParams);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    },() => {\n      this.loadPolygonTxs();\n    });\n  }\n\n  async exitSelectedTransaction(){\n\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const fullWidth = !!this.props.fullWidth;\n    const isExit = this.state.selectedAction === 'Exit';\n    const isDeposit = this.state.selectedAction === 'Deposit';\n    const isWithdraw = this.state.selectedAction === 'Withdraw';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const currentNetworkId = currentNetwork.id;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    width={[1,fullWidth ? 1 : '33em']}\n                  >\n                    {\n                      !this.props.selectedToken && (\n                        <Box\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Select Token:\n                          </Text>\n                          <AssetSelector\n                            id={'tokens'}\n                            {...this.props}\n                            showBalance={false}\n                            isSearchable={false}\n                            onChange={this.selectToken.bind(this)}\n                            selectedToken={this.state.selectedToken}\n                            availableTokens={this.props.toolProps.availableTokens}\n                          />\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          {\n                            !this.props.action && (\n                              <Box\n                                width={1}\n                              >\n                                <Text\n                                  mb={2}\n                                >\n                                  Choose the action:\n                                </Text>\n                                <Flex\n                                  mb={3}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'space-between'}\n                                >\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Deposit'}\n                                    iconColor={'deposit'}\n                                    icon={'ArrowDownward'}\n                                    iconBgColor={'#ced6ff'}\n                                    handleClick={ e => this.setAction('Deposit') }\n                                    isActive={ this.state.selectedAction === 'Deposit' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Withdraw'}\n                                    iconColor={'redeem'}\n                                    icon={'ArrowUpward'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Withdraw') }\n                                    isActive={ this.state.selectedAction === 'Withdraw' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Exit'}\n                                    icon={'SwapHoriz'}\n                                    iconColor={'redeem'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Exit') }\n                                    isActive={ this.state.selectedAction === 'Exit' }\n                                  />\n                                </Flex>\n                              </Box>\n                            )\n                          }\n                          {\n                            !this.state.availableNetworks.includes(currentNetworkId) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mb:3,\n                                  width:1\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    The <strong>{this.functionsUtil.capitalize(currentNetwork.name)} network</strong> is not supported for this function, please switch to <strong>{this.functionsUtil.getGlobalConfig(['network','availableNetworks',this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]),'name'])} network</strong>.\n                                  </Text>\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,1/2],\n                                      fontSize:[1,2]\n                                    }}\n                                    handleClick={e => this.props.setRequiredNetwork(this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]))}\n                                  >\n                                    Switch Network\n                                  </RoundButton>\n                                </Flex>\n                              </DashboardCard>\n                            ) : (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo) ? (\n                              <Box\n                                mt={1}\n                                width={1}\n                                mb={[4,3]}\n                              >\n                                {\n                                  (isDeposit || isWithdraw) ? (\n                                    <SendTxWithBalance\n                                      {...this.props}\n                                      error={this.state.error}\n                                      steps={this.state.steps}\n                                      infoBox={this.state.infoBox}\n                                      action={this.state.selectedAction}\n                                      tokenConfig={this.state.tokenConfig}\n                                      tokenBalance={this.state.balanceProp}\n                                      contractInfo={this.state.contractInfo}\n                                      permitEnabled={this.state.permitEnabled}\n                                      approveEnabled={this.state.approveEnabled}\n                                      callback={this.transactionSucceeded.bind(this)}\n                                      approveDescription={this.state.approveDescription}\n                                      contractApproved={this.contractApproved.bind(this)}\n                                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                      changeInputCallback={this.changeInputCallback.bind(this)}\n                                      getTransactionParams={this.getTransactionParams.bind(this)}\n                                    >\n                                      {\n                                        isDeposit ? (\n                                          <Flex\n                                            width={1}\n                                            alignItems={'stretch'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <BuyModal\n                                              {...this.props}\n                                              showInline={true}\n                                              availableMethods={[]}\n                                              buyToken={this.state.selectedToken}\n                                            />\n                                          </Flex>\n                                          // `You don't have any ${this.state.selectedToken} in your wallet.`\n                                        ) : isWithdraw && (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                name={'MoneyOff'}\n                                                color={'cellText'}\n                                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You don't have any {this.state.selectedToken} to withdraw.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </SendTxWithBalance>\n                                  ) : isExit && (\n                                    <Box\n                                      width={1}\n                                    >\n                                      {\n                                        !this.state.dataLoaded ? (\n                                          <Flex\n                                            mt={4}\n                                            flexDirection={'column'}\n                                          >\n                                            <FlexLoader\n                                              flexProps={{\n                                                flexDirection:'row'\n                                              }}\n                                              loaderProps={{\n                                                size:'30px'\n                                              }}\n                                              textProps={{\n                                                ml:2\n                                              }}\n                                              text={'Loading transactions...'}\n                                            />\n                                          </Flex>\n                                        ) : this.state.txsToExit.length ? (\n                                          <Box\n                                            width={1}\n                                          >\n                                            <Text mb={1}>\n                                              Select Transaction:\n                                            </Text>\n                                            <GenericSelector\n                                              {...this.props}\n                                              isSearchable={false}\n                                              name={'transactions'}\n                                              options={this.state.txsToExit}\n                                              onChange={this.selectTransaction.bind(this)}\n                                              defaultValue={this.state.defaultTransaction}\n                                            />\n                                            {\n                                              this.state.selectedTransaction && (\n                                                <ExecuteTransaction\n                                                  action={'Exit'}\n                                                  Component={RoundButton}\n                                                  parentProps={{\n                                                    mt:3,\n                                                    alignItems:'center',\n                                                    justifyContent:'center'\n                                                  }}\n                                                  componentProps={{\n                                                    buttonProps:{\n                                                      value:'Exit',\n                                                      width:[1,1/3],\n                                                      size:'medium',\n                                                      mainColor:'redeem'\n                                                    },\n                                                    value:'Exit Transaction',\n                                                  }}\n                                                  params={[]}\n                                                  methodName={'exit'}\n                                                  sendRawTransaction={true}\n                                                  contractName={'RootChainManager'}\n                                                  callback={this.exitCallback.bind(this)}\n                                                  getTransactionParamsAsync={this.getExitTransactionParams.bind(this)}\n                                                  {...this.props}\n                                                >\n                                                  <Flex\n                                                    flexDirection={'row'}\n                                                    alignItems={'center'}\n                                                    justifyContent={'center'}\n                                                  >\n                                                    <Icon\n                                                      mr={1}\n                                                      name={'Done'}\n                                                      size={'1.4em'}\n                                                      color={this.props.theme.colors.transactions.status.completed}\n                                                    />\n                                                    <Text\n                                                      fontWeight={500}\n                                                      fontSize={'15px'}\n                                                      color={'copyColor'}\n                                                      textAlign={'center'}\n                                                    >\n                                                      Transaction successfully exited!\n                                                    </Text>\n                                                  </Flex>\n                                                </ExecuteTransaction>\n                                              )\n                                            }\n                                          </Box>\n                                        ) : (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3,\n                                              width:1\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                size={'1.8em'}\n                                                name={'Warning'}\n                                                color={'cellText'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You cannot exit any transaction yet.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </Box>\n                                  )\n                                }\n                              </Box>\n                            ) : (\n                              <Flex\n                                mt={3}\n                                mb={3}\n                                width={1}\n                              >\n                                <FlexLoader\n                                  flexProps={{\n                                    flexDirection:'row'\n                                  }}\n                                  loaderProps={{\n                                    size:'30px'\n                                  }}\n                                  textProps={{\n                                    ml:2\n                                  }}\n                                  text={'Loading info...'}\n                                />\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PolygonBridge;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from \"../Staking/Staking\";\nimport DAI from '../abis/tokens/DAI.json';\nimport IDLE from '../contracts/IDLE.json';\nimport Tranches from '../Tranches/Tranches';\nimport USDC from '../abis/tokens/USDC.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from \"../abis/curve/CurvePool.json\";\nimport NexusMutual from \"../NexusMutual/NexusMutual\";\nimport CoverMint from \"../abis/cover/CoverMint.json\";\nimport LockedIDLE from \"../contracts/LockedIDLE.json\";\nimport LpStakingAbi from \"../contracts/LpStaking.json\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TokenWrapper from \"../TokenWrapper/TokenWrapper\";\nimport PriceOracle from \"../contracts/PriceOracle.json\";\nimport FeeTreasury from \"../contracts/FeeTreasury.json\";\nimport IdleTokenV2 from \"../contracts/IdleTokenV2.json\";\nimport StrategyPage from \"../StrategyPage/StrategyPage\";\nimport BuyModal from \"../utilities/components/BuyModal\";\nimport IdleTokenV3 from \"../contracts/IdleTokenV3.json\";\nimport IdleTokenV4 from \"../contracts/IdleTokenV4.json\";\nimport BatchDeposit from \"../BatchDeposit/BatchDeposit\";\nimport ChildERC20 from '../abis/polygon/ChildERC20.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport PolygonBridge from '../PolygonBridge/PolygonBridge';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport ERC20Predicate from '../abis/polygon/ERC20Predicate.json';\nimport EtherPredicate from '../abis/polygon/EtherPredicate.json';\nimport DepositManager from '../abis/polygon/DepositManager.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport RootChainManager from '../abis/polygon/RootChainManager.json';\nimport SushiV2Router02 from \"../abis/sushiswap/SushiV2Router02.json\";\nimport IdleBatchConverter from \"../contracts/IdleBatchConverter.json\";\nimport UniswapV2Router02 from \"../abis/uniswap/UniswapV2Router02.json\";\nimport ChildChainManager from '../abis/polygon/ChildChainManager.json';\nimport IdleDepositForwarder from \"../contracts/IdleDepositForwarder.json\";\nimport ProtocolDataProvider from '../abis/aave/ProtocolDataProvider.json';\nimport SushiLiquidityPool from \"../abis/sushiswap/SushiLiquidityPool.json\";\nimport NexusMutualIncidents from \"../abis/nexus/NexusMutualIncidents.json\";\nimport StakingFeeDistributor from \"../contracts/StakingFeeDistributor.json\";\nimport NexusMutualDistributor from \"../abis/nexus/NexusMutualDistributor.json\";\nimport BalancerExchangeProxy from \"../abis/balancer/BalancerExchangeProxy.json\";\nimport IdleConverterPersonalSignV4 from \"../contracts/IdleConverterPersonalSignV4.json\";\nimport MinimalInitializableProxyFactory from \"../contracts/MinimalInitializableProxyFactory.json\";\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: \"Idle\",\n  version: \"v6.1\",\n  baseToken: \"ETH\",\n  baseURL: \"https://idle.finance\",\n  forumURL: \"https://gov.idle.finance\",\n  telegramURL: \"https://t.me/idlefinance\",\n  discordURL: \"https://discord.gg/mpySAJp\",\n  twitterURL: \"https://twitter.com/idlefinance\",\n  theme: {\n    darkModeEnabled: true\n  },\n  environments:{\n    live:{\n      requiredNetwork:1,\n      url:\"https://idle.finance\"\n    },\n    beta:{\n      requiredNetwork:1,\n      url:\"https://beta.idle.finance\"\n    },\n    polygon:{\n      requiredNetwork:137,\n      url:\"https://polygon.idle.finance\"\n    }\n  },\n  betaURL: \"https://beta.idle.finance\",\n  countries: {\n    USA: \"United States of America\",\n    GBR: \"United Kingdom\",\n    AUS: \"Australia\",\n    BRA: \"Brazil\",\n    CHN: \"China\",\n    CAN: \"Canada\",\n    EUR: \"Europe\",\n    HKG: \"Hong Kong\",\n    IND: \"India\",\n    MEX: \"Mexico\",\n    RUS: \"Russia\",\n    ZAF: \"South Africa\",\n    KOR: \"South Korea\"\n  },\n  logs: {\n    // Enable logs levels\n    errorsEnabled: false,\n    messagesEnabled: false\n  },\n  connectors: {\n    // Connectors props\n    metamask: {\n      enabled: true,\n      subcaption: \"Browser extension\"\n    },\n    opera: {\n      enabled: true,\n      subcaption: \"Opera injected wallet\"\n    },\n    dapper: {\n      enabled: true,\n      icon: \"dapper.png\",\n      subcaption: \"Browser extension\"\n    },\n    coinbase: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      subcaption: \"Connect with Coinbase wallet\"\n    },\n    trustwallet: {\n      enabled: true,\n      subcaption: \"Connect with Trust Wallet\"\n    },\n    walletconnect: {\n      enabled: true,\n      iconModal: \"walletconnect.png\",\n      subcaption: \"Connect with QR code\"\n    },\n    walletlink: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      name: \"Coinbase Wallet\",\n      subcaption: \"Connect with QR code\"\n    },\n    gnosis: {\n      enabled: true,\n      // icon:'coinbase.png',\n      name: \"Gnosis Safe App\",\n      subcaption: \"Connect with Gnosis Safe App\"\n    },\n    fortmatic: {\n      enabled: true,\n      subcaption: \"Login with phone-number\"\n    },\n    portis: {\n      enabled: true,\n      subcaption: \"Login with e-mail\"\n    },\n    authereum: {\n      enabled: true,\n      subcaption: \"Cross-device wallet\"\n    },\n    torus: {\n      enabled: true,\n      icon: \"torus.png\",\n      subcaption: \"One-Click login for Web 3.0\"\n    },\n    trezor: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledger: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledgerlive: {\n      enabled: true,\n      subcaption: \"Ledger Live Browser\"\n    },\n    custom: {\n      enabled: true,\n      subcaption: \"Custom address\"\n    }\n  },\n  newsletterSubscription: {\n    endpoint: \"https://dev.lapisgroup.it/idle/newsletter.php\"\n  },\n  messages: {\n    scoreShort: \"Protocol Risk Score\",\n    apyShort: \"Annual Percentage Yield\",\n    totalProfitPerc: \"Total percentage profit generated on your balance\",\n    tokenPrice: \"The token price is calculated using Uniswap spot prices.\",\n    cheapRedeem: \"Amount of unlent funds available for low gas fees redeem\",\n    curveBonusSlippage: \"Slippage or bonus depending on if the coin is low or high in the Curve Pool\",\n    distributionSpeed: \"The distribution indicates the amount of tokens distributed for the entire pool.\",\n    directMint: \"Pay an additional gas fee to rebalance the pool and help all users gain an additional APR\",\n    performanceFee: \"This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE\",\n    userDistributionSpeed: \"The distribution indicates the amount of tokens distributed for your account based on your current pool share.\",\n    govTokenApr: \"Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.\",\n    govTokenRedeemableBalance: \"The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.\",\n    riskScoreShort: \"It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.\",\n    redeemSkipGov: \"This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool\",\n    batchDepositExecutionSchedule: \"Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.\",\n    riskAdjustedDisabledMessageDeposit: `The Risk Adjusted strategy is no longer available.<br />Please consider to deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to have a similar risk profile.`,\n    apyLong: \"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.\",\n    riskScore: `It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions: `<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`,\n    yieldFarming: 'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\" class=\"link\">Read more here</a>.',\n    riskAdjustedDisabledMessageRedeem: `The Risk Adjusted strategy is no longer available, please redeem your funds from this strategy. You can deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to maintain a similar risk profile and receive an incentive. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://gov.idle.finance/t/risk-adjusted-removal-for-tranches-migration/673\" class=\"link\">Read more here</a>.`,\n  },\n  analytics: {\n    google: {\n      events: {\n        enabled: true, // Enable Google Analytics events\n        debugEnabled: false, // Enable sending for test environments\n        addPostfixForTestnet: true // Append testnet to eventCategory\n      },\n      pageView: {\n        enabled: true\n      }\n    }\n  },\n  modals: {\n    // Enable modals\n    first_deposit_referral: false, // Referral share modal\n    first_deposit_share: true, // First deposit share modal\n    migrate: {\n      enabled: true,\n      availableNetworks: [1]\n    },\n    welcome: {\n      // Welcome modal\n      enabled: true,\n      frequency: 604800 // One week\n    }\n  },\n  dashboard: {\n    baseRoute: \"/dashboard\",\n    theme: {\n      mode: \"light\",\n      darkModeEnabled: true\n    }\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    availableNetworks:[1],\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals: {\n      12: {\n        description: 'Details in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>'\n      },\n      7: {\n        description: `Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>`\n      }\n    },\n    contracts: {\n      delegates: \"IDLE\",\n      governance: \"GovernorAlpha\"\n    }\n  },\n  curve: {\n    enabled: false,\n    params: {\n      n_coins: 3,\n      label: \"Curve\",\n      route: \"/dashboard/curve\",\n      image: \"images/protocols/curve.svg\",\n      imageInactive: \"images/protocols/curve-off.svg\"\n    },\n    rates: {\n      path: [\"apy\", \"day\", \"idle\"],\n      endpoint: \"https://www.curve.fi/raw-stats/apys.json\"\n    },\n\n    poolContract: {\n      decimals: 18,\n      abi: CurvePool,\n      name: \"idleDAI+idleUSDC+idleUSDT\",\n      token: \"idleDAI+idleUSDC+idleUSDT\",\n      address: \"0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05\"\n    },\n    depositContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\"\n    },\n    gaugeContract: {\n      abi: LiquidityGaugeV2,\n      name: \"LiquidityGaugeV2\",\n      address: \"0xd69ac8d9D25e99446171B5D0B3E4234dAd294890\"\n    },\n    zapContract: {\n      abi: CurveZap,\n      name: \"idleCurveZap\",\n      address: \"0x456974df1042ba7a46fd49512a8778ac3b840a21\"\n    },\n    migrationContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\",\n      functions: [\n        {\n          label: \"Deposit\",\n          name: \"add_liquidity\"\n        }\n      ]\n    },\n    availableTokens: {\n      idleDAIYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"DAI\",\n        token: \"idleDAIYield\",\n        address: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 0\n        }\n      },\n      idleUSDCYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDC\",\n        token: \"idleUSDCYield\",\n        address: \"0x5274891bEC421B39D23760c04A6755eCB444797C\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 1\n        }\n      },\n      idleUSDTYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDT\",\n        token: \"idleUSDTYield\",\n        address: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 2\n        }\n      }\n    }\n  },\n  permit: {\n    DAI: {\n      version: 1,\n      EIPVersion: null,\n      nonceMethod: \"nonces\",\n      name: \"Dai Stablecoin\",\n      type: [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" }\n      ]\n    },\n    USDC: {\n      version: 2,\n      name: \"USD Coin\",\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    },\n    SLP: {\n      version: 1,\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      name: \"SushiSwap LP Token\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    }\n  },\n  govTokens:{\n    IDLE: {\n      abi: IDLE,\n      decimals: 18,\n      token: \"IDLE\",\n      enabled: true,\n      showAUM: false, // Include IDLE balance in AUM\n      showAPR: false, // Include IDLE Apr\n      protocol: \"idle\",\n      showPrice: false, // Show price in Yield Farming section\n      showBalance: false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode: false,\n      availableNetworks:[1,137],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\", // Multiply distribution per block\n      color: \"hsl(162, 100%, 41%)\",\n      icon: \"images/tokens/IDLE.svg\",\n      addresses:{\n        1:\"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\",\n        137:\"0xc25351811983818c9fe6d8c580531819c8ade90f\"\n      },\n      address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // MAIN\n      disabledTokens:{\n        1:[\"idleDAISafe\",\"idleUSDCSafe\",\"idleUSDTSafe\"],\n        137:[\"idleDAIYield\",\"idleUSDCYield\",\"idleWETHYield\"],\n      }\n    },\n    COMP: {\n      abi: COMP,\n      decimals: 18,\n      token: \"COMP\",\n      enabled: true,\n      showAUM: true, // Include IDLE balance in AUM\n      showAPR: true, // Include COMP Apr\n      showPrice: true,\n      showBalance: true, // Include COMP balance in Portfolio Donut\n      disabledTokens: [],\n      protocol: \"compound\",\n      aprTooltipMode: false,\n      availableNetworks:[1],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      color: \"hsl(162, 100%, 41%)\",\n      address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE:{\n      abi:aToken,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      showPrice:true,\n      token:'stkAAVE',\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      aprTooltipMode:false,\n      availableNetworks:[1],\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice:'0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens:{\n        1:[\"idleTUSDYield\", \"idleSUSDYield\", \"idleFEIYield\"]\n      }\n    },\n    WMATIC:{\n      abi:ERC20,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      token:'WMATIC',\n      showPrice:true,\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      disabledTokens:[],\n      aprTooltipMode:false,\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      availableNetworks:[137,80001],\n      // address:'0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', // Mumbai\n      address:'0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', // Polygon\n      addressForPrice:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0' // Mainnet\n    }\n  },\n  contracts:{\n    137:{\n      ProtocolDataProvider:{\n        abi:ProtocolDataProvider,\n        address:'0x7551b5D2763519d4e37e8B81929D336De671d46d'\n      },\n      ChildChainManager:{\n        abi:ChildChainManager,\n        // address:'0x2e5e27d50EFa501D90Ad3638ff8441a0C0C0d75e' // Mumbai\n        address:'0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa' // Matic\n      },\n      UniswapRouter:{\n        networkId:1,\n        abi:UniswapV2Router02,\n        address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      SushiswapRouter:{\n        abi:SushiV2Router02,\n        address:'0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506'\n      },\n    },\n    1:{\n      DepositManager:{\n        abi:DepositManager,\n        address:'0x401f6c983ea34274ec46f84d70b31c151321188b'\n      },\n      RootChainManager:{\n        abi:RootChainManager,\n        // address:'0xBbD7cBFA79faee899Eaf900F13C9065bF03B1A74' // Goerli\n        address:'0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n      },\n      ProxyFactory: {\n        abi: MinimalInitializableProxyFactory,\n        address: \"0x91baced76e3e327ba7850ef82a7a8251f6e43fb8\"\n      },\n      LockedIDLE:{\n        abi:LockedIDLE,\n        address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n      },\n      FeeTreasury:{\n        abi:FeeTreasury,\n        address:'0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n      },\n      PriceOracle:{\n        abi:PriceOracle,\n        address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n        // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n      },\n      Timelock:{\n        abi:Timelock,\n        address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n        // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n      },\n      EcosystemFund:{\n        abi:EcosystemFund,\n        address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n        // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n      },\n      VesterFactory:{\n        abi:VesterFactory,\n        address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n        // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n      },\n      IdleController:{\n        abi:IdleController,\n        address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n        // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n      },\n      EarlyRewards:{\n          abi:EarlyRewards,\n          address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n          // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n      },\n      GovernorAlpha:{\n        abi:GovernorAlpha,\n        address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n        // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n      },\n      Comptroller:{\n        abi:Comptroller,\n        address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n        // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n      },\n      SushiswapRouter:{\n        abi:SushiV2Router02,\n        address:'0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n      },\n      UniswapRouter:{\n        abi:UniswapV2Router02,\n        address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      BalancerExchangeProxy:{\n        abi:BalancerExchangeProxy,\n        address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n      }\n    }\n  },\n  tokens: {\n    DAI: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    },\n    USDC: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    }\n  },\n  tranchflash: {\n    name: \"perpetual yield tranches\",\n    subtitle: \"Make yield your own.\",\n    desc:\"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\",\n    arrows: \"images/idlearrows.svg\",\n    juniorinfo:\n      \"<b>Junior Tranches</b><br>Higher risk, leveraged for variable rate rewards\",\n    seniorinfo:\n      \"<b>Senior Tranches</b><br>Lower risk, built-in coverage for variable rate rewards\",\n    helpcircle: \"images/help-circle.svg\",\n    questions: [\n      {\n        desc: \"How it Works?\",\n        msg:\"This product aggregates user deposits into underlying markets and allocates the accrued yield on the sum between two different risk profile subsets. You get to choose the strategy according to your risk tolerance. Users are able to deposit funds into either the Junior or Senior Tranches in exchange for a token indicating their claim on their principal and whatever yield is allocated for them. These aggregated holdings are then deposited into the specified originating lending market, in this current version Idle Best-Yield strategy.\"\n      },\n      {\n        desc: \"What happens in a case of a default?\",\n        msg:\"In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).\"\n      }\n    ]\n  },\n  tranches: {\n    AA: {\n      color: {\n        hex: \"#337de5\",\n        rgb: [51, 125, 229],\n        hsl: [\"215\", \"77%\", \"55%\"]\n      },\n      type: \"AA\",\n      route: \"senior\",\n      icon: \"Security\",\n      image: \"images/SeniorTranche.svg\",\n      bubble: \"images/SeniorBubble.svg\",\n      baseName: \"senior\",\n      name: \"Senior Tranche\",\n      features: [\n        \"Covered by Junior tranches funds\",\n        \"Minimized risk exposure\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake:\"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake:\"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake:\"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw:\"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long:\"Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds' coverage given by Junior Tranches\",\n        deposit:\"By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.\",\n      }\n    },\n    BB: {\n      color: {\n        hex: \"#FAB325\",\n        rgb: [250, 179, 37],\n        hsl: [\"40\", \"95%\", \"56%\"]\n      },\n      type: \"BB\",\n      route: \"junior\",\n      icon: \"TrendingUp\",\n      image: \"images/JuniorTranche.svg\",\n      bubble: \"images/JuniorBubble.svg\",\n      baseName: \"junior\",\n      name: \"Junior Tranche\",\n      features: [\n        \"Leverage yield using Senior tranches funds\",\n        \"Higher risk exposure by protecting senior tranches\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake:\"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake:\"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake:\"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw:\"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long:\"The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches\",\n        deposit:\"By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.\",\n      }\n    }\n  },\n  extraicons: {\n    best: {\n      icon: \"images/sidebar/best-on.svg\",\n      iconDark: \"images/sidebar/best-on-dark.svg\",\n      iconInactive: \"images/sidebar/best-off.svg\",\n      iconInactiveDark: \"images/sidebar/best-off-dark.svg\",\n    },\n    tranches: {\n      icon: \"images/sidebar/tranches-on.svg\",\n      iconDark: \"images/sidebar/tranches-on-dark.svg\",\n      iconInactive: \"images/strategies/tranches-off.svg\",\n      iconInactiveDark: \"images/strategies/tranches-off-dark.svg\"\n    },\n    risk: {\n      icon: \"images/sidebar/risk-on.svg\",\n      iconDark: \"images/sidebar/risk-on-dark.svg\",\n      iconInactive: \"images/sidebar/risk-off.svg\",\n      iconInactiveDark: \"images/sidebar/risk-off-dark.svg\"\n    },\n    stats: {\n      icon: \"images/sidebar/stats-on.svg\",\n      iconDark: \"images/sidebar/stats-on-dark.svg\",\n      iconInactive: \"images/sidebar/stats-off.svg\",\n      iconInactiveDark: \"images/sidebar/stats-off-dark.svg\"\n    },\n    tools: {\n      icon: \"images/sidebar/tools-on.svg\",\n      iconDark: \"images/sidebar/tools-on-dark.svg\",\n      iconInactive: \"images/sidebar/tools-off.svg\",\n      iconInactiveDark: \"images/sidebar/tools-off-dark.svg\"\n    },\n    forum: {\n      icon: \"images/sidebar/forum-on.svg\",\n      iconDark: \"images/sidebar/forum-on-dark.svg\",\n      iconInactive: \"images/sidebar/forum-off.svg\",\n      iconInactiveDark: \"images/sidebar/forum-off-dark.svg\"\n    },\n    stake: {\n      icon: \"images/sidebar/stake-on.svg\",\n      iconDark: \"images/sidebar/stake-on-dark.svg\",\n      iconInactive: \"images/sidebar/stake-off.svg\",\n      iconInactiveDark: \"images/sidebar/stake-off-dark.svg\"\n    },\n    leaderboard: {\n      icon: \"images/sidebar/leaderboard-on.svg\",\n      iconDark: \"images/sidebar/leaderboard-on-dark.svg\",\n      iconInactive: \"images/sidebar/leaderboard-off.svg\",\n      iconInactiveDark: \"images/sidebar/leaderboard-off-dark.svg\"\n    }, overview: {\n      icon: \"images/sidebar/overview-on.svg\",\n      iconDark: \"images/sidebar/overview-on-dark.svg\",\n      iconInactive: \"images/sidebar/overview-off.svg\",\n      iconInactiveDark: \"images/sidebar/overview-off-dark.svg\"\n    }, proposals: {\n      icon: \"images/sidebar/proposals-on.svg\",\n      iconDark: \"images/sidebar/proposals-on-dark.svg\",\n      iconInactive: \"images/sidebar/proposals-off.svg\",\n      iconInactiveDark: \"images/sidebar/proposals-off-dark.svg\"\n    }, delegate: {\n      icon: \"images/sidebar/delegate-on.svg\",\n      iconDark: \"images/sidebar/delegate-on-dark.svg\",\n      iconInactive: \"images/sidebar/delegate-off.svg\",\n      iconInactiveDark: \"images/sidebar/delegate-off-dark.svg\"\n    },\n  },\n  landingStrategies:{\n    best: {\n      networkId:1,\n      token: \"DAI\",\n      visible: true,\n      strategy:'best',\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks:[],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong:\"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort:\"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    polygon: {\n      token: \"DAI\",\n      visible: true,\n      networkId:137,\n      enabledEnvs: [],\n      strategy:'best',\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks:[],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-on.svg\",\n      iconInactiveDark: \"images/strategies/best-on.svg\",\n      desc: \"Maximize your returns on Polygon across DeFi protocols\",\n      descLong:\"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort:\"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    tranches: {\n      networkId:1,\n      token: \"DAI\",\n      visible: true,\n      type: \"tranche\",\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      strategy:'tranches',\n      component: Tranches,\n      iconName: \"Whatshot\",\n      enabledEnvs: ['beta'],\n      availableNetworks:[1],\n      govTokensEnabled: true,\n      title: \"Perpetual Tranches\",\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc:\"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort:\"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong:\"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n  },\n  strategies: {\n    tranches: {\n      token: \"DAI\",\n      visible: true,\n      type: \"tranche\",\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      component: Tranches,\n      iconName: \"Whatshot\",\n      enabledEnvs: ['beta'],\n      availableNetworks:[1],\n      govTokensEnabled: true,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc:\"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort:\"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong:\"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      availableNetworks:[1,137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong:\"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort:\"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    risk: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#2196F3\",\n      type: \"strategy\",\n      comingSoon: false,\n      titlePostfix: null,\n      addGovTokens: true,\n      iconName: \"Security\",\n      availableNetworks:[1],\n      title: \"Risk-Adjusted\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(211,67%,47%)\",\n      icon: \"images/strategies/risk-on.svg\",\n      iconInactive: \"images/strategies/risk-off.svg\",\n      iconInactiveDark: \"images/strategies/risk-white.svg\",\n      desc: \"Optimize your risk exposure across DeFi protocols\",\n      descLong:\"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.\",\n      descShort:\"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.\"\n    }\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats: {\n    enabled: true, // Enable endpoint\n    availableNetworks:[1,137],\n    rates: {\n      TTL: 300, // 5 minutes\n      endpoint:{\n        1:\"https://api.idle.finance/rates/\",\n        137:\"https://api-polygon.idle.finance/rates/\"\n      }\n    },\n    tvls: {\n      TTL: 120,\n      endpoint:{\n        1:\"https://api.idle.finance/tvls/\",\n        137:\"https://api-polygon.idle.finance/tvls/\"\n      }\n    },\n    aprs: {\n      TTL: 120,\n      endpoint:{\n        1:\"https://api.idle.finance/aprs/\",\n        137:\"https://api-polygon.idle.finance/aprs/\"\n      }\n    },\n    substack: {\n      TTL: 1800,\n      endpoint:{\n        1:\"https://api.idle.finance/substack/\",\n        137:\"https://api-polygon.idle.finance/substack/\"\n      }\n    },\n    scores: {\n      TTL: 300, // 5 minutes\n      endpoint:{\n        1:\"https://api.idle.finance/scores/\"\n      }\n    },\n    config: {\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions: {\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3: {\n        label: \"Idle V3\",\n        additionalProtocols: [],\n        endTimestamp: 1597237542,\n        startTimestamp: 1589801874,\n        showPerformanceTooltip: false,\n        strategiesParams: {\n          risk: {\n            endTimestamp: 1597233922\n          }\n        },\n        enabledStrategies: [\"best\", \"risk\"],\n        enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"]\n      },\n      v4: {\n        label: \"Idle V4\",\n        endTimestamp: null,\n        startTimestamp: 1597442400, // 1598220000\n        enabledStrategies: [\"best\", \"risk\"],\n        showPerformanceTooltip: true,\n        strategiesParams: {\n          risk: {\n            startTimestamp: 1599183170\n          }\n        },\n        enabledTokens: ['DAI', 'USDC', 'USDT', 'TUSD', 'SUSD', 'WBTC', 'WETH', 'RAI', 'FEI'],\n        additionalProtocols: [\n          {\n            decimals: 16,\n            protocol: \"compound\",\n            name: \"compoundWithCOMP\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\"]\n          },\n          {\n            decimals: 18,\n            protocol: \"aavev2\",\n            name: \"aavev2WithStkAAVE\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\", \"RAI\"]\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      ETH:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#333',\n          rgb:[51, 51, 51],\n          hsl:['0, 0%, 20%']\n        },\n        address:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      MATIC:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#8247E5',\n          rgb:[130, 71, 229],\n          hsl:['262, 75%, 59%']\n        },\n        address:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      USD: {\n        enabled: true,\n        color: {\n          hex: \"#85bb65\",\n          rgb: [133, 187, 101],\n          hsl: [\"98\", \"39%\", \"56%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        address: null,\n        startTimestamp: \"2020-02-04\"\n      },\n      USDC: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USDT: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#22a079\",\n          rgb: [34, 160, 121],\n          hsl: [\"161\", \"65%\", \"38%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      TUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"0340a1\",\n          rgb: [3, 64, 161],\n          hsl: [\"217\", \"96%\", \"32%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\"\n      },\n      SUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#1e1a31\",\n          rgb: [30, 26, 49],\n          hsl: [\"250\", \"31%\", \"15%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x57ab1ec28d129707052df4df418d58a2d46d5f51\"\n      },\n      WBTC: {\n        decimals: 8,\n        enabled: true,\n        color: {\n          hex: \"#eb9444\",\n          rgb: [235, 148, 68],\n          hsl: [\"29\", \"81%\", \"59%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"wbtcDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      WETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#ee1f79\",\n          rgb: [238, 31, 121],\n          hsl: [\"334\", \"86%\", \"53%\"]\n        },\n        startTimestamp: \"2021-02-16\",\n        conversionRateField: \"wethDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      COMP: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#00d395\",\n          rgb: [0, 211, 149],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\"\n      },\n      stkAAVE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        startTimestamp: \"2021-04-30\",\n        conversionRateField: \"aaveDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\"\n      },\n      IDLE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#0d55bb\",\n          rgb: [13, 85, 187],\n          hsl: [\"215\", \"87%\", \"39%\"]\n        },\n        startTimestamp: \"2020-11-10\",\n        conversionRateField: \"idleDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n      },\n      RAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#378879\",\n          rgb: [55, 136, 121],\n          hsl: [\"169\", \"42%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-11-16\",\n        icon: \"images/tokens/RAI.png\",\n        conversionRateField: \"raiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x03ab458634910aad20ef5f1c8ee96f1d6ac54919\"\n      },\n      FEI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#229b6e',\n          rgb: [34, 155, 110],\n          hsl: ['158', '64%', '37%']\n        },\n        disabledCharts: ['score'],\n        startTimestamp: '2021-09-24',\n        conversionRateField: 'feiDAIPrice',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      WMATIC:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#2891f8',\n          rgb:[40, 145, 248],\n          hsl:['210', '94%', '56%']\n        },\n        startTimestamp:'2021-05-25',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp: \"2020-06-15\"\n      }\n    },\n    protocols: {\n      compound: {\n        legend: true,\n        enabled: true,\n        label: \"Compound\",\n        color: {\n          rgb: [0, 209, 146],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        }\n      },\n      aavev2WithStkAAVE: {\n        enabled: true,\n        label: \"Aave V2 + stkAAVE\",\n        startTimestamp: \"2021-05-08 14:30:00\",\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        rateField: [\"rate\", \"aaveAdditionalAPR\"]\n      },\n      compoundWithCOMP: {\n        enabled: true,\n        label: \"Compound + COMP\",\n        color: {\n          rgb: [0, 153, 107],\n          hsl: [\"162\", \"100%\", \"30%\"]\n        },\n        rateField: [\"rate\", \"compoundAdditionalAPR\"]\n      },\n      fulcrum: {\n        legend: false,\n        enabled: false,\n        label: \"Fulcrum\",\n        color: {\n          rgb: [2, 138, 192],\n          hsl: [\"197\", \"98%\", \"38%\"]\n        }\n      },\n      dsr: {\n        label: \"DSR\",\n        enabled: false,\n        icon: \"CHAI.png\",\n        color: {\n          rgb: [222, 52, 67],\n          hsl: [\"355\", \"72%\", \"54%\"]\n        }\n      },\n      dydx: {\n        legend: true,\n        label: \"DyDx\",\n        enabled: true,\n        color: {\n          rgb: [87, 87, 90],\n          hsl: [\"240\", \"2%\", \"35%\"]\n        }\n      },\n      iearn: {\n        label: \"Yearn\",\n        enabled: true\n      },\n      aave: {\n        label: \"Aave V1\",\n        legend: false,\n        enabled: false,\n        color: {\n          rgb: [230, 131, 206],\n          hsl: [\"315\", \"66%\", \"71%\"]\n        }\n      },\n      aavev2: {\n        legend: true,\n        enabled: true,\n        icon: \"aave.svg\",\n        label: \"Aave V2\",\n        color: {\n          rgb: [151, 79, 141],\n          hsl: [\"308\", \"31%\", \"45%\"]\n        }\n      },\n      cream: {\n        legend: true,\n        enabled: true,\n        label: \"Cream\",\n        icon: \"cream.svg\",\n        color: {\n          rgb: [105, 226, 220],\n          hsl: [\"177\", \"68%\", \"65%\"]\n        }\n      },\n      fuse: {\n        legend: true,\n        enabled: true,\n        label: \"Fuse\",\n        icon: \"fuse.png\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: [\"0\", \"0%\", \"0%\"]\n        }\n      },\n      curve: {\n        label: \"\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      },\n      idle: {\n        label: \"Idle\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      }\n    }\n  },\n  contract: {\n    methods: {\n      refreshIdleSpeed:{\n        enabled:true,\n        availableNetworks:[1]\n      },\n      redeem: {\n        skipRebalance: true,\n        metaTransactionsEnabled: false\n      },\n      deposit: {\n        skipMint: true,\n        minAmountForMint: 100000,\n        erc20ForwarderEnabled: true,\n        skipMintCheckboxEnabled: true,\n        metaTransactionsEnabled: false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract: {\n          forwarder: {\n            enabled: true,\n            abi: erc20Forwarder,\n            name: \"erc20Forwarder\",\n            function: \"emitMessage\",\n            address: \"0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda\" // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens: {\n            DAI: {\n              enabled: true,\n              permitType: \"DAI_Permit\",\n              abi: IdleDepositForwarder,\n              function: \"permitAndDeposit\", // foo\n              name: \"IdleDepositForwarderDAI\",\n              address: \"0xDe3c769cCD1878372864375e9f89956806B86daA\" // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC: {\n              enabled: true,\n              abi: IdleDepositForwarder,\n              permitType: \"EIP2612_Permit\",\n              name: \"IdleDepositForwarderUSDC\",\n              function: \"permitEIP2612AndDeposit\", // 'foo'\n              address: \"0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761\" // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            }\n          }\n        },\n        proxyContract: {\n          enabled: false,\n          abi: IdleProxyMinter,\n          name: \"IdleProxyMinter\",\n          function: \"mintIdleTokensProxy\",\n          address: \"0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a\"\n        }\n      },\n      migrate: {\n        skipRebalance: true,\n        minAmountForRebalance: 10000,\n        minAmountForRebalanceMetaTx: 10000\n      },\n      redeemGovTokens: {\n        enabled: true\n      },\n      redeemSkipGov: {\n        enabled: true,\n        disabledTokens: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"]\n      },\n      rebalance: {\n        enabled: true,\n        abi: IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:{\n        version:'v1',\n        name:'Ethereum',\n        baseToken:'ETH',\n        color:'#4474f1',\n        provider:'infura',\n        network:'mainnet',\n        explorer:'etherscan',\n        chainName:'Ethereum Mainnet',\n      },\n      42:{\n        name:'Kovan',\n        color:'#9064ff',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Testnet Kovan',\n      },\n      3:{\n        name:'Ropsten',\n        color:'#ff4a8d',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Testnet Ropsten',\n      },\n      4:{\n        name:'Rinkeby',\n        color:'#f6c343',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Testnet Rinkeby',\n      },\n      137:{\n        version:'v1',\n        name:'Polygon',\n        color:'#8247E5',\n        network:'mainnet',\n        baseToken:'MATIC',\n        explorer:'polygon',\n        provider:'polygon',\n        chainName:'Matic(Polygon) Mainnet',\n      },\n      5:{\n        name:'Görli',\n        color:'#3099f2',\n        baseToken:'ETH',\n        version:'mumbai',\n        network:'testnet',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Testnet Görli',\n      },\n      1337:{\n        name:'Hardhat',\n        baseToken:'ETH',\n        color:'#4474f1',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Mainnet',\n      },\n      80001:{\n        name:'Mumbai',\n        color:'#4474f1',\n        version:'mumbai',\n        network:'testnet',\n        baseToken:'MATIC',\n        explorer:'polygon',\n        provider:'polygon',\n        chainName:'Matic Testnet Mumbai',\n      }\n    },\n    isForked: false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork: 1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear: 2371428,\n    secondsPerYear: 31536000,\n    requiredConfirmations: 1,\n    enabledNetworks: [1, 137],\n    firstBlockNumber: 8119247,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        key:env.REACT_APP_INFURA_KEY,\n        rpc:{\n          5: 'https://goerli.infura.io/v3/',\n          42: 'https://kovan.infura.io/v3/',\n          1: 'https://mainnet.infura.io/v3/',\n          1337: 'https://mainnet.infura.io/v3/',\n          137: 'https://mainnet.infura.io/v3/',\n          80001: 'https://goerli.infura.io/v3/'\n        }\n      },\n      polygon:{\n        enabled:true,\n        // key:env.REACT_APP_POLYGON_KEY,\n        key:env.REACT_APP_INFURA_KEY,\n        baseUrl:{\n          137:'https://polygonscan.com',\n          80001:'https://explorer-mumbai.maticvigil.com'\n        },\n        networkPairs:{\n          1:137,\n          137:1,\n          5:80001,\n          80001:5\n        },\n        publicRpc:{\n          137:'https://polygon-rpc.com'\n        },\n        rpc:{\n          // 1:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 5:'https://rpc-mumbai.maticvigil.com/v1/',\n          // 137:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 80001:'https://rpc-mumbai.maticvigil.com/v1/'\n\n          1:'https://polygon-mainnet.infura.io/v3/',\n          5:'https://polygon-mainnet.infura.io/v3/',\n          137:'https://polygon-mainnet.infura.io/v3/',\n          80001:'https://polygon-mainnet.infura.io/v3/'\n\n          // 1:'https://matic-mainnet.chainstacklabs.com/',\n          // 137:'https://matic-mainnet.chainstacklabs.com/',\n          // 5:'https://matic-mumbai.chainstacklabs.com/',\n          // 80001:'https://matic-mumbai.chainstacklabs.com/' \n        }\n      },\n      nexus: {\n        endpoints: {\n          1: \"https://api.nexusmutual.io/v1/\",\n          42: \"https://api.staging.nexusmutual.io/v1/\"\n        }\n      },\n      ens:{\n        enabled:true,\n        supportedNetworks:[1]\n      },\n      covalent:{\n        enabled:true,\n        key:env.REACT_APP_COVALENT_KEY,\n        endpoints:{\n          137:'https://api.covalenthq.com/v1/137/',\n          80001:'https://api.covalenthq.com/v1/80001/'\n        }\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          5: 'https://api-goerli.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl:{\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          5: 'https://goerli.etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      snapshot: {\n        whitelist: [\n          \"0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa\",\n          \"0xf12ce5807e3d3128B876aa1Cec0632D63547E22E\"\n        ],\n        endpoints: {\n          proposals: \"https://hub.snapshot.page/api/idlefinance.eth/proposals\"\n        },\n        urls: {\n          proposals: \"https://signal.idle.finance/#/idlefinance.eth/proposal/\"\n        }\n      },\n      biconomy: {\n        enabled: true,\n        enableLogin: false,\n        supportedNetworks: [1, 42],\n        disabledWallets: [\"authereum\"],\n        endpoints: {\n          limits: \"https://api.biconomy.io/api/v1/dapp/checkLimits\"\n        },\n        params: {\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: \"36572ec9-ae5c-4c4a-9530-f3ae7c7ac829\"\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID: {\n        enabled: false,\n        supportedNetworks: [1],\n        getNetwork: (networkId, availableNetworks) => {\n          let networkName = null;\n          switch (networkId) {\n            case 1:\n              networkName = \"mainnet\";\n              break;\n            default:\n              networkName = availableNetworks[networkId]\n                ? availableNetworks[networkId].toLowerCase()\n                : \"mainnet\";\n              break;\n          }\n          return networkName;\n        },\n        params: {\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: \"mainnet\"\n        }\n      }\n    }\n  },\n  events: {\n    DAI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    },\n    FEI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    }\n  },\n  notifications: [\n    {\n      enabled: false,\n      end: 1612282726374,\n      start: 1611677841027,\n      date: \"Jan 26, 2021 16:18 UTC\",\n      title: \"Cover Protocol Available\",\n      hash: \"/dashboard/tools/cover-protocol\",\n      image: \"/images/protocols/cover-logo.svg\",\n      text: \"Protect your portfolio with Cover Protocol\"\n    }\n  ],\n  tools: {\n    stake: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      route: \"staking\",\n      subComponent: Staking,\n      availableNetworks:[1],\n      desc: \"Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          IDLE: {\n            component: IdleStaking,\n            contract: {\n              abi: stkIDLE,\n              decimals: 18,\n              name: \"stkIDLE\",\n              fromBlock: 12561464,\n              rewardToken: \"IDLE\",\n              address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n            },\n            feeDistributor: {\n              fromBlock: 12649361,\n              abi: StakingFeeDistributor,\n              name: \"StakingFeeDistributor\",\n              address: \"0xbabb82456c013fd7e3f25857e0729de8207f80e2\" // Mainnet\n            },\n            abi: IDLE,\n            name: \"IDLE\",\n            token: \"IDLE\",\n            decimals: 18,\n            enabled: true,\n            label: \"IDLE Token\",\n            icon: \"images/tokens/IDLE.svg\",\n            address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // Mainnet\n            poolLink:\n              \"https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n          },\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 120,\n              rewardToken: \"IDLE\",\n              address: \"0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d\" // Mainnet\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/ETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0xa7f11e026a0af768d285360a855f2bded3047530\", // Mainnet\n            poolLink:\n              \"https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530\"\n          }\n        }\n      }\n    },\n    stakePolygon: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      subComponent: Staking,\n      availableNetworks:[137],\n      route: \"staking-polygon\",\n      desc: \"Stake your Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 60,\n              rewardToken: \"IDLE\",\n              address: \"0x59CDF902b6A964CD5dB04d28f12b774bFB876Be9\" // Polygon\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/WETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\", // Polygon\n            poolLink: \"https://analytics-polygon.sushi.com/pairs/0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\"\n          }\n        }\n      }\n    },\n    nexusMutual: {\n      enabled: true,\n      icon: \"Security\",\n      route: \"coverage\",\n      label: \"Coverage\",\n      availableNetworks:[1],\n      desc: \"Buy Nexus Mutual coverage without KYC for your deposits\",\n      subComponent: NexusMutual,\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleDAIYield\",\n            token: \"idleDAIYield\", // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000011\",\n            realAddress: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\", // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleUSDTYield\",\n            token: \"idleUSDTYield\", // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000012\",\n            realAddress: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          }\n        }\n      },\n      directProps: {\n        // startBlock:25858186, // Kovan\n        startBlock: 12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo: {\n          abi: NexusMutualDistributor,\n          name: \"NexusMutualDistributor\",\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address: \"0xf2b36f823eae36e53a5408d8bd452748b24fbf76\" // Mainnet\n        },\n        incidentsInfo: {\n          abi: NexusMutualIncidents,\n          name: \"NexusMutualIncidents\",\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address: \"0x8ceba69a8e96a4ce71aa65859dbdb180b489a719\" // Mainnet\n        }\n      }\n    },\n    b2bVesting: {\n      enabled: true,\n      visible: true,\n      icon: \"CloudUpload\",\n      label: \"B2B Vesting\",\n      availableNetworks:[1],\n      route: \"b2b-vesting-contract\",\n      subComponent: DeployB2BVesting,\n      desc:'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props: {\n        contracts: {\n          vesterImplementation: {\n            abi: B2BVester,\n            address: \"0x3024656ae91d7bf724f613c314bc56030ba2344c\"\n          }\n        }\n      }\n    },\n    polygonBridge:{\n      enabled:true,\n      route:'polygon-bridge',\n      availableNetworks:[1,137],\n      subComponent:PolygonBridge,\n      image:'images/protocols/polygon.svg',\n      label:'Ethereum ⇔ Polygon Bridge',\n      desc:'Transfer your tokens from Ethereum to Polygon and vice versa with Plasma and PoS Bridge.',\n      props:{\n        contracts:{\n          ERC20Predicate:{\n            abi:ERC20Predicate,\n            name:'ERC20Predicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address:'0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf' // Mainnet\n          },\n          EtherPredicate:{\n            abi:EtherPredicate,\n            name:'EtherPredicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address:'0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30' // Mainnet\n          },\n          DepositManager:{\n            abi:DepositManager,\n            name:'DepositManager',\n            address:'0x401f6c983ea34274ec46f84d70b31c151321188b'\n          },\n          RootChainManager:{\n            name:'RootChainManager',\n            address:'0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n          },\n          StateSender:{\n            name:'StateSender',\n            address:'0x28e4F3a7f651294B9564800b2D01f35189A5bFbE'\n          }\n        },\n        availableTokens:{\n          /*\n          DERC20:{\n            decimals:18,\n            enabled:true,\n            name:'DERC20',\n            token:'DERC20',\n            rootToken:{\n              name:'DERC20',\n              abi:DummyERC20,\n              address:'0x655F2166b0709cd575202630952D71E2bB0d61Af' // Goerli\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'DummyERC20',\n              address:'0xfe4F5145f6e09952a5ba9e956ED0C25e3Fa4c7F1' // Mumbai\n            }\n          },\n          */\n          MATIC:{\n            name:'MATIC',\n            token:'MATIC',\n            decimals:18,\n            enabled:true,\n            sendValue:true,\n            bridgeType:'plasma',\n            rootToken:{\n              abi:ERC20,\n              name:'MATIC',\n              address:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childMATIC',\n              address:'0x0000000000000000000000000000000000001010' // Matic\n            }\n          },\n          WETH:{\n            name:'WETH',\n            token:'ETH',\n            decimals:18,\n            enabled:true,\n            bridgeType:'pos',\n            childToken:{\n              abi:ChildERC20,\n              name:'maticWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          /*\n          WETH:{\n            name:'WETH',\n            token:'WETH',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'WETH',\n              address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          */\n          DAI:{\n            name:'DAI',\n            token:'DAI',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:DAI,\n              name:'DAI',\n              // address:'0x6311344B50D2077BF9804d376EA4C2cEDcB75C1f', // Goerli\n              address:'0x6b175474e89094c44da98b954eedeac495271d0f', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childDAI',\n              // address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F', // Mumbai\n              address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063' // Matic\n            }\n          },\n          USDC:{\n            decimals:6,\n            name:'USDC',\n            token:'USDC',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:USDC,\n              name:'USDC',\n              // address:'0x98339D8C260052B7ad81c28c16C0b98420f2B46a' // Goerli\n              address:'0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childUSDC',\n              // address:'0x6D4dd09982853F08d9966aC3cA4Eb5885F16f2b2' // Mubai\n              address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174' // Matic\n            }\n          },\n          IDLE:{\n            decimals:18,\n            name:'IDLE',\n            token:'IDLE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:IDLE,\n              name:'IDLE',\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childUSDC',\n              address:'0xc25351811983818c9fe6d8c580531819c8ade90f' // Matic\n            }\n          },\n          /*\n          AAVE:{\n            decimals:18,\n            name:'AAVE',\n            token:'AAVE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'AAVE',\n              address:'0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childAAVE',\n              address:'0xD6DF932A45C0f255f85145f286eA0b292B21C90B' // Matic\n            }\n          }\n          */\n        }\n      }\n    },\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      availableNetworks:[1,42],\n      subComponent:TokenWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        startContract:{\n          name:'ETH',\n          token:'ETH',\n          decimals:18,\n          wrapMethod:'deposit',\n        },\n        destContract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          unwrapMethod:'withdraw',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol:{\n      enabled:false,\n      availableNetworks:[1],\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral: \"DAI\",\n            expirationTimestamp: 1714470400,\n            tokens: {\n              Claim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                address: \"0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                  address: \"0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c\"\n                }\n              },\n              NoClaim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                address: \"0x53df0bfa014b7522299c129c5a7b318f02adb469\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                  address: \"0xce0e9e7a1163badb7ee79cfe96b5148e178cab73\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    batchDeposit:{\n      enabled: true,\n      icon: \"Storage\",\n      claimEnabled: true,\n      depositEnabled: true,\n      availableNetworks:[1],\n      route: \"batch-deposit\",\n      label: \"Batch Deposit\",\n      subComponent: BatchDeposit,\n      desc:\"Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintDAI\",\n              address: \"0x633fb4d38B24dC890b11Db2AE2B248D13F996A79\", // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  usePermit: true,\n                  label: \"Deposit\",\n                  permitName: \"permitAndDeposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 6,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintUSDC\",\n              address: \"0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B\", // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  label: \"Deposit\",\n                  usePermit: true,\n                  permitName: \"permitEIP2612AndDepositUnlimited\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    batchMigration: {\n      enabled: true,\n      claimEnabled: true,\n      icon: \"FileDownload\",\n      depositEnabled:false,\n      availableNetworks:[1],\n      route: \"batch-migration\",\n      label: \"Batch Migration\",\n      subComponent: BatchMigration,\n      desc:\"Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            name: \"idleDAIYieldV3\",\n            token: \"idleDAIYieldV3\",\n            address: \"0x78751b12da02728f467a44eac40f5cbc16bd7934\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAI\",\n              address: \"0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCYieldV3\",\n            token: \"idleUSDCYieldV3\",\n            address: \"0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDC\",\n              address: \"0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTYieldV3\",\n            token: \"idleUSDTYieldV3\",\n            address: \"0x63D27B3DA94A9E871222CB0A32232674B02D2f2D\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDT\",\n              address: \"0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleSUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"SUSD\",\n            name: \"idleSUSDYieldV3\",\n            token: \"idleSUSDYieldV3\",\n            address: \"0xe79e177d2a5c7085027d7c64c8f271c81430fc9b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterSUSD\",\n              address: \"0xE2eE519399a49f1A2004a25DA61e82867A69b9b1\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleTUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"TUSD\",\n            name: \"idleTUSDYieldV3\",\n            token: \"idleTUSDYieldV3\",\n            address: \"0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterTUSD\",\n              address: \"0x174a273f0ea28e55b6dd13259aa43d262b863a86\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleWBTCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"WBTC\",\n            name: \"idleWBTCYieldV3\",\n            token: \"idleWBTCYieldV3\",\n            address: \"0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterWBTC\",\n              address: \"0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleDAISafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"DAI\",\n            name: \"idleDAISafeV3\",\n            token: \"idleDAISafeV3\",\n            address: \"0x1846bdfDB6A0f5c473dEc610144513bd071999fB\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAISafe\",\n              address: \"0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCSafeV3\",\n            token: \"idleUSDCSafeV3\",\n            address: \"0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDCSafe\",\n              address: \"0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTSafeV3\",\n            token: \"idleUSDTSafeV3\",\n            address: \"0x42740698959761baf1b06baa51efbd88cb1d862b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDTSafe\",\n              address: \"0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    tokenMigration: {\n      enabled: true,\n      icon: \"SwapHoriz\",\n      route: \"convert\",\n      availableNetworks:[1],\n      label: \"Token Migration\",\n      desc:\"Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle\",\n      subComponent: TokenMigration,\n      props: {\n        migrationContract: {\n          name: \"IdleConverterV4\",\n          abi: IdleConverterPersonalSignV4,\n          address: \"0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743\",\n          oldAddresses: [],\n          functions: [\n            {\n              label: \"Migrate\",\n              name: \"migrateFromToIdle\"\n            }\n          ]\n        },\n        availableStrategies: [\"best\", \"risk\"],\n        availableTokens: {\n          idleDAIv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            baseToken: \"DAI\",\n            abi: IdleTokenV2,\n            token: \"idleDAIOld\",\n            icon: \"images/tokens/idleDAI.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0x10eC0D497824e342bCB0EDcE00959142aAa766dD\"\n          },\n          cDAI: {\n            decimals: 8,\n            enabled: true,\n            token: \"cDAI\",\n            baseToken: \"DAI\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\"\n          },\n          iDAI: {\n            decimals: 18,\n            enabled: false,\n            token: \"iDAI\",\n            baseToken: \"DAI\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x493c57c4763932315a328269e1adad09653b9081\"\n          },\n          aDAI: {\n            decimals: 18,\n            enabled: true,\n            token: \"aDAI\",\n            protocol: \"aave\",\n            baseToken: \"DAI\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\"\n          },\n          yDAIv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv3\",\n            abi: yDAIv3.abi,\n            baseToken: \"DAI\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xC2cB1040220768554cf699b0d863A3cd4324ce32\"\n          },\n          yDAIv2: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv2\",\n            baseToken: \"DAI\",\n            abi: yDAIv3.abi,\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\"\n          },\n          idleUSDCv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            abi: IdleTokenV2,\n            baseToken: \"USDC\",\n            token: \"idleUSDCOld\",\n            icon: \"images/tokens/idleUSDC.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0xeB66ACc3d011056B00ea521F8203580C2E5d3991\"\n          },\n          cUSDC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x39aa39c021dfbae8fac545936693ac917d5e7563\"\n          },\n          iUSDC: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\"\n          },\n          aUSDC: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDC\",\n            protocol: \"aave\",\n            baseToken: \"USDC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\"\n          },\n          yUSDCv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv3\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x26EA744E5B887E5205727f55dFBE8685e3b21951\"\n          },\n          yUSDCv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv2\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\"\n          },\n          cUSDT: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\"\n          },\n          iUSDT: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x8326645f3aa6de6420102fdb7da9e3a91855045b\"\n          },\n          aUSDT: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDT\",\n            protocol: \"aave\",\n            baseToken: \"USDT\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\"\n          },\n          yUSDTv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv3\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\"\n          },\n          yUSDTv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv2\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\"\n          },\n          idleSUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"SUSD\",\n            token: \"idleSUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleSUSDYield.svg\",\n            address: \"0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5\"\n          },\n          aSUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aSUSD\",\n            protocol: \"aave\",\n            baseToken: \"SUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x625aE63000f46200499120B906716420bd059240\"\n          },\n          ySUSDv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"ySUSDv3\",\n            abi: ySUSDv3,\n            baseToken: \"SUSD\",\n            protocol: \"iearn\",\n            availableStrategies: [\"best\"],\n            icon: \"images/tokens/ySUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xf61718057901f84c4eec4339ef8f0d86d2b45600\"\n          },\n          idleTUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"TUSD\",\n            token: \"idleTUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleTUSDYield.svg\",\n            address: \"0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6\"\n          },\n          aTUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aTUSD\",\n            protocol: \"aave\",\n            baseToken: \"TUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x4DA9b813057D04BAef4e5800E36083717b4a0341\"\n          },\n          yTUSDv3: {\n            decimals: 18,\n            enabled: true,\n            abi: yTUSDv3,\n            token: \"yTUSDv3\",\n            baseToken: \"TUSD\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yTUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x73a052500105205d34daf004eab301916da8190f\"\n          },\n          cWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\"\n          },\n          iWBTC: {\n            decimals: 8,\n            enabled: false,\n            token: \"iWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\"\n          },\n          aWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"aWBTC\",\n            protocol: \"aave\",\n            baseToken: \"WBTC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\"\n          }\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      route:'add-funds',\n      label:'Add Funds',\n      availableNetworks:[1],\n      icon:'AddCircleOutline',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    tokenSwap: {\n      enabled: true,\n      icon: \"Sync\",\n      route: \"token-swap\",\n      label: \"Token Swap\",\n      availableNetworks:[1],\n      desc: \"Easily swap your tokens using Kyber Swap widget\",\n      subComponent: TokenSwap,\n      props: {\n        availableTokens: {\n          ETH: { token: \"ETH\" },\n          DAI: { token: \"DAI\" },\n          SUSD: { token: \"SUSD\" },\n          TUSD: { token: \"TUSD\" },\n          USDC: { token: \"USDC\" },\n          USDS: { token: \"USDS\" },\n          USDT: { token: \"USDT\" },\n          WBTC: { token: \"WBTC\" },\n          WETH: { token: \"WETH\" },\n          BUSD: { token: \"BUSD\" },\n          EURS: { token: \"EURS\" },\n          \"2KEY\": { token: \"2KEY\" },\n          ABT: { token: \"ABT\" },\n          ABYSS: { token: \"ABYSS\" },\n          AMPL: { token: \"AMPL\" },\n          ANT: { token: \"ANT\" },\n          BAM: { token: \"BAM\" },\n          BAND: { token: \"BAND\" },\n          BAT: { token: \"BAT\" },\n          BLZ: { token: \"BLZ\" },\n          BNT: { token: \"BNT\" },\n          BQX: { token: \"BQX\" },\n          BTU: { token: \"BTU\" },\n          CDT: { token: \"CDT\" },\n          CVC: { token: \"CVC\" },\n          DAT: { token: \"DAT\" },\n          DGX: { token: \"DGX\" },\n          EKG: { token: \"EKG\" },\n          ELF: { token: \"ELF\" },\n          ENJ: { token: \"ENJ\" },\n          EQUAD: { token: \"EQUAD\" },\n          FXC: { token: \"FXC\" },\n          GDC: { token: \"GDC\" },\n          GEN: { token: \"GEN\" },\n          GHT: { token: \"GHT\" },\n          GNO: { token: \"GNO\" },\n          IOST: { token: \"IOST\" },\n          KEY: { token: \"KEY\" },\n          KNC: { token: \"KNC\" },\n          LEND: { token: \"LEND\" },\n          LINK: { token: \"LINK\" },\n          LOOM: { token: \"LOOM\" },\n          LRC: { token: \"LRC\" },\n          MANA: { token: \"MANA\" },\n          MCO: { token: \"MCO\" },\n          MET: { token: \"MET\" },\n          MFG: { token: \"MFG\" },\n          MKR: { token: \"MKR\" },\n          MLN: { token: \"MLN\" },\n          MTL: { token: \"MTL\" },\n          MYB: { token: \"MYB\" },\n          NEXXO: { token: \"NEXXO\" },\n          NPXS: { token: \"NPXS\" },\n          OGN: { token: \"OGN\" },\n          OMG: { token: \"OMG\" },\n          OST: { token: \"OST\" },\n          PAX: { token: \"PAX\" },\n          PBTC: { token: \"PBTC\" },\n          PLR: { token: \"PLR\" },\n          PNK: { token: \"PNK\" },\n          POLY: { token: \"POLY\" },\n          POWR: { token: \"POWR\" },\n          PT: { token: \"PT\" },\n          QKC: { token: \"QKC\" },\n          QNT: { token: \"QNT\" },\n          RAE: { token: \"RAE\" },\n          REN: { token: \"REN\" },\n          REP: { token: \"REP\" },\n          REQ: { token: \"REQ\" },\n          RLC: { token: \"RLC\" },\n          RSR: { token: \"RSR\" },\n          RSV: { token: \"RSV\" },\n          SAN: { token: \"SAN\" },\n          SNT: { token: \"SNT\" },\n          SNX: { token: \"SNX\" },\n          SPIKE: { token: \"SPIKE\" },\n          SPN: { token: \"SPN\" },\n          TKN: { token: \"TKN\" },\n          TKX: { token: \"TKX\" },\n          TRYB: { token: \"TRYB\" },\n          UBT: { token: \"UBT\" },\n          UPP: { token: \"UPP\" },\n          ZRX: { token: \"ZRX\" }\n        }\n      },\n      directProps: {}\n    }\n  },\n  insurance: {\n    nexusMutual: {\n      label: \"Nexus Mutual\",\n      image: \"images/protocols/nexus-mutual.png\",\n      imageDark: \"images/protocols/nexus-mutual-white.png\"\n    },\n    coverProtocol: {\n      label: \"Cover Protocol\",\n      image: \"images/protocols/cover-logo.svg\",\n      imageDark: \"images/protocols/cover-logo.svg\"\n    }\n  },\n  payments: {\n    // Payment methods & providers\n    methods: {\n      bank: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/bank.png\",\n          caption: \"Bank Account\"\n        }\n      },\n      card: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/debit-card.png\",\n          caption: \"Credit Card\"\n        }\n      },\n      wallet: {\n        defaultProvider: \"zeroExInstant\",\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/ethereum-wallet.svg\",\n          caption: \"Ethereum Wallet\",\n          imageProps: {\n            padding: [\"0\", \"5px\"]\n          }\n        }\n      }\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: \"images/payments/wyre.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.75% fee ~\",\n        supportedMethods: [\"card\"],\n        supportedCountries: [\"USA\", \"GBR\", \"AUS\", \"BRA\", \"CHN\", \"MEX\", \"EUR\"],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        remoteResources: {},\n        env: \"prod\",\n        envParams: {\n          test: {\n            accountId: \"AC_Q2Y4AARC3TP\"\n          },\n          prod: {\n            accountId: \"AC_PQQBX33XVEQ\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n                break;\n              case \"card\":\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = \"https://pay.sendwyre.com/purchase\";\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken,\n            referrerAccountId,\n            redirectUrl: globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const wyreWidget = document.getElementById(\"wyre-widget\");\n          if (!wyreWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById(\"wyreWidget_style\")) {\n              const wyreStyle = document.createElement(\"style\");\n              wyreStyle.id = \"wyreWidget_style\";\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        }\n      },\n      ramp: {\n        enabled: true,\n        imageSrc: \"images/payments/ramp.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods: [\"bank\", \"card\"],\n        badge: {\n          text: \"NO ID REQUIRED\",\n          color: \"#fff\",\n          bgColor: \"#0cade4\"\n        },\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CAN\",\n          \"EUR\",\n          \"HKG\",\n          \"IND\",\n          \"MEX\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        getInfo: props => {\n          const info = {};\n          switch (props.selectedMethod) {\n            case \"bank\":\n              info.supportedCountries = [\"GBR\", \"EUR\"];\n              info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n            case \"card\":\n              info.supportedCountries = [\n                \"USA\",\n                \"GBR\",\n                \"AUS\",\n                \"BRA\",\n                \"CAN\",\n                \"EUR\",\n                \"HKG\",\n                \"IND\",\n                \"MEX\",\n                \"RUS\",\n                \"ZAF\",\n                \"KOR\"\n              ];\n              info.subcaption = `~ 2.90% fee ~`;\n              break;\n            default:\n              break;\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          return {\n            hostAppName: \"Idle\",\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? \"mobile\" : \"desktop\",\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset\n                ? props.tokenConfig.ramp.swapAsset\n                : props.selectedToken\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on(\"*\", async event => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type) {\n                case \"PURCHASE_SUCCESSFUL\":\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil\n                    .BNify(tokenAmount.toString())\n                    .div(\n                      functionsUtil.BNify(\n                        Math.pow(10, parseInt(tokenDecimals)).toString()\n                      )\n                    )\n                    .toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: \"light\",\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\"\n                  });\n\n                  break;\n                default:\n                  break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled: true,\n        imageSrc: \"images/payments/transak.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods: [\"bank\", \"card\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"EUR\",\n          \"IND\"\n        ],\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"],\n        remoteResources: { \"https://global.transak.com/v1/widget.js\": {} },\n        env: \"prod\",\n        badge: {\n          text: \"INSTANT\",\n          bgColor: \"#0069ee\"\n        },\n        envParams: {\n          test: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_TEST,\n            url: \"https://global.transak.com\"\n          },\n          prod: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_PROD,\n            url: \"https://global.transak.com\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === \"bank\" ? \"1.5%\" : \"4.5%\";\n\n          if (props.selectedCountry && props.selectedCountry.value) {\n            switch (props.selectedCountry.value.toUpperCase()) {\n              case \"GBR\":\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n                break;\n              case \"IND\":\n                fee = \"1.0%\";\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n                break;\n              case \"EUR\":\n                if (selectedMethod === \"bank\") {\n                  info.badge = {\n                    text: \"SEPA\",\n                    color: \"#f7cb05 \",\n                    bgColor: \"#10288a\"\n                  };\n                } else {\n                  info.badge = {\n                    text: \"INSTANT\",\n                    bgColor: \"#0069ee\"\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams =\n            globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value) {\n            switch (buyParams.selectedCountry.value.toUpperCase()) {\n              case \"IND\":\n                fiatCurrency = \"INR\";\n                break;\n              case \"GBR\":\n                fiatCurrency = \"GBP\";\n                break;\n              case \"EUR\":\n                fiatCurrency = \"EUR\";\n                break;\n              case \"USA\":\n                fiatCurrency = \"USD\";\n                break;\n              default:\n                fiatCurrency = \"GBP\";\n                break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken\n            ? buyParams.selectedToken.toLowerCase()\n            : props.tokenConfig.transak &&\n              props.tokenConfig.transak.currencyCode\n              ? props.tokenConfig.transak.currencyCode\n              : props.selectedToken;\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width: \"100%\",\n            height: \"100%\"\n            // email,\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          if (window.transakGlobal) {\n            const transakWidget = document.getElementById(\"transak-widget\");\n            if (!transakWidget) {\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById(\"transakWidget_style\")) {\n                const transakStyle = document.createElement(\"style\");\n                transakStyle.id = \"transakWidget_style\";\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, \"transak-widget-container\");\n          }\n        }\n      },\n      moonpay: {\n        enabled: true,\n        imageSrc: \"images/payments/moonpay.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 4.5% fee ~\",\n        supportedMethods: [\"card\", \"bank\"],\n        supportedCountries: [\n          \"GBR\",\n          \"EUR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"CAN\",\n          \"HKG\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        env: \"prod\",\n        envParams: {\n          test: {\n            url: \"https://buy-staging.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod: {\n            url: \"https://buy.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                if (props.selectedCountry && props.selectedCountry.value) {\n                  switch (props.selectedCountry.value.toUpperCase()) {\n                    case \"EUR\":\n                      info.badge = {\n                        text: \"SEPA\",\n                        color: \"#f7cb05 \",\n                        bgColor: \"#10288a\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                      break;\n                    case \"GBR\":\n                      info.badge = {\n                        text: \"GBP\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                      break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                      break;\n                  }\n                }\n                break;\n              case \"card\":\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams =\n            globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken\n              ? buyParams.selectedToken.toLowerCase()\n              : props.tokenConfig.moonpay &&\n                props.tokenConfig.moonpay.currencyCode\n                ? props.tokenConfig.moonpay.currencyCode\n                : props.selectedToken.toLowerCase(),\n            walletAddress: props.account,\n            baseCurrencyCode: \"USD\",\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            bank: {\n              GBR: \"gbp_bank_transfer\",\n              EUR: \"sepa_bank_transfer\"\n            },\n            card: \"credit_debit_card\"\n          };\n\n          const selectedCountry =\n            buyParams.selectedCountry && buyParams.selectedCountry.value\n              ? buyParams.selectedCountry.value.toUpperCase()\n              : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod) {\n            switch (buyParams.selectedMethod) {\n              case \"bank\":\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod][\"EUR\"];\n                switch (selectedCountry) {\n                  case \"GBR\":\n                  case \"EUR\":\n                    params.enabledPaymentMethods =\n                      methods[buyParams.selectedMethod][selectedCountry];\n                    break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(\n                      methods[buyParams.selectedMethod]\n                    ).join(\",\");\n                    break;\n                }\n                break;\n              case \"card\":\n              default:\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod];\n                break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry) {\n            case \"GBR\":\n              params.baseCurrencyCode = \"GBP\";\n              break;\n            case \"EUR\":\n              params.baseCurrencyCode = \"EUR\";\n              break;\n            default:\n              params.baseCurrencyCode = \"USD\";\n              break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (\n              !document.cookie.match(\n                /^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/\n              )\n            ) {\n              document.cookie =\n                \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const moonpayWidget = document.getElementById(\"moonpay-widget\");\n          if (!moonpayWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById(\"moonpayWidget_style\")) {\n              const moonpayStyle = document.createElement(\"style\");\n              moonpayStyle.id = \"moonpayWidget_style\";\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: \"images/payments/zeroexinstant.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        remoteResources: { \"https://instant.0x.org/v3/instant.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onSuccess,\n          onClose\n        ) => {\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context\n            ? window.RimbleWeb3_context.connectorName\n            : null;\n\n          if (!tokenParams.zeroExInstant) {\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider:\n              connectorName &&\n                connectorName !== \"Injected\" &&\n                window.RimbleWeb3_context.connector[connectorName.toLowerCase()]\n                ? window.RimbleWeb3_context.connector[\n                  window.RimbleWeb3_context.connectorName.toLowerCase()\n                ].provider\n                : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount) => {\n          if (window.zeroExInstant && initParams) {\n            if (amount) {\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: \"images/payments/kyber.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Swap with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\n          \"WETH\",\n          \"USDC\",\n          \"DAI\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"RAI\",\n          \"FEI\"\n        ],\n        web3Subscription: {\n          // Data for web3 subscription\n          enabled: true,\n          contractAddress: \"0x818e6fecd516ecc3849daf6845e3ec868087b755\",\n          decodeLogsData: [\n            {\n              internalType: \"address\",\n              name: \"_startAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"address\",\n              name: \"_tokenAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_startAmount\",\n              type: \"uint256\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_tokenAmount\",\n              type: \"uint256\"\n            }\n          ]\n        },\n        remoteResources: {\n          \"https://widget.kyber.network/v0.7.5/widget.css\": {},\n          \"https://widget.kyber.network/v0.7.5/widget.js\": {\n            parentElement: document.body,\n            precall: (props, globalConfigs, providerInfo) => {\n              // Remove previous elements\n              const buttons = document.querySelectorAll(\".kyber-widget-button\");\n              for (let i = 0; i < buttons.length; i++) {\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll(\".script_kyberSwap\");\n              for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId\n                ? props.buttonId\n                : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)) {\n                const a = document.createElement(\"a\");\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props, globalConfigs);\n                a.target = \"_blank\";\n                a.rel = \"nofollow noopener noreferrer\";\n                a.className = \"kyber-widget-button theme-ocean theme-supported\";\n                a.title = \"Swap with Kyber\";\n                a.style = \"display:none;\";\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props, globalConfigs, buyParams = null) => {\n          const baseToken = props.baseToken ? props.baseToken : \"ETH\";\n          const params = {\n            lang: \"en\",\n            type: \"swap\",\n            mode: \"iframe\",\n            theme: \"theme-ocean\",\n            paramForwarding: true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens: `${baseToken}_${props.selectedToken}`,\n            title: `Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair: `${baseToken}_${props.selectedToken}`,\n            commissionId: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n            network:\n              globalConfigs.network.requiredNetwork === 1 ? \"mainnet\" : \"test\"\n          };\n\n          const url = \"https://widget.kyber.network/v0.7.5/\";\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props) => {\n          const buttonId = props.buttonId\n            ? props.buttonId\n            : `kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a) {\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: \"images/payments/airswap.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: {\n          \"https://cdn.airswap.io/airswap-instant-widget.js\": {}\n        },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            env: \"production\",\n            mode: \"buy\",\n            token: props.tokenConfig.address,\n            baseToken: \"ETH\",\n            onComplete: onComplete ? onComplete : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.AirSwapInstant) {\n            if (amount) {\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: \"images/payments/totle.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: { \"https://widget.totle.com/latest/dist.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.TotleWidget) {\n            const nodeId = \"totle-widget\";\n            if (!document.getElementById(nodeId)) {\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(\n              initParams,\n              document.getElementById(nodeId)\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","var map = {\n\t\"./mainnet/v1/index.json\": 1877,\n\t\"./testnet/mumbai/index.json\": 1878\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4441;","var map = {\n\t\"./mainnet/v1/artifacts/fx-portal/FxChild.json\": 4443,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC1155ChildTunnel.json\": 4444,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC1155RootTunnel.json\": 4445,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildToken.json\": 4446,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildTunnel.json\": 4447,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootToken.json\": 4448,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootTunnel.json\": 4449,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC721ChildTunnel.json\": 4450,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC721RootTunnel.json\": 4451,\n\t\"./mainnet/v1/artifacts/fx-portal/FxRoot.json\": 4452,\n\t\"./mainnet/v1/artifacts/genesis/BorValidatorSet.json\": 4453,\n\t\"./mainnet/v1/artifacts/genesis/IStateReceiver.json\": 4454,\n\t\"./mainnet/v1/artifacts/genesis/Migrations.json\": 4455,\n\t\"./mainnet/v1/artifacts/genesis/StateReceiver.json\": 4456,\n\t\"./mainnet/v1/artifacts/genesis/System.json\": 4457,\n\t\"./mainnet/v1/artifacts/genesis/TestBorValidatorSet.json\": 4458,\n\t\"./mainnet/v1/artifacts/genesis/TestCommitState.json\": 4459,\n\t\"./mainnet/v1/artifacts/genesis/TestStateReceiver.json\": 4460,\n\t\"./mainnet/v1/artifacts/genesis/TestSystem.json\": 4461,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorSet.json\": 4462,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorVerifier.json\": 4463,\n\t\"./mainnet/v1/artifacts/plasma/BaseERC20.json\": 4464,\n\t\"./mainnet/v1/artifacts/plasma/ChainIdMixin.json\": 4465,\n\t\"./mainnet/v1/artifacts/plasma/ChildChain.json\": 4466,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20.json\": 4467,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20Proxified.json\": 4468,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721.json\": 4469,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Mintable.json\": 4470,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Proxified.json\": 4471,\n\t\"./mainnet/v1/artifacts/plasma/ChildToken.json\": 4472,\n\t\"./mainnet/v1/artifacts/plasma/ChildTokenProxy.json\": 4473,\n\t\"./mainnet/v1/artifacts/plasma/Common.json\": 4474,\n\t\"./mainnet/v1/artifacts/plasma/ContractReceiver.json\": 4475,\n\t\"./mainnet/v1/artifacts/plasma/ContractWitRevertingFallback.json\": 4476,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithFallback.json\": 4477,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithoutFallback.json\": 4478,\n\t\"./mainnet/v1/artifacts/plasma/DelegateProxy.json\": 4479,\n\t\"./mainnet/v1/artifacts/plasma/DepositManager.json\": 4480,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerHeader.json\": 4481,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerProxy.json\": 4482,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerStorage.json\": 4483,\n\t\"./mainnet/v1/artifacts/plasma/DrainStakeManager.json\": 4484,\n\t\"./mainnet/v1/artifacts/plasma/Drainable.json\": 4485,\n\t\"./mainnet/v1/artifacts/plasma/ECVerify.json\": 4486,\n\t\"./mainnet/v1/artifacts/plasma/ERC165.json\": 4487,\n\t\"./mainnet/v1/artifacts/plasma/ERC20.json\": 4488,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Detailed.json\": 4489,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Mintable.json\": 4490,\n\t\"./mainnet/v1/artifacts/plasma/ERC20NonTransferable.json\": 4491,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Predicate.json\": 4492,\n\t\"./mainnet/v1/artifacts/plasma/ERC20PredicateBurnOnly.json\": 4493,\n\t\"./mainnet/v1/artifacts/plasma/ERC721.json\": 4494,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Enumerable.json\": 4495,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Full.json\": 4496,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Metadata.json\": 4497,\n\t\"./mainnet/v1/artifacts/plasma/ERC721MetadataMintable.json\": 4498,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Mintable.json\": 4499,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PlasmaMintable.json\": 4500,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Predicate.json\": 4501,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PredicateBurnOnly.json\": 4502,\n\t\"./mainnet/v1/artifacts/plasma/ERCProxy.json\": 4503,\n\t\"./mainnet/v1/artifacts/plasma/ExitNFT.json\": 4504,\n\t\"./mainnet/v1/artifacts/plasma/FallbackManager.json\": 4505,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafe.json\": 4506,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafeProxy.json\": 4507,\n\t\"./mainnet/v1/artifacts/plasma/Governable.json\": 4508,\n\t\"./mainnet/v1/artifacts/plasma/Governance.json\": 4509,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockable.json\": 4510,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockableTest.json\": 4511,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceProxy.json\": 4512,\n\t\"./mainnet/v1/artifacts/plasma/IDepositManager.json\": 4513,\n\t\"./mainnet/v1/artifacts/plasma/IERC165.json\": 4514,\n\t\"./mainnet/v1/artifacts/plasma/IERC20.json\": 4515,\n\t\"./mainnet/v1/artifacts/plasma/IERC721.json\": 4516,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Enumerable.json\": 4517,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Metadata.json\": 4518,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Receiver.json\": 4519,\n\t\"./mainnet/v1/artifacts/plasma/IErcPredicate.json\": 4520,\n\t\"./mainnet/v1/artifacts/plasma/IGovernance.json\": 4521,\n\t\"./mainnet/v1/artifacts/plasma/IParentToken.json\": 4522,\n\t\"./mainnet/v1/artifacts/plasma/IPredicate.json\": 4523,\n\t\"./mainnet/v1/artifacts/plasma/IRootChain.json\": 4524,\n\t\"./mainnet/v1/artifacts/plasma/ISignatureValidator.json\": 4525,\n\t\"./mainnet/v1/artifacts/plasma/ISlashingManager.json\": 4526,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManager.json\": 4527,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManagerLocal.json\": 4528,\n\t\"./mainnet/v1/artifacts/plasma/IValidatorShare.json\": 4529,\n\t\"./mainnet/v1/artifacts/plasma/IWithdrawManager.json\": 4530,\n\t\"./mainnet/v1/artifacts/plasma/LibEIP712Domain.json\": 4531,\n\t\"./mainnet/v1/artifacts/plasma/LibTokenTransferOrder.json\": 4532,\n\t\"./mainnet/v1/artifacts/plasma/Lockable.json\": 4533,\n\t\"./mainnet/v1/artifacts/plasma/MRC20.json\": 4534,\n\t\"./mainnet/v1/artifacts/plasma/Marketplace.json\": 4535,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicate.json\": 4536,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicateTest.json\": 4537,\n\t\"./mainnet/v1/artifacts/plasma/MarketplaceToken.json\": 4538,\n\t\"./mainnet/v1/artifacts/plasma/MasterCopy.json\": 4539,\n\t\"./mainnet/v1/artifacts/plasma/MaticWETH.json\": 4540,\n\t\"./mainnet/v1/artifacts/plasma/Merkle.json\": 4541,\n\t\"./mainnet/v1/artifacts/plasma/Migrations.json\": 4542,\n\t\"./mainnet/v1/artifacts/plasma/MintableERC721Predicate.json\": 4543,\n\t\"./mainnet/v1/artifacts/plasma/MinterRole.json\": 4544,\n\t\"./mainnet/v1/artifacts/plasma/Module.json\": 4545,\n\t\"./mainnet/v1/artifacts/plasma/ModuleManager.json\": 4546,\n\t\"./mainnet/v1/artifacts/plasma/Ownable.json\": 4547,\n\t\"./mainnet/v1/artifacts/plasma/OwnableLockable.json\": 4548,\n\t\"./mainnet/v1/artifacts/plasma/OwnerManager.json\": 4549,\n\t\"./mainnet/v1/artifacts/plasma/ParentTokenMock.json\": 4550,\n\t\"./mainnet/v1/artifacts/plasma/PredicateUtils.json\": 4551,\n\t\"./mainnet/v1/artifacts/plasma/PriorityQueue.json\": 4552,\n\t\"./mainnet/v1/artifacts/plasma/Proxy.json\": 4553,\n\t\"./mainnet/v1/artifacts/plasma/ProxyStorage.json\": 4554,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImpl.json\": 4555,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 4556,\n\t\"./mainnet/v1/artifacts/plasma/Registry.json\": 4557,\n\t\"./mainnet/v1/artifacts/plasma/RootChain.json\": 4558,\n\t\"./mainnet/v1/artifacts/plasma/RootChainHeader.json\": 4559,\n\t\"./mainnet/v1/artifacts/plasma/RootChainProxy.json\": 4560,\n\t\"./mainnet/v1/artifacts/plasma/RootChainStorage.json\": 4561,\n\t\"./mainnet/v1/artifacts/plasma/RootChainable.json\": 4562,\n\t\"./mainnet/v1/artifacts/plasma/RootERC721.json\": 4563,\n\t\"./mainnet/v1/artifacts/plasma/SlashingManager.json\": 4564,\n\t\"./mainnet/v1/artifacts/plasma/StakeManager.json\": 4565,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerProxy.json\": 4566,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerStorage.json\": 4567,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTest.json\": 4568,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTestable.json\": 4569,\n\t\"./mainnet/v1/artifacts/plasma/StakingInfo.json\": 4570,\n\t\"./mainnet/v1/artifacts/plasma/StakingNFT.json\": 4571,\n\t\"./mainnet/v1/artifacts/plasma/StateReceiver.json\": 4572,\n\t\"./mainnet/v1/artifacts/plasma/StateSender.json\": 4573,\n\t\"./mainnet/v1/artifacts/plasma/StateSyncerVerifier.json\": 4574,\n\t\"./mainnet/v1/artifacts/plasma/TestMRC20.json\": 4575,\n\t\"./mainnet/v1/artifacts/plasma/TestToken.json\": 4576,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigPredicate.json\": 4577,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigUtils.json\": 4578,\n\t\"./mainnet/v1/artifacts/plasma/UpgradableProxy.json\": 4579,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShare.json\": 4580,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareFactory.json\": 4581,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareProxy.json\": 4582,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareTest.json\": 4583,\n\t\"./mainnet/v1/artifacts/plasma/WETH.json\": 4584,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManager.json\": 4585,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerHeader.json\": 4586,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerProxy.json\": 4587,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerStorage.json\": 4588,\n\t\"./mainnet/v1/artifacts/pos/AccessControl.json\": 4589,\n\t\"./mainnet/v1/artifacts/pos/AccessControlMixin.json\": 4590,\n\t\"./mainnet/v1/artifacts/pos/ChainConstants.json\": 4591,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManager.json\": 4592,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManagerProxy.json\": 4593,\n\t\"./mainnet/v1/artifacts/pos/ChildERC1155.json\": 4594,\n\t\"./mainnet/v1/artifacts/pos/ChildERC20.json\": 4595,\n\t\"./mainnet/v1/artifacts/pos/ChildERC721.json\": 4596,\n\t\"./mainnet/v1/artifacts/pos/ChildMintableERC721.json\": 4597,\n\t\"./mainnet/v1/artifacts/pos/ChildTunnel.json\": 4598,\n\t\"./mainnet/v1/artifacts/pos/DummyERC1155.json\": 4599,\n\t\"./mainnet/v1/artifacts/pos/DummyERC20.json\": 4600,\n\t\"./mainnet/v1/artifacts/pos/DummyERC721.json\": 4601,\n\t\"./mainnet/v1/artifacts/pos/DummyMintableERC721.json\": 4602,\n\t\"./mainnet/v1/artifacts/pos/DummyStateSender.json\": 4603,\n\t\"./mainnet/v1/artifacts/pos/EIP712Base.json\": 4604,\n\t\"./mainnet/v1/artifacts/pos/ERC1155.json\": 4605,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Predicate.json\": 4606,\n\t\"./mainnet/v1/artifacts/pos/ERC1155PredicateProxy.json\": 4607,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Receiver.json\": 4608,\n\t\"./mainnet/v1/artifacts/pos/ERC165.json\": 4609,\n\t\"./mainnet/v1/artifacts/pos/ERC20.json\": 4610,\n\t\"./mainnet/v1/artifacts/pos/ERC20Predicate.json\": 4611,\n\t\"./mainnet/v1/artifacts/pos/ERC20PredicateProxy.json\": 4612,\n\t\"./mainnet/v1/artifacts/pos/ERC721.json\": 4613,\n\t\"./mainnet/v1/artifacts/pos/ERC721Predicate.json\": 4614,\n\t\"./mainnet/v1/artifacts/pos/ERC721PredicateProxy.json\": 4615,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicate.json\": 4616,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicateProxy.json\": 4617,\n\t\"./mainnet/v1/artifacts/pos/ICheckpointManager.json\": 4618,\n\t\"./mainnet/v1/artifacts/pos/IChildChainManager.json\": 4619,\n\t\"./mainnet/v1/artifacts/pos/IChildToken.json\": 4620,\n\t\"./mainnet/v1/artifacts/pos/IERC1155.json\": 4621,\n\t\"./mainnet/v1/artifacts/pos/IERC1155MetadataURI.json\": 4622,\n\t\"./mainnet/v1/artifacts/pos/IERC1155Receiver.json\": 4623,\n\t\"./mainnet/v1/artifacts/pos/IERC165.json\": 4624,\n\t\"./mainnet/v1/artifacts/pos/IERC20.json\": 4625,\n\t\"./mainnet/v1/artifacts/pos/IERC721.json\": 4626,\n\t\"./mainnet/v1/artifacts/pos/IERC721Enumerable.json\": 4627,\n\t\"./mainnet/v1/artifacts/pos/IERC721Metadata.json\": 4628,\n\t\"./mainnet/v1/artifacts/pos/IERC721Receiver.json\": 4629,\n\t\"./mainnet/v1/artifacts/pos/IERCProxy.json\": 4630,\n\t\"./mainnet/v1/artifacts/pos/IMintableERC721.json\": 4631,\n\t\"./mainnet/v1/artifacts/pos/IRootChainManager.json\": 4632,\n\t\"./mainnet/v1/artifacts/pos/IStateSender.json\": 4633,\n\t\"./mainnet/v1/artifacts/pos/ITokenPredicate.json\": 4634,\n\t\"./mainnet/v1/artifacts/pos/MaticWETH.json\": 4635,\n\t\"./mainnet/v1/artifacts/pos/Merkle.json\": 4636,\n\t\"./mainnet/v1/artifacts/pos/MerklePatriciaTest.json\": 4637,\n\t\"./mainnet/v1/artifacts/pos/Migrations.json\": 4638,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155Predicate.json\": 4639,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155PredicateProxy.json\": 4640,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20Predicate.json\": 4641,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20PredicateProxy.json\": 4642,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721Predicate.json\": 4643,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721PredicateProxy.json\": 4644,\n\t\"./mainnet/v1/artifacts/pos/MockCheckpointManager.json\": 4645,\n\t\"./mainnet/v1/artifacts/pos/NativeMetaTransaction.json\": 4646,\n\t\"./mainnet/v1/artifacts/pos/NetworkAgnostic.json\": 4647,\n\t\"./mainnet/v1/artifacts/pos/Proxy.json\": 4648,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImpl.json\": 4649,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 4650,\n\t\"./mainnet/v1/artifacts/pos/RootChainManager.json\": 4651,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerProxy.json\": 4652,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerStorage.json\": 4653,\n\t\"./mainnet/v1/artifacts/pos/RootTunnel.json\": 4654,\n\t\"./mainnet/v1/artifacts/pos/UpgradableProxy.json\": 4655,\n\t\"./mainnet/v1/index.json\": 1877,\n\t\"./networks.json\": 1876,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxChild.json\": 4656,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC1155ChildTunnel.json\": 4657,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC1155RootTunnel.json\": 4658,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildToken.json\": 4659,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildTunnel.json\": 4660,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootToken.json\": 4661,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootTunnel.json\": 4662,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC721ChildTunnel.json\": 4663,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC721RootTunnel.json\": 4664,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxRoot.json\": 4665,\n\t\"./testnet/mumbai/artifacts/genesis/BorValidatorSet.json\": 4666,\n\t\"./testnet/mumbai/artifacts/genesis/IStateReceiver.json\": 4667,\n\t\"./testnet/mumbai/artifacts/genesis/Migrations.json\": 4668,\n\t\"./testnet/mumbai/artifacts/genesis/StateReceiver.json\": 4669,\n\t\"./testnet/mumbai/artifacts/genesis/System.json\": 4670,\n\t\"./testnet/mumbai/artifacts/genesis/TestBorValidatorSet.json\": 4671,\n\t\"./testnet/mumbai/artifacts/genesis/TestCommitState.json\": 4672,\n\t\"./testnet/mumbai/artifacts/genesis/TestStateReceiver.json\": 4673,\n\t\"./testnet/mumbai/artifacts/genesis/TestSystem.json\": 4674,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorSet.json\": 4675,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorVerifier.json\": 4676,\n\t\"./testnet/mumbai/artifacts/plasma/BaseERC20.json\": 4677,\n\t\"./testnet/mumbai/artifacts/plasma/ChainIdMixin.json\": 4678,\n\t\"./testnet/mumbai/artifacts/plasma/ChildChain.json\": 4679,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20.json\": 4680,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20Proxified.json\": 4681,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721.json\": 4682,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Mintable.json\": 4683,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Proxified.json\": 4684,\n\t\"./testnet/mumbai/artifacts/plasma/ChildToken.json\": 4685,\n\t\"./testnet/mumbai/artifacts/plasma/ChildTokenProxy.json\": 4686,\n\t\"./testnet/mumbai/artifacts/plasma/Common.json\": 4687,\n\t\"./testnet/mumbai/artifacts/plasma/ContractReceiver.json\": 4688,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWitRevertingFallback.json\": 4689,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithFallback.json\": 4690,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithoutFallback.json\": 4691,\n\t\"./testnet/mumbai/artifacts/plasma/DelegateProxy.json\": 4692,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManager.json\": 4693,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerHeader.json\": 4694,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerProxy.json\": 4695,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerStorage.json\": 4696,\n\t\"./testnet/mumbai/artifacts/plasma/DrainStakeManager.json\": 4697,\n\t\"./testnet/mumbai/artifacts/plasma/Drainable.json\": 4698,\n\t\"./testnet/mumbai/artifacts/plasma/ECVerify.json\": 4699,\n\t\"./testnet/mumbai/artifacts/plasma/ERC165.json\": 4700,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20.json\": 4701,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Detailed.json\": 4702,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Mintable.json\": 4703,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20NonTransferable.json\": 4704,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Predicate.json\": 4705,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20PredicateBurnOnly.json\": 4706,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721.json\": 4707,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Enumerable.json\": 4708,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Full.json\": 4709,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Metadata.json\": 4710,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721MetadataMintable.json\": 4711,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Mintable.json\": 4712,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PlasmaMintable.json\": 4713,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Predicate.json\": 4714,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PredicateBurnOnly.json\": 4715,\n\t\"./testnet/mumbai/artifacts/plasma/ERCProxy.json\": 4716,\n\t\"./testnet/mumbai/artifacts/plasma/ExitNFT.json\": 4717,\n\t\"./testnet/mumbai/artifacts/plasma/FallbackManager.json\": 4718,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafe.json\": 4719,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafeProxy.json\": 4720,\n\t\"./testnet/mumbai/artifacts/plasma/Governable.json\": 4721,\n\t\"./testnet/mumbai/artifacts/plasma/Governance.json\": 4722,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockable.json\": 4723,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockableTest.json\": 4724,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceProxy.json\": 4725,\n\t\"./testnet/mumbai/artifacts/plasma/IDepositManager.json\": 4726,\n\t\"./testnet/mumbai/artifacts/plasma/IERC165.json\": 4727,\n\t\"./testnet/mumbai/artifacts/plasma/IERC20.json\": 4728,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721.json\": 4729,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Enumerable.json\": 4730,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Metadata.json\": 4731,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Receiver.json\": 4732,\n\t\"./testnet/mumbai/artifacts/plasma/IErcPredicate.json\": 4733,\n\t\"./testnet/mumbai/artifacts/plasma/IGovernance.json\": 4734,\n\t\"./testnet/mumbai/artifacts/plasma/IParentToken.json\": 4735,\n\t\"./testnet/mumbai/artifacts/plasma/IPredicate.json\": 4736,\n\t\"./testnet/mumbai/artifacts/plasma/IRootChain.json\": 4737,\n\t\"./testnet/mumbai/artifacts/plasma/ISignatureValidator.json\": 4738,\n\t\"./testnet/mumbai/artifacts/plasma/ISlashingManager.json\": 4739,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManager.json\": 4740,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManagerLocal.json\": 4741,\n\t\"./testnet/mumbai/artifacts/plasma/IValidatorShare.json\": 4742,\n\t\"./testnet/mumbai/artifacts/plasma/IWithdrawManager.json\": 4743,\n\t\"./testnet/mumbai/artifacts/plasma/LibEIP712Domain.json\": 4744,\n\t\"./testnet/mumbai/artifacts/plasma/LibTokenTransferOrder.json\": 4745,\n\t\"./testnet/mumbai/artifacts/plasma/Lockable.json\": 4746,\n\t\"./testnet/mumbai/artifacts/plasma/MRC20.json\": 4747,\n\t\"./testnet/mumbai/artifacts/plasma/Marketplace.json\": 4748,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicate.json\": 4749,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicateTest.json\": 4750,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplaceToken.json\": 4751,\n\t\"./testnet/mumbai/artifacts/plasma/MasterCopy.json\": 4752,\n\t\"./testnet/mumbai/artifacts/plasma/MaticWETH.json\": 4753,\n\t\"./testnet/mumbai/artifacts/plasma/Merkle.json\": 4754,\n\t\"./testnet/mumbai/artifacts/plasma/Migrations.json\": 4755,\n\t\"./testnet/mumbai/artifacts/plasma/MintableERC721Predicate.json\": 4756,\n\t\"./testnet/mumbai/artifacts/plasma/MinterRole.json\": 4757,\n\t\"./testnet/mumbai/artifacts/plasma/Module.json\": 4758,\n\t\"./testnet/mumbai/artifacts/plasma/ModuleManager.json\": 4759,\n\t\"./testnet/mumbai/artifacts/plasma/Ownable.json\": 4760,\n\t\"./testnet/mumbai/artifacts/plasma/OwnableLockable.json\": 4761,\n\t\"./testnet/mumbai/artifacts/plasma/OwnerManager.json\": 4762,\n\t\"./testnet/mumbai/artifacts/plasma/ParentTokenMock.json\": 4763,\n\t\"./testnet/mumbai/artifacts/plasma/PredicateUtils.json\": 4764,\n\t\"./testnet/mumbai/artifacts/plasma/PriorityQueue.json\": 4765,\n\t\"./testnet/mumbai/artifacts/plasma/Proxy.json\": 4766,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyStorage.json\": 4767,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImpl.json\": 4768,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 4769,\n\t\"./testnet/mumbai/artifacts/plasma/Registry.json\": 4770,\n\t\"./testnet/mumbai/artifacts/plasma/RootChain.json\": 4771,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainHeader.json\": 4772,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainProxy.json\": 4773,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainStorage.json\": 4774,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainable.json\": 4775,\n\t\"./testnet/mumbai/artifacts/plasma/RootERC721.json\": 4776,\n\t\"./testnet/mumbai/artifacts/plasma/SlashingManager.json\": 4777,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManager.json\": 4778,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerProxy.json\": 4779,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerStorage.json\": 4780,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTest.json\": 4781,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTestable.json\": 4782,\n\t\"./testnet/mumbai/artifacts/plasma/StakingInfo.json\": 4783,\n\t\"./testnet/mumbai/artifacts/plasma/StakingNFT.json\": 4784,\n\t\"./testnet/mumbai/artifacts/plasma/StateReceiver.json\": 4785,\n\t\"./testnet/mumbai/artifacts/plasma/StateSender.json\": 4786,\n\t\"./testnet/mumbai/artifacts/plasma/StateSyncerVerifier.json\": 4787,\n\t\"./testnet/mumbai/artifacts/plasma/TestMRC20.json\": 4788,\n\t\"./testnet/mumbai/artifacts/plasma/TestToken.json\": 4789,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigPredicate.json\": 4790,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigUtils.json\": 4791,\n\t\"./testnet/mumbai/artifacts/plasma/UpgradableProxy.json\": 4792,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShare.json\": 4793,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareFactory.json\": 4794,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareProxy.json\": 4795,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareTest.json\": 4796,\n\t\"./testnet/mumbai/artifacts/plasma/WETH.json\": 4797,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManager.json\": 4798,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerHeader.json\": 4799,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerProxy.json\": 4800,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerStorage.json\": 4801,\n\t\"./testnet/mumbai/artifacts/pos/AccessControl.json\": 4802,\n\t\"./testnet/mumbai/artifacts/pos/AccessControlMixin.json\": 4803,\n\t\"./testnet/mumbai/artifacts/pos/ChainConstants.json\": 4804,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManager.json\": 4805,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManagerProxy.json\": 4806,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC1155.json\": 4807,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC20.json\": 4808,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC721.json\": 4809,\n\t\"./testnet/mumbai/artifacts/pos/ChildMintableERC721.json\": 4810,\n\t\"./testnet/mumbai/artifacts/pos/ChildTunnel.json\": 4811,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC1155.json\": 4812,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC20.json\": 4813,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC721.json\": 4814,\n\t\"./testnet/mumbai/artifacts/pos/DummyMintableERC721.json\": 4815,\n\t\"./testnet/mumbai/artifacts/pos/DummyStateSender.json\": 4816,\n\t\"./testnet/mumbai/artifacts/pos/EIP712Base.json\": 4817,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155.json\": 4818,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Predicate.json\": 4819,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155PredicateProxy.json\": 4820,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Receiver.json\": 4821,\n\t\"./testnet/mumbai/artifacts/pos/ERC165.json\": 4822,\n\t\"./testnet/mumbai/artifacts/pos/ERC20.json\": 4823,\n\t\"./testnet/mumbai/artifacts/pos/ERC20Predicate.json\": 4824,\n\t\"./testnet/mumbai/artifacts/pos/ERC20PredicateProxy.json\": 4825,\n\t\"./testnet/mumbai/artifacts/pos/ERC721.json\": 4826,\n\t\"./testnet/mumbai/artifacts/pos/ERC721Predicate.json\": 4827,\n\t\"./testnet/mumbai/artifacts/pos/ERC721PredicateProxy.json\": 4828,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicate.json\": 4829,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicateProxy.json\": 4830,\n\t\"./testnet/mumbai/artifacts/pos/ICheckpointManager.json\": 4831,\n\t\"./testnet/mumbai/artifacts/pos/IChildChainManager.json\": 4832,\n\t\"./testnet/mumbai/artifacts/pos/IChildToken.json\": 4833,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155.json\": 4834,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155MetadataURI.json\": 4835,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155Receiver.json\": 4836,\n\t\"./testnet/mumbai/artifacts/pos/IERC165.json\": 4837,\n\t\"./testnet/mumbai/artifacts/pos/IERC20.json\": 4838,\n\t\"./testnet/mumbai/artifacts/pos/IERC721.json\": 4839,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Enumerable.json\": 4840,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Metadata.json\": 4841,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Receiver.json\": 4842,\n\t\"./testnet/mumbai/artifacts/pos/IERCProxy.json\": 4843,\n\t\"./testnet/mumbai/artifacts/pos/IMintableERC721.json\": 4844,\n\t\"./testnet/mumbai/artifacts/pos/IRootChainManager.json\": 4845,\n\t\"./testnet/mumbai/artifacts/pos/IStateSender.json\": 4846,\n\t\"./testnet/mumbai/artifacts/pos/ITokenPredicate.json\": 4847,\n\t\"./testnet/mumbai/artifacts/pos/MaticWETH.json\": 4848,\n\t\"./testnet/mumbai/artifacts/pos/Merkle.json\": 4849,\n\t\"./testnet/mumbai/artifacts/pos/MerklePatriciaTest.json\": 4850,\n\t\"./testnet/mumbai/artifacts/pos/Migrations.json\": 4851,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155Predicate.json\": 4852,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155PredicateProxy.json\": 4853,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20Predicate.json\": 4854,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20PredicateProxy.json\": 4855,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721Predicate.json\": 4856,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721PredicateProxy.json\": 4857,\n\t\"./testnet/mumbai/artifacts/pos/MockCheckpointManager.json\": 4858,\n\t\"./testnet/mumbai/artifacts/pos/NativeMetaTransaction.json\": 4859,\n\t\"./testnet/mumbai/artifacts/pos/NetworkAgnostic.json\": 4860,\n\t\"./testnet/mumbai/artifacts/pos/Proxy.json\": 4861,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImpl.json\": 4862,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 4863,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManager.json\": 4864,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerProxy.json\": 4865,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerStorage.json\": 4866,\n\t\"./testnet/mumbai/artifacts/pos/RootTunnel.json\": 4867,\n\t\"./testnet/mumbai/artifacts/pos/UpgradableProxy.json\": 4868,\n\t\"./testnet/mumbai/index.json\": 1878\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4442;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens ? this.props.availableTokens[token] : null;\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034', '1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    tick: \"#00b84a\",\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#C6CBD2\",\n    border: \"#546278\",\n    newblue: \"#2B65D9\",\n    alert: '#ff9900',\n    arrowActive: '#d8d8d8',\n    arrowInactive: '#4f4f4f',\n    selectBgFocused: '#1e3657',\n    selectBg: '#162e4d',\n    backButtonBg: '#162e4d',\n    lineChartStroke: '#a4aec6',\n    wrongNetworkBannerBg: '#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg: '#162e4d',\n    menuBg: '#162e4d',\n    menuHover: '#1e3657',\n    flashColor: '#bac5ff',\n    cardBgHover: '#1e3657',\n    cardBorder: '#0d2034',\n    pageActive: '#d8d8d8',\n    pageInactive: '#4f4f4f',\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#1e3657\",\n    menuRightBorder: '#0d2034',\n    cardHoverShadow: '0px 0px 0px 1px rgb(45 74 114)',\n    transactions: {\n      action: {\n        send: '#10a0dd',\n        swap: '#3d53c0',\n        exit: '#10a0dd',\n        boost: '#ffff00',\n        redeem: '#10a0dd',\n        swapout: '#10a0dd',\n        deposit: '#3d53c0',\n        curvein: '#10a0dd',\n        receive: '#3d53c0',\n        migrate: '#3d53c0',\n        default: '#4f4f4f',\n        curveout: '#3d53c0',\n        withdraw: '#10a0dd',\n        curvedepositin: '#10a0dd',\n        curvedepositout: '#3d53c0'\n      },\n      actionBg: {\n        send: '#ceeff6',\n        swap: '#ced6ff',\n        exit: '#ceeff6',\n        boost: '#ff7979',\n        redeem: '#ceeff6',\n        swapout: '#ceeff6',\n        deposit: '#ced6ff',\n        curvein: '#ceeff6',\n        default: '#dadada',\n        receive: '#ced6ff',\n        migrate: '#ced6ff',\n        withdraw: '#ceeff6',\n        curveout: '#ced6ff',\n        curvedepositin: '#ceeff6',\n        curvedepositout: '#ced6ff'\n      },\n      status: {\n        completed: '#00b84a',\n        pending: '#a5a5a5',\n        failed: '#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura.rpc).forEach((networkId,index) => {\n  networkId = parseInt(networkId);\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura.rpc[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: supportedNetworkURLs[defaultNetwork]\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              The network you are currently connected{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                ({this.props.network.current.name})\n              </Text.span>{\" \"}\n              is not supported - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isSupportedNetwork === false && this.props.web3 &&\n          <WrongNetworkBanner\n            network={this.props.network}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      // await this.props.context.setFirstValidConnector(['Infura']);\n      // this.props.context.setConnector('Infura');\n      this.props.context.unsetConnector();\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport MaticJs from '@maticnetwork/maticjs';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\n// import detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  currentWeb3: {},\n  web3Polygon: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  web3Providers: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  maticPlasmaClient :{},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  contractsNetworks: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n    isSupportedNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        this.handleNetworkChanged(networkId);\n        // window.location.reload();\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n    window.initAccount = this.initAccount;\n  }\n\n  handleNetworkChanged = async (networkId=null) => {\n    this.functionsUtil.removeStoredItem('cachedRequests');\n    this.functionsUtil.removeStoredItem('cachedRequests_polygon');\n    this.functionsUtil.removeStoredItem('transactions');\n    await this.props.clearCachedData(async () => {\n      // console.log(networkId,this.state.network);\n      // const network = await this.checkNetwork();\n      // if (network.isCorrectNetwork){\n      //   window.location.reload();\n      // }\n\n      if (this.state.network.required && networkId && parseInt(networkId) === parseInt(this.state.network.required.id)){\n        window.location.reload();\n      } else {\n        this.setState({\n          web3:null,\n          contracts:[],\n          biconomy:null,\n          permitClient:null,\n          contractsNetworks:{},\n          networkInitialized:false,\n          erc20ForwarderClient:null,\n          contractsInitialized:false\n        },() => {\n          this.checkNetwork();\n        });\n      }\n    });\n  }\n\n  componentDidMount = async () => {\n    // this.initSimpleID();\n    // this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe);\n      if (isGnosisSafe){\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    // console.log('gnosisSafeLoaded',this.state.gnosisSafeLoaded,this.props.connectors.gnosis.safeLoaded,gnosisSafeLoaded);\n    if (gnosisSafeLoaded){\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if ((prevProps.connectorName !== this.props.connectorName && this.props.connectorName) || (this.props.context.active && prevProps.context.active !== this.props.context.active)){\n      // console.log('initWeb3_1',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active);\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          // console.log('initWeb3_2',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active);\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect'){\n        // console.log('initWeb3_3',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n        this.initWeb3();\n      }\n    } else if ((this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      // console.log('initWeb3_4',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n      this.initWeb3();\n    }\n\n    const currentNetworkChanged = this.state.networkInitialized && prevState.network.current.id !== this.state.network.current.id;\n    if (currentNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.initWeb3();\n    }\n\n    const requiredNetworkChanged = prevState.network.required.id !== this.state.network.required.id;\n    if (requiredNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.setState({\n        contracts:[],\n        contractsNetworks:{},\n        contractsInitialized:false\n      }, () => {\n        this.props.setNetwork(this.state.network);\n        this.initWeb3();\n      });\n    }\n\n    const availableStrategiesChanged = (!prevProps.availableStrategies && this.props.availableStrategies) || (prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies)));\n    // console.log('availableStrategiesChanged',this.props.availableStrategies,availableStrategiesChanged);\n    if (availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    const contextAccountChanged = prevProps.context.account !== this.props.context.account;\n    const accountDisconnected = prevProps.connectorName !== this.props.connectorName && this.props.connectorName === 'Infura';\n    if (contextAccountChanged){\n      // console.log('contextAccountChanged',prevProps.context.account,this.props.context.account,contextAccountChanged);\n    }\n\n    if (accountDisconnected){\n      // console.log('accountDisconnected',prevProps.connectorName,this.props.connectorName,accountDisconnected);\n    }\n\n    if (customAddressChanged || contextAccountChanged || accountDisconnected){\n      this.initAccount();\n    }\n\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n\n    // Reset tokenDecimals if token is changed\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    const selectedNetworkChanged = prevProps.config.requiredNetwork !== this.props.config.requiredNetwork;\n    if (selectedNetworkChanged){\n      // console.log('selectedNetworkChanged',JSON.stringify(prevProps.config.requiredNetwork),this.props.config.requiredNetwork);\n      this.handleNetworkChanged();\n    }\n  }\n\n  initCurrentWeb3 = async () => {\n\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    // const metamaskProvider = await detectEthereumProvider();\n    // if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n    //   window.ethereum = metamaskProvider;\n    // }\n    if (!this.state.networkInitialized){\n      return false;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.required.id;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - START',networkId,walletProvider);\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.functionsUtil.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.functionsUtil.getGlobalConfig(['network','providers',provider,'rpc',networkId])+web3RpcKey;\n\n    const useWeb3Provider = this.state.networkInitialized && this.state.network.isCorrectNetwork;\n    const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n    \n\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n    const web3Providers = Object.keys(availableNetworks).filter( netId => enabledNetworks.includes(parseInt(netId)) ).reduce( (acc,netId) => {\n      const networkConfig = availableNetworks[netId];\n      const providerConfig = this.functionsUtil.getGlobalConfig(['network','providers',networkConfig.provider]);\n      const providerRpc = providerConfig.rpc[netId]+providerConfig.key;\n      acc[netId] = new Web3(new Web3.providers.HttpProvider(providerRpc));\n      return acc;\n    },{});\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n    let currentWeb3 = context.library;\n    let web3 = useWeb3Provider ? context.library : null;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // if (connectorName !== 'Infura' && connectorName !== 'Injected' && !context.library){\n    //   connectorName = 'Infura';\n    //   this.props.setConnector('Infura',null);\n    //   if (web3 && typeof web3.currentProvider.disable === 'function'){\n    //     web3.currentProvider.disable();\n    //   } else if (context.connector && typeof context.connector.disable === 'function'){\n    //     context.connector.disable();\n    //   }\n    // }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      currentWeb3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // console.log('context',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = web3Rpc;\n    let web3Provider = null;\n\n    // console.log('initWeb3-PRE',connectorName,currentWeb3,web3,context);\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = web3InfuraRpc;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = web3InfuraRpc;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider && useWeb3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = web3Providers[networkId];\n    }\n\n    // console.log('initWeb3',connectorName,currentWeb3,web3,context,web3Provider/*,web3Provider===context.library.currentProvider*/);\n\n    let web3Polygon = null;\n    let maticPOSClient = null;\n    let maticPlasmaClient = null;\n\n    // const infuraConfig = globalConfigs.network.providers.infura;\n    const polygonConfig = globalConfigs.network.providers.polygon;\n\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      web3Polygon = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n\n      const maticProvider = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      const parentProvider = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n      // console.log('maticProvider',web3PolygonRpc);\n      // console.log('parentProvider',web3InfuraRpc);\n\n      const maticPOSClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPOSClient = new MaticJs.MaticPOSClient(maticPOSClientConfig);\n\n      // console.log('maticPOSClientConfig',networkConfig,maticPOSClientConfig);\n\n      const maticPlasmaClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPlasmaClient = new MaticJs(maticPlasmaClientConfig);\n    }\n\n    window.web3Polygon = web3Polygon;\n    window.maticPOSClient = maticPOSClient;\n    window.maticPlasmaClient = maticPlasmaClient;\n\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    } else {\n      currentWeb3 = web3Providers[networkId];\n    }\n\n    this.setState({\n      web3Infura,\n      currentWeb3,\n      web3Polygon,\n      web3Providers,\n      maticPOSClient,\n      maticPlasmaClient\n    },() => {\n      // this.checkNetwork();\n    });\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - web3Callback');\n\n      // console.log('web3Callback',context);\n\n      // After setting the web3 provider, check network\n      try {\n        // if (!this.state.networkInitialized){\n        //   await this.checkNetwork();\n        // }\n\n        if (this.state.network.isSupportedNetwork){\n\n          // if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          // }\n\n          if (context.active && context.connectorName===connectorName && context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      const biconomyWeb3Provider = web3Provider ? web3Provider : new Web3.providers.HttpProvider(web3Host);\n      if (this.state.biconomy === null || this.state.biconomy.currentProvider !== biconomyWeb3Provider ){\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              web3Providers,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    // console.log(`initContract: ${name} - addr: ${address}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  initContractWithoutSet = (name, address, abi, networkId=null) => {\n    // Reset networkId is equal to injected\n    if (networkId && parseInt(networkId) === parseInt(this.state.network.required.id) && this.state.network.isCorrectNetwork){\n      networkId = null;\n    }\n    const web3Provider = networkId && this.state.web3Providers[networkId] ? this.state.web3Providers[networkId] : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    // if (name==='ERC20Predicate'){\n    //   console.log('createContract',this.state.network,web3Provider);\n    // }\n\n    if (!web3Provider){\n      return null;\n    }\n\n    if (!abi){\n      abi = [];\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      const contractInfo = {name, contract};\n\n      this.setState(prevState => {\n        // Remove old contract\n        const contracts = prevState.contracts.filter( c => c.name !== contractInfo.name );\n        // Insert updated contract\n        contracts.push(contractInfo);\n        return {\n          contracts\n        };\n      });\n\n      return contractInfo;\n    } catch (error) {\n      console.error(\"Could not create contract.\",name,address,abi,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      return this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      },()=>{\n        this.getAccountBalance();\n      });\n    } else if (this.props.connectorName === 'Infura' || !this.props.connectorName){\n      return this.setState({\n        account:null,\n        accountInizialized:true\n      });\n    }\n\n    try {\n\n      if (this.props.context.active && this.props.context.connectorName===this.props.connectorName && this.props.context.account){\n        account = this.props.context.account;\n      }\n\n      if (!account){\n        // const wallets = await Promise.race([\n        //     this.state.web3.eth.getAccounts(),\n        //     new Promise((resolve) => setTimeout(resolve, 300))\n        // ]);\n        const wallets = await this.state.web3.eth.getAccounts();\n\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      // console.log('initAccount',account,this.props.context.account);\n\n      if (!account){\n        account = this.props.context.account;\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // Request account access if needed\n      if (account){\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          account:null,\n          accountInizialized: true,\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      // console.log('getAccountBalance',parseFloat(accountBalance));\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    if (!this.state.web3 || !this.props.availableStrategies){\n      return false;\n    }\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initializeContracts - START',this.state.network.required.id,this.props.availableStrategies,this.props.availableStrategiesNetworks);\n\n    const contracts = [];\n    const contractsNetworks = {};\n    const requiredNetworkId = parseInt(this.state.network.required.id);\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n\n    if (this.props.availableStrategiesNetworks){\n      Object.keys(this.props.availableStrategiesNetworks).forEach( networkId => {\n        contractsNetworks[networkId] = [];\n        const strategies = this.props.availableStrategiesNetworks[networkId];\n        Object.keys(strategies).forEach( strategy => {\n          const availableTokens = this.props.availableStrategiesNetworks[networkId][strategy];\n          Object.keys(availableTokens).forEach( token => {\n            const tokenConfig = availableTokens[token];\n\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi, networkId));\n\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi, networkId));\n\n            tokenConfig.protocols.forEach(async (p,i) => {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              contractsNetworks[networkId].push(this.initContractWithoutSet(p.token, p.address, p.abi, networkId));\n            });\n          })\n        });\n      });\n    }\n\n    // console.log('initializeContracts',this.state.network,this.state.web3,contracts,this.props.availableStrategies);\n\n    const contractsToInitialize = this.functionsUtil.getGlobalConfig(['contracts',requiredNetworkId]);\n    if (contractsToInitialize){\n      Object.keys(contractsToInitialize).forEach( contractName => {\n        const contractInfo = contractsToInitialize[contractName];\n        if (contractInfo.address !== null && contractInfo.abi !== null){\n          const networkId = contractInfo.networkId ? parseInt(contractInfo.networkId) : requiredNetworkId;\n          // console.log('initializeContracts, init contract', requiredNetworkId, contractName, contractInfo.address);\n          contracts.push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n          contractsNetworks[requiredNetworkId].push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n        }\n      });\n    }\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    if (govTokens){\n      Object.keys(govTokens).forEach( token => {\n        const govTokenConfig = govTokens[token];\n        if (!govTokenConfig.enabled){\n          return;\n        }\n        availableNetworks.forEach( networkId => {\n          // Initialize govToken contracts\n          const contractAddress = govTokenConfig.addresses && govTokenConfig.addresses[networkId] ? govTokenConfig.addresses[networkId] : govTokenConfig.address;\n          this.functionsUtil.customLog('initializeContracts, init contract', token, contractAddress);\n          if (parseInt(networkId) === parseInt(requiredNetworkId)){\n            contracts.push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi));\n          }\n          contractsNetworks[networkId].push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi, networkId));\n        });\n      });\n    }\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const availableTokens = this.props.availableStrategies[strategy];\n        Object.keys(availableTokens).forEach( token => {\n          const tokenConfig = availableTokens[token];\n\n          this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n          contracts.push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi));\n\n          // Initialize idleTokens contracts\n          this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n          contracts.push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi));\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n            contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              contracts.push(this.initContractWithoutSet(oldContract.name, oldContract.address, oldContract.abi));\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              contracts.push(this.initContractWithoutSet(migrationContract.name, migrationContract.address, migrationContract.abi));\n            }\n          }\n        })\n      });\n    }\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['strategies','tranches']);\n    if (this.props.availableTranches){\n      Object.keys(this.props.availableTranches).forEach( protocol => {\n        const tokens = this.props.availableTranches[protocol];\n        Object.keys(tokens).forEach( token => {\n          const tokenConfig = tokens[token];\n          if (!tranchesConfig.availableNetworks || tranchesConfig.availableNetworks.includes(requiredNetworkId)){\n            contracts.push(this.initContractWithoutSet(tokenConfig.name,tokenConfig.address,tokenConfig.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi));\n          }\n\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.name,tokenConfig.address,tokenConfig.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi,1));\n        });\n      });\n    }\n\n    const newContracts = Object.assign([],this.state.contracts);\n    contracts.forEach( contractInfo => {\n      if (contractInfo){\n        const contractFound = newContracts.find( c => c.name===contractInfo.name );\n        if (!contractFound){\n          newContracts.push(contractInfo);\n        } else {\n          const contractIndex = newContracts.indexOf(contractFound);\n          newContracts[contractIndex] = contractInfo;\n        }\n      }\n    });\n\n    // console.log('initializeContracts',newContracts);\n\n    const newState = {\n      contractsNetworks,\n      contracts:newContracts,\n      contractsInitialized:true\n    };\n\n    return this.setState(newState);\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n     const networkId = typeof this.props.config !== \"undefined\" && typeof this.props.config.requiredNetwork !== \"undefined\" ? this.props.config.requiredNetwork : globalConfigs.network.requiredNetwork;\n     const networkName = networkId && globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId].name : 'unknown';\n     return {\n       id: networkId,\n       name: networkName\n     };\n   }\n\n   getCurrentNetwork = async (networkId=null) => {\n     const currentWeb3 = this.functionsUtil.getCurrentWeb3();\n\n     networkId = parseInt(networkId) || await currentWeb3.eth.net.getId();\n     const networkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId,'name']) || await currentWeb3.eth.net.getNetworkType();\n\n     return {\n       id:networkId,\n       name:networkName\n     }\n   }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  checkNetwork = async (networkId=null) => {\n    const network = {...this.state.network};\n\n    network.required = this.getRequiredNetwork();\n    network.current = await this.getCurrentNetwork(networkId);\n\n    const networkInitialized = !!network.current.id;\n    network.isCorrectNetwork = !networkInitialized || network.current.id === network.required.id;\n    network.isSupportedNetwork = !network.current.id || globalConfigs.network.enabledNetworks.includes(network.current.id);\n\n    const currentNetworkChanged = network.current.id && network.current.id !== this.state.network.current.id;\n    const requiredNetworkChanged = network.required.id && network.required.id !== this.state.network.required.id;\n\n    if (!this.state.network.current.id || currentNetworkChanged || requiredNetworkChanged || !this.state.networkInitialized){\n      this.setState({\n        network,\n        networkInitialized\n      });\n    }\n\n    return network;\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    web3Providers:{},\n    CrispClient: null,\n    currentWeb3: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    contractsNetworks: {},\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    maticPlasmaClient:null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    networkInitialized:false,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n          currentSection={this.props.currentSection}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n// import NetworkIndicator from \"../../NetworkIndicator/NetworkIndicator\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n          <Flex\n            width={[0.5,8/12]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={\"flex-end\"}\n          >\n            <Flex\n              pr={[3,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile && (\n                  <>\n                    <Link\n                      mx={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n                )\n              }\n            </Flex>\n            {\n              /*\n              <Flex\n                ml={4}\n              >\n                <NetworkIndicator\n                  {...this.props}\n                />\n              </Flex>\n              */\n            }\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      token:'DAI',\n      decimals:18,\n      limit:500000,\n      protocol:'idle',\n      blockNumber:13054628,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleDAIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI AA',\n        blockNumber:13054628,\n        name:'AA_idleDAIYield',\n        token:'AA_idleDAIYield',\n        address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:false,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI BB',\n        blockNumber:13054628,\n        name:'BB_idleDAIYield',\n        token:'BB_idleDAIYield',\n        address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n      }\n    },\n    FEI:{\n      token:'FEI',\n      decimals:18,\n      limit:500000,\n      protocol:'idle',\n      blockNumber:13575397,\n      address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleFEIYield',\n        address:'0x77648a2661687ef3b05214d824503f6717311596'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleFEIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_AA',\n          address:'0x8fcD21253AaA7E228531291cC6f644d13B3cF0Ba',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleFEI AA',\n        blockNumber:13575397,\n        name:'AA_idleFEIYield',\n        token:'AA_idleFEIYield',\n        address:'0x9cE3a740Df498646939BcBb213A66BBFa1440af6'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_BB',\n          address:'0x0000000000000000000000000000000000000000',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:false,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleFEI BB',\n        blockNumber:13575397,\n        name:'BB_idleFEIYield',\n        token:'BB_idleFEIYield',\n        address:'0x2490D810BF6429264397Ba721A488b0C439aA745'\n      }\n    }\n  }\n  /*\n  yearn:{\n  \tDAI:{\n  \t  junior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  },\n  \t  senior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  }\n  \t}\n  }\n  */\n};\nexport default availableTranches;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from \"jquery\";\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from \"./connectors\";\nimport Web3Provider from \"web3-react\";\nimport { Web3Consumer } from \"web3-react\";\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from \"../FlexLoader/FlexLoader\";\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from \"../configs/globalConfigs\";\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from \"../configs/availableTokens\";\nimport availableTranches from \"../configs/availableTranches\";\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from \"rimble-ui\";\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import(\"../Dashboard/Dashboard\"));\nconst Governance = React.lazy(() => import(\"../Governance/Governance\"));\n\nclass App extends Component {\n  state = {\n    network: null,\n    cachedData: {},\n    buyToken: null,\n    currentEnv: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode: 'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme: theme,\n    currentSection: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    config:globalConfigs.network,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n    availableStrategiesNetworks: null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n    // window.functionsUtil = this.functionsUtil;\n  }\n\n  closeToastMessage = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps: null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps: props\n    });\n  }\n\n  processCustomParam = (props, prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback = null, clear_all = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    const requiredNetworkId = this.state.network.required.id;\n\n    const cachedData = { ...this.state.cachedData };\n    Object.keys(cachedData[requiredNetworkId]).forEach(key => {\n      const data = cachedData[requiredNetworkId][key];\n      if (data.expirationDate !== null) {\n        delete cachedData[requiredNetworkId][key];\n      }\n    });\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    if (storedCachedData && storedCachedData[requiredNetworkId]){\n      Object.keys(storedCachedData[requiredNetworkId]).forEach( key => {\n        const storedData = storedCachedData[requiredNetworkId][key];\n        if (storedData.expirationDate !== null){\n          delete storedCachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    this.functionsUtil.setLocalStorage('cachedData', storedCachedData, true);\n\n    await this.setState({\n      cachedData\n    }, () => {\n      if (typeof callback === 'function') {\n        callback();\n      }\n    });\n\n    return true;\n  }\n\n  setCachedData = (key, data, TTL = null, useLocalStorage = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    key = key.toLowerCase();\n    const currentTime = parseInt(Date.now() / 1000);\n    const requiredNetworkId = this.state.network.required.id;\n    const cachedKeyFound = this.state.cachedData[requiredNetworkId] ? this.state.cachedData[requiredNetworkId][key] : null;\n\n    const update_key = !cachedKeyFound || ((cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate >= currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key) {\n      const expirationDate = TTL ? currentTime + (TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage) {\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData) {\n          storedCachedData = {};\n          storedCachedData[requiredNetworkId] = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [requiredNetworkId]:{\n            ...storedCachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        };\n        \n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [requiredNetworkId]:{\n            ...prevState.cachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        }\n      }), () => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)) {\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress) {\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw: false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({ ...state, selectedTab: tabIndex }));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const availableStrategiesNetworks = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : this.state.config.requiredNetwork;\n\n    // console.log('loadAvailableTokens_1',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens).filter( networkId => this.functionsUtil.getGlobalConfig(['network','enabledNetworks']).includes(parseInt(networkId)) ).forEach (networkId => {\n      availableStrategiesNetworks[networkId] = {};\n      Object.keys(availableTokens[networkId]).forEach((strategy) => {\n\n        availableStrategiesNetworks[networkId][strategy] = Object.keys(availableTokens[networkId][strategy]).reduce((enabledTokens, token) => {\n          const tokenConfig = availableTokens[networkId][strategy][token];\n          const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n          if (tokenConfig.enabled && envEnabled) {\n            enabledTokens[token] = tokenConfig;\n          }\n          return enabledTokens;\n        }, {});\n\n        if (parseInt(networkId) === parseInt(requiredNetwork)){\n          availableStrategies[strategy] = availableStrategiesNetworks[networkId][strategy];\n        }\n      });\n    });\n\n    newState.availableStrategies = availableStrategies;\n    newState.availableStrategiesNetworks = availableStrategiesNetworks;\n\n    // console.log('availableStrategiesNetworks',availableStrategiesNetworks);\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]) {\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]) {\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy, selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig: !selectedToken ? null : this.state.tokenConfig,\n      availableTokens: !selectedToken ? null : this.state.availableTokens,\n      selectedToken: !selectedToken ? selectedToken : this.state.selectedToken,\n      selectedStrategy: !selectedStrategy ? selectedStrategy : this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if (this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',selectedStrategy,selectedToken,newState);\n\n    await this.setState(newState, callback);\n  }\n\n  async setRequiredNetwork(requiredNetwork){\n    requiredNetwork = parseInt(requiredNetwork);\n    if (globalConfigs.network.enabledNetworks.includes(requiredNetwork)){\n      this.functionsUtil.setLocalStorage('requiredNetwork',requiredNetwork);\n      // console.log('setRequiredNetwork',requiredNetwork);\n      this.functionsUtil.addEthereumChain(requiredNetwork);\n      return await this.setState(prevState => ({\n        config:{\n          ...prevState.config,\n          requiredNetwork\n        }\n      }));\n    }\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState, callback);\n    } else if (!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig: null\n      }, callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction) {\n      window.console.error = () => { };\n      window.console.warn = () => { };\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage) {\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version', false);\n      if (version !== globalConfigs.version) {\n        // Clear cached data\n        this.clearCachedData(() => {\n          // Reset Localstorage\n          this.functionsUtil.clearStoredData(['walletProvider', 'connectorName', 'themeMode', 'requiredNetwork']);\n          this.functionsUtil.setLocalStorage('version', globalConfigs.version);\n        }, true);\n      }\n\n      console.log(`Client Version: ${globalConfigs.version}`);\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode', false);\n    if (themeMode) {\n      this.setThemeMode(themeMode);\n    }\n\n    const requiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',false);\n    if (requiredNetwork){\n      this.setRequiredNetwork(requiredNetwork);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i = 0; i < iFrames.length; i++) {\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w) {\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCurrentEnvironment();\n    this.loadCustomAddress();\n  }\n\n  async loadCurrentEnvironment() {\n    const currentEnv = this.functionsUtil.getCurrentEnvironment();\n    this.setState({\n      currentEnv\n    }, async () => {\n      // const envRequiredNetwork = this.functionsUtil.getGlobalConfig(['environments',this.state.currentEnv,'requiredNetwork']);\n      // const storedRequiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',null);\n      // if (!storedRequiredNetwork || parseInt(storedRequiredNetwork) !== parseInt(envRequiredNetwork)){\n      //   const requiredNetwork = storedRequiredNetwork || envRequiredNetwork;\n      //   console.log('setRequiredNetwork',requiredNetwork);\n      //   await this.setRequiredNetwork(requiredNetwork);\n      // }\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress() {\n    if (!this.state.customAddress) {\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom') {\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress) {\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged) {\n      if (this.state.currentSection === 'landing') {\n        this.setThemeMode('light', false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode', false) || this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged) {\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage) {\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive) {\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName, walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width: this.state.width,\n      height: this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged) {\n      if (widthChanged) {\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged) {\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken: null,\n      buyModalOpened: false\n    });\n  }\n\n  openBuyModal(e, buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened: true\n    });\n  }\n\n  async logout() {\n    // Reset Custom Address\n    this.setState({\n      customAddress: null\n    });\n    // Clear cached data\n    this.clearCachedData(() => {\n      // Reset Localstorage except some keys\n      this.functionsUtil.clearStoredData(['version', 'themeMode', 'lastLogin', 'cachedData','requiredNetwork']);\n    });\n  }\n\n  setNetwork(network) {\n    this.setState({\n      network,\n      availableStrategies:null\n    });\n  }\n\n  setConnector(connectorName, walletProvider) {\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider) {\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ((connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if (connectorName === 'Injected') {\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider) {\n        case 'Metamask':\n          if (!hasMetamask && hasDapper) {\n            walletProvider = 'Dapper';\n          }\n          break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask) {\n            walletProvider = 'Metamask';\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    }, () => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode, store = true) {\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled) {\n      themeMode = 'light';\n    }\n\n    switch (themeMode) {\n      default:\n      case 'light':\n        selectedTheme = theme;\n        break;\n      case 'dark':\n        selectedTheme = themeDark;\n        break;\n    }\n\n    if (store) {\n      this.functionsUtil.setLocalStorage('themeMode', themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection) {\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance', 'enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize: 4,\n            fontWeight: 2\n          }}\n          loaderProps={{\n            mb: 3,\n            size: '80px',\n            color: 'primary'\n          }}\n          flexProps={{\n            my: 3,\n            flexDirection: 'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer\n              recreateOnNetworkChange={false}\n              recreateOnAccountChange={false}\n            >\n              {context => {\n                //console.log('Web3Consumer render',context);\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    connectors={connectors}\n                    config={this.state.config}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    availableTranches={availableTranches}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    currentSection={this.state.currentSection}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                    availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        web3Infura,\n                        web3Polygon,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        checkNetwork,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        contractsNetworks,\n                        accountBalanceLow,\n                        networkInitialized,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper,\n                        initContractCustomProvider\n                      }) => {\n                        return (\n                          <Box>\n                            <Switch>\n                              <Route\n                                path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                                render={\n                                  (props) => \n                                    <Suspense\n                                      fallback={SuspenseLoader}\n                                    >\n                                      <Dashboard\n                                        {...props}\n                                        web3={web3}\n                                        modals={modals}\n                                        network={network}\n                                        context={context}\n                                        account={account}\n                                        isDashboard={true}\n                                        initWeb3={initWeb3}\n                                        biconomy={biconomy}\n                                        isMobile={isMobile}\n                                        simpleID={simpleID}\n                                        contracts={contracts}\n                                        web3Infura={web3Infura}\n                                        web3Polygon={web3Polygon}\n                                        initAccount={initAccount}\n                                        permitClient={permitClient}\n                                        initSimpleID={initSimpleID}\n                                        initContract={initContract}\n                                        transactions={transactions}\n                                        buyToken={this.state.buyToken}\n                                        logout={this.logout.bind(this)}\n                                        accountBalance={accountBalance}\n                                        themeMode={this.state.themeMode}\n                                        theme={this.state.selectedTheme}\n                                        validateAccount={validateAccount}\n                                        currentEnv={this.state.currentEnv}\n                                        connecting={this.state.connecting}\n                                        cachedData={this.state.cachedData}\n                                        setToken={this.setToken.bind(this)}\n                                        accountValidated={accountValidated}\n                                        getTokenDecimals={getTokenDecimals}\n                                        rejectValidation={rejectValidation}\n                                        tokenConfig={this.state.tokenConfig}\n                                        contractsNetworks={contractsNetworks}\n                                        availableTranches={availableTranches}\n                                        getAccountBalance={getAccountBalance}\n                                        accountBalanceLow={accountBalanceLow}\n                                        accountInizialized={accountInizialized}\n                                        networkInitialized={networkInitialized}\n                                        selectedToken={this.state.selectedToken}\n                                        connectorName={this.state.connectorName}\n                                        setStrategy={this.setStrategy.bind(this)}\n                                        userRejectedConnect={userRejectedConnect}\n                                        accountBalanceToken={accountBalanceToken}\n                                        initializeContracts={initializeContracts}\n                                        walletProvider={this.state.walletProvider}\n                                        buyModalOpened={this.state.buyModalOpened}\n                                        erc20ForwarderClient={erc20ForwarderClient}\n                                        contractsInitialized={contractsInitialized}\n                                        openBuyModal={this.openBuyModal.bind(this)}\n                                        rejectAccountConnect={rejectAccountConnect}\n                                        handleMenuClick={this.selectTab.bind(this)}\n                                        setConnector={this.setConnector.bind(this)}\n                                        setThemeMode={this.setThemeMode.bind(this)}\n                                        availableTokens={this.state.availableTokens}\n                                        closeBuyModal={this.closeBuyModal.bind(this)}\n                                        setCachedData={this.setCachedData.bind(this)}\n                                        selectedStrategy={this.state.selectedStrategy}\n                                        userRejectedValidation={userRejectedValidation}\n                                        clearCachedData={this.clearCachedData.bind(this)}\n                                        setStrategyToken={this.setStrategyToken.bind(this)}\n                                        accountValidationPending={accountValidationPending}\n                                        availableStrategies={this.state.availableStrategies}\n                                        setCurrentSection={this.setCurrentSection.bind(this)}\n                                        connectAndValidateAccount={connectAndValidateAccount}\n                                        contractMethodSendWrapper={contractMethodSendWrapper}\n                                        setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                        initContractCustomProvider={initContractCustomProvider}\n                                        setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                      />\n                                    </Suspense>\n\n                                }\n                              >\n                              </Route>\n                              {\n                                governanceEnabled && (\n                                  <Route\n                                    path=\"/governance/:section?/:item_id?\"\n                                    render={\n                                      (props) =>\n                                        <Suspense\n                                          fallback={SuspenseLoader}\n                                        >\n                                          <Governance\n                                            {...props}\n                                            web3={web3}\n                                            modals={modals}\n                                            network={network}\n                                            context={context}\n                                            account={account}\n                                            initWeb3={initWeb3}\n                                            biconomy={biconomy}\n                                            isMobile={isMobile}\n                                            simpleID={simpleID}\n                                            isGovernance={true}\n                                            contracts={contracts}\n                                            web3Infura={web3Infura}\n                                            web3Polygon={web3Polygon}\n                                            initAccount={initAccount}\n                                            initSimpleID={initSimpleID}\n                                            initContract={initContract}\n                                            checkNetwork={checkNetwork}\n                                            transactions={transactions}\n                                            buyToken={this.state.buyToken}\n                                            logout={this.logout.bind(this)}\n                                            accountBalance={accountBalance}\n                                            themeMode={this.state.themeMode}\n                                            theme={this.state.selectedTheme}\n                                            validateAccount={validateAccount}\n                                            currentEnv={this.state.currentEnv}\n                                            connecting={this.state.connecting}\n                                            cachedData={this.state.cachedData}\n                                            setToken={this.setToken.bind(this)}\n                                            accountValidated={accountValidated}\n                                            getTokenDecimals={getTokenDecimals}\n                                            rejectValidation={rejectValidation}\n                                            tokenConfig={this.state.tokenConfig}\n                                            contractsNetworks={contractsNetworks}\n                                            getAccountBalance={getAccountBalance}\n                                            accountBalanceLow={accountBalanceLow}\n                                            accountInizialized={accountInizialized}\n                                            networkInitialized={networkInitialized}\n                                            selectedToken={this.state.selectedToken}\n                                            connectorName={this.state.connectorName}\n                                            setStrategy={this.setStrategy.bind(this)}\n                                            userRejectedConnect={userRejectedConnect}\n                                            accountBalanceToken={accountBalanceToken}\n                                            initializeContracts={initializeContracts}\n                                            walletProvider={this.state.walletProvider}\n                                            buyModalOpened={this.state.buyModalOpened}\n                                            contractsInitialized={contractsInitialized}\n                                            openBuyModal={this.openBuyModal.bind(this)}\n                                            rejectAccountConnect={rejectAccountConnect}\n                                            handleMenuClick={this.selectTab.bind(this)}\n                                            setConnector={this.setConnector.bind(this)}\n                                            setThemeMode={this.setThemeMode.bind(this)}\n                                            availableTokens={this.state.availableTokens}\n                                            closeBuyModal={this.closeBuyModal.bind(this)}\n                                            setCachedData={this.setCachedData.bind(this)}\n                                            selectedStrategy={this.state.selectedStrategy}\n                                            userRejectedValidation={userRejectedValidation}\n                                            clearCachedData={this.clearCachedData.bind(this)}\n                                            setStrategyToken={this.setStrategyToken.bind(this)}\n                                            accountValidationPending={accountValidationPending}\n                                            availableStrategies={this.state.availableStrategies}\n                                            setCurrentSection={this.setCurrentSection.bind(this)}\n                                            connectAndValidateAccount={connectAndValidateAccount}\n                                            contractMethodSendWrapper={contractMethodSendWrapper}\n                                            setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                            setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                          />\n                                        </Suspense>\n                                    }\n                                  >\n                                  </Route>\n                                )\n                              }\n                              <Route>\n                                <Header\n                                  modals={modals}\n                                  network={network}\n                                  context={context}\n                                  account={account}\n                                  initWeb3={initWeb3}\n                                  isMobile={isMobile}\n                                  contracts={contracts}\n                                  initAccount={initAccount}\n                                  initContract={initContract}\n                                  buyToken={this.state.buyToken}\n                                  accountBalance={accountBalance}\n                                  logout={this.logout.bind(this)}\n                                  validateAccount={validateAccount}\n                                  connecting={this.state.connecting}\n                                  accountValidated={accountValidated}\n                                  getTokenDecimals={getTokenDecimals}\n                                  rejectValidation={rejectValidation}\n                                  setToken={e => { this.setToken(e) }}\n                                  tokenConfig={this.state.tokenConfig}\n                                  contractsNetworks={contractsNetworks}\n                                  getAccountBalance={getAccountBalance}\n                                  accountBalanceLow={accountBalanceLow}\n                                  networkInitialized={networkInitialized}\n                                  selectedToken={this.state.selectedToken}\n                                  connectorName={this.state.connectorName}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountBalanceToken={accountBalanceToken}\n                                  walletProvider={this.state.walletProvider}\n                                  buyModalOpened={this.state.buyModalOpened}\n                                  contractsInitialized={contractsInitialized}\n                                  openBuyModal={this.openBuyModal.bind(this)}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  handleMenuClick={this.selectTab.bind(this)}\n                                  setConnector={this.setConnector.bind(this)}\n                                  availableTokens={this.state.availableTokens}\n                                  closeBuyModal={this.closeBuyModal.bind(this)}\n                                  userRejectedValidation={userRejectedValidation}\n                                  accountValidationPending={accountValidationPending}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                  availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                />\n\n                                {\n                                  this.state.route === \"onboarding\" && (\n                                    <Web3Debugger\n                                      web3={web3}\n                                      account={account}\n                                      accountBalance={accountBalance}\n                                      accountBalanceToken={accountBalanceToken}\n                                      accountBalanceLow={accountBalanceLow}\n                                      initAccount={initAccount}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountValidated={accountValidated}\n                                      accountValidationPending={accountValidationPending}\n                                      rejectValidation={rejectValidation}\n                                      userRejectedValidation={userRejectedValidation}\n                                      validateAccount={validateAccount}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      modals={modals}\n                                      network={network}\n                                      transaction={transaction}\n                                    />\n                                  )\n                                }\n\n                                {\n                                  this.state.route === \"default\" && (\n                                    <Switch>\n                                      <Route exact path=\"/\"\n                                        render={(props) =>\n                                          <Suspense\n                                            fallback={SuspenseLoader}\n                                          >\n                                            <Landing\n                                              {...props}\n                                              web3={web3}\n                                              network={network}\n                                              account={account}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              initContract={initContract}\n                                              innerWidth={this.state.width}\n                                              logout={this.logout.bind(this)}\n                                              innerHeight={this.state.height}\n                                              accountBalance={accountBalance}\n                                              themeMode={this.state.themeMode}\n                                              theme={this.state.selectedTheme}\n                                              setToken={e => {this.setToken(e)}}\n                                              cachedData={this.state.cachedData}\n                                              currentEnv={this.state.currentEnv}\n                                              connecting={this.state.connecting}\n                                              selectedTab={this.state.selectedTab}\n                                              tokenConfig={this.state.tokenConfig}\n                                              accountBalanceLow={accountBalanceLow}\n                                              getAccountBalance={getAccountBalance}\n                                              availableTranches={availableTranches}\n                                              contractsNetworks={contractsNetworks}\n                                              networkInitialized={networkInitialized}\n                                              customAddress={this.state.customAddress}\n                                              selectedToken={this.state.selectedToken}\n                                              accountBalanceToken={accountBalanceToken}\n                                              closeToastMessage={this.closeToastMessage}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              setThemeMode={this.setThemeMode.bind(this)}\n                                              processCustomParam={this.processCustomParam}\n                                              availableTokens={this.state.availableTokens}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              updateSelectedTab={this.selectTab.bind(this)}\n                                              toastMessageProps={this.state.toastMessageProps}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              availableStrategies={this.state.availableStrategies}\n                                              setCurrentSection={this.setCurrentSection.bind(this)}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                              availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                            />\n                                            <CookieConsent\n                                              expires={365}\n                                              buttonText={\"Ok\"}\n                                              location={\"bottom\"}\n                                              acceptOnScroll={true}\n                                              cookieName={\"cookieAccepted\"}\n                                              acceptOnScrollPercentage={5}\n                                              style={{ background: \"rgba(255,255,255,0.95)\", zIndex: '9999999' }}\n                                              buttonStyle={{ display: isMobile ? \"block\" : \"none\", backgroundColor: '#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\" }}\n                                            >\n                                              <Flex flexDirection={'row'} alignItems={['flex-start', 'center']} justifyContent={'flex-start'} maxHeight={['150px', 'initial']} style={isMobile ? { overflowY: 'scroll' } : null}>\n                                                <Image display={['none', 'block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                                <Text pl={[0, 3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                                  This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                                  You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                              </Text>\n                                              </Flex>\n                                            </CookieConsent>\n                                          </Suspense>\n                                        }\n                                      ></Route>\n                                      <Route exact path=\"/terms-of-service\">\n                                        <Tos />\n                                      </Route>\n                                      <Route>\n                                        <PageNotFound />\n                                      </Route>\n                                    </Switch>\n                                  )\n                                }\n                              </Route>\n                            </Switch>\n                            <TransactionToastUtil\n                              transactions={transactions}\n                              themeMode={this.state.themeMode}\n                            />\n                          </Box>\n                        )\n                      }}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsUnderManagement extends Component {\n\n  state = {\n    totalAUM:null,\n    totalAUMEndOfYear:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalAUM();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalAUM();\n    }\n  }\n\n  async loadTotalAUM(){\n\n    const allNetworks = this.props.allNetworks || false;\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || (allNetworks && this.state.totalAUM)){\n      return true;\n    }\n\n    if (this.props.totalAUM && this.props.totalAUMEndOfYear){\n      return this.setState({\n        totalAUM:this.props.totalAUM,\n        totalAUMEndOfYear:this.props.totalAUMEndOfYear\n      });\n    }\n\n    const aggregatedStatsMethodParams = this.props.aggregatedStatsMethodParams || [true,allNetworks];\n\n    const {\n      avgAPY,\n      totalAUM\n    } = typeof this.props.aggregatedStatsMethod === 'function' ? await this.props.aggregatedStatsMethod(...aggregatedStatsMethodParams) : await this.functionsUtil.getAggregatedStats(...aggregatedStatsMethodParams);\n\n    let totalAUMEndOfYear = this.functionsUtil.BNify(0);\n    if (!this.functionsUtil.BNify(totalAUM).isNaN() && !this.functionsUtil.BNify(avgAPY).isNaN()){\n      totalAUMEndOfYear = totalAUM.plus(totalAUM.times(avgAPY.div(100)));\n    }\n\n    return this.setState({\n      totalAUM,\n      totalAUMEndOfYear\n    });\n  }\n\n  render() {\n    return this.state.totalAUM ? (\n      <Box\n        width={1}\n        {...this.props.flexProps}\n      >\n        <CountUp\n          delay={0}\n          decimals={4}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          duration={31536000}\n          start={parseFloat(this.state.totalAUM)}\n          end={parseFloat(this.state.totalAUMEndOfYear)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,4) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              style={ this.props.counterStyle ? this.props.counterStyle : {\n                display:'block',\n                color:'dark-gray',\n                whiteSpace:'nowrap',\n                fontFamily:this.props.theme.fonts.counter,\n                fontWeight:this.props.theme.fontWeights[5],\n                textAlign: this.props.isMobile ? 'center' : 'right',\n                fontSize: this.props.isMobile ? '1.6em' : this.props.theme.fontSizes[6]\n              }}\n              ref={countUpRef}\n            />\n          )}\n        </CountUp>\n        {\n          (typeof this.props.subtitle === 'undefined' || this.props.subtitle) && (\n            <Title\n              fontWeight={3}\n              fontSize={[2,2]}\n              color={'cellTitle'}\n              textAlign={['center','right']}\n              {...this.props.subtitleProps}\n            >\n              <Text.span fontWeight={'inherit'} color={'inherit'} fontSize={'inherit'}>{this.props.subtitle || 'Assets Under Management'}</Text.span>\n            </Title>\n          )\n        }\n      </Box>\n    ) : (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={this.props.loaderAlign || 'center'}\n      >\n        <Loader\n          size={\"30px\"}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsUnderManagement;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://idlelabs.notion.site/Idle-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Text, Icon, Image, Button, Link, Flex } from \"rimble-ui\";\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'link':\n        CustomComponent = Link;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'bgIcon':\n        CustomComponent = (props) => (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={props.bgColor}\n          >\n            <Icon\n              align={'center'}\n              name={customValue}\n              color={props.color}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontWeight:3,\n      height:'45px',\n      fontSize:[2,3],\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        color={'link'}\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","// import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\n// import SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import GenericChart from '../GenericChart/GenericChart';\n// import CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport { Image, Text, Loader, Button, Flex, Icon } from \"rimble-ui\";\n// import VariationNumber from '../VariationNumber/VariationNumber';\n// import AllocationChart from '../AllocationChart/AllocationChart';\n// import CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n    // console.log('componentDidMount',this.props.protocol,this.props.token,this.props.tranche);\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractsInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        output = (\n          <Image src={`images/protocols/${this.props.protocol}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${this.props.token}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.values(this.state[fieldInfo.name]).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.4em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedValue}}></Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex, Link } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return null;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // console.log(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens,output);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n\n              // console.log('apiResultsAprChart',this.props.tokenConfig.token,this.props.tokenConfig.address,this.props.network.required);\n\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              let itemIndex = 0;\n              const totalItems = apiResultsAprChart.length;\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                const itemPos = Math.floor(itemIndex++/totalItems*100);\n                aprChartData[0].data.push({ x, y, itemPos });\n              });\n            }\n\n            if (aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfig = this.props.tokenConfig || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? (<Text {...fieldProps}>N/A</Text>) : (this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : (this.functionsUtil.BNify(this.state.score).lte(0) ? (<Text {...fieldProps}>-</Text>) : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'link':\n            CustomComponent = Link;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n\n        // Custom Field Props\n        const customFieldName = Object.values(fieldInfo.path).pop();\n        if (this.props.tokenConfig[`${customFieldName}Props`]){\n          const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n          // Replace props\n          if (customFieldProps && Object.keys(customFieldProps).length){\n            Object.keys(customFieldProps).forEach(p => {\n              fieldProps[p] = customFieldProps[p];\n            });\n          }\n        }\n\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n"],"sourceRoot":""}