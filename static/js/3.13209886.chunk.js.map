{"version":3,"sources":["AssetsUnderManagement/AssetsUnderManagement.js","Landing/Landing.module.scss","HowItWorks/HowItWorks.module.scss","StrategyBox/StrategyBox.module.scss","NewsletterForm/NewsletterForm.module.scss","Faq/Faq.js","FlexCards/FlexCards.js","AuditCard/AuditCard.js","HowItWorks/HowItWorks.js","StrategyBox/StrategyBox.js","NewsletterForm/NewsletterForm.js","FloatingToastMessage/FloatingToastMessage.js","Landing/Landing.js"],"names":["AssetsUnderManagement","state","totalAUM","totalAUMEndOfYear","functionsUtil","this","setProps","props","FunctionsUtil","loadUtils","loadTotalAUM","prevProps","prevState","contractsInitialized","availableStrategies","JSON","stringify","allNetworks","getAggregatedStats","avgAPY","plus","times","div","setState","_this2","react__WEBPACK_IMPORTED_MODULE_9___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_10__","width","react_countup__WEBPACK_IMPORTED_MODULE_8___default","delay","decimals","decimal","separator","useEasing","duration","start","parseFloat","end","formattingFn","n","formatMoney","_ref2","countUpRef","style","counterStyle","display","color","whiteSpace","fontFamily","theme","fonts","counter","fontWeight","fontWeights","textAlign","isMobile","fontSize","fontSizes","ref","subtitle","_Title_Title__WEBPACK_IMPORTED_MODULE_7__","Object","assign","subtitleProps","span","alignItems","justifyContent","loaderAlign","size","Component","module","exports","mainViewport","headerContainer","bgContainer","button","graySection","whiteSection","howItWork","skewBg","bgHeart","platformLogo","bulletCard","bulletCardFirst","bulletCardActive","bulletPoint","bulletRight","bulletTop","bulletLeft","bulletBottom","bulletBottomLeft","bulletBottomBottom","bulletMobile","carouselItem","pos1","carouselItemMobile","pos2","pos3","bentTube","bounceArrow","bounce","rebalanceCircle","spin","carouselDesc","selected","carouselNav","footer","socialIcon","gradientBackground","bentTubeLeft","bentTubeRight","bentTubeActive","bg1","ribbon","infura","polygon","content","gradientButton","Faq","openedAnswer","selectedSection","generalQuestions","q","guidelinesQuestions","ratesQuestions","section","objectSpread","e","i","preventDefault","_this$state","generalDivs","map","question","react_default","Faquestion","handleClick","toggleAnswer","isOpened","key","concat","answer","pt","guidelinesDivs","ratesDivs","isGeneralSelected","isGuidelinesSelected","isRatesSelected","index_es","flexDirection","Title","mb","mt","component","Heading","h4","px","borderBottom","onClick","setSection","className","FlexCards","maxItemPerc","itemPerc","itemsPerRow","Math","floor","cards","length","flexWrap","p","index","DashboardCard","isInteractive","cardProps","height","mx","flex","min","link","href","target","rel","src","image","maxHeight","imageProps","AuditCard","my","window","open","date","title","hoverColor","borderRadius","ml","transform","name","HowItWorks","id","maxWidth","position","styles","h3","lineHeight","StrategyBox","network","selectedToken","loadData","_callee3","strategyInfo","aprs","tokensAprs","highestValue","availableTokens","regenerator_default","wrap","_context3","prev","next","_this","getGlobalConfig","strategy","abrupt","t0","type","token","availableStrategiesNetworks","networkId","t1","getAprsFromApi","sent","lendRates","forEach","aprInfo","tokenAPR","BNify","apy","tokenSymbol","lt","asyncForEach","keys","asyncToGenerator","mark","_callee","tokenConfig","_context","getTokenAprs","avgApr","stop","_x","apply","arguments","_ref3","_callee2","_context2","_x2","newProps","required","current","url","location","strategyEnv","currentEnv","getCurrentEnvironment","enabledEnvs","includes","setRequiredNetwork","getDashboardSectionUrl","_this3","networkInfo","availableTranches","protocol","mr","isVisible","provider","backgroundColor","py","top","right","icon","minHeight","desc","comingSoon","borderRight","colors","divider","placement","message","AssetField","fieldInfo","showTooltip","flexProps","selectedStrategy","showLoader","TrancheField","tranche","trancheConfig","AA","BB","chartProps","lineWidth","rowId","boxShadow","fontStyle","goToStrategy","NewsletterForm","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","validated","privacy","email","handleSubmit","bind","assertThisInitialized","handleValidation","messageColor","axios","post","globalConfigs","newsletterSubscription","endpoint","then","r","data","status","catch","err","checked","value","parentNode","classList","add","onSubmit","Field","label","Input","outline","border","pl","pb","placeholder","onChange","toggleCheckbox","FloatingToastMessage","ToastComponent","variant","ToastMessage","Success","Processing","Failure","bottom","zIndex","closeElem","secondaryMessage","handleClose","scrolling","Landing","carouselMax","carouselIndex","activeCarousel","runConfetti","activeBullet","protocolsAprs","testPerformed","totalAllocation","visibleStrategies","landingStrategies","carouselOffsetLeft","setActiveCarousel","carouselIntervalID","protocolsAllocations","randomAllocationEnabled","handleCarousel","action","multiplier","$element","jQuery","left","processScrolling","bulletCards","document","getElementsByClassName","offsetParent","offsetY","offsetTop","scrollY","parseInt","getAllocations","newState","exchangeRates","protocolsBalances","protocolsAllocationsPerc","remainingAllocation","totProtocols","protocols","protocolInfo","contractName","protocolAddr","_ref4","protocolBalance","tokenDecimals","exchangeRate","protocolAllocation","address","toLowerCase","Promise","all","getProtocolBalance","getTokenDecimals","functions","getTokenExchangeRate","slicedToArray","fixTokenDecimals","toString","alloc","random","protocolAllocationPerc","getAvgApr","getAprs","Aprs","addresses","genericIdleCall","addr","info","addrIndex","indexOf","protocolApr","toEth","startLending","_callee4","_context4","updateSelectedTab","setConfetti","connectAndGoToRoute","route","goToLocation","account","connectAndValidateAccount","_callee5","_context5","hash","setCurrentSection","loadStrategies","currentNetworkId","getRequiredNetworkId","filter","s","visible","availableNetworks","processCustomParam","requiredNetworkChanged","networkInitialized","values","tokens","push","paddingBottom","isCorrectNetwork","pr","overflow","max","innerHeight","h1","textAlignLast","h2","RoundButton","overflowY","transition","strategyIndex","src_StrategyBox_StrategyBox","RoundIconButton","buttonProps","iconName","disabled","src_HowItWorks_HowItWorks","textOverflow","src_AuditCard_AuditCard","h5","ExtLink","sandbox","src_FlexCards_FlexCards","src_Faq_Faq","src_NewsletterForm_NewsletterForm","Footer","toastMessageProps","src_FloatingToastMessage_FloatingToastMessage","closeToastMessage","FlexLoader","textProps","textSize","loaderProps","text"],"mappings":"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","file":"static/js/3.13209886.chunk.js","sourcesContent":["import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsUnderManagement extends Component {\n\n  state = {\n    totalAUM:null,\n    totalAUMEndOfYear:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalAUM();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalAUM();\n    }\n  }\n\n  async loadTotalAUM(){\n\n    const allNetworks = this.props.allNetworks || false;\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || (allNetworks && this.state.totalAUM)){\n      return true;\n    }\n\n    const {\n      avgAPY,\n      totalAUM\n    } = await this.functionsUtil.getAggregatedStats(true,allNetworks);\n\n    const totalAUMEndOfYear = totalAUM.plus(totalAUM.times(avgAPY.div(100)));\n\n    this.setState({\n      totalAUM,\n      totalAUMEndOfYear\n    });\n  }\n\n  render() {\n    return this.state.totalAUM ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimals={4}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          duration={31536000}\n          start={parseFloat(this.state.totalAUM)}\n          end={parseFloat(this.state.totalAUMEndOfYear)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,4) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              style={ this.props.counterStyle ? this.props.counterStyle : {\n                display:'block',\n                color:'dark-gray',\n                whiteSpace:'nowrap',\n                fontFamily:this.props.theme.fonts.counter,\n                fontWeight:this.props.theme.fontWeights[5],\n                textAlign: this.props.isMobile ? 'center' : 'right',\n                fontSize: this.props.isMobile ? '1.6em' : this.props.theme.fontSizes[6]\n              }}\n              ref={countUpRef}\n            />\n          )}\n        </CountUp>\n        {\n          (typeof this.props.subtitle === 'undefined' || this.props.subtitle) && (\n            <Title\n              fontWeight={3}\n              fontSize={[2,2]}\n              color={'cellTitle'}\n              textAlign={['center','right']}\n              {...this.props.subtitleProps}\n            >\n              {\n                this.props.subtitle ? this.props.subtitle : (\n                  <Text.span fontWeight={'inherit'} color={'inherit'} fontSize={'inherit'}>Assets Under Management{/*<Text.span color={'cellTitle'} fontWeight={3} fontSize={'70%'}>(V3 + V4)</Text.span>*/}</Text.span>\n                )\n              }\n            </Title>\n          )\n        }\n      </Box>\n    ) : (\n      <Flex\n        alignItems={'center'}\n        justifyContent={this.props.loaderAlign || 'center'}\n      >\n        <Loader\n          size={\"30px\"}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsUnderManagement;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainViewport\":\"Landing_mainViewport__foI3b\",\"headerContainer\":\"Landing_headerContainer__TvHkH\",\"bgContainer\":\"Landing_bgContainer__2WN2x\",\"button\":\"Landing_button__1Dxq1\",\"graySection\":\"Landing_graySection__2p8Tj\",\"whiteSection\":\"Landing_whiteSection__3bI3Y\",\"howItWork\":\"Landing_howItWork__1ukLM\",\"skewBg\":\"Landing_skewBg__gqJRL\",\"bgHeart\":\"Landing_bgHeart__NA46m\",\"platformLogo\":\"Landing_platformLogo__1hJaf\",\"bulletCard\":\"Landing_bulletCard__1JBcJ\",\"bulletCardFirst\":\"Landing_bulletCardFirst__HI7ri\",\"bulletCardActive\":\"Landing_bulletCardActive__AVHnI\",\"bulletPoint\":\"Landing_bulletPoint__uVUzZ\",\"bulletRight\":\"Landing_bulletRight__3vjg5\",\"bulletTop\":\"Landing_bulletTop__2qDPm\",\"bulletLeft\":\"Landing_bulletLeft__MYQV4\",\"bulletBottom\":\"Landing_bulletBottom__1vQq-\",\"bulletBottomLeft\":\"Landing_bulletBottomLeft__1bIB1\",\"bulletBottomBottom\":\"Landing_bulletBottomBottom__mqq0k\",\"bulletMobile\":\"Landing_bulletMobile__1dlqp\",\"carouselItem\":\"Landing_carouselItem__2leMl\",\"pos1\":\"Landing_pos1__tMo3K\",\"carouselItemMobile\":\"Landing_carouselItemMobile__2GqCc\",\"pos2\":\"Landing_pos2__2HmVh\",\"pos3\":\"Landing_pos3__28UmQ\",\"bentTube\":\"Landing_bentTube__2dNhi\",\"bounceArrow\":\"Landing_bounceArrow__3SKSY\",\"bounce\":\"Landing_bounce__z5RHk\",\"rebalanceCircle\":\"Landing_rebalanceCircle__2UwcI\",\"spin\":\"Landing_spin__1_Jg0\",\"carouselDesc\":\"Landing_carouselDesc__351uo\",\"selected\":\"Landing_selected__190kp\",\"carouselNav\":\"Landing_carouselNav__3oCdi\",\"footer\":\"Landing_footer__1wRkb\",\"socialIcon\":\"Landing_socialIcon__1nHuK\",\"gradientBackground\":\"Landing_gradientBackground__2DtpV\",\"bentTubeLeft\":\"Landing_bentTubeLeft__3844Y\",\"bentTubeRight\":\"Landing_bentTubeRight__2akHv\",\"bentTubeActive\":\"Landing_bentTubeActive__3rtbt\",\"bg1\":\"Landing_bg1__23mxk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bulletCard\":\"HowItWorks_bulletCard__2Ym_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ribbon\":\"StrategyBox_ribbon__1gxyX\",\"infura\":\"StrategyBox_infura__2FN8L\",\"polygon\":\"StrategyBox_polygon__2M0hT\",\"content\":\"StrategyBox_content__1Nsg-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"NewsletterForm_gradientButton__PMcBV\"};","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Faquestion from '../Faquestion/Faquestion';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Faq extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection: 'general',\n    generalQuestions: [\n      {\n        q: 'What is Idle?',\n        a: `Idle is a decentralized rebalancing protocol that allows users to automatically and algorithmically manage their digital asset allocation among different third-party DeFi protocols. You can choose to maximize your interest rate returns through our MaxYield strategy or minimize your risk exposure through our RiskAdjusted allocation strategy.`\n      },\n      {\n        q: 'What third-party protocols and assets does Idle support?',\n        a: `Idle connects with Compound, Aave, dYdX, Fulcrum, and DSR, and supports DAI, USDC and USDT.  Security is fundamental at Idle, meaning that our products will only connect to protocols that are audited by a top security firm and battle-tested in terms of time in market and digital assets locked. To add more security, we passed through multiple audit reviews and we use <a href=\"https://defiscore.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">DeFiScore</a> risk assessment to evaluate the risk across DeFi protocols.`\n      },\n      {\n        q: 'Can you walk me through an example?',\n        a: `When utilizing the Idle protocol, a user supplies capital for lending as a part of Idle’s non-custodial smart contract pools; the protocol will automatically rebalance the pool’s current allocation to achieve optimized interest rates, based on the strategy.`\n      }\n    ],\n    guidelinesQuestions: [\n      {\n        q: 'How do I manage my assets?',\n        a: `You can access Idle’s user dashboard where you can deposit funds, monitor performances and see insights, rebalance funds, convert from FIAT to crypto, and redeem back your assets.`\n      },\n      {\n        q: 'How does the rebalancing process work?',\n        a: `A rebalance calculation involves assessing the total assets within a pool, incorporating underlying protocol rate functions and levels of supply and demand, and finally determining an allocation that achieves the optimal interest rate possible after the rebalance takes place, based on the strategy.`\n      },\n      {\n        q: 'What are IdleTokens?',\n        a: `IdleTokens represent your balance in the protocol, and accrue interest over time. As a specific Idle’s pool earns interest, its idleToken becomes convertible into an increasing quantity of the underlying asset. IdleTokens conform to the ERC-20 standard.`\n      }\n    ],\n    ratesQuestions: [\n      {\n        q: 'Has Idle had a security audit?',\n        a: `Idle completed multiple and incremental security audits with Quantstamp in December 2019 and April/May 2020 (<a href=\"https://certificate.quantstamp.com/full/idle-finance\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">view the report</a>). Any issues affecting the performance of the protocol or security of funds have been resolved. Users should review our Terms of Service before using the protocol.`\n      },\n      {\n        q: 'How are digital assets custodied?',\n        a: `Idle does not custody digital assets. When you interact with the Idle protocol, your digital assets will be sent to a smart contract that Idle does not control. The smart contract has the concept of “accounts,” to which only you have access. These accounts have balances for each asset, which then are lent out to underlying protocols. When you want to withdraw, the smart contract interacts with the underlying platforms to withdraw digital assets and route them to your wallet.`\n      },\n      {\n        q: 'Who is the administrator of the Idle smart contract?',\n        a: `We have few administrative privileges (eg pause deposits in case of emergency), but we cannot, in any case, withdraw or move user funds directly. You can read more about here <a href=\"https://developers.idle.finance/advanced/admin-powers\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developers.idle.finance/advanced/admin-powers</a>`\n      }\n    ]\n  };\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const {generalQuestions, selectedSection, guidelinesQuestions, ratesQuestions} = this.state;\n    const generalDivs = generalQuestions.map((question, i) => (\n      <Faquestion handleClick={ e => this.toggleAnswer(e,i) } isOpened={this.state.openedAnswer === i} key={`general-${i}`} question={question.q} answer={question.a} pt={i === 0 ? 0 : ''} />\n    ));\n    const guidelinesDivs = guidelinesQuestions.map((question, i) => (\n      <Faquestion handleClick={ e => this.toggleAnswer(e,i) } isOpened={this.state.openedAnswer === i} key={`guidelines-${i}`} question={question.q} answer={question.a} pt={i === 0 ? 0 : ''} />\n    ));\n    const ratesDivs = ratesQuestions.map((question, i) => (\n      <Faquestion handleClick={ e => this.toggleAnswer(e,i) } isOpened={this.state.openedAnswer === i} key={`rates-${i}`} question={question.q} answer={question.a} pt={i === 0 ? 0 : ''} />\n    ));\n    const isGeneralSelected = selectedSection === 'general';\n    const isGuidelinesSelected = selectedSection === 'guidelines';\n    const isRatesSelected = selectedSection === 'rates';\n    return (\n      <Flex\n        flexDirection={'column'}\n      >\n        <Title\n          mb={3}\n          mt={[3,4]}\n          fontWeight={5}\n          fontSize={[5,6]}\n          component={Heading.h4}\n        >\n          Frequently asked questions\n        </Title>\n\n        <Flex\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n          alignItems={'center'}\n        >\n          <Flex width={[1,3/5]} px={[2,0]} flexDirection={'row'} justifyContent={'space-between'}>\n            <Flex width={1/3} textAlign={'center'} justifyContent={'center'} borderBottom={ isGeneralSelected ? '3px solid #0036ff' : 'none'}>\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[2, 3]}\n                textAlign={'center'}\n                onClick={() => this.setSection('general')}\n                color={isGeneralSelected ? 'blue' : 'copyColor'}\n                className={['pointer', isGeneralSelected ? 'selected' : '']}\n              >\n                General\n              </Text>\n            </Flex>\n            <Flex width={1/3} textAlign={'center'} justifyContent={'center'} borderBottom={ isGuidelinesSelected ? '3px solid #0036ff' : 'none'}>\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[2, 3]}\n                textAlign={'center'}\n                onClick={() => this.setSection('guidelines')}\n                color={isGuidelinesSelected ? 'blue' : 'copyColor'}\n                className={['pointer', isGuidelinesSelected ? 'selected' : '']}\n              >\n                Liquidity Providers\n              </Text>\n            </Flex>\n            <Flex width={1/3} textAlign={'center'} justifyContent={'center'} borderBottom={ isRatesSelected ? '3px solid #0036ff' : 'none'}>\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[2, 3]}\n                textAlign={'center'}\n                onClick={() => this.setSection('rates')}\n                color={isRatesSelected ? 'blue' : 'copyColor'}\n                className={['pointer', isRatesSelected ? 'selected' : '']}\n              >\n                Security\n              </Text>\n            </Flex>\n          </Flex>\n          <Box width={1} mt={[3, 4]} mb={[4, 0]}>\n            {isGeneralSelected && generalDivs}\n            {isGuidelinesSelected && guidelinesDivs}\n            {isRatesSelected && ratesDivs}\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faq;\n","import React, { Component } from 'react';\nimport { Flex, Link, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FlexCards extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    const maxItemPerc = this.props.maxItemPerc || 100;\n    const itemPerc = this.props.itemsPerRow ? Math.floor(100/this.props.itemsPerRow)-2 : Math.floor(100/this.props.cards.length)-1;\n    const justifyContent = this.props.justifyContent ? this.props.justifyContent : 'space-between';\n\n    return (\n      <Flex\n        width={1}\n        px={[3,0]}\n        style={{\n          flexWrap:'wrap'\n        }}\n        alignItems={'flex-start'}\n        justifyContent={justifyContent}\n        flexDirection={['column','row']}\n      >\n        {\n          this.props.cards.map( (p,index) => (\n            <DashboardCard\n              isInteractive={true}\n              key={`card_${index}`}\n              cardProps={{\n                p:2,\n                mb:[2,3],\n                display:'flex',\n                alignItems:'center',\n                height:['65px','80px'],\n                justifyContent:'center',\n                mx: justifyContent !== 'space-between' ? [0,2] : 0,\n                style:{\n                  textAlign:'center',\n                  flex:this.props.isMobile ? null : `0 ${Math.min(maxItemPerc,itemPerc)}%`,\n                }\n              }}\n            >\n              {\n                p.link ? (\n                  <Link\n                    px={[5,4]}\n                    style={{\n                      width:'100%',\n                      height:'100%',\n                      display:'flex',\n                      alignItems:'center',\n                      justifyContent:'center',\n                    }}\n                    href={p.link}\n                    target={'_blank'}\n                    textAlign={'center'}\n                    rel={'nofollow noopener noreferrer'}\n                  >\n                    <Image\n                      src={p.image}\n                      width={'auto'}\n                      height={'auto'}\n                      maxHeight={'50px'}\n                      {...this.props.imageProps}\n                    />\n                  </Link>\n                ) : (\n                  <Image\n                    src={p.image}\n                    width={'auto'}\n                    height={'auto'}\n                    maxHeight={['35px','50px']}\n                  />\n                )\n              }\n            </DashboardCard>\n            \n          ) )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexCards;","import React, { Component } from 'react';\nimport { Flex, Text, Link, Icon } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass AuditCard extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          my:[2,0],\n          mx:[0,3],\n          width:[1,'auto']\n        }}\n        isInteractive={this.props.link ? true : false}\n        handleClick={this.props.link ? e => window.open(this.props.link) : null}\n      >\n        <Flex\n          flexDirection={'column'}\n        >\n          <Text\n            mb={2}\n            color={'blue'}\n            fontSize={[1,3]}\n          >\n            {this.props.date}\n          </Text>\n          <Text\n            mb={2}\n            fontSize={4}\n            fontWeight={500}\n          >\n            {this.props.title}\n          </Text>\n          <Link\n            hoverColor={'blue'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'center'\n            }}\n          >\n            VIEW REPORT\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'blue'}\n              style={{\n                transform:'rotate(180deg)'\n              }}\n              name={'KeyboardBackspace'}\n            />\n          </Link>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default AuditCard;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport styles from './HowItWorks.module.scss';\nimport { Box, Flex, Heading, Image } from \"rimble-ui\";\n\nclass HowItWorks extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Box\n        p={[3,4]}\n        id={'how-it-works'}\n      >\n        <Flex flexDirection={['column','column']} alignItems={'center'} justifyContent={'center'}>\n          <Title\n            mt={[3,4]}\n            mb={[3,4]}\n            fontWeight={5}\n            fontSize={[5,6]}\n            component={Heading.h4}\n          >\n            How it works\n          </Title>\n          <Flex\n            width={1}\n            alignItems={'center'}\n            maxWidth={['24em','90em']}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/choose-strategy.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Choose your strategy\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Build your portfolio with different allocation strategies that aim to maximize your returns and keeping you in your risk comfort zone\n                </Heading.h4>\n              </Box>\n            </Flex>\n\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/deposit-stablecoins.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Deposit your crypto-assets\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Just deposit and relax. Your funds will be automatically allocated among DeFi protocols and you will immediately start earning interest.\n                </Heading.h4>\n              </Box>\n            </Flex>\n\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/rebalance.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Automated Rebalancing\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Idle automatically keeps the appropriate allocation mix, depending on the strategy. Idle consistently checks for better opportunities.\n                </Heading.h4>\n              </Box>\n            </Flex>\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/insights-redeem.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Easy insights and redeem\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Monitor your funds’ performance and rebalance events, see your estimated earnings and easlily redeem back your funds + interest.\n                </Heading.h4>\n              </Box>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default HowItWorks;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport styles from './StrategyBox.module.scss';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Text, Link, Icon, Tooltip, Image, Loader } from \"rimble-ui\";\n\nclass StrategyBox extends Component {\n\n  state = {\n    network:null,\n    selectedToken:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n\n      // Override required network in props\n      const newProps = {...this.props};\n      if (this.state.network){\n        newProps.network = this.state.network;\n      }\n      // console.log('network',strategyInfo.networkId,newProps.network);\n\n      this.functionsUtil.setProps(newProps);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    const strategyInfo = this.functionsUtil.getGlobalConfig(['landingStrategies',this.props.strategy]);\n    \n    // Override required network id\n    const network = Object.assign({},this.props.network);\n    network.required = Object.assign({},this.props.network.required);\n    network.current = Object.assign({},this.props.network.current);\n\n    network.required.id = strategyInfo.networkId;\n    network.required.name = this.functionsUtil.getGlobalConfig(['network','availableNetworks',strategyInfo.networkId,'name']);\n\n    this.setState({\n      network\n    },() => {\n      this.loadUtils();\n      this.loadData();\n    });\n  }\n\n  componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  loadData = async () => {\n\n    const strategyInfo = this.functionsUtil.getGlobalConfig(['landingStrategies',this.props.strategy]);\n\n    // console.log('loadData - contractsInitialized',this.props.contractsInitialized);\n\n    if (!this.props.contractsInitialized){\n      return false;\n    }\n\n    let aprs = {};\n    const tokensAprs = {};\n    let highestValue = null;\n    let selectedToken = null;\n    \n    switch (strategyInfo.type){\n      case 'tranche':\n        selectedToken = strategyInfo.token;\n      break;\n      default:\n      case 'strategy':\n        const availableTokens = this.props.availableStrategiesNetworks[strategyInfo.networkId][strategyInfo.strategy];\n        switch (this.props.strategy){\n          case 'best':\n            aprs = await this.functionsUtil.getAprsFromApi(strategyInfo.networkId);\n            if (aprs && aprs.lendRates){\n              aprs.lendRates.forEach( aprInfo => {\n                const tokenAPR = this.functionsUtil.BNify(aprInfo.apy);\n                if (tokenAPR){\n                  const token = aprInfo.tokenSymbol;\n                  tokensAprs[token] = tokenAPR;\n                  if (!highestValue || highestValue.lt(tokenAPR)){\n                    highestValue = tokenAPR;\n                    selectedToken = token;\n                  }\n                }\n              });\n            } else if (availableTokens) {\n              await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n                const tokenConfig = availableTokens[token];\n                const tokenAPR = await this.functionsUtil.getTokenAprs(tokenConfig);\n                if (tokenAPR && tokenAPR.avgApr !== null){\n                  tokensAprs[token] = tokenAPR.avgApr;\n                  if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n                    highestValue = tokenAPR.avgApr;\n                    selectedToken = token;\n                  }\n                }\n              });\n            }\n          break;\n          case 'polygon':\n            aprs = await this.functionsUtil.getAprsFromApi(strategyInfo.networkId);\n            if (aprs && aprs.lendRates){\n              aprs.lendRates.forEach( aprInfo => {\n                const tokenAPR = this.functionsUtil.BNify(aprInfo.apy);\n                if (tokenAPR){\n                  const token = aprInfo.tokenSymbol;\n                  tokensAprs[token] = tokenAPR;\n                  if (!highestValue || highestValue.lt(tokenAPR)){\n                    highestValue = tokenAPR;\n                    selectedToken = token;\n                  }\n                }\n              });\n            } else if (availableTokens) {\n              await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n                const tokenConfig = availableTokens[token];\n                const tokenAPR = await this.functionsUtil.getTokenAprs(tokenConfig);\n                if (tokenAPR && tokenAPR.avgApr !== null){\n                  tokensAprs[token] = tokenAPR.avgApr;\n                  if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n                    highestValue = tokenAPR.avgApr;\n                    selectedToken = token;\n                  }\n                }\n              });\n            }\n          break;\n          case 'risk':\n          default:\n            selectedToken = strategyInfo.token;\n          break;\n        }\n      break;\n    }\n\n    // console.log('loadData',strategyInfo.type,this.props.strategy,strategyInfo.strategy,selectedToken);\n\n    this.setState({\n      selectedToken\n    });\n  }\n\n  async goToStrategy(){\n    const strategyInfo = this.functionsUtil.getGlobalConfig(['landingStrategies',this.props.strategy]);\n\n    if (strategyInfo.url){\n      window.location.href = strategyInfo.url;\n      return true;\n    }\n\n    let strategyEnv = null;\n    const currentEnv = this.functionsUtil.getCurrentEnvironment();\n    if (strategyInfo.enabledEnvs.length>0 && !strategyInfo.enabledEnvs.includes(currentEnv)){\n      strategyEnv = strategyInfo.enabledEnvs[0];\n    }\n\n    if (!strategyEnv){\n      await this.props.setRequiredNetwork(strategyInfo.networkId);\n    }\n\n    window.location.href = this.functionsUtil.getDashboardSectionUrl(strategyInfo.strategy,strategyEnv);\n  }\n\n  render() {\n    const strategyInfo = this.functionsUtil.getGlobalConfig(['landingStrategies',this.props.strategy]);\n    const networkInfo = this.functionsUtil.getGlobalConfig(['network','availableNetworks',strategyInfo.networkId]);\n\n    // const chartColor = strategyInfo.chartColor ? strategyInfo.chartColor : null;\n    // const networkTokenInfo = this.functionsUtil.getGlobalConfig(['stats','tokens',networkInfo.baseToken]);\n    let tokenConfig = null;\n    switch (strategyInfo.type){\n      case 'tranche':\n        tokenConfig = this.props.availableTranches[strategyInfo.protocol][strategyInfo.token];\n      break;\n      default:\n      case 'strategy':\n        tokenConfig = this.state.selectedToken ? this.props.availableStrategiesNetworks[strategyInfo.networkId][strategyInfo.strategy][this.state.selectedToken] : null;\n      break;\n    }\n\n    // console.log('StrategyBox',strategyInfo.type,strategyInfo.strategy,this.state.selectedToken,strategyInfo.networkId,this.props.network.required,this.state.network.required);\n\n    return (\n      <DashboardCard\n        cardProps={{\n          mt:[3,0],\n          ml:['0.35em',0],\n          width:[1,'21em'],\n          mr:['0.35em','2em'],\n          alignItems:'center',\n          height:'fit-content',\n          flexDirection:'column',\n          justifyContent:'flex-start',\n        }}\n        isVisible={ typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true }\n      >\n        <Flex\n          className={[styles.ribbon,styles[networkInfo.provider]]}\n        >\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'center'}\n            className={[styles.content]}\n          >\n            <Flex\n              p={1}\n              mr={2}\n              width={'1em'}\n              height={'1em'}\n              alignItems={'center'}\n              borderRadius={'50px'}\n              justifyContent={'center'}\n              backgroundColor={'white'}\n            >\n              <Image\n                height={'1em'}\n                src={`images/networks/${networkInfo.provider}.svg`}\n              />\n            </Flex>\n            <Text\n              fontSize={1}\n              fontWeight={3}\n              color={'white'}\n            >\n              {networkInfo.name}\n            </Text>\n          </Flex>\n        </Flex>\n        {\n          strategyInfo.enabledEnvs.includes('beta') && (\n            <Flex\n              px={2}\n              py={'1px'}\n              top={'2px'}\n              right={'2px'}\n              borderRadius={2}\n              position={'absolute'}\n              alignItems={'center'}\n              justifyContent={'center'}\n              backgroundColor={'#ff7600'}\n            >\n              <Text\n                fontSize={1}\n                fontWeight={3}\n                color={'white'}\n              >\n                BETA\n              </Text>\n            </Flex>\n          )\n        }\n        {\n          /*\n          <Flex\n            mb={3}\n            py={1}\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'center'}\n            backgroundColor={networkInfo.color}\n          >\n            <Image\n              mr={2}\n              height={'1em'}\n              src={`images/networks/${networkInfo.provider}-white.svg`}\n            />\n            <Text\n              fontSize={1}\n              fontWeight={3}\n              color={'white'}\n            >\n              {networkInfo.name} Network\n            </Text>\n          </Flex>\n          */\n        }\n        <Flex\n          mt={3}\n          mb={2}\n          justifyContent={'center'}\n        >\n          <Image\n            src={strategyInfo.icon}\n            height={['2.2em','2.4em']}\n          />\n        </Flex>\n        <Flex\n          mt={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n        >\n          <Title\n            fontWeight={5}\n            fontSize={[4,'1.7em']}\n          >\n            {strategyInfo.title}\n          </Title>\n        </Flex>\n        {\n          /*\n          <Flex\n            my={1}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n          >\n            <Flex\n              pb={'1px'}\n              pl={'3px'}\n              pr={'6px'}\n              alignItems={'center'}\n              borderRadius={'50px'}\n              flexDirection={'row'}\n              display={'inline-flex'}\n              justifyContent={'center'}\n              backgroundColor={networkInfo.color}\n            >\n              <Flex\n                p={1}\n                mr={1}\n                width={'1.1em'}\n                height={'1.1em'}\n                alignItems={'center'}\n                borderRadius={'50px'}\n                justifyContent={'center'}\n                backgroundColor={'white'}\n              >\n                <Image\n                  height={'1.1em'}\n                  src={`images/networks/${networkInfo.provider}.svg`}\n                />\n              </Flex>\n              <Text\n                fontSize={'13px'}\n                color={'white'}\n                fontWeight={500}\n              >\n                {networkInfo.name}\n              </Text>\n            </Flex>\n          </Flex>\n          */\n        }\n        <Flex\n          mb={[2,3]}\n          minHeight={'50px'}\n          alignItems={'flex-start'}\n          justifyContent={'center'}\n        >\n          <Text\n            px={[3,4]}\n            fontWeight={500}\n            textAlign={'center'}\n          >\n            {strategyInfo.desc}\n          </Text>\n        </Flex>\n        {\n          strategyInfo.comingSoon ? (\n            <Flex\n              mt={3}\n              mb={[0,3]}\n              height={'126px'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n              alignItems={['flex-end','end']}\n            >\n              <Image\n                width={1}\n                src={'/images/strategy-placeholder.jpg'}\n              />\n            </Flex>\n          ) : strategyInfo.type === 'strategy' ? (\n            <Flex\n              mt={[0,3]}\n              flexDirection={'row'}\n              alignItems={'flex-start'}\n              justifyContent={'center'}\n              minHeight={['69px','88px']}\n            >\n              <Flex\n                width={0.5}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n                borderRight={`1px solid ${this.props.theme.colors.divider}`}\n              >\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={2}\n                    fontWeight={4}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    APY\n                  </Text>\n                  <Tooltip\n                    placement={'bottom'}\n                    message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                  >\n                    <Icon\n                      ml={1}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n                </Flex>\n                <AssetField\n                  fieldInfo={{\n                    name:'apy',\n                    showTooltip:false,\n                    props:{\n                      decimals:2,\n                      fontWeight:4,\n                      color:'copyColor',\n                      textAlign:'center',\n                      fontSize:[3,'1.8em'],\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={tokenConfig}\n                  network={this.state.network}\n                  token={this.state.selectedToken}\n                  selectedStrategy={strategyInfo.strategy}\n                />\n                <AssetField\n                  fieldInfo={{\n                    showLoader:false,\n                    name:'idleDistribution',\n                    props:{\n                      decimals:2,\n                      fontWeight:2,\n                      fontSize:[0,1],\n                      color:'cellText',\n                      textAlign:'center',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={tokenConfig}\n                  network={this.state.network}\n                  token={this.state.selectedToken}\n                  selectedStrategy={strategyInfo.strategy}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={2}\n                    fontWeight={4}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    TOKEN\n                  </Text>\n                </Flex>\n                {\n                  tokenConfig ? (\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <AssetField\n                        fieldInfo={{\n                          name:'icon',\n                          props:{\n                            mr:[1,2],\n                            fontWeight:4,\n                            textAlign:'center',\n                            size: this.props.isMobile ? '1.4em' : '1.8em'\n                          },\n                        }}\n                        {...this.props}\n                        tokenConfig={tokenConfig}\n                        network={this.state.network}\n                        token={this.state.selectedToken}\n                        selectedStrategy={strategyInfo.strategy}\n                      />\n                      <AssetField\n                        fieldInfo={{\n                          name:'tokenName',\n                          props:{\n                            fontWeight:4,\n                            color:'copyColor',\n                            textAlign:'center',\n                            fontSize:[3,'1.6em'],\n                            flexProps:{\n                              justifyContent:'center'\n                            }\n                          },\n                        }}\n                        {...this.props}\n                        tokenConfig={tokenConfig}\n                        network={this.state.network}\n                        token={this.state.selectedToken}\n                        selectedStrategy={strategyInfo.strategy}\n                      />\n                    </Flex>\n                  ) : (\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Loader size=\"20px\" />\n                    </Flex>\n                  )\n                }\n              </Flex>\n            </Flex>\n          ) : strategyInfo.type === 'tranche' && (\n            <Flex\n              mt={[0,3]}\n              flexDirection={'row'}\n              alignItems={'flex-start'}\n              justifyContent={'center'}\n              minHeight={['69px','88px']}\n            >\n              <Flex\n                width={0.5}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n                borderRight={`1px solid ${this.props.theme.colors.divider}`}\n              >\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={2}\n                    fontWeight={4}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Senior APY\n                  </Text>\n                  <Tooltip\n                    placement={'bottom'}\n                    message={this.functionsUtil.getGlobalConfig(['tranches','AA','description','deposit'])}\n                  >\n                    <Icon\n                      ml={1}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n                </Flex>\n                <TrancheField\n                  fieldInfo={{\n                    name:'seniorApy',\n                    showTooltip:false,\n                    props:{\n                      decimals:2,\n                      fontWeight:4,\n                      color:'copyColor',\n                      textAlign:'center',\n                      fontSize:[3,'1.8em'],\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={tokenConfig}\n                  token={strategyInfo.token}\n                  network={this.state.network}\n                  tranche={strategyInfo.tranche}\n                  protocol={strategyInfo.protocol}\n                />\n                <TrancheField\n                  fieldInfo={{\n                    showLoader:false,\n                    name:'trancheIDLEDistribution',\n                    props:{\n                      decimals:2,\n                      fontWeight:2,\n                      fontSize:[0,1],\n                      color:'cellText',\n                      textAlign:'center',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={tokenConfig}\n                  token={strategyInfo.token}\n                  network={this.state.network}\n                  trancheConfig={tokenConfig.AA}\n                  tranche={strategyInfo.tranche}\n                  protocol={strategyInfo.protocol}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={2}\n                    fontWeight={4}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Junior APY\n                  </Text>\n                  <Tooltip\n                    placement={'bottom'}\n                    message={this.functionsUtil.getGlobalConfig(['tranches','BB','description','deposit'])}\n                  >\n                    <Icon\n                      ml={1}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n                </Flex>\n                <TrancheField\n                  fieldInfo={{\n                    name:'juniorApy',\n                    showTooltip:false,\n                    props:{\n                      decimals:2,\n                      fontWeight:4,\n                      color:'copyColor',\n                      textAlign:'center',\n                      fontSize:[3,'1.8em'],\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={tokenConfig}\n                  token={strategyInfo.token}\n                  network={this.state.network}\n                  tranche={strategyInfo.tranche}\n                  protocol={strategyInfo.protocol}\n                />\n                <TrancheField\n                  fieldInfo={{\n                    showLoader:false,\n                    name:'trancheIDLEDistribution',\n                    props:{\n                      decimals:2,\n                      fontWeight:2,\n                      fontSize:[0,1],\n                      color:'cellText',\n                      textAlign:'center',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={tokenConfig}\n                  token={strategyInfo.token}\n                  network={this.state.network}\n                  trancheConfig={tokenConfig.BB}\n                  tranche={strategyInfo.tranche}\n                  protocol={strategyInfo.protocol}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !strategyInfo.comingSoon && \n            <Flex\n              mt={2}\n              width={1}\n              height={'60px'}\n              flexDirection={'row'}\n              alignItems={'center'}\n              justifyContent={'center'}\n              id={`${this.props.strategy}_performance_chart`}\n            >\n              {\n                /*\n                <Image\n                  width={1}\n                  height={'60px'}\n                  src={`/images/strategies/${this.props.strategy}-chart.png`}\n                />\n                */\n              }\n              <AssetField\n                fieldInfo={{\n                  name:'aprChart'\n                }}\n                chartProps={{\n                  lineWidth:2\n                }}\n                {...this.props}\n                tokenConfig={tokenConfig}\n                network={this.state.network}\n                token={this.state.selectedToken}\n                rowId={`${this.props.strategy}_performance_chart`}\n              />\n            </Flex>\n        }\n        <Flex\n          width={1}\n          height={'64px'}\n          position={'relative'}\n          boxShadow={'0px -6px 6px -4px rgba(0,0,0,0.1)'}\n        >\n          {\n            strategyInfo.comingSoon ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  mr={2}\n                  fontSize={3}\n                  fontWeight={550}\n                  color={'copyColor'}\n                  style={{\n                    fontStyle:'italic'\n                  }}\n                  hoverColor={'copyColor'}\n                >\n                  Coming Soon\n                </Text>\n              </Flex>\n            ) : (\n              <Link\n                onClick={ e => this.goToStrategy() }\n                style={{display:'flex',width:'100%'}}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mr={2}\n                      fontSize={3}\n                      fontWeight={4}\n                      color={'copyColor'}\n                      hoverColor={'copyColor'}\n                    >\n                      Start with {strategyInfo.title}\n                    </Text>\n                    <Icon\n                      size={'1.2em'}\n                      color={'copyColor'}\n                      name={'ArrowForward'}\n                    />\n                  </Flex>\n              </Link>\n            )\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default StrategyBox;\n","import React, { Component } from \"react\";\nimport { Flex, Box, Button, Form, Text, Checkbox, Link } from 'rimble-ui';\nimport axios from 'axios';\nimport styles from './NewsletterForm.module.scss';\nimport globalConfigs from '../configs/globalConfigs';\n\nclass NewsletterForm extends Component {\n  state = {\n    validated: false,\n    privacy: false,\n    email: null,\n    message: ''\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { validated: false };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleValidation = this.handleValidation.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (!this.state.privacy){\n      this.setState({message:'Please check the privacy policy box to proceed.', messageColor:'red' });\n      return false;\n    }\n\n    this.setState({validated:true });\n\n    axios.post(globalConfigs.newsletterSubscription.endpoint, {\n      'email': this.state.email\n    }).then(r => {\n      if (r.data.status === 'success'){\n        this.setState({message:'Thanks! Check your e-mail and confirm your subscription', messageColor:'green' });\n      } else {\n        this.setState({message:'Error while sending your subscription... Please try again', messageColor:'red' });\n      }\n    })\n    .catch(err => {\n      this.setState({message:'Error while sending your subscription... Please try again', messageColor:'red' });\n    });\n  }\n\n  toggleCheckbox(e) {\n    this.setState({ privacy: e.target.checked });\n  }\n\n  handleValidation(e) {\n    if (e && e.target) {\n      this.setState({ email: e.target.value });\n      e.target.parentNode.classList.add(\"was-validated\");\n    }\n  }\n\n  render() {\n\n    return (\n        <Box mt={[2,3]} maxWidth={'45em'} width={1}>\n          <Form onSubmit={this.handleSubmit}>\n            <Flex flexDirection={['column','row']} alignItems={['center','flex-start']} justifyContent={'center'}>\n              <Box width={[1,7/10]}>\n                <Form.Field width={1} label={''}>\n                  <Form.Input\n                    type=\"email\"\n                    name=\"EMAIL\"\n                    required\n                    width={1}\n                    outline={'none'}\n                    border={0}\n                    fontSize={[2,5]}\n                    borderRadius={0}\n                    pl={0}\n                    pb={3}\n                    textAlign={['center','left']}\n                    placeholder={'Enter your e-mail'}\n                    boxShadow={'none !important'}\n                    borderBottom={'1px solid #a6a6a6'}\n                    onChange={this.handleValidation}\n                  />\n                </Form.Field>\n                <Flex mb={[3,0]} flexDirection={'row'} alignItems={'center'}>\n                  <Checkbox onClick={ e => this.toggleCheckbox(e) } label={'I\\'ve read and accepted the'} required />\n                  <Link color={'blue'} hoverColor={'blue'} target={'_blank'} rel=\"nofollow noopener noreferrer\" href={\"https://www.iubenda.com/privacy-policy/61211749\"}>Privacy Policy</Link>\n                </Flex>\n                {this.state.message && this.state.message.length &&\n                  <Text.p py={0} mt={[2,3]} mb={3} textAlign={['center','left']} color={this.state.messageColor}>{this.state.message}</Text.p>\n                }\n              </Box>\n              <Box width={[1,3/10]} my={[0,'26px']}>\n                <Button className={styles.gradientButton} type=\"submit\" width={1}>\n                  GET UPDATES\n                </Button>\n              </Box>\n            </Flex>\n          </Form>\n        </Box>\n    );\n  }\n}\nexport default NewsletterForm;\n","import React, { Component } from 'react';\nimport { Flex, ToastMessage, Link, Icon } from \"rimble-ui\";\n\nclass FloatingToastMessage extends Component {\n  state = {}\n\n  render() {\n    let ToastComponent = null;\n\n    switch (this.props.variant){\n      case 'success':\n        ToastComponent = ToastMessage.Success;\n      break;\n      case 'processing':\n        ToastComponent = ToastMessage.Processing;\n      break;\n      case 'failure':\n        ToastComponent = ToastMessage.Failure;\n      break;\n      default:\n      break;\n    }\n\n    if (ToastComponent){\n      return (\n        <Flex\n          right={'0'}\n          bottom={'0'}\n          zIndex={'9999'}\n          position={'fixed'}\n          p={ !this.props.isMobile ? '1em' : 0 }\n          width={ !this.props.isMobile ? '420px': '100vw' }\n        >\n          <ToastComponent\n            closeElem={false}\n            style={{width:'100%'}}\n            backgroundColor={'cardBg'}\n            message={this.props.message}\n            secondaryMessage={this.props.secondaryMessage}\n          />\n          <Link onClick={this.props.handleClose} style={ this.props.isMobile ? {position:'absolute',top:'10px',right:'10px',width:'20px',height:'20px'} : {position:'absolute',top:'22px',right:'22px',width:'16px',height:'16px'}}>\n            <Icon\n              name={'Close'}\n              color={'dark-gray'}\n              size={ this.props.isMobile ? '20' : '16' }\n            />\n          </Link>\n        </Flex>\n      );\n    }\n\n    return null;\n  }\n}\n\nexport default FloatingToastMessage;","import Faq from '../Faq/Faq';\nimport Title from '../Title/Title';\nimport Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport ExtLink from '../ExtLink/ExtLink';\nimport styles from './Landing.module.scss';\nimport FlexCards from '../FlexCards/FlexCards';\nimport AuditCard from '../AuditCard/AuditCard';\nimport HowItWorks from '../HowItWorks/HowItWorks';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport RoundButton from '../RoundButton/RoundButton';\nimport StrategyBox from '../StrategyBox/StrategyBox';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport NewsletterForm from '../NewsletterForm/NewsletterForm';\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\nimport { Image, Flex, Box, Heading, Link, Text, Icon } from 'rimble-ui';\nimport FloatingToastMessage from '../FloatingToastMessage/FloatingToastMessage';\nimport AssetsUnderManagement from '../AssetsUnderManagement/AssetsUnderManagement';\n\nlet scrolling = false;\n\nclass Landing extends Component {\n  state = {\n    avgApr:null,\n    carouselMax:0,\n    carouselIndex:0,\n    activeCarousel:1,\n    runConfetti:false,\n    activeBullet:null,\n    protocolsAprs:null,\n    testPerformed:false,\n    totalAllocation:null,\n    visibleStrategies:[],\n    landingStrategies:[],\n    carouselOffsetLeft:0,\n    setActiveCarousel:null,\n    carouselIntervalID:null,\n    protocolsAllocations:null,\n    randomAllocationEnabled:false\n  };\n\n  // Clear all the timeouts\n  async componentWillUnmount(){\n\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    window.functionsUtil = this.functionsUtil;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.props.setCurrentSection('landing');\n    this.loadStrategies();\n  }\n\n  loadStrategies(){\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n    const landingStrategies = Object.keys(globalConfigs.landingStrategies);\n    const visibleStrategies = landingStrategies.filter(s => globalConfigs.landingStrategies[s].visible && (!globalConfigs.landingStrategies[s].availableNetworks.length || globalConfigs.landingStrategies[s].availableNetworks.includes(currentNetworkId)) && (!globalConfigs.landingStrategies[s].enabledEnvs.length || globalConfigs.landingStrategies[s].enabledEnvs.includes(this.props.currentEnv)) );\n    const carouselMax = landingStrategies.length-1;\n    this.setState({\n      carouselMax,\n      visibleStrategies,\n      landingStrategies\n    });\n  }\n\n  setActiveCarousel = (activeCarousel) => {\n    activeCarousel = activeCarousel<=3 ? activeCarousel : 1;\n    this.setState({activeCarousel});\n  }\n\n  async componentDidMount(){\n    this.props.processCustomParam(this.props);\n\n    if (this.props.contractsInitialized){\n      // await Promise.all([\n      //   this.getAprs(),\n      //   this.getAllocations()\n      // ]);\n    }\n  }\n\n  handleCarousel = action => {\n    let carouselIndex = this.state.carouselIndex;\n    if (action==='next' && carouselIndex<this.state.carouselMax){\n      carouselIndex++;\n    } else if (action==='back' && carouselIndex>0){\n      carouselIndex--;\n    }\n\n    const multiplier = this.props.isMobile ? 1 : 0.75;\n    const $element = window.jQuery(`#carousel-cursor > div:eq(${carouselIndex})`);\n    const carouselOffsetLeft = -parseFloat($element.position().left*multiplier)+'px';\n\n    this.setState({\n      carouselIndex,\n      carouselOffsetLeft\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n    this.props.processCustomParam(this.props,prevProps);\n\n\n    const requiredNetworkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    const networkChanged = (!prevProps.networkInitialized && this.props.networkInitialized) || requiredNetworkChanged;\n    if (networkChanged){\n      this.loadStrategies();\n    }\n\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (contractsInitialized) {\n      // await Promise.all([\n      //   this.getAprs(),\n      //   this.getAllocations()\n      // ]);\n    }\n  }\n\n  processScrolling = () => {\n    if (scrolling){\n\n      const bulletCards = document.getElementsByClassName('bulletCard');\n      let activeBullet = 0;\n\n      for (let i=0;i<bulletCards.length;i++){\n        const bulletCard = bulletCards[i];\n        if (bulletCard && bulletCard.offsetParent){\n          const offsetY = bulletCard.offsetTop ? bulletCard.offsetTop : bulletCard.offsetParent.offsetTop;\n          if (window.scrollY >= offsetY-200){\n            activeBullet = i+2;\n          }\n        }\n      }\n      scrolling = false;\n\n      if (parseInt(activeBullet) !== parseInt(this.state.activeBullet)){\n        this.setState({activeBullet});\n      }\n    }\n  };\n\n  getAllocations = async () => {\n\n    let totalAllocation = this.functionsUtil.BNify(0);\n\n    const newState = {\n      avgApr: null,\n      totalAllocation:null,\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.functionsUtil.asyncForEach(this.props.tokenConfig.protocols,async (protocolInfo,i) => {\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [protocolBalance, tokenDecimals, exchangeRate] = await Promise.all([\n        this.functionsUtil.getProtocolBalance(contractName),\n        this.functionsUtil.getTokenDecimals(contractName),\n        ( protocolInfo.functions.exchangeRate ? this.getTokenExchangeRate(contractName,protocolInfo.functions.exchangeRate) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.functionsUtil.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      const protocolAllocation = this.functionsUtil.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n    });\n\n    if (this.state.randomAllocationEnabled){\n      let remainingAllocation = parseFloat(totalAllocation.toString());\n      const totProtocols = Object.keys(protocolsAllocations).length;\n      Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n        let alloc = parseFloat(protocolsAllocations[protocolAddr].toString());\n        if (i === totProtocols-1){\n          alloc = remainingAllocation;\n        } else {\n          alloc = parseFloat(Math.random()*(remainingAllocation-(remainingAllocation/3))+(remainingAllocation/3));\n          remainingAllocation -= alloc;\n        }\n        protocolsAllocations[protocolAddr] = this.functionsUtil.BNify(alloc);\n      });\n    }\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    newState.totalAllocation = totalAllocation;\n    newState.protocolsAllocations = protocolsAllocations;\n    newState.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (this.state.protocolsAprs){\n      newState.avgApr = this.functionsUtil.getAvgApr(this.state.protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    this.setState(newState);\n\n    return newState;\n  }\n\n  getAprs = async () => {\n    const Aprs = await this.functionsUtil.genericIdleCall('getAPRs');\n\n    if (!Aprs){\n      return false;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n    const protocolsAprs = {};\n\n    this.props.tokenConfig.protocols.forEach((info,i) => {\n      // const protocolName = info.name;\n      const protocolAddr = info.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        const protocolApr = aprs[addrIndex];\n        protocolsAprs[protocolAddr] = this.functionsUtil.BNify(+this.functionsUtil.toEth(protocolApr));\n      }\n    });\n\n    const newState = {\n      avgApr: null,\n      protocolsAprs\n    };\n\n    if (this.state.protocolsAllocations && this.state.totalAllocation){\n      newState.avgApr = this.functionsUtil.getAvgApr(protocolsAprs,this.state.protocolsAllocations,this.state.totalAllocation);\n    }\n\n    this.setState(newState);\n    return newState;\n  };\n\n  startLending = async e => {\n    this.props.updateSelectedTab(e, '1');\n    window.location.href = '#invest';\n  }\n\n  setConfetti = (runConfetti) => {\n    this.setState({\n      runConfetti\n    })\n  }\n\n  connectAndGoToRoute = (route) => {\n\n    const goToLocation = () => {\n      window.location = \"/#\"+route;\n    }\n\n    if (this.props.account){\n      goToLocation();\n    } else {\n      this.props.connectAndValidateAccount(goToLocation);\n    }\n  }\n\n  goToStrategy = async () => {\n    window.location.hash = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+'/'+this.state.visibleStrategies[0];\n  }\n\n  render() {\n    const { network } = this.props;\n    const availableTokens = [];\n\n    if (!this.props.availableStrategies){\n      return (\n        <Flex\n          width={1}\n          minHeight={'100vh'}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          backgroundColor={'selectBg'}\n        >\n          <FlexLoader\n            textProps={{\n              textSize: 4,\n              fontWeight: 2\n            }}\n            loaderProps={{\n              mb: 3,\n              size: '80px',\n              color: 'primary'\n            }}\n            flexProps={{\n              my: 3,\n              flexDirection: 'column'\n            }}\n            text={''}\n          />\n        </Flex>\n      );\n    }\n\n    Object.values(this.props.availableStrategies).forEach( tokens => {\n      Object.keys(tokens).forEach( token => {\n        if (availableTokens.indexOf(token) === -1){\n          availableTokens.push(token);\n        }\n      });\n    });\n\n    return (\n      <Box\n        height={'100vh'}\n        className={styles.mainViewport}\n        style={{\n          paddingBottom: !network.isCorrectNetwork ? \"8em\" : \"0\"\n        }}\n      >\n        <Box\n          pl={[3,5]}\n          pr={[3,0]}\n          overflow={'hidden'}\n          pt={['2.5em', '3em']}\n          className={styles.headerContainer}\n          minHeight={ Math.max((this.props.innerHeight+this.props.innerHeight*0.025),768) }\n        >\n          <Box\n            zIndex={10}\n            position={'relative'}\n          >\n            <Flex\n              overflow={'visible'}\n              alignItems={'flex-start'}\n              flexDirection={['column','row']}\n              mt={['7em',Math.max(window.innerHeight*0.225,145)+'px']}\n            >\n              <Flex\n                width={[1,1/3]}\n                justifyContent={['center','flex-end']}\n              >\n                <Flex\n                  pb={3}\n                  width={1}\n                  textAlign={'center'}\n                  flexDirection={'column'}\n                  maxWidth={['50em', '24em']}\n                  alignItems={['center','flex-start']}\n                >\n                  <Heading.h1\n                    fontWeight={5}\n                    color={'white'}\n                    fontFamily={'sansSerif'}\n                    fontSize={['2.2em','3.2rem']}\n                    textAlign={['center','left']}\n                    lineHeight={['initial','2.5rem']}\n                    style={{\n                      width:'100%',\n                      textAlignLast: this.props.isMobile ? 'center' : 'justify'\n                    }}\n                  >\n                    The best place\n                  </Heading.h1>\n                  <Heading.h1\n                    mb={[2,3]}\n                    color={'white'}\n                    fontWeight={300}\n                    lineHeight={'initial'}\n                    fontFamily={'sansSerif'}\n                    fontSize={['2.2em','3.2rem']}\n                    textAlign={['center','left']}\n                    style={{\n                      width:'100%',\n                      textAlignLast: this.props.isMobile ? 'center' : 'justify'\n                    }}\n                  >\n                    for your money\n                  </Heading.h1>\n                  <Heading.h2\n                    style={{\n                      width:'100%',\n                    }}\n                    color={'white'}\n                    fontWeight={400}\n                    fontSize={[2,'1.2em']}\n                    textAlign={['center','justify']}\n                  >\n                    Choose your strategy and earn the yield you deserve without worry about finding the best option, either if you want to optimize returns or risks.\n                  </Heading.h2>\n                  {\n                    !this.props.isMobile && \n                      <Flex\n                        mt={4}\n                      >\n                        <RoundButton\n                          handleClick={ (e) => this.goToStrategy() }\n                        >\n                          Go to Dashboard\n                        </RoundButton>\n                      </Flex>\n                  }\n                </Flex>\n              </Flex>\n              <Flex\n                mr={['auto',0]}\n                width={[1,2/3]}\n                ml={[0,'100px']}\n                textAlign={'center'}\n                position={'relative'}\n                flexDirection={'column'}\n                height={['415px','460px']}\n                justifyContent={['flex-start','flex-end']}\n              >\n                <Flex\n                  left={0}\n                  right={0}\n                  width={'100%'}\n                  height={'420px'}\n                  top={['initial','0']}\n                  position={'absolute'}\n                  bottom={['0','initial']}\n                  overflow={this.state.carouselIndex === 0 ? 'visible' : 'hidden'}\n                  style={{\n                    overflowY:'visible'\n                  }}\n                >\n                  <Flex\n                    pt={'9px'}\n                    pl={'9px'}\n                    top={['initial',0]}\n                    flexDirection={'row'}\n                    position={'absolute'}\n                    id={'carousel-cursor'}\n                    height={['auto','420px']}\n                    bottom={['5px','initial']}\n                    justifyContent={'flex-start'}\n                    left={this.state.carouselOffsetLeft}\n                    style={{\n                      overflowY:'visible',\n                      transition:'left 0.3s ease-in-out'\n                    }}\n                    width={[this.state.landingStrategies.length*100+'%','140%']}\n                  >\n                    {\n                      this.state.landingStrategies.map((strategy,strategyIndex) => (\n                        <StrategyBox\n                          {...this.props}\n                          strategy={strategy}\n                          key={`strategy_${strategy}`}\n                        />\n                      ))\n                    }\n                  </Flex>\n                </Flex>\n                <Flex\n                  width={1}\n                  mt={[0,'20px']}\n                  id={'carousel-container'}\n                  justifyContent={['center','flex-start']}\n                >\n                  <RoundIconButton\n                    buttonProps={{\n                      mr:[4,3]\n                    }}\n                    iconName={'ArrowBack'}\n                    disabled={this.state.carouselIndex === 0}\n                    handleClick={ e => this.handleCarousel('back') }\n                  />\n                  <RoundIconButton\n                    iconName={'ArrowForward'}\n                    handleClick={ e => this.handleCarousel('next') }\n                    disabled={this.state.carouselIndex === this.state.carouselMax}\n                  />\n                </Flex>\n              </Flex>\n            </Flex>\n          </Box>\n        </Box>\n\n        <HowItWorks />\n\n        <Box\n          mb={[3,4]}\n          pt={[4,5]}\n          pb={[4,4]}\n          id={'partners'}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','70em']}\n          >\n            <Title\n              mb={3}\n              mt={[3,4]}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Audited and Battle-tested\n            </Title>\n            <Text\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              We take security very seriously, that's why our Smart-Contracts are fully Audited and battle-tested.\n            </Text>\n            <Flex\n              width={1}\n              px={[3,4]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <AssetsUnderManagement\n                {...this.props}\n                subtitle={null}\n                allNetworks={true}\n                subtitleProps={{\n                  textAlign:'center'\n                }}\n                counterStyle={{\n                  display:'block',\n                  color:'dark-gray',\n                  overflow: 'hidden',\n                  textAlign: 'center',\n                  whiteSpace: 'nowrap',\n                  textOverflow: 'ellipsis',\n                  fontFamily:this.props.theme.fonts.counter,\n                  fontWeight:this.props.theme.fontWeights[5],\n                  fontSize: this.props.isMobile ? this.props.theme.fontSizes[5] : this.props.theme.fontSizes[9],\n                }}\n              />\n              <Link\n                mb={3}\n                target={'_blank'}\n                textAlign={'center'}\n                rel={'nofollow noopener noreferrer'}\n                href={'https://certificate.quantstamp.com/view/idle-finance'}\n              >\n                <Image\n                  width={'15em'}\n                  src={'images/quantstamp-badge.svg'}\n                />\n              </Link>\n              <Title\n                my={[2,3]}\n                mt={[3,4]}\n                fontWeight={3}\n                fontSize={[3,4]}\n                color={'dark-gray'}\n                component={Heading.h4}\n              >\n                Full Audit Report:\n              </Title>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <AuditCard\n                  title={'Idle Protocol'}\n                  date={'December 10th 2020 — Quantstamp Verified'}\n                  link={'https://certificate.quantstamp.com/full/idle-finance'}\n                />\n                <AuditCard\n                  title={'Idle Governance'}\n                  date={'November 26th 2020 — Quantstamp Verified'}\n                  link={'https://certificate.quantstamp.com/full/idle-goverance'}\n                />\n              </Flex>\n            </Flex>\n          </Box>\n        </Box>\n        <Box\n          mt={[4,5]}\n          px={[3,4]}\n          py={[4,5]}\n          id={'integrators'}\n          className={styles.gradientBackground}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','75em']}\n          >\n            <Title\n              mb={3}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Build with Idle\n            </Title>\n            <Text\n              mb={3}\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              Just few lines of code to integrate the power of Idle into your dApp\n            </Text>\n            <Flex\n              mt={2}\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={['center','space-between']}\n            >\n              <Flex\n                mt={2}\n                width={1}\n                flexDirection={['column','row']}\n                alignItems={['center','flex-start']}\n                justifyContent={['center','flex-start']}\n              >\n                <Flex\n                  mb={[3,0]}\n                  width={[1,0.5]}\n                  flexDirection={'column'}\n                  alignItems={['center','flex-start']}\n                  justifyContent={['center','flex-start']}\n                >\n                  <Title\n                    mb={3}\n                    fontWeight={5}\n                    component={Heading.h5}\n                    fontSize={[4,'1.75em']}\n                  >\n                    Designed for Developers\n                  </Title>\n\n                  <Text\n                    mb={3}\n                    pr={[0,5]}\n                    textAlign={['center','justify']}\n                  >\n                    A fully integrated suite of DeFi yield products easy to integrate into your dApp so your teams don't need to stitch together disparate protocols or spend months integrating and updating yield functionality.<br />One integration to rule them all.\n                  </Text>\n                  <Text\n                    mb={2}\n                    fontWeight={500}\n                  >\n                    Supported Assets:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    flexDirection={'row'}\n                  >\n                    {\n                      availableTokens.map( token => (\n                        <AssetField\n                          token={token}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:2,\n                              width:'2.2em',\n                              height:'2.2em'\n                            }\n                          }}\n                          key={`asset_${token}`}\n                        />\n                      ))\n                    }\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={['column','row']}\n                    justifyContent={['center','flex-start']}\n                  >\n                    <RoundButton\n                      buttonProps={{\n                        width:[1,'auto']\n                      }}\n                      handleClick={ (e) => {\n                        window.open('https://developers.idle.finance')\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'flex-end'}\n                        justifyContent={'center'}\n                      >\n                        <Text\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'white'}\n                        >\n                          Read the docs\n                        </Text>\n                        <Icon\n                          ml={2}\n                          size={'1.2em'}\n                          color={'white'}\n                          name={'KeyboardArrowRight'}\n                        />\n                      </Flex>\n                    </RoundButton>\n                    <Text\n                      mt={[2,0]}\n                      ml={[0,2]}\n                    >\n                      or\n                    </Text>\n                    <ExtLink\n                      mt={[2,0]}\n                      ml={[0,2]}\n                      fontSize={2}\n                      hoverColor={'primary'}\n                      href={'https://idlefinance.typeform.com/to/PUC7nO'}\n                    >\n                      Contact Us\n                    </ExtLink>\n                    {\n                      /*\n                      <RoundButton\n                        buttonProps={{\n                          ml:2,\n                          mainColor:'red',\n                          width:[1,'auto']\n                        }}\n                        handleClick={ (e) => {\n                          window.open('https://idlefinance.typeform.com/to/PUC7nO')\n                        }}\n                      >\n                        <Flex\n                          width={1}\n                          alignItems={'flex-end'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={3}\n                            color={'white'}\n                            fontSize={[1,2]}\n                          >\n                            Contact us\n                          </Text>\n                          <Icon\n                            ml={2}\n                            name={'Send'}\n                            size={'1.2em'}\n                            color={'white'}\n                          />\n                        </Flex>\n                      </RoundButton>\n                      */\n                    }\n                  </Flex>\n                </Flex>\n                <Flex\n                  width={[1,0.5]}\n                >\n                  <iframe\n                    height={\"350\"}\n                    title={'integrate'}\n                    id={'carbon-iframe'}\n                    style={{\n                      border:'0',\n                      width: '100%',\n                      height: '350px',\n                      overflow:'hidden',\n                      transform: 'scale(1)',\n                    }}\n                    sandbox={\"allow-scripts allow-same-origin\"}\n                    src={'https://carbon.now.sh/embed?bg=rgba%28255%2C255%2C255%2C0%29&t=cobalt&wt=none&l=auto&ds=false&dsyoff=20px&dsblur=68px&wc=true&wa=true&pv=0px&ph=0px&ln=false&fl=1&fm=Fira+Code&fs=13.5px&lh=143%25&si=false&es=2x&wm=false&code=const%2520DAIAbi%2520%253D%2520require%28%27DAI.json%27%29%253B%2520%252F%252F%2520DAI%2520ABI%250Aconst%2520idleTokenAbi%2520%253D%2520require%28%27idleToken.json%27%29%253B%2520%252F%252F%2520idleToken%2520ABI%250A%250Aconst%2520user%2520%253D%2520%270x...%27%253B%2520%252F%252F%2520set%2520user%2520address%250Aconst%2520idleDAI%2520%253D%2520%270x3fE7940616e5Bc47b0775a0dccf6237893353bB4%27%253B%2520%252F%252F%2520idleDAIYield%2520address%250Aconst%2520DAIAddress%2520%253D%2520%270x6b175474e89094c44da98b954eedeac495271d0f%27%253B%250A%250A%252F%252F%2520Initialize%2520web3%2520contract%250Aconst%2520DAI%2520%253D%2520new%2520web3.eth.Contract%28DAIAbi%252C%2520DAIAddress%29%253B%250Aconst%2520idleToken%2520%253D%2520new%2520web3.eth.Contract%28idleTokenAbi%252C%2520idleDAI%29%253B%250A%250A%252F%252F%2520Approve%2520contract%250Aconst%2520_amount%2520%253D%2520%271000000000000000000%27%253B%2520%252F%252F%25201%2520DAI%250Aawait%2520DAI.approve%28idleTokenAddress%252C%2520_amount%252C%2520%257B%2520from%253A%2520user%2520%257D%29%253B%250A%250A%252F%252F%2520Deposit%2520tokens%250Aawait%2520idleToken.mintIdleToken%28_amount%252C%2520true%252C%2520user%252C%2520%257B%2520from%253A%2520user%2520%257D%29%253B'}\n                  >\n                  </iframe>\n                </Flex>\n              </Flex>\n            </Flex>\n          </Box>\n        </Box>\n\n        <Box\n          pt={[4,5]}\n          pb={[4,4]}\n          id={'investors'}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','70em']}\n          >\n            <Title\n              mb={3}\n              mt={[3,4]}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Backed By\n            </Title>\n            <Text\n              mb={3}\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              Idle has been funded by industry leaders\n            </Text>\n            <FlexCards\n              justifyContent={'center'}\n              itemsPerRow={4}\n              cards={[\n                {\n                  link:'https://consensys.net',\n                  image:'images/investors/consensys.png'\n                },\n                {\n                  link:'https://www.gumi-cryptos.com',\n                  image:'images/investors/gumi.png'\n                },\n                {\n                  link:'https://www.greenfield.one',\n                  image:'images/investors/greenfield.png'\n                },\n                /*\n                {\n                  link:'https://quantstamp.com',\n                  image:'images/investors/quantstamp.png'\n                },\n                */\n                {\n                  link:'https://dialectic.ch',\n                  image:'images/investors/dialectic.png'\n                },\n                {\n                  link:'https://www.thelao.io',\n                  image:'images/investors/the-lao.png'\n                },\n                {\n                  link:'https://br.capital',\n                  image:'images/investors/br-capital.png'\n                },\n                {\n                  link:'https://www.longhashventures.com',\n                  image:'images/investors/lh-ventures.png'\n                },\n              ]}\n              {...this.props}\n            />\n          </Box>\n        </Box>\n\n        <Box\n          pt={[4,5]}\n          pb={[4,4]}\n          id={'protocols'}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','70em']}\n          >\n            <Title\n              mb={3}\n              mt={[3,4]}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Built with the best\n            </Title>\n            <Text\n              mb={3}\n              px={2}\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              Idle infrastructure rely on the most powerful DeFi protocols\n            </Text>\n            <FlexCards\n              imageProps={{\n                width:'80%'\n              }}\n              maxItemPerc={25}\n              justifyContent={'center'}\n              cards={[\n                {\n                  link:'https://app.compound.finance',\n                  image:'images/partners/compound.svg'\n                },\n                /*\n                {\n                  link:'https://fulcrum.trade',\n                  image:'images/partners/fulcrum.svg'\n                },\n                */\n                {\n                  link:'https://aave.com',\n                  image:'images/partners/aave.svg'\n                },\n                {\n                  link:'https://dydx.exchange',\n                  image:'images/partners/dydx.svg'\n                },\n                /*\n                {\n                  link:'https://cream.finance',\n                  image:'images/partners/cream.svg'\n                },\n                */\n              ]}\n              {...this.props}\n            />\n          </Box>\n        </Box>\n\n        <Box id=\"faq\" pt={[4,5]} pb={[4,6]}>\n          <Box maxWidth={['50em','60em']} mx={'auto'} px={[3,5]}>\n            <Faq selectedToken={this.props.selectedToken} tokenConfig={this.props.tokenConfig} />\n          </Box>\n        </Box>\n\n        <Flex id=\"contacts\" flexDirection={'column'} position={'relative'} justifyContent={'center'} alignItems={'center'} pb={[3,6]} px={[3,6]}>\n          <Flex flexDirection={'column'} justifyContent={['center','flex-start']} alignItems={['center','flex-start']} width={1} maxWidth={['35em','70em']}>\n            <Heading.h3 color={'blue'} textAlign={['center','left']} fontWeight={4} lineHeight={'initial'} fontSize={[4,5]}>\n              Don't be shy, let's talk.\n            </Heading.h3>\n            <Heading.h3 color={'dark-gray'} textAlign={['center','left']} fontWeight={4} lineHeight={'initial'} fontSize={[4,5]}>\n              Let's build something great together.\n            </Heading.h3>\n            <NewsletterForm />\n          </Flex>\n        </Flex>\n\n        <Footer tokenConfig={this.props.tokenConfig} />\n\n        {\n          this.props.toastMessageProps &&\n            <FloatingToastMessage isMobile={this.props.isMobile} {...this.props.toastMessageProps} handleClose={this.props.closeToastMessage} />\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Landing;\n"],"sourceRoot":""}