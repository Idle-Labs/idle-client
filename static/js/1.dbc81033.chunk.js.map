{"version":3,"sources":["utilities/GovernanceUtil.js","StatsCard/StatsCard.js","DashboardMenu/DashboardMenu.js","NetworkIndicator/NetworkIndicator.js","utilities/components/Swipeable.js","utilities/components/TooltipModal.js","CryptoInput/CryptoInput.module.scss","Notifications/Notifications.js","utilities/components/AccountModal.js","MenuAccount/MenuAccount.js","utilities/components/GovModal.js","DelegateVesting/DelegateVesting.js","DashboardHeader/DashboardHeader.js","MenuAccount/MenuAccount.module.scss","Notifications/Notifications.module.scss"],"names":["GovernanceUtil","props","_this","this","Object","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","functionsUtil","setProps","FunctionsUtil","getTotalSupply","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","a","mark","_callee","cachedDataKey","cachedData","contractName","totalSupply","wrap","_context","prev","next","getCachedDataWithLocalStorage","BNify","isNaN","abrupt","getGlobalConfig","genericContractCall","sent","fixTokenDecimals","setCachedDataWithLocalStorage","stop","getTokensBalance","_callee2","account","balance","_args2","arguments","_context2","length","undefined","concat","getContractBalance","getVestingContract","_callee3","vestingContract","_args3","_context3","parseInt","initContract","VesterABI","delegateVesting","_callee4","delegate","callback","callbackReceipt","_args4","_context4","contractMethodSendWrapper","getVestingAmount","_callee5","vestingAmount","_args5","_context5","getCurrentDelegate","_callee6","_args6","_context6","getCurrentVotes","_callee7","votes","_args7","_context7","getVotingPeriod","_callee8","votingPeriod","_context8","getTimelockDelay","_callee9","delay","_context9","queueProposal","_ref10","_callee10","proposalId","_args10","_context10","toBN","_x","apply","executeProposal","_ref11","_callee11","_args11","_context11","_x2","proposeAndVoteFor","_ref12","_callee12","targets","values","signatures","calldatas","description","batcher","contract","txs","_context12","Batcher","web3","getContractByName","to","_address","method","methods","propose","args","castVote","_x3","_x4","_x5","_x6","_x7","_ref13","_callee13","_args13","_context13","_x8","_x9","_x10","_x11","_x12","_ref14","_callee14","support","_args14","_context14","_x13","_x14","setDelegate","_ref15","_callee15","_args15","_context15","_x15","getDelegatesChanges","_callee16","lastBlockNumber","delegationsCalls","fromBlock","delegatesContractName","blockNumber","toBlock","all_delegations","_context16","eth","getBlockNumber","Math","min","push","getContractPastEvents","Promise","all","reduce","delegations","d","getDelegatesVotesChanges","_callee17","_context17","getDelegates","_callee18","limit","_ref19","_ref20","all_votes","delegateAccounts","delegates","_args18","_context18","getVotes","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","forEach","e","_e$returnValues","returnValues","newBalance","keys","sort","b","index","rank","toFixed","vote_weight","parseFloat","proposals","filter","v","voter","toLowerCase","splice","getProposalParams","_callee19","govContractName","_ref22","_ref23","proposalThreshold","proposalMaxOperations","params","_context19","getCachedData","setCachedData","_callee20","governanceContractName","_context20","map","_e$returnValues2","getProposals","_callee22","voted_by","filter_by_state","startBlock","enumerateProposalState","proposalCount","proposalGets","proposalStateGets","_arr","_i","i","_ref26","_ref27","proposalStates","proposalQueuedEvents","proposalCreatedEvents","proposalCanceledEvents","proposalExecutedEvents","_args22","_context22","p","state","find","Array","from","n","reverse","asyncForEach","_ref28","_callee21","createdEvent","canceledEvent","executedEvent","queuedEvent","_ref29","_ref30","endBlockInfo","queuedBlockInfo","createdBlockInfo","canceledBlockInfo","executedBlockInfo","createdState","activeState","canceledState","succeededState","queuedState","executedState","endState","_createdEvent$returnV","proposalDetails","_context21","id","endBlock","getBlockInfo","states","end_time","timestamp","start_time","trx_hash","transactionHash","s","title","split","replace","shift","join","attr","eta","actions","executed","canceled","forVotes","proposer","againstVotes","_x16","_x17","StatsCard","loadUtils","prevProps","prevState","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","cardProps","minHeight","rimble_ui__WEBPACK_IMPORTED_MODULE_10__","width","alignItems","flexDirection","justifyContent","titleMinHeight","h4","mb","fontWeight","fontSize","textAlign","color","lineHeight","value","toString","assign","valueProps","children","label","mt","labelTooltip","placement","message","ml","name","size","Component","DashboardMenu","logout","buyModalOpened","setConnector","connectorName","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","sendGoogleAnalyticsEvent","eventCategory","eventAction","context","unsetConnector","setState","govModalOpened","_this2","menu","visibleLinks","menuLink","isVisible","visible","showMobile","mobile","isMobile","isDarkTheme","themeMode","darkModeEnabled","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","height","react_router_dom__WEBPACK_IMPORTED_MODULE_10__","position","src","checkUrlOrigin","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_9__","buttonProps","style","display","paddingLeft","handleClick","connectAndValidateAccount","mx","align","alignContent","_NetworkIndicator_NetworkIndicator__WEBPACK_IMPORTED_MODULE_13__","menuIndex","LinkComponent","isExternalLink","ExtLink","RouterLink","activeImage","imageDark","image","inactiveImage","imageInactiveDark","imageInactive","my","key","route","href","onClick","closeMenu","textDecoration","py","px","borderRadius","border","selected","backgroundColor","mr","icon","whiteSpace","setThemeMode","NetworkIndicator","activeNetworks","defaultNetwork","loadNetworks","networkInitialized","availableNetworks","networkId","networkConfig","config","requiredNetwork","getRequiredNetwork","network","setRequiredNetwork","JSON","stringify","required","_this3","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","isSearchable","innerProps","customOptionProps","pl","pr","options","CustomOptionValue","imageSrc","data","provider","defaultValue","onChange","selectNetwork","bind","CustomValueContainer","selectProps","flex","cursor","isCorrectNetwork","isInteractive","__webpack_require__","__webpack_exports__","Swipeable","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","react_swipeable__WEBPACK_IMPORTED_MODULE_1__","handlers","useSwipeable","onSwiped","eventData","delta","preventDefaultTouchmoveEvent","trackTouch","trackMouse","rotationAngle","touchAction","TooltipModal","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","componentDidUpdate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","closeModal","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_8__","maxWidth","closeFunc","Header","pt","Body","dangerouslySetInnerHTML","__html","content","_RoundButton_RoundButton_js__WEBPACK_IMPORTED_MODULE_11__","React","module","exports","newLink","newPill","ethInput","ethInputDark","mainInput","button","gradientButton","input","newPillContainerAnim","Notifications","tabOpened","notifications","mouseOverBell","unreadNotifications","lastOpenTimestamp","mouseOverNotifications","governanceUtil","loadNotifications","clickEvent","eventLabel","updateLastOpenTimestamp","notificationsChanged","Date","now","notificationsParams","getStoredItem","setLocalStorage","currentNetwork","isMainnet","governanceConfig","batchDepositConfig","polygonBridgeConfig","blocksPerWeek","div","oneWeekAgoBlock","minus","polygonBridgeEnabled","enabled","includes","governanceEnabled","getSubstackLatestFeed","getSnapshotProposals","getPolygonBridgeTxs","latestFeed","activeSnapshotProposals","polygonTransactions","governanceProposals","batchedDeposits","start","currTime","end","latestFeedDate","strToMoment","isoDate","isAfter","subtract","link","_d","getTime","htmlDecode","text","date","utc","format","snapshotProposalBaseUrl","msg","payload","body","authorIpfsHash","governanceProposalUrl","iconProps","hash","batchDepositBaseUrl","batchToken","batchInfo","lastExecution","timeStamp","batchRedeems","theme","colors","transactions","status","completed","polygonBridgeBaseUrl","tx","action","included","exited","token","tokenSymbol","depositBaseUrl","notification","openWindow","window","location","_this4","hasUnreadNotifications","iconColor","react_default","index_es","zIndex","flexProps","onMouseOut","setMouseOverBell","onMouseOver","toggleTab","className","styles","bell","ring","active","counter","DashboardCard","right","maxHeight","overflow","top","minWidth","setMouseOverNotifications","openNotification","dark","borderBottom","divider","textOverflow","AccountModal","balances","loadBalances","regenerator_default","availableStrategies","contractsInitialized","best","baseToken","tokens","strategy","strategyToken","idle","accountChanged","acccount","section","goToSection","viewOnly","rows","renderBalances","boxShadow","tokenIndex","AssetField","tokenConfig","objectSpread","fieldInfo","ModalCard","address","toolName","toolConfig","CardIconButton","Footer","ButtonLoader","buttonText","isLoading","asyncToGenerator","MenuAccount","isModalOpen","idleTokenBalance","idleGovToken","componentUnmounted","toggleModal","modalName","setStateSafe","getIdleGovToken","newState","loadIdleTokenBalance","idleGovTokenConfig","idleGovTokenEnabled","getBalance","getUnclaimedTokens","unclaimed","plus","walletProvider","connectorInfo","walletIcon","governanceRoute","baseRoute","dashboardRoute","toggleMenu","menuOpened","alt","ShortHash","src_Notifications_Notifications","balanceButton","setGovModal","isDashboard","RoundButton","mainColor","isGovernance","components_AccountModal","GovModal","total","txStatus","processing","txHash","loading","loadTokenInfo","_ref2","_ref3","slicedToArray","claim","error","getTransactionError","claimCallback","claimRewards","bgLayer","background","titleProps","gt","pb","TxProgressBar","textColor","cancelTextColor","cancelTextHoverColor","waitText","endMessage","cancelTransaction","contrastColor","disabled","lte","DelegateVesting","newDelegate","delegatee","currentDelegate","delegateAddressValid","delegateDifferentWallet","vestingContractDelegated","delegatesChanges","lastDelegateTx","delegator","pop","toDelegate","revoke","repeat","checkAddress","loadData","target","type","borderColor","placeholder","changeDelegate","checked","setDelegateDifferentWallet","DashboardHeader","activeNews","networkChanged","stakingConfig","nexusMutualConfig","stakingPolygonConfig","flashNews","1","url","getDashboardSectionUrl","137","currentNetworkId","getRequiredNetworkId","activeFlashNews","floor","random","src_MenuAccount_MenuAccount","isActive","hoverColor","src_DelegateVesting_DelegateVesting","components_GovModal","list"],"mappings":"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","file":"static/js/1.dbc81033.chunk.js","sourcesContent":["import Batcher from 'web3-batched-send';\nimport FunctionsUtil from './FunctionsUtil';\nimport VesterABI from '../contracts/Vester.json';\n\n// const env = process.env;\n\nclass GovernanceUtil {\n  // Attributes\n  props = {};\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  getTotalSupply = async () => {\n\n    // Check for cached data\n    const cachedDataKey = 'getTotalSupply';\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n    let totalSupply = await this.functionsUtil.genericContractCall(contractName,'totalSupply');\n    if (totalSupply){\n      totalSupply = this.functionsUtil.fixTokenDecimals(totalSupply,18);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,totalSupply,null);\n    }\n\n    return null;\n  }\n\n  getTokensBalance = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n\n      // Check for cached data\n      const cachedDataKey = `getTokensBalance_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const balance = await this.functionsUtil.getContractBalance(contractName, account);\n      if (balance && !this.functionsUtil.BNify(balance).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,this.functionsUtil.BNify(balance));\n      }\n    }\n    return null;\n  }\n\n  getVestingContract = async (account=null) => {\n    account = account ? account : this.props.account;\n    const vestingContract = await this.functionsUtil.genericContractCall('VesterFactory','vestingContracts',[account]);\n\n    if (parseInt(vestingContract) === 0){\n      return null;\n    }\n    // Init vesting contract\n    await this.props.initContract('VestingContract',vestingContract,VesterABI);\n    return vestingContract;\n  }\n\n  delegateVesting = async (account=null,delegate=null,callback=null,callbackReceipt=null) => {\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      // await this.functionsUtil.contractMethodSendWrapper('IDLE','delegate',[delegate]);\n      return await this.functionsUtil.contractMethodSendWrapper('VestingContract','setDelegate',[delegate],callback,callbackReceipt);\n    }\n    return null;\n  }\n\n  getVestingAmount = async (account=null) => {\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      let vestingAmount = await this.functionsUtil.genericContractCall('VestingContract','vestingAmount');\n      if (vestingAmount){\n        return this.functionsUtil.BNify(vestingAmount);\n      }\n    }\n    return null;\n  }\n\n  getCurrentDelegate = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n\n      // Check for cached data\n      const cachedDataKey = `getCurrentDelegate_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const delegate = await this.functionsUtil.genericContractCall(contractName, 'delegates', [account]);\n\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delegate);\n    }\n\n    return null;\n  }\n\n  getCurrentVotes = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n      // Check for cached data\n      const cachedDataKey = `getCurrentVotes_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const votes = await this.functionsUtil.genericContractCall(contractName, 'getCurrentVotes', [account]);\n      if (votes && !this.functionsUtil.BNify(votes).isNaN() ){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,this.functionsUtil.BNify(votes));\n      }\n    }\n\n    return null;\n  }\n\n  getVotingPeriod = async () => {\n    // Check for cached data\n    const cachedDataKey = `votingPeriod`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    let votingPeriod = await this.functionsUtil.genericContractCall(contractName,'votingPeriod');\n    if (votingPeriod){\n      votingPeriod = this.functionsUtil.BNify(votingPeriod);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,votingPeriod,null);\n    }\n\n    return null;\n  }\n\n  getTimelockDelay = async () => {\n    // Check for cached data\n    const cachedDataKey = `getTimelockDelay`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    let delay = await this.functionsUtil.genericContractCall('Timelock','delay');\n    if (delay){\n      delay = this.functionsUtil.BNify(delay);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delay,null);\n    }\n\n    return null;\n  }\n\n  queueProposal = async (proposalId,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    await this.functionsUtil.contractMethodSendWrapper(contractName,'queue',[this.functionsUtil.toBN(proposalId)],callback,callbackReceipt);\n  }\n\n  executeProposal = async (proposalId,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    await this.functionsUtil.contractMethodSendWrapper(contractName,'execute',[this.functionsUtil.toBN(proposalId)],callback,callbackReceipt);\n  }\n\n  proposeAndVoteFor = async (targets, values, signatures, calldatas, description) => {\n    const batcher = new Batcher(this.props.web3,'0x741A4dCaD4f72B83bE9103a383911d78362611cf');\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    const contract = this.functionsUtil.getContractByName(contractName);\n\n    const txs = [\n      {\n        to:contract._address,\n        method:contract.methods.propose,\n        args:[targets, values, signatures, calldatas, description]\n      },\n      {\n        to:contract._address,\n        method:contract.methods.castVote,\n        args:[this.functionsUtil.BNify(3), true],\n      }\n    ];\n\n    batcher(txs);\n  }\n\n  propose = async (targets, values, signatures, calldatas, description, callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    return await this.props.contractMethodSendWrapper(contractName, 'propose', [targets, values, signatures, calldatas, description], null, callback, callbackReceipt);\n  }\n\n  castVote = async (proposalId,support,callback=null,callbackReceipt=null) => {\n    proposalId = this.functionsUtil.toBN(proposalId);\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    return await this.props.contractMethodSendWrapper(contractName, 'castVote', [proposalId, support], null, callback, callbackReceipt);\n  }\n\n  setDelegate = async (delegate,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n    return await this.props.contractMethodSendWrapper(contractName, 'delegate', [delegate], null, callback, callbackReceipt);\n  }\n\n  getDelegatesChanges = async () => {\n\n    const lastBlockNumber = await this.props.web3.eth.getBlockNumber();\n\n    const delegationsCalls = [];\n    const blocksPerCall = 100000;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const delegatesContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n\n    for (var blockNumber = fromBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      const toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      delegationsCalls.push(this.functionsUtil.getContractPastEvents(delegatesContractName,'DelegateChanged', {fromBlock: blockNumber, toBlock}))\n    }\n\n    const all_delegations = await Promise.all(delegationsCalls);\n\n    return all_delegations.reduce( (delegations,d) => {\n      delegations = delegations.concat(d);\n      return delegations;\n    },[]);\n  }\n\n  getDelegatesVotesChanges = async () => {\n\n    const lastBlockNumber = await this.props.web3.eth.getBlockNumber();\n\n    const delegationsCalls = [];\n    const blocksPerCall = 100000;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const delegatesContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n\n    for (var blockNumber = fromBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      const toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      delegationsCalls.push(this.functionsUtil.getContractPastEvents(delegatesContractName,'DelegateVotesChanged', {fromBlock: blockNumber, toBlock}))\n    }\n\n    const all_delegations = await Promise.all(delegationsCalls);\n\n    return all_delegations.reduce( (delegations,d) => {\n      delegations = delegations.concat(d);\n      return delegations;\n    },[]);\n  }\n\n  getDelegates = async (limit=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getDelegates`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const [\n      all_votes,\n      totalSupply,\n      delegations,\n    ] = await Promise.all([\n      this.getVotes(),\n      this.getTotalSupply(),\n      this.getDelegatesVotesChanges()\n    ]);\n\n    const delegateAccounts = {};\n    delegations.forEach(e => {\n      const { delegate, newBalance } = e.returnValues;\n      delegateAccounts[delegate] = newBalance;\n    });\n\n    let delegates = [];\n    Object.keys(delegateAccounts).forEach((account) => {\n      const votes = +delegateAccounts[account];\n      if (votes === 0) return;\n      delegates.push({\n        votes: votes/1e18,\n        delegate: account\n      });\n    });\n\n    delegates.sort((a, b) => {\n      return a.votes < b.votes ? 1 : -1;\n    });\n\n    delegates.forEach( (d,index) => {\n      d.rank = index+1;\n      d.votes = d.votes.toFixed(6);\n      d.vote_weight = (100 * (d.votes / parseFloat(totalSupply))).toFixed(4) + '%';\n      d.proposals = all_votes.filter( v => (v.voter && d.delegate && v.voter.toLowerCase() === d.delegate.toLowerCase()) ).length;\n    });\n\n    this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delegates);\n\n    if (limit !== null){\n      delegates = delegates.splice(0,limit);\n    }\n\n    return delegates;\n  }\n\n  getProposalParams = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getProposalParams`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    let [\n      proposalThreshold,\n      proposalMaxOperations\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(govContractName,'proposalThreshold'),\n      this.functionsUtil.genericContractCall(govContractName,'proposalMaxOperations')\n    ]);\n\n    if (proposalThreshold){\n      proposalThreshold = this.functionsUtil.BNify(proposalThreshold);\n    }\n\n    const params = {\n      proposalThreshold,\n      proposalMaxOperations\n    };\n\n    return this.functionsUtil.setCachedData(cachedDataKey,params);\n  }\n\n  getVotes = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getVotes`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const governanceContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n\n    let votes = await this.functionsUtil.getContractPastEvents(governanceContractName,'VoteCast', {fromBlock, toBlock: 'latest'});\n\n    if (votes){\n      votes = votes.map( e => {\n        const {\n            voter,\n            votes,\n            support,\n            proposalId\n        } = e.returnValues;\n        return {\n          votes,\n          voter,\n          support,\n          proposalId\n        }\n      });\n    }\n\n    return this.functionsUtil.setCachedData(cachedDataKey,votes);\n  }\n\n  getProposals = async (voted_by=null,filter_by_state=null,startBlock=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getProposals`;\n    let cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      if (filter_by_state){\n        cachedData = cachedData.filter( p => (p && p.state && p.state.toLowerCase() === filter_by_state.toLowerCase() ) );\n      }\n      if (voted_by){\n        cachedData = cachedData.filter( p => (p && p.votes.find( v => (v.voter && v.voter.toLowerCase() === voted_by.toLowerCase()) )) );\n      }\n      if (startBlock){\n        cachedData = cachedData.filter( p => parseInt(p.startBlock)>=parseInt(startBlock) );\n      }\n      return cachedData;\n    }\n\n    const enumerateProposalState = (state) => {\n      const proposalStates = ['Pending', 'Active', 'Canceled', 'Defeated', 'Succeeded', 'Queued', 'Expired', 'Executed'];\n      return proposalStates[state];\n    };\n\n    const governanceContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    const proposalCount = await this.functionsUtil.genericContractCall(governanceContractName,'proposalCount');\n\n    if (!proposalCount){\n      return [];\n    }\n\n    const proposalGets = [];\n    const proposalStateGets = [];\n    for (const i of Array.from(Array(parseInt(proposalCount)),(n,i) => i+1)) {\n      proposalGets.push(this.functionsUtil.genericContractCall(governanceContractName,'proposals',[i]));\n      proposalStateGets.push(this.functionsUtil.genericContractCall(governanceContractName,'state',[i]));\n    }\n\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n\n    let [\n      votes,\n      proposals,\n      proposalStates,\n      proposalQueuedEvents,\n      proposalCreatedEvents,\n      proposalCanceledEvents,\n      proposalExecutedEvents,\n    ] = await Promise.all([\n      this.getVotes(),\n      Promise.all(proposalGets),\n      Promise.all(proposalStateGets),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalQueued', {fromBlock, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalCreated', {fromBlock, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalCanceled', {fromBlock, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalExecuted', {fromBlock, toBlock: 'latest'}),\n    ]);\n\n    if (!proposals){\n      return false;\n    }\n\n    proposals.reverse();\n    proposalStates.reverse();\n    proposalQueuedEvents.reverse();\n    proposalCreatedEvents.reverse();\n    proposalCanceledEvents.reverse();\n    proposalExecutedEvents.reverse();\n\n    // await this.functionsUtil.asyncForEach(proposals, async (p,i) => {\n    await this.functionsUtil.asyncForEach(proposalCreatedEvents, async (createdEvent,i) => {\n      const p = proposals[i];\n\n      if (!p || !p.id){\n        return;\n      }\n\n      const proposalId = parseInt(p.id);\n      const canceledEvent = proposalCanceledEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n      const executedEvent = proposalExecutedEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n      const queuedEvent = proposalQueuedEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n\n      const [\n        endBlockInfo,\n        queuedBlockInfo,\n        createdBlockInfo,\n        canceledBlockInfo,\n        executedBlockInfo,\n      ] = await Promise.all([\n        p.endBlock ? this.functionsUtil.getBlockInfo(p.endBlock) : null,\n        queuedEvent ? this.functionsUtil.getBlockInfo(queuedEvent.blockNumber) : null,\n        createdEvent ? this.functionsUtil.getBlockInfo(createdEvent.blockNumber) : null,\n        canceledEvent ? this.functionsUtil.getBlockInfo(canceledEvent.blockNumber) : null,\n        executedEvent ? this.functionsUtil.getBlockInfo(executedEvent.blockNumber) : null,\n      ]);\n\n      // Init states array\n      p.states = [];\n\n      // Create created state\n      const createdState = {\n        state: \"Pending\",\n        blockNumber: createdEvent.blockNumber,\n        end_time: createdBlockInfo.timestamp,\n        start_time: createdBlockInfo.timestamp,\n        trx_hash: createdEvent.transactionHash\n      };\n      p.states.push(createdState);\n\n      // Push active state\n      const activeState = {\n        end_time: null,\n        trx_hash: null,\n        state: \"Active\",\n        blockNumber: createdEvent.blockNumber,\n        start_time: createdState.start_time\n      };\n      p.states.push(activeState);\n\n      // Push canceled state\n      if (canceledEvent){\n        const canceledState = {\n          end_time: null,\n          state: \"Canceled\",\n          blockNumber: canceledEvent.blockNumber,\n          start_time: canceledBlockInfo.timestamp,\n          trx_hash: canceledEvent.transactionHash\n        }\n        // Update previous state end_time\n        p.states[p.states.length-1].end_time = canceledBlockInfo.timestamp;\n        p.states.push(canceledState);\n      } else {\n        // Push queued state\n        if (queuedEvent){\n          const succeededState = {\n            end_time: null,\n            trx_hash: null,\n            state: \"Succeeded\",\n            blockNumber: queuedEvent.blockNumber,\n            start_time: queuedBlockInfo.timestamp,\n          };\n\n          const queuedState = {\n            end_time: null,\n            state: \"Queued\",\n            blockNumber: queuedEvent.blockNumber,\n            trx_hash: queuedEvent.transactionHash,\n            start_time: queuedBlockInfo.timestamp,\n          };\n\n          // Update previous state end_time\n          p.states[p.states.length-1].end_time = queuedBlockInfo.timestamp;\n          // Push Succeeded state\n          p.states.push(succeededState);\n          // Push queued state\n          p.states.push(queuedState);\n        }\n\n        // Push executed state\n        if (executedEvent){\n          const executedState = {\n            end_time: null,\n            state: \"Executed\",\n            blockNumber: executedEvent.blockNumber,\n            start_time: executedBlockInfo.timestamp,\n            trx_hash: executedEvent.transactionHash\n          }\n          // Update previous state end_time\n          p.states[p.states.length-1].end_time = executedBlockInfo.timestamp;\n          p.states.push(executedState);\n        }\n      }\n\n      // Check for defeated or expired\n      p.state = enumerateProposalState(proposalStates[i]);\n      const foundState = p.states.find( s => (s.state === p.state) );\n      if (!foundState){\n        const endState = {\n          state: p.state,\n          end_time: null,\n          trx_hash: null,\n          blockNumber: p.endBlock,\n          start_time: endBlockInfo.timestamp,\n        }\n        // Update previous state end_time\n        p.states[p.states.length-1].end_time = endBlockInfo.timestamp;\n        p.states.push(endState);\n      }\n\n      p.votes = votes.filter( v => (parseInt(v.proposalId)===proposalId) );\n\n      const { description, signatures, targets, values, calldatas } = createdEvent.returnValues;\n      p.timestamp = createdBlockInfo ? createdBlockInfo.timestamp : null;\n\n\n      // Idle\n      p.title = description.split(/# |\\n|↵/g)[0].replace(/^#/,'') || 'Untitled';\n      p.description = description.split(/\\n|↵/g);\n      p.description.shift();\n      p.description = p.description.join(\"\\n\");\n      p.description = p.description.replace(/\\n/g,\"<br />\")\n\n      // Overwrite proposal details\n      const proposalDetails = this.functionsUtil.getGlobalConfig(['governance','proposals',proposalId]);\n      if (proposalDetails){\n        Object.keys(proposalDetails).forEach( attr => {\n          p[attr] = proposalDetails[attr];\n        });\n      }\n\n      // Save proposal\n      proposals[i] = {\n        eta:p.eta,\n        actions:{\n          values,\n          targets,\n          calldatas,\n          signatures\n        },\n        id:proposalId,\n        title:p.title,\n        state:p.state,\n        votes:p.votes,\n        states:p.states,\n        executed:p.executed,\n        endBlock:p.endBlock,\n        canceled:p.canceled,\n        forVotes:p.forVotes,\n        proposer:p.proposer,\n        timestamp:p.timestamp,\n        startBlock:p.startBlock,\n        description:p.description,\n        againstVotes:p.againstVotes\n      };\n    });\n\n    this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,proposals,3600);\n\n    // console.log('getProposals',filter_by_state,cachedData);\n\n    if (filter_by_state){\n      proposals = proposals.filter( p => (p && p.state && p.state.toLowerCase() === filter_by_state.toLowerCase() ) );\n    }\n\n    if (voted_by){\n      proposals = proposals.filter( p => (p && p.votes.find( v => (v.voter && v.voter.toLowerCase() === voted_by.toLowerCase()) )) );\n    }\n\n    if (startBlock){\n      proposals = proposals.filter( p => parseInt(p.startBlock)>=parseInt(startBlock) );\n    }\n    \n    return proposals;\n  }\n}\n\nexport default GovernanceUtil;","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass StatsCard extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          minHeight:this.props.minHeight ? this.props.minHeight : ['130px','153px']\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'flex-start'}\n          flexDirection={'column'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            alignItems={'flex-start'}\n            minHeight={ this.props.titleMinHeight ? this.props.titleMinHeight : ['auto','60px'] }\n          >\n            <Heading.h4\n              mb={[3,0]}\n              fontWeight={4}\n              fontSize={[2,3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n            >\n              {this.props.title}\n            </Heading.h4>\n          </Flex>\n          {\n            (typeof this.props.value !== 'undefined' && this.props.value !== null && this.props.value.toString().length>0) &&\n              <Text\n                lineHeight={1}\n                fontSize={[4,5]}\n                fontWeight={[3,4]}\n                color={'statValue'}\n                {...this.props.valueProps}\n              >\n                {this.props.value}\n              </Text>\n          }\n          {\n            this.props.children ?\n              this.props.children\n            : null\n          }\n          {\n            (typeof this.props.label !== 'undefined' && this.props.label !== null && this.props.label.toString().length>0) && (\n              <Flex\n                mt={[3,2]}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Text\n                  fontSize={1}\n                  fontWeight={3}\n                  color={'legend'}\n                >\n                  {this.props.label}\n                </Text>\n                {\n                  (this.props.labelTooltip && this.props.labelTooltip.length>0) && (\n                    <Tooltip\n                      placement={'top'}\n                      message={this.props.labelTooltip}\n                    >\n                      <Icon\n                        ml={2}\n                        name={\"Info\"}\n                        size={'1em'}\n                        color={'cellTitle'}\n                      />\n                    </Tooltip>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default StatsCard;","import ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport { Flex, Box, Icon, Text, Image, Link } from \"rimble-ui\";\nimport NetworkIndicator from \"../NetworkIndicator/NetworkIndicator\";\n\nclass DashboardMenu extends Component {\n  state = {\n    logout: false,\n    buyModalOpened: false\n  };\n\n  // Utils\n  functionsUtil = null;\n  setConnector = async connectorName => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: \"Connect\",\n      eventAction: \"logout\"\n    });\n\n    if (typeof this.props.setConnector === \"function\") {\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.unsetConnector();\n    // return await this.props.context.setConnector(connectorName);\n  };\n\n  async logout() {\n    this.setState({\n      logout: true\n    });\n\n    this.props.logout();\n    await this.setConnector(\"Infura\");\n    // this.props.closeModal();\n  }\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n  setGovModal(govModalOpened) {\n    this.setState({\n      govModalOpened\n    });\n  }\n\n  setBuyModalOpened(buyModalOpened) {\n    this.setState({\n      buyModalOpened\n    });\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    if (!this.props.menu.length) {\n      return null;\n    }\n\n    const visibleLinks = this.props.menu.filter(menuLink => {\n      const isVisible = menuLink.visible === undefined || menuLink.visible;\n      const showMobile = menuLink.mobile === undefined || menuLink.mobile;\n      return isVisible && (!this.props.isMobile || showMobile);\n    });\n\n    if (!visibleLinks.length) {\n      return null;\n    }\n\n    const isDarkTheme = this.props.themeMode === \"dark\";\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig([\n      \"dashboard\",\n      \"theme\",\n      \"darkModeEnabled\"\n    ]);\n\n    return (\n      <Flex p={0} height={\"100%\"} flexDirection={\"column\"}>\n        <Flex\n          p={3}\n          mb={3}\n          flexDirection={\"row\"}\n          alignItems={\"center\"}\n          justifyContent={\"flex-start\"}\n        >\n          <RouterLink\n            to={\"/\"}\n          >\n            <Image\n              height={\"42px\"}\n              position={\"relative\"}\n              src={this.functionsUtil.checkUrlOrigin() ? !isDarkTheme ? \"images/logo-gradient.svg\" : \"images/logo-dark.svg\" : !isDarkTheme ? \"images/logo-gradient-beta.png\" : \"images/logo-white-beta.png\"}\n            />\n          </RouterLink>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          <RoundButton\n            {...this.props}\n            buttonProps={{\n              mb: 3,\n              style: {\n                display: \"flex\",\n                paddingLeft: 16,\n                justifyContent: \"flex-start\"\n              }\n            }}\n            handleClick={this.props.account ? e => this.logout() : this.props.connectAndValidateAccount}\n          >\n            <Flex\n              width={1}\n              alignItems={\"center\"}\n              justifyContent={\"flex-start\"}\n            >\n              {this.props.account ? (\n                <Icon\n                  mx={2}\n                  size={\"1.4em\"}\n                  color={\"white\"}\n                  align={\"center\"}\n                  name={\"ExitToApp\"}\n                />\n              ) : (\n                <Image\n                  mx={2}\n                  align={\"center\"}\n                  height={\"1.6em\"}\n                  src={\"images/sidebar/plug_white.svg\"}\n                />\n              )}\n              <Text\n                ml={1}\n                fontWeight={3}\n                color={\"white\"}\n                fontSize={[1, 2]}\n                alignContent={\"center\"}\n                justifyContent={\"center\"}\n              >\n                {this.props.account ? \"Logout\" : \"Connect\"}\n              </Text>\n            </Flex>\n          </RoundButton>\n        </Flex>\n        {\n          this.props.isMobile && (\n            <Flex\n              mb={3}\n              width={'100%'}\n              alignItems={'stretch'}\n              flexDirection={'column'}\n              justifyContent={'space-between'}\n            >\n              <NetworkIndicator\n                {...this.props}\n              />\n            </Flex>\n          )\n        }\n        {visibleLinks.map((menuLink, menuIndex) => {\n          const isExternalLink = menuLink.isExternalLink;\n          const LinkComponent = isExternalLink ? ExtLink : RouterLink;\n          const activeImage = isDarkTheme && menuLink.imageDark ? menuLink.imageDark : menuLink.image;\n          const inactiveImage = isDarkTheme && menuLink.imageInactiveDark ? menuLink.imageInactiveDark : menuLink.imageInactive;\n          return (\n            <Box\n              width={\"auto\"}\n              my={[2, \"8px\"]}\n              key={`menu-${menuIndex}`}\n            >\n              <LinkComponent\n                to={menuLink.route}\n                href={menuLink.route}\n                onClick={this.props.closeMenu}\n                style={{ textDecoration: \"none\" }}\n              >\n                <Flex\n                  py={2}\n                  px={3}\n                  borderRadius={2}\n                  flexDirection={\"row\"}\n                  alignItems={\"center\"}\n                  border={menuLink.selected ? 2 : null}\n                  backgroundColor={\n                    menuLink.selected ? \"menuHover\" : \"transparent\"\n                  }\n                >\n                  <Flex\n                    py={1}\n                    width={1}\n                    alignItems={\"center\"}\n                    flexDirection={\"row\"}\n                    justifyContent={\"flex-start\"}\n                  >\n                    {\n                      menuLink.image ? (\n                        <Image\n                          mr={3}\n                          ml={2}\n                          mb={0}\n                          align={\"center\"}\n                          height={\"1.6em\"}\n                          src={menuLink.selected ? activeImage : inactiveImage}\n                        />\n                      ) : menuLink.icon && (\n                        <Icon\n                          name={menuLink.icon}\n                          color={\n                            menuLink.selected\n                              ? \"menuIconActive\"\n                              : isDarkTheme\n                              ? \"white\"\n                              : \"dark-gray\"\n                          }\n                          mr={3}\n                          ml={2}\n                          mb={0}\n                          size={\"1.6em\"}\n                        />\n                      )\n                    }\n                    <Text\n                      fontSize={2}\n                      fontWeight={3}\n                      color={\"copyColor\"}\n                      textAlign={\"center\"}\n                      style={{\n                        whiteSpace: \"nowrap\"\n                      }}\n                    >\n                      {menuLink.label}\n                    </Text>\n                  </Flex>\n                </Flex>\n              </LinkComponent>\n            </Box>\n          );\n        })}\n        {darkModeEnabled && (\n          <Flex\n            my={2}\n            width={\"auto\"}\n            height={\"100%\"}\n            flexDirection={\"column\"}\n            justifyContent={\"flex-end\"}\n          >\n            <Link\n              style={{ textDecoration: \"none\" }}\n              onClick={e =>\n                this.props.setThemeMode(\n                  this.props.themeMode === \"light\" ? \"dark\" : \"light\"\n                )\n              }\n            >\n              <Flex\n                p={2}\n                alignItems={\"center\"}\n                flexDirection={\"row\"}\n                justifyContent={\"flex-end\"}\n              >\n                <Icon\n                  mr={2}\n                  ml={2}\n                  size={\"1.4em\"}\n                  align={\"center\"}\n                  color={\"copyColor\"}\n                  name={\"Brightness2\"}\n                />\n                <Flex\n                  px={\"0.2em\"}\n                  width={\"3.4em\"}\n                  height={\"1.6em\"}\n                  alignItems={\"center\"}\n                  borderRadius={\"1.6em\"}\n                  backgroundColor={\"cellText\"}\n                  justifyContent={\n                    this.props.themeMode === \"light\" ? \"flex-end\" : \"flex-start\"\n                  }\n                >\n                  <Box\n                    width={\"1.3em\"}\n                    height={\"1.3em\"}\n                    borderRadius={\"1.3em\"}\n                    backgroundColor={\"copyColor\"}\n                  ></Box>\n                </Flex>\n                <Icon\n                  ml={2}\n                  size={\"1.4em\"}\n                  align={\"center\"}\n                  name={\"WbSunny\"}\n                  color={\"copyColor\"}\n                />\n              </Flex>\n            </Link>\n          </Flex>\n        )}\n      </Flex>\n    );\n  }\n}\n\nexport default DashboardMenu;\n","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Text, Image, Box, Loader } from \"rimble-ui\";\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass NetworkIndicator extends Component {\n\n  state = {\n    activeNetworks:[],\n    defaultNetwork:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadNetworks();\n  }\n\n  loadNetworks(){\n\n    if (!this.props.networkInitialized){\n      return false;\n    }\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n    const activeNetworks = enabledNetworks.map( networkId => {\n      const networkConfig = availableNetworks[networkId];\n      return {\n        value:networkId,\n        config:networkConfig,\n        label:networkConfig.name,\n      }\n    });\n\n    const requiredNetwork = this.functionsUtil.getRequiredNetwork();\n    const defaultNetwork = activeNetworks.find( network => network.value === requiredNetwork.id );\n\n    this.setState({\n      defaultNetwork,\n      activeNetworks\n    });\n  }\n\n  selectNetwork(networkId){\n    this.props.setRequiredNetwork(networkId);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const networkInitialized = !prevProps.networkInitialized && this.props.networkInitialized;\n    const requiredNetworkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    if (requiredNetworkChanged || networkInitialized){\n      this.setState({\n        defaultNetwork:null\n      },() => {\n        this.loadNetworks();\n      });\n    }\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const imageSrc = `images/networks/${props.data.config.provider}.svg`;\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={imageSrc}\n              width={'1.3em'}\n              height={'1.3em'}\n            />\n            <Text\n              fontSize={2}\n              fontWeight={3}\n              color={'copyColor'}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.value || props.data;\n      const label = selectProps.label;\n      const imageSrc = `images/networks/${selectProps.config.provider}.svg`;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n          px={0}\n        >\n          <Flex\n            {...props.innerProps}\n            p={0}\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <Image\n              mr={2}\n              src={imageSrc}\n              width={'1.3em'}\n              height={'1.3em'}\n            />\n            <Text\n              fontSize={2}\n              fontWeight={3}\n              color={'copyColor'}\n            >\n              {label}\n            </Text>\n            <Box\n              ml={2}\n              width={'8px'}\n              height={'8px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.network.isCorrectNetwork ? '#00b84a' : '#fa0000'}\n            >\n            </Box>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return this.state.defaultNetwork ? (\n      <GenericSelector\n        {...this.props}\n        name={'network'}\n        isSearchable={false}\n        innerProps={Object.assign({\n          px:1,\n          py:0,\n          height:'42px'\n        },this.props.innerProps)}\n        customOptionProps={{\n          px:0,\n          pl:3,\n          pr:0\n        }}\n        options={this.state.activeNetworks}\n        CustomOptionValue={CustomOptionValue}\n        defaultValue={this.state.defaultNetwork}\n        onChange={this.selectNetwork.bind(this)}\n        CustomValueContainer={CustomValueContainer}\n      />\n    ) : (\n      <DashboardCard\n        {...this.props}\n        cardProps={{\n          px:[2,3],\n          display:'flex',\n          width:[1,'auto'],\n          alignItems:'center',\n          justifyContent:'center',\n          height:(this.props.innerProps && this.props.innerProps.height) || '42px',\n        }}\n        isInteractive={false}\n      >\n        <Loader size={'20px'} />\n      </DashboardCard>\n    );\n  }\n}\n\nexport default NetworkIndicator;","import React from \"react\";\nimport { useSwipeable } from 'react-swipeable';\n\nexport default function Swipeable(){\n\n  const params = arguments[0];\n\n  const handlers = useSwipeable({\n    onSwiped: (eventData) => params.callback(eventData),\n    delta: 10,                            // min distance(px) before a swipe starts\n    preventDefaultTouchmoveEvent: false,  // call e.preventDefault *See Details*\n    trackTouch: true,                     // track touch input\n    trackMouse: false,                    // track mouse input\n    rotationAngle: 0,                     // set a rotation angle\n  });\n\n  return (\n  \t<div {...handlers} style={{ touchAction: 'pan-x' }}>\n  \t\t{params.children}\n  \t</div>\n  );\n}","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass TooltipModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            title={this.props.title}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n                dangerouslySetInnerHTML={{ __html: this.props.content }}\n              >\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                GOT IT\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TooltipModal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newLink\":\"CryptoInput_newLink__35W_s\",\"newPill\":\"CryptoInput_newPill__2Q8cA\",\"ethInput\":\"CryptoInput_ethInput__3j2LJ\",\"ethInputDark\":\"CryptoInput_ethInputDark__R8OoA\",\"mainInput\":\"CryptoInput_mainInput__1zffg\",\"button\":\"CryptoInput_button__1N9EQ\",\"gradientButton\":\"CryptoInput_gradientButton__2kh5r\",\"input\":\"CryptoInput_input__3X3pI\",\"newPillContainerAnim\":\"CryptoInput_newPillContainerAnim__RvOCw\"};","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Notifications.module.scss';\nimport { Flex, Icon, Box, Text, Image } from \"rimble-ui\";\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Notifications extends Component {\n\n  state = {\n    tabOpened:false,\n    notifications:[],\n    mouseOverBell:false,\n    unreadNotifications:0,\n    lastOpenTimestamp:null,\n    mouseOverNotifications:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadNotifications();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const clickEventChanged = prevProps.clickEvent !== this.props.clickEvent;\n    if (clickEventChanged && this.props.clickEvent && !this.state.mouseOverNotifications && !this.state.mouseOverBell && this.state.tabOpened){\n      this.setState({\n        tabOpened:false\n      });\n    }\n\n    const tabOpenedChanged = prevState.tabOpened !== this.state.tabOpened;\n    if (tabOpenedChanged && this.state.tabOpened && this.state.notifications.length>0){\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Notifications',\n        eventAction: 'open_tab',\n        eventLabel: ''\n      });\n\n      this.updateLastOpenTimestamp();\n    }\n\n    const notificationsChanged = JSON.stringify(prevState.notifications) !== JSON.stringify(this.state.notifications);\n    const lastOpenTimestampChanged = prevState.lastOpenTimestamp !== this.state.lastOpenTimestamp;\n    if (lastOpenTimestampChanged || notificationsChanged){\n      const unreadNotifications = this.state.lastOpenTimestamp ? this.state.notifications.filter( n => n.timestamp>this.state.lastOpenTimestamp ).length  : this.state.notifications.length;\n      this.setState({\n        unreadNotifications\n      });\n    }\n  }\n\n  updateLastOpenTimestamp(){\n    const lastOpenTimestamp = Date.now();\n    \n    // Set Notification params in localStorage\n    const notificationsParams = this.functionsUtil.getStoredItem('notificationsParams',true,{});\n    notificationsParams.lastOpenTimestamp = lastOpenTimestamp;\n    this.functionsUtil.setLocalStorage('notificationsParams',notificationsParams,true);\n\n    this.setState({\n      lastOpenTimestamp\n    });\n  }\n\n  async loadNotifications(){\n\n    // Get stored lastOpenTimestamp for notifications\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const isMainnet = currentNetwork.id === 1;\n    const governanceConfig = this.functionsUtil.getGlobalConfig(['governance']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const notificationsParams = this.functionsUtil.getStoredItem('notificationsParams',true,{});\n    const lastOpenTimestamp = notificationsParams.lastOpenTimestamp || null;\n\n    const blockNumber = this.functionsUtil.BNify(await this.functionsUtil.getBlockNumber());\n    const blocksPerWeek = this.functionsUtil.BNify(this.functionsUtil.getGlobalConfig(['network','blocksPerYear'])).div(52.1429);\n    const oneWeekAgoBlock = parseInt(blockNumber.minus(blocksPerWeek));\n\n    const polygonBridgeEnabled = polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id);\n    const governanceEnabled = governanceConfig.enabled && governanceConfig.availableNetworks.includes(currentNetwork.id) && isMainnet && !this.props.isMobile;\n    const batchedDepositsEnabled = false; //batchDepositConfig.enabled && batchDepositConfig.availableNetworks.includes(currentNetwork.id) && isMainnet && !this.props.isMobile;\n\n    // Get active snapshot proposals\n    const [\n      latestFeed,\n      activeSnapshotProposals,\n      polygonTransactions,\n      governanceProposals,\n      batchedDeposits,\n    ] = await Promise.all([\n      this.functionsUtil.getSubstackLatestFeed(),\n      this.functionsUtil.getSnapshotProposals(true),\n      polygonBridgeEnabled ? this.functionsUtil.getPolygonBridgeTxs(this.props.account) : null,\n      governanceEnabled ? this.governanceUtil.getProposals(null,'Active',oneWeekAgoBlock) : null,\n      batchedDepositsEnabled ? this.functionsUtil.getBatchedDeposits(this.props.account,'executed') : null\n    ]);\n\n    let notifications = this.functionsUtil.getGlobalConfig(['notifications']).filter( n => (n.enabled && n.start<=currTime && n.end>currTime) );\n\n    // Show latest Substack for 1 week\n    if (latestFeed){\n      const latestFeedDate = this.functionsUtil.strToMoment(latestFeed.isoDate);\n      if (latestFeedDate.isAfter(this.functionsUtil.strToMoment().subtract(7,'d'))){\n        notifications.push({\n          link:latestFeed.link,\n          image:'/images/substack.png',\n          timestamp:latestFeedDate._d.getTime(),\n          title:this.functionsUtil.htmlDecode(latestFeed.title),\n          text:this.functionsUtil.htmlDecode(latestFeed.content),\n          date:latestFeedDate.utc().format('MMM DD, YYYY HH:mm UTC'),\n        });\n      }\n    }\n\n    const currTime = Date.now();\n\n    // Add snapshot proposals\n    const snapshotProposalBaseUrl = this.functionsUtil.getGlobalConfig(['network','providers','snapshot','urls','proposals']);\n\n    if (activeSnapshotProposals){\n      activeSnapshotProposals.forEach( p => {\n        const text = this.functionsUtil.htmlDecode(p.msg.payload.body.replace(/^[#]*/,''));\n        // const text = p.msg.payload.name.replace(/^[#]*/,'');\n        notifications.push({\n          text,\n          image:'/images/snapshot.png',\n          timestamp:p.msg.payload.start*1000,\n          link:snapshotProposalBaseUrl+p.authorIpfsHash,\n          title:this.functionsUtil.htmlDecode(p.msg.payload.name),\n          date:this.functionsUtil.strToMoment(p.msg.payload.start*1000).utc().format('MMM DD, YYYY HH:mm UTC'),\n        });\n      });\n    }\n\n    // Add governance proposals\n    if (governanceProposals){\n      const governanceProposalUrl = this.functionsUtil.getGlobalConfig(['governance','baseRoute'])+'/proposals/';\n      governanceProposals.forEach( p => {\n        notifications.push(\n          {\n            text:p.title,\n            iconProps:{\n              color:'#00acff'\n            },\n            icon:'LightbulbOutline',\n            timestamp:p.timestamp*1000,\n            title:'Governance Proposal',\n            hash:governanceProposalUrl+p.id,\n            date:this.functionsUtil.strToMoment(p.timestamp*1000).utc().format('MMM DD, YYYY HH:mm UTC'),\n          }\n        );\n      });\n    }\n\n    // Add Executed Batch Deposits\n    if (batchedDeposits){\n      const batchDepositBaseUrl = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+`/tools/${batchDepositConfig.route}/`;\n      Object.keys(batchedDeposits).forEach( batchToken => {\n        const batchInfo = batchedDeposits[batchToken];\n        const timestamp = batchInfo.lastExecution.timeStamp*1000;\n        const text = `You can claim ${batchInfo.batchRedeems.toFixed(4)} ${batchToken}`;\n        notifications.push({\n          text,\n          timestamp,\n          icon:'DoneAll',\n          title:'Batch Deposit Executed',\n          hash:batchDepositBaseUrl+batchToken,\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          date:this.functionsUtil.strToMoment(timestamp).utc().format('MMM DD, YYYY HH:mm UTC')\n        });\n      });\n    }\n\n    if (polygonTransactions){\n      const polygonBridgeBaseUrl = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+`/tools/${polygonBridgeConfig.route}/`;\n      const polygonWithdrawalsToExit = polygonTransactions.filter( tx => tx.action === 'Withdraw' && tx.included && !tx.exited );\n      polygonWithdrawalsToExit.forEach( tx => {\n        const timestamp = tx.timeStamp*1000;\n        const txDate = this.functionsUtil.strToMoment(timestamp);\n        if (txDate.isAfter(this.functionsUtil.strToMoment().subtract(10,'d'))){\n          const text = `You can Exit ${this.functionsUtil.BNify(tx.value).toFixed(4)} ${tx.token} from Polygon`;\n          notifications.push({\n            text,\n            timestamp,\n            image:polygonBridgeConfig.image,\n            title:'Polygon Withdraw Completed',\n            hash:polygonBridgeBaseUrl+tx.tokenSymbol,\n            date:this.functionsUtil.strToMoment(timestamp).utc().format('MMM DD, YYYY HH:mm UTC')\n          });\n        }\n      });\n\n      const depositBaseUrl = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+`/best/`;\n      const polygonCompletedDeposits = polygonTransactions.filter( tx => tx.action === 'Deposit' && tx.included );\n      polygonCompletedDeposits.forEach( tx => {\n        const timestamp = tx.timeStamp*1000;\n        const txDate = this.functionsUtil.strToMoment(timestamp);\n        if (txDate.isAfter(this.functionsUtil.strToMoment().subtract(1,'d'))){\n          const text = `Your ${this.functionsUtil.BNify(tx.value).toFixed(4)} ${tx.tokenSymbol} are now available in Polygon`;\n          notifications.push({\n            text,\n            timestamp,\n            image:polygonBridgeConfig.image,\n            title:'Polygon Deposit Completed',\n            hash:depositBaseUrl+tx.tokenSymbol,\n            date:this.functionsUtil.strToMoment(timestamp).utc().format('MMM DD, YYYY HH:mm UTC')\n          });\n        }\n      });\n    }\n\n    notifications = notifications.sort((a,b) => (a.timestamp < b.timestamp ? 1 : -1));\n\n    this.setState({\n      notifications,\n      lastOpenTimestamp\n    });\n  }\n\n  setMouseOverBell(mouseOverBell){\n    this.setState({\n      mouseOverBell\n    });\n  }\n\n  setMouseOverNotifications(mouseOverNotifications){\n    this.setState({\n      mouseOverNotifications\n    });\n  }\n\n  toggleTab(){\n    this.setState((prevState) => ({\n      tabOpened:!prevState.tabOpened\n    }));\n  }\n\n  openNotification(notification){\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Notifications',\n      eventAction: 'open_notification',\n      eventLabel: notification.link || notification.hash\n    });\n\n    if (notification.link){\n      return this.functionsUtil.openWindow(notification.link);\n    } else if (notification.hash) {\n      return window.location.hash = notification.hash;\n    }\n\n    return false;\n  }\n\n  render() {\n    const hasUnreadNotifications = this.state.unreadNotifications>0;\n    const iconColor = hasUnreadNotifications ? '#ffdc00' : 'cellText';\n    return (\n      <Flex\n        zIndex={999}\n        position={'relative'}\n        {...this.props.flexProps}\n      >\n        <Box\n          width={1}\n          position={'relative'}\n          onMouseOut={(e) => this.setMouseOverBell(false)}\n          onMouseOver={(e) => this.setMouseOverBell(true)}\n        >\n          <Icon\n            size={'2.4em'}\n            color={iconColor}\n            name={'Notifications'}\n            onClick={this.toggleTab.bind(this)}\n            className={[styles.bell,(hasUnreadNotifications ? styles.ring : null),(this.state.tabOpened || this.state.notifications.length>0 ? styles.active : null)]}\n          />\n          {\n            hasUnreadNotifications && \n              <Box\n                className={styles.counter}\n              >\n                {this.state.notifications.length}\n              </Box>\n          }\n        </Box>\n        {\n          this.state.tabOpened &&\n            <DashboardCard\n              cardProps={{\n                style:{\n                  right:0,\n                  maxHeight:'21em',\n                  overflow:'scroll',\n                  position:'absolute',\n                  top:this.props.isMobile ? '2.8em' : '3em',\n                },\n                minWidth:['91vw','22em'],\n                onMouseOut:(e) => this.setMouseOverNotifications(false),\n                onMouseOver:(e) => this.setMouseOverNotifications(true),\n              }}\n            >\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n              {\n                this.state.notifications.length>0 ?\n                  this.state.notifications.map( (n,index) => (\n                    <ExtLink\n                      style={{\n                        textDecoration:'none'\n                      }}\n                      key={`notification_${index}`}\n                      onClick={ e => this.openNotification(n) }\n                    >\n                      <Flex\n                        py={2}\n                        px={1}\n                        flexDirection={'row'}\n                        className={[styles.notification,this.props.themeMode === 'dark' ? styles.dark : null]}\n                        borderBottom={index<this.state.notifications.length-1 ? `1px solid ${this.props.theme.colors.divider}` : null}\n                      >\n                        <Flex\n                          minWidth={'2em'}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          {\n                            n.icon ? (\n                              <Icon\n                                name={n.icon}\n                                size={'1.6em'}\n                                color={'copyColor'}\n                                {...n.iconProps}\n                              />\n                            ) : n.image && (\n                              <Image\n                                src={n.image}\n                                width={'1.6em'}\n                                height={'1.6em'}\n                              />\n                            )\n                          }\n                        </Flex>\n                        <Flex\n                          ml={1}\n                          overflow={'hidden'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={1}\n                            lineHeight={1.3}\n                            color={'primary'}\n                            style={{\n                              overflow:'hidden',\n                              whiteSpace:'nowrap',\n                              textOverflow:'ellipsis'\n                            }}\n                          >\n                            {n.title}\n                          </Text>\n                          <Text\n                            fontSize={1}\n                            lineHeight={1.3}\n                            color={'copyColor'}\n                            style={{\n                              overflow:'hidden',\n                              whiteSpace:'nowrap',\n                              textOverflow:'ellipsis'\n                            }}\n                          >\n                            {n.text}\n                          </Text>\n                          <Text\n                            fontSize={0}\n                            lineHeight={1.3}\n                            color={'cellText'}\n                          >\n                            {n.date}\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </ExtLink>\n                  ))\n                : (\n                  <Text\n                    py={2}\n                    textAlign={'center'}\n                  >\n                    There are no notifications.\n                  </Text>\n                )\n              }\n              </Flex>\n            </DashboardCard>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Notifications;\n","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport AssetField from '../../AssetField/AssetField.js';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport { Heading, Modal, Flex, EthAddress } from \"rimble-ui\";\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\nimport styles from '../../CryptoInput/CryptoInput.module.scss';\nimport CardIconButton from '../../CardIconButton/CardIconButton';\n\nclass AccountModal extends React.Component {\n\n  state = {\n    logout: false,\n    balances: null\n  }\n\n  loadBalances = async () => {\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || !this.props.account || this.state.balances !== null){\n      return false;\n    }\n\n    const balances = [];\n    const allTokens = Object.keys(this.props.availableStrategies.best);\n\n    allTokens.forEach( baseToken => {\n      const tokens = [];\n      tokens.push(baseToken);\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const strategyToken = this.props.availableStrategies[strategy][baseToken];\n        if (strategyToken){\n          tokens.push(strategyToken.idle.token);\n        }\n      });\n\n      balances.push(tokens);\n    });\n\n    this.setState({\n      balances\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n    this.loadBalances();\n  }\n\n  componentDidUpdate(prevProps) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.acccount !== this.props.account;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && this.props.availableStrategies;\n    if (availableStrategiesChanged || accountChanged || contractsInitialized){\n      this.loadBalances();\n    }\n  }\n\n  setConnector = async (connectorName) => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Connect',\n      eventAction: 'logout'\n    });\n\n    if (typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.setConnector(connectorName);\n  }\n\n  async logout(){\n    this.setState({\n      logout:true\n    });\n\n    this.props.logout();\n    await this.setConnector('Infura');\n    // this.props.closeModal();\n  }\n\n  goToSection(section){\n    this.props.goToSection(section);\n    this.props.closeModal();\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n\n    if (this.props.account){\n\n      const rows = (Object.keys(this.props.availableStrategies).length+1);\n      const renderBalances = this.state.balances && this.state.balances.map( (tokens,i) => {\n        return (\n          <Flex\n            mt={2}\n            width={1}\n            boxShadow={0}\n            key={'balance_'+i}\n            alignItems={'center'}\n            flexDirection={'row'}\n            >\n              {\n                tokens.map( (token,tokenIndex) => (\n                  <Flex\n                    width={1/rows}\n                    flexDirection={'row'}\n                    key={'balance_token_'+token}\n                    justifyContent={'flex-start'}\n                  >\n                    <AssetField\n                      token={token}\n                      tokenConfig={{\n                        token:token\n                        ,...this.functionsUtil.getGlobalConfig(['stats','tokens',token])\n                      }}\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mr:[1,2],\n                          ml:[1,4],\n                          width:['1.4em','2em'],\n                          height:['1.4em','2em']\n                        }\n                      }}\n                    />\n                    <AssetField\n                      {...this.props}\n                      token={token}\n                      tokenConfig={{\n                        token:token\n                      }}\n                      fieldInfo={{\n                        name:'tokenBalance',\n                        props:{\n                          fontSize:[0,2],\n                          fontWeight:500,\n                          color:'cellText'\n                        }\n                      }}\n                    />\n                  </Flex>\n                ) )\n              }\n          </Flex>\n        );\n      });\n\n      const showTools = ['addFunds','tokenSwap'];\n\n      return (\n        <Modal isOpen={this.props.isOpen}>\n          <ModalCard closeFunc={this.props.closeModal}>\n            <ModalCard.Header title={'Account overview'}></ModalCard.Header>\n            <ModalCard.Body>\n              <Flex\n                alignItems={'center'}\n                width={[\"auto\", \"40em\"]}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  width={1}\n                  mb={[2,3]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  maxWidth={['100%','30em']}\n                  justifyContent={'stretch'}\n                >\n                  <EthAddress\n                    width={1}\n                    address={this.props.account}\n                    className={ this.props.themeMode === 'light' ? styles.ethInput : styles.ethInputDark }\n                  />\n                </Flex>\n                <Flex\n                  width={1}\n                  mb={[2,3]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  maxWidth={['100%','30em']}\n                >\n                  <Heading.h4\n                    color={'copyColor'}\n                    textAlign={'center'}\n                  >\n                    Balances:\n                  </Heading.h4>\n                  { renderBalances }\n                </Flex>\n                {\n                  !viewOnly && (\n                    <Flex\n                      width={1}\n                      mb={[2,3]}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Heading.h4\n                        mb={2}\n                        color={'copyColor'}\n                        textAlign={'center'}\n                      >\n                        Tools:\n                      </Heading.h4>\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        justifyContent={'center'}\n                        flexDirection={['column','row']}\n                      >\n                        {\n                          showTools.map( toolName => {\n                            const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                            return (\n                              <CardIconButton\n                                {...this.props}\n                                key={`tool_${toolName}`}\n                                cardProps={{\n                                  mx:[0,2],\n                                  my:[2,0],\n                                  width:'auto',\n                                  minWidth:['50%','auto']\n                                }}\n                                icon={toolConfig.icon}\n                                text={toolConfig.label}\n                                handleClick={ e => this.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            )\n                          })\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            </ModalCard.Body>\n\n            <ModalCard.Footer>\n              <ButtonLoader\n                buttonText={'Logout wallet'}\n                isLoading={this.state.logout}\n                handleClick={ async () => { await this.logout() } }\n                buttonProps={{className:styles.gradientButton,borderRadius:'2rem',mt:[4,8],minWidth:['95px','145px'],size:['auto','medium']}}\n              >\n              </ButtonLoader>\n            </ModalCard.Footer>\n          </ModalCard>\n        </Modal>\n      );\n    }\n    return null;\n  }\n}\n\nexport default AccountModal;\n","import React, { Component } from \"react\";\nimport styles from \"./MenuAccount.module.scss\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Icon, Image, Link, Text } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\nimport Notifications from \"../Notifications/Notifications\";\nimport AccountModal from \"../utilities/components/AccountModal\";\nimport NetworkIndicator from \"../NetworkIndicator/NetworkIndicator\";\n\nclass MenuAccount extends Component {\n  state = {\n    isModalOpen: null,\n    idleTokenBalance: null\n  };\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return await this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    this.loadIdleTokenBalance();\n  }\n  editCardProp() {}\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const requiredNetworkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    if (requiredNetworkChanged){\n      this.loadIdleTokenBalance();\n    }\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged) {\n      this.setStateSafe({\n          isModalOpen: null\n      },() => {\n          this.loadIdleTokenBalance();\n      });\n    }\n  }\n\n  async loadIdleTokenBalance(){\n\n    if (!this.props.account){\n      return false;\n    }\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const idleGovTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const idleGovTokenEnabled = idleGovTokenConfig.enabled && idleGovTokenConfig.availableNetworks.includes(currentNetwork.id);\n    let idleTokenBalance = null;\n\n    if (idleGovTokenEnabled){\n      idleTokenBalance = this.functionsUtil.BNify(0);\n      const [\n        balance,\n        unclaimed\n      ] = await Promise.all([\n        this.idleGovToken.getBalance(this.props.account),\n        this.idleGovToken.getUnclaimedTokens(this.props.account)\n      ]);\n\n      if (balance && unclaimed) {\n        idleTokenBalance = this.functionsUtil.BNify(balance).plus(unclaimed);\n      }\n    }\n\n    return this.setStateSafe({\n      idleTokenBalance\n    });\n  }\n\n  toggleModal = modalName => {\n    this.setStateSafe(state => ({\n      ...state,\n      isModalOpen: state.isModalOpen === modalName ? null : modalName\n    }));\n  };\n\n  render() {\n    const walletProvider = this.functionsUtil.getStoredItem(\"walletProvider\",false,null);\n    const connectorInfo = walletProvider ? this.functionsUtil.getGlobalConfig([\"connectors\",walletProvider.toLowerCase()]) : null;\n    const walletIcon = connectorInfo && connectorInfo.icon ? connectorInfo.icon : walletProvider ? `${walletProvider.toLowerCase()}.svg`: null;\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const governanceConfig = this.functionsUtil.getGlobalConfig(['governance']);\n    \n    const governanceRoute = governanceConfig.baseRoute;\n    const governanceEnabled = governanceConfig.enabled && governanceConfig.availableNetworks.includes(currentNetwork.id);\n    const dashboardRoute = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+'/'+Object.keys(this.props.availableStrategies)[0];\n\n    return this.props.account ? (\n      <Flex\n        width={1}\n        flexDirection={[\"column\", \"row\"]}\n        alignItems={[\"flex-start\", \"center\"]}\n      >\n        <Flex\n          mb={[2, 0]}\n          flexDirection={\"row\"}\n          alignItems={\"center\"}\n          width={[1, \"fit-content\"]}\n          justifyContent={\"space-between\"}\n        >\n          {this.props.isMobile && (\n            <Flex mr={2}>\n              <Icon\n                size={\"2.4em\"}\n                color={\"copyColor\"}\n                onClick={this.props.toggleMenu}\n                name={this.props.menuOpened ? \"Close\" : \"Menu\"}\n              />\n            </Flex>\n          )}\n          {\n            !this.props.isMobile && (\n              <Flex\n                mr={2}\n                width={'fit-content'}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                <NetworkIndicator\n                  {...this.props}\n                />\n              </Flex>\n            )\n          }\n          <DashboardCard\n            {...this.props}\n            cardProps={{\n              py: 1,\n              px: [1, 2],\n              mr: [2, 0],\n              display: \"flex\",\n              width: [1, \"auto\"]\n            }}\n            isInteractive={true}\n            handleClick={e => this.toggleModal(\"account\")}\n          >\n            <Flex\n              p={0}\n              width={1}\n              alignItems={\"center\"}\n              flexDirection={\"row\"}\n              justifyContent={[\"center\", \"flex-start\"]}\n            >\n              {connectorInfo ? (\n                <Image\n                  mr={[1, 2]}\n                  width={\"2em\"}\n                  height={\"2em\"}\n                  display={\"inline-flex\"}\n                  alt={walletProvider.toLowerCase()}\n                  src={`images/connectors/${walletIcon}`}\n                />\n              ) : (\n                <Icon\n                  mr={[1, 2]}\n                  size={\"2em\"}\n                  color={\"copyColor\"}\n                  name={\"AccountCircle\"}\n                />\n              )}\n              {\n                this.props.isMobile ? (\n                  <Text\n                    fontSize={2}\n                    fontWeight={3}\n                    color={\"copyColor\"}\n                    style={{\n                      flex:'1',\n                      overflow:'hidden',\n                      textOverflow:'ellipsis'\n                    }}\n                  >\n                    {this.props.account}\n                  </Text>\n                ) : (\n                  <ShortHash\n                    fontSize={2}\n                    fontWeight={3}\n                    {...this.props}\n                    color={\"copyColor\"}\n                    hash={this.props.account}\n                  />\n                )\n              }\n            </Flex>\n          </DashboardCard>\n          {this.props.isMobile && <Notifications {...this.props} />}\n        </Flex>\n        <Flex\n          ml={[0, 3]}\n          style={{\n            flex: \"1 1 auto\"\n          }}\n          width={[1, \"auto\"]}\n          alignItems={\"center\"}\n          flexDirection={\"row\"}\n          justifyContent={\n            this.state.idleTokenBalance ? \"space-between\" : \"flex-end\"\n          }\n        >\n          {this.state.idleTokenBalance && (\n            <Link\n              style={{\n                textDecoration: \"none\"\n              }}\n              px={2}\n              className={styles.balanceButton}\n              onClick={e => this.props.setGovModal(true)}\n            >\n              <Flex\n                alignItems={\"center\"}\n                height={[\"38px\", \"42px\"]}\n                justifyContent={\"center\"}\n              >\n                <Image\n                  mr={1}\n                  width={\"1.7em\"}\n                  height={\"1.7em\"}\n                  display={\"inline-flex\"}\n                  src={`images/tokens/IDLE.svg`}\n                />\n                <Text color={\"white\"} fontSize={[1, 2]} fontWeight={500}>\n                  {this.state.idleTokenBalance.toFixed(2)} IDLE\n                </Text>\n              </Flex>\n            </Link>\n          )}\n          <Flex\n            width={\"auto\"}\n            alignItems={\"center\"}\n            flexDirection={\"row\"}\n            justifyContent={\"flex-end\"}\n          >\n            {governanceEnabled && this.props.isDashboard ? (\n              <RoundButton\n                buttonProps={{\n                  mainColor: \"redeem\",\n                  style: {\n                    width: \"auto\",\n                    height: this.props.isMobile ? \"38px\" : \"45px\"\n                  },\n                  size: this.props.isMobile ? \"small\" : \"medium\"\n                }}\n                handleClick={e => {\n                  this.props.goToSection(governanceRoute, false);\n                }}\n              >\n                <Flex alignItems={\"center\"} flexDirection={\"row\"}>\n                  <Icon\n                    mr={[1, 2]}\n                    size={\"1.6em\"}\n                    color={\"white\"}\n                    name={\"ExitToApp\"}\n                  />\n                  <Text fontWeight={3} color={\"white\"} fontSize={[2, 3]}>\n                    Governance\n                  </Text>\n                </Flex>\n              </RoundButton>\n            ) : (\n              this.props.isGovernance && (\n                <RoundButton\n                  buttonProps={{\n                    mainColor: \"redeem\",\n                    style: {\n                      width: \"auto\",\n                      height: this.props.isMobile ? \"38px\" : \"45px\"\n                    },\n                    size: this.props.isMobile ? \"small\" : \"medium\"\n                  }}\n                  handleClick={e => {\n                    this.props.goToSection(dashboardRoute, false);\n                  }}\n                >\n                  <Flex alignItems={\"center\"} flexDirection={\"row\"}>\n                    <Icon\n                      mr={[1, 2]}\n                      size={\"1.6em\"}\n                      color={\"white\"}\n                      name={\"ExitToApp\"}\n                    />\n                    <Text fontWeight={3} color={\"white\"} fontSize={[2, 3]}>\n                      Dashboard\n                    </Text>\n                  </Flex>\n                </RoundButton>\n              )\n            )}\n            {!this.props.isMobile && (\n              <Notifications\n                {...this.props}\n                flexProps={{\n                  ml: 2\n                }}\n              />\n            )}\n          </Flex>\n        </Flex>\n        <AccountModal\n          {...this.props}\n          isOpen={this.state.isModalOpen === \"account\"}\n          closeModal={e => this.toggleModal(\"account\")}\n        />\n      </Flex>\n    ) : (\n      <Flex\n        width={1}\n        alignItems={\"center\"}\n        justifyContent={[\"flex-start\", \"flex-end\"]}\n      >\n        {this.props.isMobile && (\n          <Flex mr={2}>\n            <Icon\n              size={\"2.4em\"}\n              color={\"copyColor\"}\n              onClick={this.props.toggleMenu}\n              name={this.props.menuOpened ? \"Close\" : \"Menu\"}\n            />\n          </Flex>\n        )}\n        {\n          !this.props.isMobile && (\n            <Flex\n              width={1}\n              justifyContent={['space-between','flex-start']}\n            >\n              <NetworkIndicator\n                innerProps={{\n                  px:1,\n                  py:0,\n                  width:['100%','auto'],\n                  height:['45px','54px']\n                }}\n                {...this.props}\n              />\n            </Flex>\n          )\n        }\n        {!this.props.isMobile && (\n          <Flex\n            width={\"auto\"}\n            alignItems={\"center\"}\n            flexDirection={\"row\"}\n            justifyContent={\"flex-end\"}\n          >\n            {governanceEnabled && this.props.isDashboard ? (\n              <RoundButton\n                buttonProps={{\n                  mainColor: \"redeem\",\n                  style: {\n                    width: \"auto\",\n                    height: this.props.isMobile ? \"38px\" : \"45px\"\n                  },\n                  size: this.props.isMobile ? \"small\" : \"medium\"\n                }}\n                handleClick={e => {\n                  this.props.goToSection(governanceRoute, false);\n                }}\n              >\n                <Flex alignItems={\"center\"} flexDirection={\"row\"}>\n                  <Icon\n                    mr={[1, 2]}\n                    size={\"1.6em\"}\n                    color={\"white\"}\n                    name={\"ExitToApp\"}\n                  />\n                  <Text fontWeight={3} color={\"white\"} fontSize={[2, 3]}>\n                    Governance\n                  </Text>\n                </Flex>\n              </RoundButton>\n            ) : (\n              this.props.isGovernance && (\n                <RoundButton\n                  buttonProps={{\n                    mainColor: \"redeem\",\n                    style: {\n                      width: \"auto\",\n                      height: this.props.isMobile ? \"38px\" : \"45px\"\n                    },\n                    size: this.props.isMobile ? \"small\" : \"medium\"\n                  }}\n                  handleClick={e => {\n                    this.props.goToSection(dashboardRoute, false);\n                  }}\n                >\n                  <Flex alignItems={\"center\"} flexDirection={\"row\"}>\n                    <Icon\n                      mr={[1, 2]}\n                      size={\"1.6em\"}\n                      color={\"white\"}\n                      name={\"ExitToApp\"}\n                    />\n                    <Text fontWeight={3} color={\"white\"} fontSize={[2, 3]}>\n                      Dashboard\n                    </Text>\n                  </Flex>\n                </RoundButton>\n              )\n            )}\n            {\n              <Notifications\n                {...this.props}\n                flexProps={{\n                  ml: 2\n                }}\n              />\n            }\n          </Flex>\n        )}\n      </Flex>\n    );\n  }\n}\n\nexport default MenuAccount;\n","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Text, Modal, Flex, Image, Link, Icon } from \"rimble-ui\";\n\nclass GovModal extends React.Component {\n\n  state = {\n    total:null,\n    balance:null,\n    txStatus:null,\n    unclaimed:null,\n    processing: {\n      txHash:null,\n      loading:false\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  loadTokenInfo = async () => {\n    const [\n      balance,\n      unclaimed\n    ] = await Promise.all([\n      this.idleGovToken.getBalance(this.props.account),\n      this.idleGovToken.getUnclaimedTokens(this.props.account)\n    ]);\n\n    let total = this.functionsUtil.BNify(0);\n    if (balance && unclaimed){\n      total = this.functionsUtil.BNify(balance).plus(unclaimed);\n    }\n\n    this.setState({\n      total,\n      balance,\n      unclaimed\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n    this.loadTokenInfo();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    // const txStatusChanged = prevState.txStatus !== this.state.txStatus;\n    // if (txStatusChanged && this.state.txStatus === 'success'){\n    //   this.loadTokenInfo();\n    // }\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      txStatus:null,\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  claim = async () => {\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'claim',\n        eventCategory: 'Governance',\n        eventLabel: tx.status ? tx.status : error\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx.status ? tx.status : 'error',\n      };\n\n      if (tx.status === 'success'){\n        newState.balance = this.state.unclaimed;\n        newState.unclaimed = this.functionsUtil.BNify(0);\n\n        if (typeof this.props.claimCallback === 'function'){\n          this.props.claimCallback();\n        }\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.idleGovToken.claimRewards(callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  closeModal = async (action) => {\n    this.props.closeModal();\n  }\n\n  render() {\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          bgLayer={true}\n          mainColor={'white'}\n          maxWidth={['auto','420px']}\n          closeFunc={this.props.closeModal}\n          background={'radial-gradient(76.02% 75.41% at 1.84% 0%, rgb(162, 196, 246) 0%, rgb(10, 79, 176) 100%)'}\n        >\n          <ModalCard.Header\n            pt={3}\n            titleProps={{\n              color:'white'\n            }}\n            title={'Your IDLE balance'}\n            borderBottom={'1px solid rgba(255,255,255,0.2)'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body\n            px={3}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Image\n                mt={2}\n                width={'3em'}\n                height={'3em'}\n                src={'images/tokens/IDLE.svg'}\n              />\n              <Text\n                mt={2}\n                fontSize={7}\n                color={'white'}\n                fontWeight={500}\n              >\n                {this.state.total ? this.state.total.toFixed(2) : '-'}\n              </Text>\n              <Text\n                mb={2}\n                fontSize={3}\n                color={'white'}\n                fontWeight={400}\n                textAlign={'center'}\n              >\n                {\n                  this.state.unclaimed && this.state.unclaimed.gt(0) ? 'You can now claim your IDLE tokens from the Early LPs Program!' : 'You don\\'t have any IDLE to claim from the Early LPs Program'\n                }\n              </Text>\n              <Flex\n                pb={2}\n                mb={3}\n                width={1}\n                flexDirection={'column'}\n                borderBottom={'1px solid rgba(255,255,255,0.2)'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    Balance:\n                  </Text>\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    {this.state.balance ? this.state.balance.toFixed(4) : '-'}\n                  </Text>\n                </Flex>\n                <Flex\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    Unclaimed:\n                  </Text>\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    {this.state.unclaimed ? this.state.unclaimed.toFixed(4) : '-'}\n                  </Text>\n                </Flex>\n                <Link\n                  href={`/#${this.functionsUtil.getGlobalConfig(['governance','baseRoute'])}`}\n                >\n                  <Flex\n                    zIndex={10}\n                    position={'relative'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontSize={2}\n                      color={'white'}\n                      fontWeight={400}\n                    >\n                      Go to governance\n                    </Text>\n                    <Icon\n                      ml={1}\n                      size={'1em'}\n                      color={'white'}\n                      name={\"OpenInNew\"}\n                    />\n                  </Flex>\n                </Link>\n              </Flex>\n              {\n                <Flex\n                  mb={3}\n                  width={1}\n                  zIndex={10}\n                  position={'relative'}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                >\n                  {\n                    this.state.unclaimed && this.state.unclaimed.gt(0) ? \n                      // Sending transaction\n                      this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          textColor={'white'}\n                          cancelTextColor={'moon-gray'}\n                          cancelTextHoverColor={'white'}\n                          waitText={`Claim estimated in`}\n                          hash={this.state.processing.txHash}\n                          endMessage={`Finalizing Claim request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            color:'blue',\n                            width:[1,'45%'],\n                            mainColor:'white',\n                            contrastColor:'blue',\n                            disabled:!this.state.unclaimed || this.state.unclaimed.lte(0)\n                          }}\n                          handleClick={this.claim.bind(this)}\n                        >\n                          Claim\n                        </RoundButton>\n                      )\n                    : (\n                      <RoundButton\n                        buttonProps={{\n                          color:'blue',\n                          width:[1,'45%'],\n                          mainColor:'white',\n                          contrastColor:'blue',\n                        }}\n                        handleClick={this.closeModal.bind(this)}\n                      >\n                        Close\n                      </RoundButton>\n                    )\n                  }\n                </Flex>\n              }\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default GovModal;","import React, { Component } from 'react';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport { Flex, Text, Button, Icon, Checkbox, Input } from \"rimble-ui\";\n\nclass DelegateVesting extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    newDelegate:'',\n    delegatee:null,\n    vestingAmount:null,\n    currentDelegate:null,\n    delegateAddressValid:false,\n    delegateDifferentWallet:false,\n    vestingContractDelegated:false\n  };\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async loadData(){\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    if (idleGovTokenEnabled && this.props.account){\n      const [\n        delegatesChanges,\n        currentDelegate,\n        vestingContract,\n      ] = await Promise.all([\n        this.governanceUtil.getDelegatesChanges(),\n        this.governanceUtil.getCurrentDelegate(this.props.account),\n        this.governanceUtil.getVestingContract(this.props.account)\n      ]);\n\n      // Init flags\n      let delegatee = null;\n      let vestingAmount = null;\n      let vestingContractDelegated = false;\n\n      if (vestingContract){\n        // Take vesting amount\n        vestingAmount = await this.governanceUtil.getVestingAmount(this.props.account);\n\n        // Check Vesting Contract Delegated\n        const lastDelegateTx = delegatesChanges.filter( d => (d.returnValues.delegator.toLowerCase() === vestingContract.toLowerCase() ) ).pop();\n        delegatee = lastDelegateTx ? lastDelegateTx.returnValues.toDelegate : false;\n        vestingContractDelegated = delegatee && delegatee !== '0x0000000000000000000000000000000000000000';\n      }\n\n      return this.setState({\n        delegatee,\n        vestingAmount,\n        currentDelegate,\n        vestingContractDelegated\n      });\n    }\n    return null;\n  }\n\n  /*\n  async delegateTokens(){\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Governance',\n        eventAction: 'delegateTokens',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      };\n\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        newState.idleTokenDelegated = true;\n        this.loadData();\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.setDelegate(this.props.account,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n  */\n\n  async delegateVesting(revoke=false){\n\n    let delegate = this.state.delegateDifferentWallet ? this.state.newDelegate : this.props.account;\n    if (revoke){\n      delegate = '0x'+'0'.repeat(40);\n    }\n\n    const delegateValid = this.functionsUtil.checkAddress(delegate);\n    if (!delegateValid){\n      return false;\n    }\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Governance',\n        eventAction: 'delegateVesting',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      };\n\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        newState.delegatee=delegate;\n        newState.delegateDifferentWallet=false;\n        newState.vestingContractDelegated=!revoke;\n        this.loadData();\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.delegateVesting(this.props.account,delegate,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  changeDelegate(e){\n    const newDelegate = e.target.value;\n    const delegateAddressValid = this.functionsUtil.checkAddress(newDelegate);\n    this.setState({\n      newDelegate,\n      delegateAddressValid\n    });\n  }\n\n  setDelegateDifferentWallet(delegateDifferentWallet){\n    this.setState({\n      delegateDifferentWallet\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  render() {\n    return this.state.vestingAmount ? (\n      <Flex\n        p={2}\n        mt={3}\n        width={1}\n        border={2}\n        borderRadius={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'cardBgHover'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Text\n            mb={1}\n            fontSize={3}\n            fontWeight={500}\n            color={'flashColor'}\n            textAlign={'center'}\n          >\n            You have {this.state.vestingAmount.div(1e18).toFixed(5)} {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} in the Vesting Contract\n          </Text>\n          {\n            (this.state.vestingContractDelegated && this.state.delegatee && !this.state.delegateDifferentWallet) ? (\n              <Text\n                mb={1}\n                fontWeight={500}\n                color={'flashColor'}\n                fontSize={'15px'}\n                textAlign={'center'}\n              >\n                Currently your votes are delegated to {this.state.delegatee}\n              </Text>\n            ) : (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text\n                  mb={1}\n                  fontWeight={500}\n                  fontSize={'15px'}\n                  color={'flashColor'}\n                  textAlign={'center'}\n                >\n                  {\n                    this.state.delegateDifferentWallet ? 'Follow the next steps to delegate your tokens:' : 'Press the button below to delegate the votes in the vesting contract to yourself:'\n                  }\n                </Text>\n                {\n                  this.state.delegateDifferentWallet && (\n                    <Flex\n                      mb={2}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={ this.state.delegateAddressValid ? 'CheckBox' : 'LooksOne'}\n                          color={ this.state.delegateAddressValid ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                        />\n                        <Text\n                          ml={1}\n                          fontWeight={500}\n                          fontSize={'15px'}\n                          textAlign={'left'}\n                          color={'flashColor'}\n                        >\n                          Insert delegate address\n                        </Text>\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={'LooksTwo'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          ml={1}\n                          fontWeight={500}\n                          fontSize={'15px'}\n                          color={'flashColor'}\n                          textAlign={'left'}\n                        >\n                          Delegate Vesting\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n        {\n          this.state.delegateDifferentWallet && (\n            <Input\n              mb={2}\n              min={0}\n              type={'text'}\n              required={true}\n              borderRadius={2}\n              fontWeight={500}\n              textAlign={'center'}\n              width={['100%','30em']}\n              borderColor={'cardBorder'}\n              backgroundColor={'cardBg'}\n              boxShadow={'none !important'}\n              value={this.state.newDelegate}\n              placeholder={`Insert delegate address`}\n              onChange={this.changeDelegate.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n            />\n          )\n        }\n        {\n          this.state.processing && this.state.processing.loading ? (\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <TxProgressBar\n                {...this.props}\n                waitText={`Delegate estimated in`}\n                hash={this.state.processing.txHash}\n                endMessage={`Finalizing delegate request...`}\n                cancelTransaction={this.cancelTransaction.bind(this)}\n              />\n            </Flex>\n          ) : (this.state.vestingContractDelegated && !this.state.delegateDifferentWallet) ? (\n            <Button\n              size={'small'}\n              mainColor={'red'}\n              onClick={ e => this.delegateVesting(true) }\n            >\n              REVOKE DELEGATE\n            </Button>\n          )\n          /*\n          : !this.state.idleTokenDelegated && !this.state.delegateDifferentWallet ? (\n            <Button\n              size={'small'}\n              onClick={ e => this.delegateTokens() }\n            >\n              DELEGATE TOKENS\n            </Button>\n          )*/\n          : (!this.state.vestingContractDelegated || this.state.delegateDifferentWallet) && (\n            <Button\n              size={'small'}\n              mainColor={'blue'}\n              onClick={ e => this.delegateVesting(false) }\n              disabled={ this.state.delegateDifferentWallet && !this.state.delegateAddressValid }\n            >\n              DELEGATE VESTING\n            </Button>\n          )\n        }\n        <Checkbox\n          mt={1}\n          required={false}\n          color={'#f3f6ff'}\n          label={`Delegate to different wallet`}\n          checked={this.state.delegateDifferentWallet}\n          onChange={ e => this.setDelegateDifferentWallet(e.target.checked) }\n        />\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default DelegateVesting;\n","import ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport MenuAccount from \"../MenuAccount/MenuAccount\";\nimport GovModal from \"../utilities/components/GovModal\";\nimport GovernanceUtil from \"../utilities/GovernanceUtil\";\nimport { Box, Flex, Text, Icon, Button } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\nimport DelegateVesting from \"../DelegateVesting/DelegateVesting\";\n\nclass DashboardHeader extends Component {\n  state = {\n    unclaimed: null,\n    activeNews: null,\n    vestingAmount: null,\n    govModalOpened: false\n  };\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils() {\n    if (this.governanceUtil) {\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const networkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    if (accountChanged || networkChanged) {\n      await this.loadData();\n    }\n  }\n\n  async loadData() {\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig([\n      \"govTokens\",\n      \"IDLE\",\n      \"enabled\"\n    ]);\n    if (idleGovTokenEnabled && this.props.account) {\n      const unclaimed = await this.idleGovToken.getUnclaimedTokens(\n        this.props.account\n      );\n      this.setState({\n        unclaimed\n      });\n    }\n\n    const stakingConfig = this.functionsUtil.getGlobalConfig([\"tools\",\"stake\"]);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig([\"tools\",\"nexusMutual\"]);\n    const stakingPolygonConfig = this.functionsUtil.getGlobalConfig([\"tools\",\"stakePolygon\"]);\n\n    const flashNews = {\n      1:[\n        {\n          name: \"Governance Forum\",\n          icon: \"LightbulbOutline\",\n          text: `Do you have any idea to improve the Idle Protocol? Let's discuss it in our`,\n          link: {\n            text: `Governance Forum`,\n            url: this.functionsUtil.getGlobalConfig([\"forumURL\"])\n          }\n        },\n        {\n          icon: stakingConfig.icon,\n          name: stakingConfig.label,\n          text: `You can now stake your $IDLE token and take part of the fee-sharing for long-term holders.`,\n          link: {\n            text: `Stake Now`,\n            url: this.functionsUtil.getDashboardSectionUrl(`tools/${stakingConfig.route}`)\n          }\n        },\n        {\n          icon: nexusMutualConfig.icon,\n          name: nexusMutualConfig.label,\n          text: `Protect your funds against smart-contract attacks with Nexus Mutual.`,\n          link: {\n            text: `Get Covered`,\n            url: this.functionsUtil.getDashboardSectionUrl(`tools/${this.functionsUtil.getGlobalConfig([\"tools\",\"nexusMutual\",\"route\"])}`)\n          }\n        }\n      ],\n      137:[\n        {\n          icon: stakingPolygonConfig.icon,\n          name: stakingPolygonConfig.label,\n          text: `SushiSwap LP Staking on Polygon is now available!`,\n          link: {\n            text: `Stake Now`,\n            url: this.functionsUtil.getDashboardSectionUrl(`tools/${stakingPolygonConfig.route}`)\n          }\n        }\n      ]\n    }\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n    const activeFlashNews = flashNews[currentNetworkId];\n    const activeNews = activeFlashNews[Math.floor(Math.random() * activeFlashNews.length)];\n    this.setState({\n      activeNews\n    });\n\n    return null;\n  }\n\n  setConnector = async connectorName => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventAction: \"logout\",\n      eventCategory: \"Connect\"\n    });\n\n    if (typeof this.props.setConnector === \"function\") {\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.setConnector(connectorName);\n  };\n\n  async exit() {\n    this.props.goToSection(\"/\", false);\n  }\n\n  setGovModal(govModalOpened) {\n    this.setState({\n      govModalOpened\n    });\n  }\n\n  render() {\n    return (\n      <Box mb={3}>\n        <Flex\n          pb={2}\n          width={1}\n          flexDirection={\"row\"}\n          justifyContent={\"space-between\"}\n          alignItems={[\"flex-end\", \"center\"]}\n          borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n        >\n          <MenuAccount\n            width={1}\n            {...this.props}\n            setGovModal={this.setGovModal.bind(this)}\n          />\n        </Flex>\n        {this.state.unclaimed && this.state.unclaimed.gt(0) ? (\n          <DashboardCard\n            cardProps={{\n              p: 2,\n              mt: 3,\n              width: 1\n            }}\n            isActive={true}\n            isInteractive={false}\n          >\n            <Flex\n              alignItems={\"center\"}\n              justifyContent={\"center\"}\n              flexDirection={[\"column\", \"row\"]}\n            >\n              <Text\n                fontWeight={500}\n                fontSize={\"15px\"}\n                color={\"flashColor\"}\n                textAlign={\"center\"}\n              >\n                IDLE Governance Token is now available,\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={\"primary\"}\n                  fontSize={\"15px\"}\n                  hoverColor={\"primary\"}\n                  href={\n                    \"https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7\"\n                  }\n                >\n                  discover more\n                </ExtLink>\n                ! You have {this.state.unclaimed.toFixed(4)} IDLE tokens to\n                claim.\n              </Text>\n              <Button\n                ml={[0, 2]}\n                mt={[2, 0]}\n                size={\"small\"}\n                mainColor={\"blue\"}\n                onClick={e => this.setGovModal(true)}\n              >\n                CLAIM NOW\n              </Button>\n            </Flex>\n          </DashboardCard>\n        ) : (\n          this.props.isDashboard &&\n          this.state.activeNews && (\n            <DashboardCard\n              cardProps={{\n                p: 2,\n                mt: 3,\n                width: 1\n              }}\n              isActive={true}\n              isInteractive={false}\n            >\n              <Flex\n                alignItems={\"center\"}\n                justifyContent={\"center\"}\n                flexDirection={[\"column\", \"row\"]}\n              >\n                <Icon\n                  mr={1}\n                  size={\"1.2em\"}\n                  color={\"flashColor\"}\n                  name={this.state.activeNews.icon}\n                />\n                <Text\n                  fontWeight={500}\n                  fontSize={\"15px\"}\n                  color={\"flashColor\"}\n                  textAlign={\"center\"}\n                >\n                  {this.state.activeNews.text}\n                </Text>\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={\"primary\"}\n                  fontSize={\"15px\"}\n                  hoverColor={\"primary\"}\n                  href={this.state.activeNews.link.url}\n                  onClick={e =>\n                    this.functionsUtil.sendGoogleAnalyticsEvent({\n                      eventCategory: \"UI\",\n                      eventAction: \"flashNews\",\n                      eventLabel: this.state.activeNews.name\n                    })\n                  }\n                >\n                  <Flex\n                    alignItems={\"center\"}\n                    flexDirection={\"row\"}\n                    justifyContent={\"center\"}\n                  >\n                    {this.state.activeNews.link.text}\n                    <Icon\n                      ml={1}\n                      size={\"0.9em\"}\n                      color={\"primary\"}\n                      name={\"OpenInNew\"}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </Flex>\n            </DashboardCard>\n          )\n        )}\n        {this.props.isGovernance && <DelegateVesting {...this.props} />}\n        <GovModal\n          {...this.props}\n          isOpen={this.state.govModalOpened}\n          claimCallback={this.loadData.bind(this)}\n          closeModal={e => this.setGovModal(false)}\n        />\n      </Box>\n    );\n  }\n}\n\nexport default DashboardHeader;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balanceButton\":\"MenuAccount_balanceButton__3t7wZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bell\":\"Notifications_bell__5m9tk\",\"active\":\"Notifications_active__2Mwzv\",\"ring\":\"Notifications_ring__1ir3w\",\"counter\":\"Notifications_counter__3EbuS\",\"list\":\"Notifications_list__2pkAk\",\"notification\":\"Notifications_notification__TMlFX\",\"dark\":\"Notifications_dark__14hO4\"};"],"sourceRoot":""}