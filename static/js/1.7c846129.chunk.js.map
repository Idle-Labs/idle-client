{"version":3,"sources":["utilities/GovernanceUtil.js","StatsCard/StatsCard.js","DashboardMenu/DashboardMenu.js","HoverImage/HoverImage.js","NetworkIndicator/NetworkIndicator.js","utilities/components/Swipeable.js","utilities/components/TooltipModal.js","CryptoInput/CryptoInput.module.scss","Notifications/Notifications.js","utilities/components/AccountModal.js","MenuAccount/MenuAccount.js","utilities/components/GovModal.js","DashboardHeader/DashboardHeader.js","Notifications/Notifications.module.scss"],"names":["GovernanceUtil","props","_this","this","Object","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","functionsUtil","setProps","FunctionsUtil","getTotalSupply","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","a","mark","_callee","cachedDataKey","cachedData","contractName","totalSupply","wrap","_context","prev","next","getCachedDataWithLocalStorage","BNify","isNaN","abrupt","getGlobalConfig","genericContractCall","sent","fixTokenDecimals","setCachedDataWithLocalStorage","stop","getTokensBalance","_callee2","account","balance","_args2","arguments","_context2","length","undefined","concat","getContractBalance","getVestedAmount","_callee3","vestedAmount","governanceTokenName","governanceTokenConfig","_ref4","_ref5","vestingEnd","lastUpdate","vestingBegin","vestingAmount","blockTimestamp","_args3","_context3","getVestingContract","toUpperCase","Promise","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","parseInt","Date","now","gt","times","minus","div","decimals","_callee4","vestingContract","_args4","_context4","initContract","VesterABI","claimVestedTokens","_callee5","callback","callbackReceipt","_args5","_context5","contractMethodSendWrapper","delegateVesting","_callee6","delegate","_args6","_context6","getVestingAmount","_callee7","_args7","_context7","getCurrentDelegate","_callee8","_args8","_context8","getCurrentVotes","_callee9","votes","_args9","_context9","getVotingPeriod","_callee10","votingPeriod","_context10","name","getTimelockDelay","_callee11","delay","_context11","queueProposal","_ref14","_callee12","proposalId","_args12","_context12","toBN","_x","apply","executeProposal","_ref15","_callee13","_args13","_context13","_x2","proposeAndVoteFor","_ref16","_callee14","targets","values","signatures","calldatas","description","batcher","contract","txs","_context14","Batcher","web3","getContractByName","to","_address","method","methods","propose","args","castVote","_x3","_x4","_x5","_x6","_x7","_ref17","_callee15","_args15","_context15","_x8","_x9","_x10","_x11","_x12","_ref18","_callee16","support","_args16","_context16","console","log","_x13","_x14","setDelegate","_ref19","_callee17","_args17","_context17","_x15","getDelegatesChanges","_callee18","lastBlockNumber","delegationsCalls","fromBlock","delegatesContractName","blockNumber","toBlock","all_delegations","_context18","eth","getBlockNumber","Math","min","push","getContractPastEvents","reduce","delegations","d","getDelegatesVotesChanges","_callee19","_context19","getDelegates","_callee20","limit","_ref23","_ref24","all_votes","delegateAccounts","delegates","_args20","_context20","getVotes","forEach","e","_e$returnValues","returnValues","newBalance","keys","sort","b","index","rank","toFixed","vote_weight","parseFloat","proposals","filter","v","voter","toLowerCase","splice","getProposalParams","_callee21","govContractName","_ref26","_ref27","proposalThreshold","proposalMaxOperations","params","_context21","getCachedData","setCachedData","_callee23","governanceContracts","lastContract","_context23","_ref29","_callee22","governanceContract","contractVotes","_context22","map","_e$returnValues2","vote","_x16","_x17","getProposals","_callee27","voted_by","filter_by_state","startBlock","enumerateProposalState","contracts","proposalCounts","allProposals","_args27","_context27","p","state","find","asyncForEach","_ref31","_callee24","proposalCount","_context24","_x18","_ref32","_callee26","governanceContractName","lastCount","proposalGets","proposalStateGets","_arr","_i","i","_ref33","_ref34","proposalStates","proposalQueuedEvents","proposalCreatedEvents","proposalCanceledEvents","proposalExecutedEvents","_context26","t0","t1","t2","t3","Array","from","n","reverse","_ref35","_callee25","createdEvent","canceledEvent","executedEvent","queuedEvent","_ref36","_ref37","endBlockInfo","queuedBlockInfo","createdBlockInfo","canceledBlockInfo","executedBlockInfo","createdState","activeState","canceledState","succeededState","queuedState","executedState","endState","_createdEvent$returnV","proposalDetails","_context25","id","endBlock","getBlockInfo","states","end_time","timestamp","start_time","trx_hash","transactionHash","s","title","split","replace","shift","join","attr","eta","actions","executed","canceled","forVotes","proposer","againstVotes","_x21","_x22","proposal","_x19","_x20","StatsCard","loadUtils","prevProps","prevState","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","cardProps","minHeight","rimble_ui__WEBPACK_IMPORTED_MODULE_10__","width","alignItems","flexDirection","justifyContent","titleMinHeight","h4","mb","fontWeight","fontSize","textAlign","color","lineHeight","value","toString","assign","valueProps","children","label","mt","labelTooltip","placement","message","ml","size","Component","DashboardMenu","logout","buyModalOpened","isHover","setConnector","connectorName","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","sendGoogleAnalyticsEvent","eventCategory","eventAction","context","unsetConnector","setState","govModalOpened","_this2","menu","currentNetworkId","getRequiredNetworkId","landingStrategies","visibleStrategies","visible","availableNetworks","includes","enabledEnvs","currentEnv","governanceRoute","baseRoute","dashboardRoute","visibleLinks","menuLink","isVisible","showMobile","mobile","isMobile","isDarkTheme","themeMode","darkModeEnabled","isProdEnv","checkUrlOrigin","isChristmas","checkChristmas","logoSrc","logoHeight","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","height","pb","react_router_dom__WEBPACK_IMPORTED_MODULE_10__","src","position","borderBottom","theme","colors","divider","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","isInteractive","py","pr","mx","boxShadow","display","borderRadius","justifySelf","handleClick","isDashboard","goToSection","px","onMouseEnter","onMouseLeave","_HoverImage_HoverImage__WEBPACK_IMPORTED_MODULE_9__","hoverOn","noHover","hover","imageProps","mr","alignSelf","_NetworkIndicator_NetworkIndicator__WEBPACK_IMPORTED_MODULE_14__","style","overflowY","menuIndex","LinkComponent","isExternalLink","ExtLink","RouterLink","activeImage","imageDark","image","inactiveImage","imageInactiveDark","imageInactive","my","key","route","href","onClick","closeMenu","textDecoration","border","selected","backgroundColor","align","icon","whiteSpace","setThemeMode","HoverImage","react__WEBPACK_IMPORTED_MODULE_6___default","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","NetworkIndicator","activeNetworks","defaultNetwork","loadNetworks","networkInitialized","networkId","networkConfig","config","requiredNetwork","getRequiredNetwork","network","setRequiredNetwork","JSON","stringify","required","_this3","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","outerColor","isSearchable","innerProps","customOptionProps","pl","notInteractive","noShadow","options","CustomOptionValue","imageSrc","data","provider","defaultValue","onChange","selectNetwork","bind","CustomValueContainer","selectProps","flex","bg","innerxProps","cursor","isCorrectNetwork","isActive","__webpack_require__","__webpack_exports__","Swipeable","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","react_swipeable__WEBPACK_IMPORTED_MODULE_1__","handlers","useSwipeable","onSwiped","eventData","delta","preventDefaultTouchmoveEvent","trackTouch","trackMouse","rotationAngle","touchAction","TooltipModal","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","componentDidUpdate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","closeModal","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_8__","maxWidth","closeFunc","Header","pt","Body","dangerouslySetInnerHTML","__html","content","_RoundButton_RoundButton_js__WEBPACK_IMPORTED_MODULE_11__","buttonProps","React","module","exports","newLink","newPill","ethInput","ethInputDark","mainInput","button","gradientButton","input","newPillContainerAnim","Notifications","tabOpened","notifications","mouseOverBell","unreadNotifications","lastOpenTimestamp","mouseOverNotifications","governanceUtil","loadNotifications","clickEvent","eventLabel","updateLastOpenTimestamp","notificationsChanged","notificationsParams","getStoredItem","setLocalStorage","currentNetwork","isMainnet","governanceConfig","batchDepositConfig","polygonBridgeConfig","blocksPerWeek","oneWeekAgoBlock","polygonBridgeEnabled","enabled","governanceEnabled","getSubstackLatestFeed","getSnapshotProposals","getPolygonBridgeTxs","latestFeed","activeSnapshotProposals","polygonTransactions","governanceProposals","batchedDeposits","start","currTime","end","latestFeedDate","strToMoment","isoDate","isAfter","subtract","link","_d","getTime","htmlDecode","text","date","utc","format","snapshotProposalBaseUrl","body","governanceProposalUrl","iconProps","hash","batchDepositBaseUrl","batchToken","batchInfo","lastExecution","timeStamp","batchRedeems","transactions","status","completed","polygonBridgeBaseUrl","tx","action","included","exited","token","tokenSymbol","depositBaseUrl","notification","openWindow","window","location","_this4","hasUnreadNotifications","iconColor","react_default","index_es","zIndex","flexProps","onMouseOut","setMouseOverBell","onMouseOver","toggleTab","className","styles","bell","ring","active","counter","DashboardCard","right","maxHeight","overflow","top","minWidth","setMouseOverNotifications","openNotification","dark","textOverflow","AccountModal","balances","loadBalances","regenerator_default","availableStrategies","contractsInitialized","best","baseToken","tokens","strategy","strategyToken","idle","accountChanged","acccount","section","viewOnly","rows","renderBalances","tokenIndex","AssetField","tokenConfig","objectSpread","fieldInfo","ModalCard","address","toolName","toolConfig","CardIconButton","Footer","ButtonLoader","buttonText","isLoading","asyncToGenerator","MenuAccount","isModalOpen","idleTokenBalance","idleGovToken","toggleModal","modalName","getIdleGovToken","loadIdleTokenBalance","requiredNetworkChanged","accountInizialized","idleGovTokenConfig","idleGovTokenEnabled","getBalance","getUnclaimedTokens","unclaimed","plus","walletProvider","connectorInfo","walletIcon","toggleMenu","menuOpened","alt","borderRight","ShortHash","src_Notifications_Notifications","setGovModal","connectAndValidateAccount","components_AccountModal","RoundButton","alignContent","GovModal","total","txStatus","processing","txHash","loading","loadTokenInfo","_ref2","_ref3","slicedToArray","claim","error","getTransactionError","newState","claimCallback","claimRewards","bgLayer","mainColor","background","titleProps","TxProgressBar","textColor","cancelTextColor","cancelTextHoverColor","waitText","endMessage","cancelTransaction","contrastColor","disabled","lte","DashboardHeader","loadData","networkChanged","menuRightBorder","src_MenuAccount_MenuAccount","hoverColor","components_GovModal","list"],"mappings":"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","file":"static/js/1.7c846129.chunk.js","sourcesContent":["import Batcher from 'web3-batched-send';\nimport FunctionsUtil from './FunctionsUtil';\nimport VesterABI from '../contracts/Vester.json';\n\n// const env = process.env;\n\nclass GovernanceUtil {\n  // Attributes\n  props = {};\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  getTotalSupply = async () => {\n\n    // Check for cached data\n    const cachedDataKey = 'getTotalSupply';\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n    let totalSupply = await this.functionsUtil.genericContractCall(contractName,'totalSupply');\n    if (totalSupply){\n      totalSupply = this.functionsUtil.fixTokenDecimals(totalSupply,18);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,totalSupply,null);\n    }\n\n    return null;\n  }\n\n  getTokensBalance = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n\n      // Check for cached data\n      const cachedDataKey = `getTokensBalance_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const balance = await this.functionsUtil.getContractBalance(contractName, account);\n      if (balance && !this.functionsUtil.BNify(balance).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,this.functionsUtil.BNify(balance));\n      }\n    }\n    return null;\n  }\n\n  getVestedAmount = async (account=null) => {\n    let vestedAmount = this.functionsUtil.BNify(0);\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n      const governanceTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',governanceTokenName.toUpperCase()]);\n      let [\n        vestingEnd,\n        lastUpdate,\n        vestingBegin,\n        vestingAmount,\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall('VestingContract','vestingEnd'),\n        this.functionsUtil.genericContractCall('VestingContract','lastUpdate'),\n        this.functionsUtil.genericContractCall('VestingContract','vestingBegin'),\n        this.functionsUtil.genericContractCall('VestingContract','vestingAmount')\n      ]);\n\n      if (vestingAmount && vestingBegin && vestingEnd && lastUpdate){\n        vestingEnd = this.functionsUtil.BNify(vestingEnd);\n        lastUpdate = this.functionsUtil.BNify(lastUpdate);\n        vestingBegin = this.functionsUtil.BNify(vestingBegin);\n        vestingAmount = this.functionsUtil.BNify(vestingAmount);\n        const blockTimestamp = this.functionsUtil.BNify(parseInt(Date.now()/1000));\n\n        if (blockTimestamp.gt(vestingEnd)) {\n          vestedAmount = await this.functionsUtil.getContractBalance(governanceTokenName,account);\n        } else {\n          vestedAmount = vestingAmount.times(blockTimestamp.minus(this.functionsUtil.BNify(lastUpdate))).div(vestingEnd.minus(vestingBegin));\n        }\n        vestedAmount = this.functionsUtil.fixTokenDecimals(vestedAmount,governanceTokenConfig.decimals);\n      }\n    }\n    return vestedAmount;\n  }\n\n  getVestingContract = async (account=null) => {\n    account = account ? account : this.props.account;\n    const vestingContract = await this.functionsUtil.genericContractCall('VesterFactory','vestingContracts',[account]);\n\n    if (parseInt(vestingContract) === 0){\n      return null;\n    }\n    // Init vesting contract\n    await this.props.initContract('VestingContract',vestingContract,VesterABI);\n    return vestingContract;\n  }\n\n  claimVestedTokens = async (account=null,callback=null,callbackReceipt=null) => {\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      return await this.functionsUtil.contractMethodSendWrapper('VestingContract','claim',[],callback,callbackReceipt);\n    }\n    return null;\n  }\n\n  delegateVesting = async (account=null,delegate=null,callback=null,callbackReceipt=null) => {\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      // await this.functionsUtil.contractMethodSendWrapper('IDLE','delegate',[delegate]);\n      return await this.functionsUtil.contractMethodSendWrapper('VestingContract','setDelegate',[delegate],callback,callbackReceipt);\n    }\n    return null;\n  }\n\n  getVestingAmount = async (account=null) => {\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      let vestingAmount = await this.functionsUtil.genericContractCall('VestingContract','vestingAmount');\n      if (vestingAmount){\n        return this.functionsUtil.BNify(vestingAmount);\n      }\n    }\n    return null;\n  }\n\n  getCurrentDelegate = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n\n      // Check for cached data\n      const cachedDataKey = `getCurrentDelegate_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const delegate = await this.functionsUtil.genericContractCall(contractName, 'delegates', [account]);\n\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delegate);\n    }\n\n    return null;\n  }\n\n  getCurrentVotes = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n      // Check for cached data\n      const cachedDataKey = `getCurrentVotes_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const votes = await this.functionsUtil.genericContractCall(contractName, 'getCurrentVotes', [account]);\n      if (votes && !this.functionsUtil.BNify(votes).isNaN() ){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,this.functionsUtil.BNify(votes));\n      }\n    }\n\n    return null;\n  }\n\n  getVotingPeriod = async () => {\n    // Check for cached data\n    const cachedDataKey = `votingPeriod`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance','v2']).name;\n    let votingPeriod = await this.functionsUtil.genericContractCall(contractName,'votingPeriod');\n    if (votingPeriod){\n      votingPeriod = this.functionsUtil.BNify(votingPeriod);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,votingPeriod,null);\n    }\n\n    return null;\n  }\n\n  getTimelockDelay = async () => {\n    // Check for cached data\n    const cachedDataKey = `getTimelockDelay`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    let delay = await this.functionsUtil.genericContractCall('Timelock','delay');\n    if (delay){\n      delay = this.functionsUtil.BNify(delay);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delay,null);\n    }\n\n    return null;\n  }\n\n  queueProposal = async (proposalId,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance','v2']).name;\n    await this.functionsUtil.contractMethodSendWrapper(contractName,'queue',[this.functionsUtil.toBN(proposalId)],callback,callbackReceipt);\n  }\n\n  executeProposal = async (proposalId,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance','v2']).name;\n    await this.functionsUtil.contractMethodSendWrapper(contractName,'execute',[this.functionsUtil.toBN(proposalId)],callback,callbackReceipt);\n  }\n\n  proposeAndVoteFor = async (targets, values, signatures, calldatas, description) => {\n    const batcher = new Batcher(this.props.web3,'0x741A4dCaD4f72B83bE9103a383911d78362611cf');\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance','v2']).name;\n    const contract = this.functionsUtil.getContractByName(contractName);\n\n    const txs = [\n      {\n        to:contract._address,\n        method:contract.methods.propose,\n        args:[targets, values, signatures, calldatas, description]\n      },\n      {\n        to:contract._address,\n        method:contract.methods.castVote,\n        args:[this.functionsUtil.BNify(3), true],\n      }\n    ];\n\n    batcher(txs);\n  }\n\n  propose = async (targets, values, signatures, calldatas, description, callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance','v2']).name;\n    return await this.props.contractMethodSendWrapper(contractName, 'propose', [targets, values, signatures, calldatas, description], null, callback, callbackReceipt);\n  }\n\n  castVote = async (proposalId,support,callback=null,callbackReceipt=null) => {\n    proposalId = this.functionsUtil.toBN(proposalId);\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance','v2']).name;\n    console.log(contractName, 'castVote', [proposalId, support]);\n    return await this.props.contractMethodSendWrapper(contractName, 'castVote', [proposalId, support], null, callback, callbackReceipt);\n  }\n\n  setDelegate = async (delegate,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n    return await this.props.contractMethodSendWrapper(contractName, 'delegate', [delegate], null, callback, callbackReceipt);\n  }\n\n  getDelegatesChanges = async () => {\n\n    const lastBlockNumber = await this.props.web3.eth.getBlockNumber();\n\n    const delegationsCalls = [];\n    const blocksPerCall = 100000;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const delegatesContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n\n    for (var blockNumber = fromBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      const toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      delegationsCalls.push(this.functionsUtil.getContractPastEvents(delegatesContractName,'DelegateChanged', {fromBlock: blockNumber, toBlock}))\n    }\n\n    const all_delegations = await Promise.all(delegationsCalls);\n\n    return all_delegations.reduce( (delegations,d) => {\n      delegations = delegations.concat(d);\n      return delegations;\n    },[]);\n  }\n\n  getDelegatesVotesChanges = async () => {\n\n    const lastBlockNumber = await this.props.web3.eth.getBlockNumber();\n\n    const delegationsCalls = [];\n    const blocksPerCall = 100000;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const delegatesContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n\n    for (var blockNumber = fromBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      const toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      delegationsCalls.push(this.functionsUtil.getContractPastEvents(delegatesContractName,'DelegateVotesChanged', {fromBlock: blockNumber, toBlock}))\n    }\n\n    const all_delegations = await Promise.all(delegationsCalls);\n\n    return all_delegations.reduce( (delegations,d) => {\n      delegations = delegations.concat(d);\n      return delegations;\n    },[]);\n  }\n\n  getDelegates = async (limit=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getDelegates`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const [\n      all_votes,\n      totalSupply,\n      delegations,\n    ] = await Promise.all([\n      this.getVotes(),\n      this.getTotalSupply(),\n      this.getDelegatesVotesChanges()\n    ]);\n\n    const delegateAccounts = {};\n    delegations.forEach(e => {\n      const { delegate, newBalance } = e.returnValues;\n      delegateAccounts[delegate] = newBalance;\n    });\n\n    let delegates = [];\n    Object.keys(delegateAccounts).forEach((account) => {\n      const votes = +delegateAccounts[account];\n      if (votes === 0) return;\n      delegates.push({\n        votes: votes/1e18,\n        delegate: account\n      });\n    });\n\n    delegates.sort((a, b) => {\n      return a.votes < b.votes ? 1 : -1;\n    });\n\n    delegates.forEach( (d,index) => {\n      d.rank = index+1;\n      d.votes = d.votes.toFixed(6);\n      d.vote_weight = (100 * (d.votes / parseFloat(totalSupply))).toFixed(4) + '%';\n      d.proposals = all_votes.filter( v => (v.voter && d.delegate && v.voter.toLowerCase() === d.delegate.toLowerCase()) ).length;\n    });\n\n    this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delegates);\n\n    if (limit !== null){\n      delegates = delegates.splice(0,limit);\n    }\n\n    return delegates;\n  }\n\n  getProposalParams = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getProposalParams`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance','v2']).name;\n    let [\n      proposalThreshold,\n      proposalMaxOperations\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(govContractName,'proposalThreshold'),\n      this.functionsUtil.genericContractCall(govContractName,'proposalMaxOperations')\n    ]);\n\n    if (proposalThreshold){\n      proposalThreshold = this.functionsUtil.BNify(proposalThreshold);\n    }\n\n    const params = {\n      proposalThreshold,\n      proposalMaxOperations\n    };\n\n    return this.functionsUtil.setCachedData(cachedDataKey,params);\n  }\n\n  getVotes = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getVotes`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    \n    const governanceContracts = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    let lastContract=null;\n    let fromBlock=null;\n    const votes=[];\n    Object.values(governanceContracts).forEach(async (governanceContract,index)=>{\n      const contractName=governanceContract.name;\n      const toBlock=governanceContract.toBlock;\n      if(!lastContract)\n      {\n        fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n      }\n      else\n      {\n        fromBlock=lastContract.toBlock;\n      }\n      lastContract=governanceContract;\n      let contractVotes = await this.functionsUtil.getContractPastEvents(contractName,'VoteCast', {fromBlock, toBlock});\n      \n      if (contractVotes){\n        contractVotes = contractVotes.map( e => {\n          const {\n              voter,\n              votes,\n              support,\n              proposalId\n          } = e.returnValues;\n          return {\n            votes,\n            voter,\n            support,\n            proposalId\n          }\n        });\n      Object.values(contractVotes).forEach(vote=>{\n        votes.push(vote);\n      })\n      }\n    });\n   \n    return this.functionsUtil.setCachedData(cachedDataKey,votes);\n  }\n\n  getProposals = async (voted_by=null,filter_by_state=null,startBlock=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getProposals`;\n    let cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      if (filter_by_state){\n        cachedData = cachedData.filter( p => (p && p.state && p.state.toLowerCase() === filter_by_state.toLowerCase() ) );\n      }\n      if (voted_by){\n        cachedData = cachedData.filter( p => (p && p.votes.find( v => (v.voter && v.voter.toLowerCase() === voted_by.toLowerCase()) )) );\n      }\n      if (startBlock){\n        cachedData = cachedData.filter( p => parseInt(p.startBlock)>=parseInt(startBlock) );\n      }\n      return cachedData;\n    }\n\n    const enumerateProposalState = (state) => {\n      const proposalStates = ['Pending', 'Active', 'Canceled', 'Defeated', 'Succeeded', 'Queued', 'Expired', 'Executed'];\n      return proposalStates[state];\n    };\n\n    const governanceContracts = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    const contracts = Object.values(governanceContracts);\n    \n    let fromBlock=null;\n\n    // const proposalCounts= await Object.values(governanceContracts).map(async (governanceContract)=>{\n    const proposalCounts = await this.functionsUtil.asyncForEach(contracts,async (governanceContract)=>{\n      const proposalCount = await this.functionsUtil.genericContractCall(governanceContract.name,'proposalCount');\n      return proposalCount;\n    });\n    const allProposals=[];\n\n    await this.functionsUtil.asyncForEach(contracts, async(governanceContract,index) => {\n      \n      const governanceContractName = governanceContract.name;\n      const proposalCount = parseInt(await proposalCounts[index]);\n      const lastCount = parseInt(await proposalCounts[index-1]);\n      if (!proposalCount){\n        return [];\n      }\n      if(index===0){\n        fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n      }\n      else{\n        fromBlock = contracts[index-1].toBlock;\n      }\n\n      const proposalGets = [];\n      const proposalStateGets = [];\n      for (const i of Array.from(Array(proposalCount),(n,i) => i+1)) {\n        if (!index || i>lastCount){\n          proposalGets.push(this.functionsUtil.genericContractCall(governanceContractName,'proposals',[i]));\n          proposalStateGets.push(this.functionsUtil.genericContractCall(governanceContractName,'state',[i]));\n        }\n      }\n\n      if(!proposalStateGets || !proposalGets){\n        return false;\n      }\n      const toBlock = governanceContract.toBlock;\n      let [\n        votes,\n        proposals,\n        proposalStates,\n        proposalQueuedEvents,\n        proposalCreatedEvents,\n        proposalCanceledEvents,\n        proposalExecutedEvents,\n      ] = await Promise.all([\n        this.getVotes(),\n        Promise.all(proposalGets),\n        Promise.all(proposalStateGets),\n        this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalQueued', {fromBlock, toBlock}),\n        this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalCreated', {fromBlock, toBlock}),\n        this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalCanceled', {fromBlock, toBlock}),\n        this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalExecuted', {fromBlock, toBlock}),\n      ]);\n\n      proposals.reverse();\n      proposalStates.reverse();\n      proposalQueuedEvents.reverse();\n      proposalCreatedEvents.reverse();\n      proposalCanceledEvents.reverse();\n      proposalExecutedEvents.reverse();\n\n      // await this.functionsUtil.asyncForEach(proposals, async (p,i) => {\n      await this.functionsUtil.asyncForEach(proposalCreatedEvents, async (createdEvent,i) => {\n        const p = proposals[i];\n\n        if (!p || !p.id){\n          return;\n        }\n\n        const proposalId = parseInt(p.id);\n        const canceledEvent = proposalCanceledEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n        const executedEvent = proposalExecutedEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n        const queuedEvent = proposalQueuedEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n\n        const [\n          endBlockInfo,\n          queuedBlockInfo,\n          createdBlockInfo,\n          canceledBlockInfo,\n          executedBlockInfo,\n        ] = await Promise.all([\n          p.endBlock ? this.functionsUtil.getBlockInfo(p.endBlock) : null,\n          queuedEvent ? this.functionsUtil.getBlockInfo(queuedEvent.blockNumber) : null,\n          createdEvent ? this.functionsUtil.getBlockInfo(createdEvent.blockNumber) : null,\n          canceledEvent ? this.functionsUtil.getBlockInfo(canceledEvent.blockNumber) : null,\n          executedEvent ? this.functionsUtil.getBlockInfo(executedEvent.blockNumber) : null,\n        ]);\n\n        // Init states array\n        p.states = [];\n\n        // Create created state\n        const createdState = {\n          state: \"Pending\",\n          blockNumber: createdEvent.blockNumber,\n          end_time: createdBlockInfo.timestamp,\n          start_time: createdBlockInfo.timestamp,\n          trx_hash: createdEvent.transactionHash\n        };\n        p.states.push(createdState);\n\n        // Push active state\n        const activeState = {\n          end_time: null,\n          trx_hash: null,\n          state: \"Active\",\n          blockNumber: createdEvent.blockNumber,\n          start_time: createdState.start_time\n        };\n        p.states.push(activeState);\n\n        // Push canceled state\n        if (canceledEvent){\n          const canceledState = {\n            end_time: null,\n            state: \"Canceled\",\n            blockNumber: canceledEvent.blockNumber,\n            start_time: canceledBlockInfo.timestamp,\n            trx_hash: canceledEvent.transactionHash\n          }\n          // Update previous state end_time\n          p.states[p.states.length-1].end_time = canceledBlockInfo.timestamp;\n          p.states.push(canceledState);\n        } else {\n          // Push queued state\n          if (queuedEvent){\n            const succeededState = {\n              end_time: null,\n              trx_hash: null,\n              state: \"Succeeded\",\n              blockNumber: queuedEvent.blockNumber,\n              start_time: queuedBlockInfo.timestamp,\n            };\n\n            const queuedState = {\n              end_time: null,\n              state: \"Queued\",\n              blockNumber: queuedEvent.blockNumber,\n              trx_hash: queuedEvent.transactionHash,\n              start_time: queuedBlockInfo.timestamp,\n            };\n\n            // Update previous state end_time\n            p.states[p.states.length-1].end_time = queuedBlockInfo.timestamp;\n            // Push Succeeded state\n            p.states.push(succeededState);\n            // Push queued state\n            p.states.push(queuedState);\n          }\n\n          // Push executed state\n          if (executedEvent){\n            const executedState = {\n              end_time: null,\n              state: \"Executed\",\n              blockNumber: executedEvent.blockNumber,\n              start_time: executedBlockInfo.timestamp,\n              trx_hash: executedEvent.transactionHash\n            }\n            // Update previous state end_time\n            p.states[p.states.length-1].end_time = executedBlockInfo.timestamp;\n            p.states.push(executedState);\n          }\n        }\n\n        // console.log(governanceContractName,i,proposalStates,proposalStates[i]);\n\n        // Check for defeated or expired\n        p.state = enumerateProposalState(proposalStates[i]);\n        const foundState = p.states.find( s => (s.state === p.state) );\n        if (!foundState){\n          const endState = {\n            state: p.state,\n            end_time: null,\n            trx_hash: null,\n            blockNumber: p.endBlock,\n            start_time: endBlockInfo.timestamp,\n          }\n          // Update previous state end_time\n          p.states[p.states.length-1].end_time = endBlockInfo.timestamp;\n          p.states.push(endState);\n        }\n\n        p.votes = votes.filter( v => (parseInt(v.proposalId)===proposalId) );\n\n        const { description, signatures, targets, values, calldatas } = createdEvent.returnValues;\n        p.timestamp = createdBlockInfo ? createdBlockInfo.timestamp : null;\n\n\n        // Idle\n        p.title = description.split(/# |\\n|↵/g)[0].replace(/^#/,'') || 'Untitled';\n        p.description = description.split(/\\n|↵/g);\n        p.description.shift();\n        p.description = p.description.join(\"\\n\");\n        p.description = p.description.replace(/\\n/g,\"<br />\")\n\n        // Overwrite proposal details\n        const proposalDetails = this.functionsUtil.getGlobalConfig(['governance','proposals',proposalId]);\n        if (proposalDetails){\n          Object.keys(proposalDetails).forEach( attr => {\n            p[attr] = proposalDetails[attr];\n          });\n        }\n\n        // Save proposal\n        proposals[i] = {\n          eta:p.eta,\n          actions:{\n            values,\n            targets,\n            calldatas,\n            signatures\n          },\n          id:proposalId,\n          title:p.title,\n          state:p.state,\n          votes:p.votes,\n          states:p.states,\n          executed:p.executed,\n          endBlock:p.endBlock,\n          canceled:p.canceled,\n          forVotes:p.forVotes,\n          proposer:p.proposer,\n          timestamp:p.timestamp,\n          startBlock:p.startBlock,\n          description:p.description,\n          againstVotes:p.againstVotes\n        };\n      });\n\n      \n      this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,proposals,3600);\n\n      // console.log('getProposals',filter_by_state,cachedData);\n\n      if (filter_by_state){\n        proposals = proposals.filter( p => (p && p.state && p.state.toLowerCase() === filter_by_state.toLowerCase() ) );\n      }\n\n      if (voted_by){\n        proposals = proposals.filter( p => (p && p.votes.find( v => (v.voter && v.voter.toLowerCase() === voted_by.toLowerCase()) )) );\n      }\n\n      if (startBlock){\n        proposals = proposals.filter( p => parseInt(p.startBlock)>=parseInt(startBlock) );\n      }\n\n      Object.values(proposals).forEach(proposal=>{\n        allProposals.push(proposal);\n      });\n    });\n    return allProposals;\n  }\n}\n\nexport default GovernanceUtil;","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass StatsCard extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          minHeight:this.props.minHeight ? this.props.minHeight : ['130px','153px']\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'flex-start'}\n          flexDirection={'column'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            alignItems={'flex-start'}\n            minHeight={ this.props.titleMinHeight ? this.props.titleMinHeight : ['auto','60px'] }\n          >\n            <Heading.h4\n              mb={[3,0]}\n              fontWeight={4}\n              fontSize={[2,3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n            >\n              {this.props.title}\n            </Heading.h4>\n          </Flex>\n          {\n            (typeof this.props.value !== 'undefined' && this.props.value !== null && this.props.value.toString().length>0) &&\n              <Text\n                lineHeight={1}\n                fontSize={[4,5]}\n                fontWeight={[3,4]}\n                color={'statValue'}\n                {...this.props.valueProps}\n              >\n                {this.props.value}\n              </Text>\n          }\n          {\n            this.props.children ?\n              this.props.children\n            : null\n          }\n          {\n            (typeof this.props.label !== 'undefined' && this.props.label !== null && this.props.label.toString().length>0) && (\n              <Flex\n                mt={[3,2]}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Text\n                  fontSize={1}\n                  fontWeight={3}\n                  color={'legend'}\n                >\n                  {this.props.label}\n                </Text>\n                {\n                  (this.props.labelTooltip && this.props.labelTooltip.length>0) && (\n                    <Tooltip\n                      placement={'top'}\n                      message={this.props.labelTooltip}\n                    >\n                      <Icon\n                        ml={2}\n                        name={\"Info\"}\n                        size={'1em'}\n                        color={'cellTitle'}\n                      />\n                    </Tooltip>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default StatsCard;","import ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport HoverImage from \"../HoverImage/HoverImage\"\nimport { Link as RouterLink } from \"react-router-dom\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\nimport { Flex, Box, Icon, Text, Image, Link } from \"rimble-ui\";\nimport NetworkIndicator from \"../NetworkIndicator/NetworkIndicator\";\n\nclass DashboardMenu extends Component {\n  state = {\n    logout: false,\n    buyModalOpened: false,\n    isHover: false\n  };\n\n  // Utils\n  functionsUtil = null;\n  setConnector = async connectorName => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: \"Connect\",\n      eventAction: \"logout\"\n    });\n\n    if (typeof this.props.setConnector === \"function\") {\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.unsetConnector();\n    // return await this.props.context.setConnector(connectorName);\n  };\n\n  async logout() {\n    this.setState({\n      logout: true\n    });\n\n    this.props.logout();\n    await this.setConnector(\"Infura\");\n    // this.props.closeModal();\n  }\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n  setGovModal(govModalOpened) {\n    this.setState({\n      govModalOpened\n    });\n  }\n\n  setBuyModalOpened(buyModalOpened) {\n    this.setState({\n      buyModalOpened\n    });\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    if (!this.props.menu.length) {\n      return null;\n    }\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n    const landingStrategies = this.functionsUtil.getGlobalConfig(['landingStrategies']);\n    const visibleStrategies = Object.keys(landingStrategies).filter(s => landingStrategies[s].visible && (!landingStrategies[s].availableNetworks.length || landingStrategies[s].availableNetworks.includes(currentNetworkId)) && (!landingStrategies[s].enabledEnvs.length || landingStrategies[s].enabledEnvs.includes(this.props.currentEnv)) );\n\n    const governanceConfig = this.functionsUtil.getGlobalConfig(['governance']);\n    const governanceRoute = governanceConfig.baseRoute;\n    const dashboardRoute = this.functionsUtil.getGlobalConfig(['dashboard', 'baseRoute']) + '/' + visibleStrategies[0];\n\n    const visibleLinks = this.props.menu.filter(menuLink => {\n      const isVisible = menuLink.visible === undefined || menuLink.visible;\n      const showMobile = menuLink.mobile === undefined || menuLink.mobile;\n      return isVisible && (!this.props.isMobile || showMobile);\n    });\n\n    if (!visibleLinks.length) {\n      return null;\n    }\n\n    const isDarkTheme = this.props.themeMode === \"dark\";\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig([\n      \"dashboard\",\n      \"theme\",\n      \"darkModeEnabled\"\n    ]);\n\n    const isProdEnv = this.functionsUtil.checkUrlOrigin();\n    const isChristmas = this.functionsUtil.checkChristmas();\n    let logoSrc = isProdEnv ? (!isDarkTheme ? \"images/logo-gradient.svg\" : \"images/logo-dark.svg\") : (!isDarkTheme ? \"images/logo-gradient-beta.png\" : \"images/logo-white-beta.png\");\n\n    let logoHeight = '42px';\n    if (isChristmas && isProdEnv){\n      logoHeight = '62px';\n      logoSrc = !isDarkTheme ? \"images/logo-gradient-christmas.svg\" : \"images/logo-dark-christmas.svg\";\n    }\n\n    return (\n      <Flex p={0} height={\"100%\"} flexDirection={\"column\"}>\n        <Flex\n          p={4}\n          pb={2}\n          mb={3}\n          flexDirection={\"row\"}\n          alignItems={\"center\"}\n          justifyContent={\"flex-start\"}\n        >\n          <RouterLink\n            to={\"/\"}\n          >\n            <Image\n              src={logoSrc}\n              height={logoHeight}\n              position={\"relative\"}\n            />\n          </RouterLink>\n        </Flex>\n        <Box\n          mb={3}\n          pb={3}\n          width={1}\n          justifyContent={\"center\"}\n          borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n        >\n          <DashboardCard\n            {...this.props}\n            isInteractive={true}\n            cardProps={{\n              py: 1,\n              pr: 1,\n              mx: 'auto',\n              mb: [0, 3],\n              width: 0.8,\n              boxShadow: 0,\n              display: \"flex\",\n              borderRadius: 1,\n              justifySelf: \"center\",\n              justifyContent: \"center\",\n            }}\n            handleClick={e => this.props.isDashboard ? this.props.goToSection(governanceRoute, false) : this.props.goToSection(dashboardRoute, false) }\n          >\n            <Flex\n              px={2}\n              py={1}\n              alignItems={\"center\"}\n              flexDirection={\"row\"}\n              onMouseEnter={e => this.setState({ isHover: true })}\n              onMouseLeave={e => this.setState({ isHover: false })}\n            >\n              <HoverImage\n                hoverOn={this.state.isHover}\n                noHover={'images/sidebar/switch.svg'}\n                hover={'images/sidebar/switchHover.svg'}\n                imageProps={{\n                  mr: 2,\n                  width: \"16px\",\n                  height: \"16px\",\n                  display: \"inline-flex\"\n                }}\n              />\n              <Text\n                fontSize={1}\n                color={\"text\"}\n                fontWeight={500}\n              >\n                Switch to {this.props.isDashboard ? 'Governance' : 'Dashboard'}\n              </Text>\n            </Flex>\n          </DashboardCard>\n        </Box>\n        {\n          this.props.isMobile && (\n            <Flex\n              width={'82%'}\n              alignSelf={'center'}\n              alignItems={'stretch'}\n              flexDirection={'column'}\n              justifyContent={'space-between'}\n            >\n              <NetworkIndicator\n                {...this.props}\n              />\n            </Flex>\n          )\n        }\n        <Flex\n          px={3}\n          height={'100%'}\n          style={{\n            overflowY:'scroll'\n          }}\n          flexDirection={\"column\"}\n        >\n          {\n            visibleLinks.map((menuLink, menuIndex) => {\n              const isExternalLink = menuLink.isExternalLink;\n              const LinkComponent = isExternalLink ? ExtLink : RouterLink;\n              const activeImage = isDarkTheme && menuLink.imageDark ? menuLink.imageDark : menuLink.image;\n              const inactiveImage = isDarkTheme && menuLink.imageInactiveDark ? menuLink.imageInactiveDark : menuLink.imageInactive;\n              return (\n                <Box\n                  width={\"auto\"}\n                  my={[1, \"8px\"]}\n                  key={`menu-${menuIndex}`}\n                >\n                  <LinkComponent\n                    to={menuLink.route}\n                    href={menuLink.route}\n                    onClick={this.props.closeMenu}\n                    style={{ textDecoration: \"none\" }}\n                  >\n                    <Flex\n                      py={2}\n                      px={3}\n                      borderRadius={2}\n                      flexDirection={\"row\"}\n                      alignItems={\"center\"}\n                      border={menuLink.selected ? 2 : null}\n                      backgroundColor={menuLink.selected ? \"menuHover\" : \"transparent\"}\n                    >\n                      <Flex\n                        py={1}\n                        width={1}\n                        alignItems={\"center\"}\n                        flexDirection={\"row\"}\n                        justifyContent={\"flex-start\"}\n                      >\n                        {\n                          menuLink.image ? (\n                            <Image\n                              mr={3}\n                              ml={2}\n                              mb={0}\n                              align={\"center\"}\n                              height={[\"1.2em\",\"1.6em\"]}\n                              src={menuLink.selected ? activeImage : inactiveImage}\n                            />\n                          ) : menuLink.icon && (\n                            <Icon\n                              name={menuLink.icon}\n                              color={\n                                menuLink.selected\n                                  ? \"menuIconActive\"\n                                  : isDarkTheme\n                                    ? \"white\"\n                                    : \"dark-gray\"\n                              }\n                              mr={3}\n                              ml={2}\n                              mb={0}\n                              size={ this.props.isMobile ? \"1.2em\" : \"1.6em\"}\n                            />\n                          )\n                        }\n                        <Text\n                          fontWeight={3}\n                          color={\"text\"}\n                          fontSize={[1,2]}\n                          textAlign={\"center\"}\n                          style={{\n                            whiteSpace: \"nowrap\"\n                          }}\n                        >\n                          {menuLink.label}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </LinkComponent>\n                </Box>\n              );\n            })\n          }\n        </Flex>\n\n        {darkModeEnabled && (\n          <Flex\n            my={2}\n            width={\"auto\"}\n            height={\"auto\"}\n            flexDirection={\"column\"}\n            justifyContent={\"flex-end\"}\n          >\n            <Link\n              style={{ textDecoration: \"none\" }}\n              onClick={e =>\n                this.props.setThemeMode(\n                  this.props.themeMode === \"light\" ? \"dark\" : \"light\"\n                )\n              }\n            >\n              <Flex\n                p={2}\n                alignItems={\"center\"}\n                flexDirection={\"row\"}\n                justifyContent={\"flex-end\"}\n              >\n                <Icon\n                  mr={2}\n                  ml={2}\n                  size={\"1.4em\"}\n                  align={\"center\"}\n                  color={\"copyColor\"}\n                  name={\"Brightness2\"}\n                />\n                <Flex\n                  px={\"0.2em\"}\n                  width={\"3.4em\"}\n                  height={\"1.6em\"}\n                  alignItems={\"center\"}\n                  borderRadius={\"1.6em\"}\n                  backgroundColor={\"cellText\"}\n                  justifyContent={this.props.themeMode === \"light\" ? \"flex-end\" : \"flex-start\"}\n                >\n                  <Box\n                    width={\"1.3em\"}\n                    height={\"1.3em\"}\n                    borderRadius={\"1.3em\"}\n                    backgroundColor={\"copyColor\"}\n                  ></Box>\n                </Flex>\n                <Icon\n                  ml={2}\n                  size={\"1.4em\"}\n                  align={\"center\"}\n                  name={\"WbSunny\"}\n                  color={\"copyColor\"}\n                />\n              </Flex>\n            </Link>\n          </Flex>\n        )}\n      </Flex>\n    );\n  }\n}\n\nexport default DashboardMenu;\n","import { Image } from \"rimble-ui\"\nimport React, { Component } from 'react'\nclass HoverImage extends Component {\n\n    render() {\n        return (\n            <Image\n                src={this.props.hoverOn ? this.props.hover : this.props.noHover}\n                {...this.props.imageProps}\n            />\n        )\n    }\n}\nexport default HoverImage;","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Text, Image, Box, Loader } from \"rimble-ui\";\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass NetworkIndicator extends Component {\n\n  state = {\n    activeNetworks: [],\n    defaultNetwork: null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    this.loadNetworks();\n  }\n\n  loadNetworks() {\n\n    if (!this.props.networkInitialized) {\n      return false;\n    }\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network', 'availableNetworks']);\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network', 'enabledNetworks']);\n    const activeNetworks = enabledNetworks.map(networkId => {\n      const networkConfig = availableNetworks[networkId];\n      return {\n        value: networkId,\n        config: networkConfig,\n        label: networkConfig.name,\n      }\n    });\n\n    const requiredNetwork = this.functionsUtil.getRequiredNetwork();\n    const defaultNetwork = activeNetworks.find(network => network.value === requiredNetwork.id);\n\n    this.setState({\n      defaultNetwork,\n      activeNetworks\n    });\n  }\n\n  selectNetwork(networkId) {\n    this.props.setRequiredNetwork(networkId);\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const networkInitialized = !prevProps.networkInitialized && this.props.networkInitialized;\n    const requiredNetworkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    if (requiredNetworkChanged || networkInitialized) {\n      this.setState({\n        defaultNetwork: null\n      }, () => {\n        this.loadNetworks();\n      });\n    }\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const imageSrc = `images/networks/${props.data.config.provider}.svg`;\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={imageSrc}\n              width={['1.2em','1.3em']}\n              height={['1.2em','1.3em']}\n            />\n            <Text\n              fontWeight={3}\n              fontSize={[1,2]}\n              color={'copyColor'}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.value || props.data;\n      const label = selectProps.label;\n      const imageSrc = `images/networks/${selectProps.config.provider}.svg`;\n      return (\n        <Flex\n          style={{\n            flex: '1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n          bg={\"cardBg\"}\n          px={0}\n        >\n          <Flex\n            {...props.innerxProps}\n            p={0}\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{ cursor: 'pointer' }}\n            justifyContent={'flex-start'}\n            bg={\"cardBg\"}\n\n          >\n            <Image\n              mr={2}\n              src={imageSrc}\n              width={['1.2em','1.3em']}\n              height={['1.2em','1.3em']}\n            />\n            <Text\n              fontWeight={3}\n              fontSize={[1,2]}\n              color={'copyColor'}\n            >\n              {label}\n            </Text>\n            <Box\n              ml={2}\n              width={'8px'}\n              height={'8px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.network.isCorrectNetwork ? '#00b84a' : '#fa0000'}\n            >\n            </Box>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return this.state.defaultNetwork ? (\n      <GenericSelector\n        {...this.props}\n        outerColor={\"cardBg\"}\n        name={'network'}\n        isDashboard={true}\n        isSearchable={false}\n        innerProps={Object.assign({\n          px: 1,\n          py: 0,\n          height: '42px',\n          boxShadow: 0,\n          borderRadius: 0,\n          border: 0,\n          backgroundColor: \"cardBg\"\n\n        }, this.props.innerProps)}\n        customOptionProps={{\n          px: 0,\n          pl: 3,\n          pr: 0\n        }}\n        notInteractive=\"true\"\n        noShadow=\"true\"\n        options={this.state.activeNetworks}\n        CustomOptionValue={CustomOptionValue}\n        defaultValue={this.state.defaultNetwork}\n        onChange={this.selectNetwork.bind(this)}\n        CustomValueContainer={CustomValueContainer}\n      />\n    ) : (\n        <DashboardCard\n          {...this.props}\n          cardProps={{\n            boxShadow: 0,\n            borderRadius: 0,\n            border: 0,\n            px: [2, 3],\n            display: 'flex',\n            width: [1, 'auto'],\n            alignItems: 'center',\n            justifyContent: 'center',\n            backgroundColor: 'cardBg',\n\n            height: (this.props.innerProps && this.props.innerProps.height) || '42px',\n          }}\n          isInteractive={false}\n          isActive={false}\n        >\n          <Loader size={'20px'} />\n        </DashboardCard>\n      );\n  }\n}\n\nexport default NetworkIndicator;","import React from \"react\";\nimport { useSwipeable } from 'react-swipeable';\n\nexport default function Swipeable(){\n\n  const params = arguments[0];\n\n  const handlers = useSwipeable({\n    onSwiped: (eventData) => params.callback(eventData),\n    delta: 10,                            // min distance(px) before a swipe starts\n    preventDefaultTouchmoveEvent: false,  // call e.preventDefault *See Details*\n    trackTouch: true,                     // track touch input\n    trackMouse: false,                    // track mouse input\n    rotationAngle: 0,                     // set a rotation angle\n  });\n\n  return (\n  \t<div {...handlers} style={{ touchAction: 'pan-x' }}>\n  \t\t{params.children}\n  \t</div>\n  );\n}","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass TooltipModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            title={this.props.title}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n                dangerouslySetInnerHTML={{ __html: this.props.content }}\n              >\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                GOT IT\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TooltipModal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newLink\":\"CryptoInput_newLink__35W_s\",\"newPill\":\"CryptoInput_newPill__2Q8cA\",\"ethInput\":\"CryptoInput_ethInput__3j2LJ\",\"ethInputDark\":\"CryptoInput_ethInputDark__R8OoA\",\"mainInput\":\"CryptoInput_mainInput__1zffg\",\"button\":\"CryptoInput_button__1N9EQ\",\"gradientButton\":\"CryptoInput_gradientButton__2kh5r\",\"input\":\"CryptoInput_input__3X3pI\",\"newPillContainerAnim\":\"CryptoInput_newPillContainerAnim__RvOCw\"};","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Notifications.module.scss';\nimport { Flex, Icon, Box, Text, Image } from \"rimble-ui\";\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Notifications extends Component {\n\n  state = {\n    tabOpened: false,\n    notifications: [],\n    mouseOverBell: false,\n    unreadNotifications: 0,\n    lastOpenTimestamp: null,\n    mouseOverNotifications: false\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils() {\n    if (this.governanceUtil) {\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    this.loadNotifications();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const clickEventChanged = prevProps.clickEvent !== this.props.clickEvent;\n    if (clickEventChanged && this.props.clickEvent && !this.state.mouseOverNotifications && !this.state.mouseOverBell && this.state.tabOpened) {\n      this.setState({\n        tabOpened: false\n      });\n    }\n\n    const tabOpenedChanged = prevState.tabOpened !== this.state.tabOpened;\n    if (tabOpenedChanged && this.state.tabOpened && this.state.notifications.length > 0) {\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Notifications',\n        eventAction: 'open_tab',\n        eventLabel: ''\n      });\n\n      this.updateLastOpenTimestamp();\n    }\n\n    const notificationsChanged = JSON.stringify(prevState.notifications) !== JSON.stringify(this.state.notifications);\n    const lastOpenTimestampChanged = prevState.lastOpenTimestamp !== this.state.lastOpenTimestamp;\n    if (lastOpenTimestampChanged || notificationsChanged) {\n      const unreadNotifications = this.state.lastOpenTimestamp ? this.state.notifications.filter(n => n.timestamp > this.state.lastOpenTimestamp).length : this.state.notifications.length;\n      this.setState({\n        unreadNotifications\n      });\n    }\n  }\n\n  updateLastOpenTimestamp() {\n    const lastOpenTimestamp = Date.now();\n\n    // Set Notification params in localStorage\n    const notificationsParams = this.functionsUtil.getStoredItem('notificationsParams', true, {});\n    notificationsParams.lastOpenTimestamp = lastOpenTimestamp;\n    this.functionsUtil.setLocalStorage('notificationsParams', notificationsParams, true);\n\n    this.setState({\n      lastOpenTimestamp\n    });\n  }\n\n  async loadNotifications() {\n\n    // Get stored lastOpenTimestamp for notifications\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const isMainnet = currentNetwork.id === 1;\n    const governanceConfig = this.functionsUtil.getGlobalConfig(['governance']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools', 'batchDeposit']);\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools', 'polygonBridge']);\n    const notificationsParams = this.functionsUtil.getStoredItem('notificationsParams', true, {});\n    const lastOpenTimestamp = notificationsParams.lastOpenTimestamp || null;\n\n    const blockNumber = this.functionsUtil.BNify(await this.functionsUtil.getBlockNumber());\n    const blocksPerWeek = this.functionsUtil.BNify(this.functionsUtil.getGlobalConfig(['network', 'blocksPerYear'])).div(52.1429);\n    const oneWeekAgoBlock = parseInt(blockNumber.minus(blocksPerWeek));\n\n    const polygonBridgeEnabled = polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id);\n    const governanceEnabled = governanceConfig.enabled && governanceConfig.availableNetworks.includes(currentNetwork.id) && isMainnet && !this.props.isMobile;\n    const batchedDepositsEnabled = false; //batchDepositConfig.enabled && batchDepositConfig.availableNetworks.includes(currentNetwork.id) && isMainnet && !this.props.isMobile;\n\n    // Get active snapshot proposals\n    const [\n      latestFeed,\n      activeSnapshotProposals,\n      polygonTransactions,\n      governanceProposals,\n      batchedDeposits,\n    ] = await Promise.all([\n      this.functionsUtil.getSubstackLatestFeed(),\n      this.functionsUtil.getSnapshotProposals(true),\n      polygonBridgeEnabled ? this.functionsUtil.getPolygonBridgeTxs(this.props.account) : null,\n      governanceEnabled ? this.governanceUtil.getProposals(null, 'Active', oneWeekAgoBlock) : null,\n      batchedDepositsEnabled ? this.functionsUtil.getBatchedDeposits(this.props.account, 'executed') : null\n    ]);\n\n    let notifications = this.functionsUtil.getGlobalConfig(['notifications']).filter(n => (n.enabled && n.start <= currTime && n.end > currTime));\n\n    // Show latest Substack for 1 week\n    if (latestFeed) {\n      const latestFeedDate = this.functionsUtil.strToMoment(latestFeed.isoDate);\n      if (latestFeedDate.isAfter(this.functionsUtil.strToMoment().subtract(7, 'd'))) {\n        notifications.push({\n          link: latestFeed.link,\n          image: '/images/substack.png',\n          timestamp: latestFeedDate._d.getTime(),\n          title: this.functionsUtil.htmlDecode(latestFeed.title),\n          text: this.functionsUtil.htmlDecode(latestFeed.content),\n          date: latestFeedDate.utc().format('MMM DD, YYYY HH:mm UTC'),\n        });\n      }\n    }\n\n    const currTime = Date.now();\n\n    // Add snapshot proposals\n    const snapshotProposalBaseUrl = this.functionsUtil.getGlobalConfig(['network', 'providers', 'snapshot', 'urls', 'proposals']);\n\n    if (activeSnapshotProposals) {\n      activeSnapshotProposals.forEach(p => {\n        const text = p.body.replace(/^[#]*/, '');\n        // const text = p.msg.payload.name.replace(/^[#]*/,'');\n        notifications.push({\n          text,\n          image: '/images/snapshot.png',\n          timestamp: p.start * 1000,\n          link: snapshotProposalBaseUrl + p.id,\n          title: p.title,\n          date: this.functionsUtil.strToMoment(p.start * 1000).utc().format('MMM DD, YYYY HH:mm UTC'),\n        });\n      });\n    }\n\n    // Add governance proposals\n    if (governanceProposals) {\n      const governanceProposalUrl = this.functionsUtil.getGlobalConfig(['governance', 'baseRoute']) + '/proposals/';\n      governanceProposals.forEach(p => {\n        notifications.push(\n          {\n            text: p.title,\n            iconProps: {\n              color: '#00acff'\n            },\n            icon: 'LightbulbOutline',\n            timestamp: p.timestamp * 1000,\n            title: 'Governance Proposal',\n            hash: governanceProposalUrl + p.id,\n            date: this.functionsUtil.strToMoment(p.timestamp * 1000).utc().format('MMM DD, YYYY HH:mm UTC'),\n          }\n        );\n      });\n    }\n\n    // Add Executed Batch Deposits\n    if (batchedDeposits) {\n      const batchDepositBaseUrl = this.functionsUtil.getGlobalConfig(['dashboard', 'baseRoute']) + `/tools/${batchDepositConfig.route}/`;\n      Object.keys(batchedDeposits).forEach(batchToken => {\n        const batchInfo = batchedDeposits[batchToken];\n        const timestamp = batchInfo.lastExecution.timeStamp * 1000;\n        const text = `You can claim ${batchInfo.batchRedeems.toFixed(4)} ${batchToken}`;\n        notifications.push({\n          text,\n          timestamp,\n          icon: 'DoneAll',\n          title: 'Batch Deposit Executed',\n          hash: batchDepositBaseUrl + batchToken,\n          iconProps: {\n            color: this.props.theme.colors.transactions.status.completed\n          },\n          date: this.functionsUtil.strToMoment(timestamp).utc().format('MMM DD, YYYY HH:mm UTC')\n        });\n      });\n    }\n\n    if (polygonTransactions) {\n      const polygonBridgeBaseUrl = this.functionsUtil.getGlobalConfig(['dashboard', 'baseRoute']) + `/tools/${polygonBridgeConfig.route}/`;\n      const polygonWithdrawalsToExit = polygonTransactions.filter(tx => tx.action === 'Withdraw' && tx.included && !tx.exited);\n      polygonWithdrawalsToExit.forEach(tx => {\n        const timestamp = tx.timeStamp * 1000;\n        const txDate = this.functionsUtil.strToMoment(timestamp);\n        if (txDate.isAfter(this.functionsUtil.strToMoment().subtract(10, 'd'))) {\n          const text = `You can Exit ${this.functionsUtil.BNify(tx.value).toFixed(4)} ${tx.token} from Polygon`;\n          notifications.push({\n            text,\n            timestamp,\n            image: polygonBridgeConfig.image,\n            title: 'Polygon Withdraw Completed',\n            hash: polygonBridgeBaseUrl + tx.tokenSymbol,\n            date: this.functionsUtil.strToMoment(timestamp).utc().format('MMM DD, YYYY HH:mm UTC')\n          });\n        }\n      });\n\n      const depositBaseUrl = this.functionsUtil.getGlobalConfig(['dashboard', 'baseRoute']) + `/best/`;\n      const polygonCompletedDeposits = polygonTransactions.filter(tx => tx.action === 'Deposit' && tx.included);\n      polygonCompletedDeposits.forEach(tx => {\n        const timestamp = tx.timeStamp * 1000;\n        const txDate = this.functionsUtil.strToMoment(timestamp);\n        if (txDate.isAfter(this.functionsUtil.strToMoment().subtract(1, 'd'))) {\n          const text = `Your ${this.functionsUtil.BNify(tx.value).toFixed(4)} ${tx.tokenSymbol} are now available in Polygon`;\n          notifications.push({\n            text,\n            timestamp,\n            image: polygonBridgeConfig.image,\n            title: 'Polygon Deposit Completed',\n            hash: depositBaseUrl + tx.tokenSymbol,\n            date: this.functionsUtil.strToMoment(timestamp).utc().format('MMM DD, YYYY HH:mm UTC')\n          });\n        }\n      });\n    }\n\n    notifications = notifications.sort((a, b) => (a.timestamp < b.timestamp ? 1 : -1));\n\n    this.setState({\n      notifications,\n      lastOpenTimestamp\n    });\n  }\n\n  setMouseOverBell(mouseOverBell) {\n    this.setState({\n      mouseOverBell\n    });\n  }\n\n  setMouseOverNotifications(mouseOverNotifications) {\n    this.setState({\n      mouseOverNotifications\n    });\n  }\n\n  toggleTab() {\n    this.setState((prevState) => ({\n      tabOpened: !prevState.tabOpened\n    }));\n  }\n\n  openNotification(notification) {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Notifications',\n      eventAction: 'open_notification',\n      eventLabel: notification.link || notification.hash\n    });\n\n    if (notification.link) {\n      return this.functionsUtil.openWindow(notification.link);\n    } else if (notification.hash) {\n      return window.location.hash = notification.hash;\n    }\n\n    return false;\n  }\n\n  render() {\n    const hasUnreadNotifications = this.state.unreadNotifications > 0;\n    const iconColor = hasUnreadNotifications ? '#0239FF' : 'dashboardBg';\n    return (\n      <Flex\n        zIndex={999}\n        position={'relative'}\n        {...this.props.flexProps}\n      >\n        <Box\n          width={1}\n          position={'relative'}\n          onMouseOut={(e) => this.setMouseOverBell(false)}\n          onMouseOver={(e) => this.setMouseOverBell(true)}\n        >\n          <Icon\n            color={iconColor}\n            name={'Notifications'}\n            {...this.props.iconProps}\n            onClick={this.toggleTab.bind(this)}\n            className={[styles.bell, (hasUnreadNotifications ? styles.ring : null), (this.state.tabOpened || this.state.notifications.length > 0 ? styles.active : null)]}\n          />\n          {\n            hasUnreadNotifications &&\n            <Box\n              className={styles.counter}\n            >\n              {this.state.notifications.length}\n            </Box>\n          }\n        </Box>\n        {\n          this.state.tabOpened &&\n          <DashboardCard\n            cardProps={{\n              style: {\n                right: 0,\n                maxHeight: '21em',\n                overflow: 'scroll',\n                position: 'absolute',\n                top: this.props.isMobile ? '2.8em' : '3em',\n              },\n              minWidth: ['91vw', '22em'],\n              onMouseOut: (e) => this.setMouseOverNotifications(false),\n              onMouseOver: (e) => this.setMouseOverNotifications(true),\n            }}\n          >\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              {\n                this.state.notifications.length > 0 ?\n                  this.state.notifications.map((n, index) => (\n                    <ExtLink\n                      style={{\n                        textDecoration: 'none'\n                      }}\n                      key={`notification_${index}`}\n                      onClick={e => this.openNotification(n)}\n                    >\n                      <Flex\n                        py={2}\n                        px={1}\n                        flexDirection={'row'}\n                        className={[styles.notification, this.props.themeMode === 'dark' ? styles.dark : null]}\n                        borderBottom={index < this.state.notifications.length - 1 ? `1px solid ${this.props.theme.colors.divider}` : null}\n                      >\n                        <Flex\n                          minWidth={'2em'}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          {\n                            n.icon ? (\n                              <Icon\n                                name={n.icon}\n                                size={'1.6em'}\n                                color={'copyColor'}\n                                {...n.iconProps}\n                              />\n                            ) : n.image && (\n                              <Image\n                                src={n.image}\n                                width={'1.6em'}\n                                height={'1.6em'}\n                              />\n                            )\n                          }\n                        </Flex>\n                        <Flex\n                          ml={1}\n                          overflow={'hidden'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={1}\n                            lineHeight={1.3}\n                            color={'primary'}\n                            style={{\n                              overflow: 'hidden',\n                              whiteSpace: 'nowrap',\n                              textOverflow: 'ellipsis'\n                            }}\n                          >\n                            {n.title}\n                          </Text>\n                          <Text\n                            fontSize={1}\n                            lineHeight={1.3}\n                            color={'copyColor'}\n                            style={{\n                              overflow: 'hidden',\n                              whiteSpace: 'nowrap',\n                              textOverflow: 'ellipsis'\n                            }}\n                          >\n                            {n.text}\n                          </Text>\n                          <Text\n                            fontSize={0}\n                            lineHeight={1.3}\n                            color={'cellText'}\n                          >\n                            {n.date}\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </ExtLink>\n                  ))\n                  : (\n                    <Text\n                      py={2}\n                      textAlign={'center'}\n                    >\n                      There are no notifications.\n                    </Text>\n                  )\n              }\n            </Flex>\n          </DashboardCard>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Notifications;\n","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport AssetField from '../../AssetField/AssetField.js';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport { Heading, Modal, Flex, EthAddress } from \"rimble-ui\";\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\nimport styles from '../../CryptoInput/CryptoInput.module.scss';\nimport CardIconButton from '../../CardIconButton/CardIconButton';\n\nclass AccountModal extends React.Component {\n\n  state = {\n    logout: false,\n    balances: null\n  }\n\n  loadBalances = async () => {\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || !this.props.account || this.state.balances !== null){\n      return false;\n    }\n\n    const balances = [];\n    const allTokens = Object.keys(this.props.availableStrategies.best);\n\n    allTokens.forEach( baseToken => {\n      const tokens = [];\n      tokens.push(baseToken);\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const strategyToken = this.props.availableStrategies[strategy][baseToken];\n        if (strategyToken){\n          tokens.push(strategyToken.idle.token);\n        }\n      });\n\n      balances.push(tokens);\n    });\n\n    this.setState({\n      balances\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n    this.loadBalances();\n  }\n\n  componentDidUpdate(prevProps) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.acccount !== this.props.account;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && this.props.availableStrategies;\n    if (availableStrategiesChanged || accountChanged || contractsInitialized){\n      this.loadBalances();\n    }\n  }\n\n  setConnector = async (connectorName) => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Connect',\n      eventAction: 'logout'\n    });\n\n    if (typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.setConnector(connectorName);\n  }\n\n  async logout(){\n    this.setState({\n      logout:true\n    });\n\n    this.props.logout();\n    await this.setConnector('Infura');\n    // this.props.closeModal();\n  }\n\n  goToSection(section){\n    this.props.goToSection(section);\n    this.props.closeModal();\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n\n    if (this.props.account){\n\n      const rows = (Object.keys(this.props.availableStrategies).length+1);\n      const renderBalances = this.state.balances && this.state.balances.map( (tokens,i) => {\n        return (\n          <Flex\n            mt={2}\n            width={1}\n            boxShadow={0}\n            key={'balance_'+i}\n            alignItems={'center'}\n            flexDirection={'row'}\n            >\n              {\n                tokens.map( (token,tokenIndex) => (\n                  <Flex\n                    width={1/rows}\n                    flexDirection={'row'}\n                    key={'balance_token_'+token}\n                    justifyContent={'flex-start'}\n                  >\n                    <AssetField\n                      token={token}\n                      tokenConfig={{\n                        token:token\n                        ,...this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()])\n                      }}\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mr:[1,2],\n                          ml:[1,4],\n                          width:['1.4em','2em'],\n                          height:['1.4em','2em']\n                        }\n                      }}\n                    />\n                    <AssetField\n                      {...this.props}\n                      token={token}\n                      tokenConfig={{\n                        token:token\n                      }}\n                      fieldInfo={{\n                        name:'tokenBalance',\n                        props:{\n                          fontSize:[0,2],\n                          fontWeight:500,\n                          color:'cellText'\n                        }\n                      }}\n                    />\n                  </Flex>\n                ) )\n              }\n          </Flex>\n        );\n      });\n\n      const showTools = ['addFunds','tokenSwap'];\n\n      return (\n        <Modal isOpen={this.props.isOpen}>\n          <ModalCard closeFunc={this.props.closeModal}>\n            <ModalCard.Header title={'Account overview'}></ModalCard.Header>\n            <ModalCard.Body>\n              <Flex\n                alignItems={'center'}\n                width={[\"auto\", \"40em\"]}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  width={1}\n                  mb={[2,3]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  maxWidth={['100%','30em']}\n                  justifyContent={'stretch'}\n                >\n                  <EthAddress\n                    width={1}\n                    address={this.props.account}\n                    className={ this.props.themeMode === 'light' ? styles.ethInput : styles.ethInputDark }\n                  />\n                </Flex>\n                <Flex\n                  width={1}\n                  mb={[2,3]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  maxWidth={['100%','30em']}\n                >\n                  <Heading.h4\n                    color={'copyColor'}\n                    textAlign={'center'}\n                  >\n                    Balances:\n                  </Heading.h4>\n                  { renderBalances }\n                </Flex>\n                {\n                  !viewOnly && (\n                    <Flex\n                      width={1}\n                      mb={[2,3]}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Heading.h4\n                        mb={2}\n                        color={'copyColor'}\n                        textAlign={'center'}\n                      >\n                        Tools:\n                      </Heading.h4>\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        justifyContent={'center'}\n                        flexDirection={['column','row']}\n                      >\n                        {\n                          showTools.map( toolName => {\n                            const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                            return (\n                              <CardIconButton\n                                {...this.props}\n                                key={`tool_${toolName}`}\n                                cardProps={{\n                                  mx:[0,2],\n                                  my:[2,0],\n                                  width:'auto',\n                                  minWidth:['50%','auto']\n                                }}\n                                icon={toolConfig.icon}\n                                text={toolConfig.label}\n                                handleClick={ e => this.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            )\n                          })\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            </ModalCard.Body>\n\n            <ModalCard.Footer>\n              <ButtonLoader\n                buttonText={'Logout wallet'}\n                isLoading={this.state.logout}\n                handleClick={ async () => { await this.logout() } }\n                buttonProps={{className:styles.gradientButton,borderRadius:'2rem',mt:[4,8],minWidth:['95px','145px'],size:['auto','medium']}}\n              >\n              </ButtonLoader>\n            </ModalCard.Footer>\n          </ModalCard>\n        </Modal>\n      );\n    }\n    return null;\n  }\n}\n\nexport default AccountModal;\n","import React, { Component } from \"react\";\nimport HoverImage from \"../HoverImage/HoverImage\"\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport Notifications from \"../Notifications/Notifications\";\nimport AccountModal from \"../utilities/components/AccountModal\";\nimport { Flex, Icon, Image, Text, Link, Loader } from \"rimble-ui\";\nimport NetworkIndicator from \"../NetworkIndicator/NetworkIndicator\";\n\nclass MenuAccount extends Component {\n  state = {\n    isModalOpen: null,\n    idleTokenBalance: null,\n    logout: false\n  };\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n  setConnector = async connectorName => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: \"Connect\",\n      eventAction: \"logout\"\n    });\n\n    if (typeof this.props.setConnector === \"function\") {\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.unsetConnector();\n    // return await this.props.context.setConnector(connectorName);\n  };\n  async logout() {\n    this.setState({\n      logout: true\n    });\n\n    this.props.logout();\n    await this.setConnector(\"Infura\");\n    // this.props.closeModal();\n  }\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n    this.loadIdleTokenBalance();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const requiredNetworkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (requiredNetworkChanged || accountInizialized || contractsInitialized) {\n      this.loadIdleTokenBalance();\n    }\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged) {\n      this.setState({\n          isModalOpen: null\n      },() => {\n        this.loadIdleTokenBalance();\n      });\n    }\n  }\n\n  async loadIdleTokenBalance() {\n\n    if (!this.props.account || !this.props.contractsInitialized) {\n      return false;\n    }\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const idleGovTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens', 'IDLE']);\n    const idleGovTokenEnabled = idleGovTokenConfig.enabled && idleGovTokenConfig.availableNetworks.includes(currentNetwork.id);\n    let idleTokenBalance = null;\n\n    if (idleGovTokenEnabled) {\n      idleTokenBalance = this.functionsUtil.BNify(0);\n      const [\n        balance,\n        unclaimed\n      ] = await Promise.all([\n        this.idleGovToken.getBalance(this.props.account),\n        this.idleGovToken.getUnclaimedTokens(this.props.account)\n      ]);\n\n      if (balance && unclaimed) {\n        idleTokenBalance = this.functionsUtil.BNify(balance).plus(unclaimed);\n      }\n    }\n\n    return this.setState({\n      idleTokenBalance\n    });\n  }\n\n  toggleModal = modalName => {\n    this.setState(state => ({\n      ...state,\n      isModalOpen: state.isModalOpen === modalName ? null : modalName\n    }));\n  };\n\n  render() {\n    const walletProvider = this.functionsUtil.getStoredItem(\"walletProvider\", false, null);\n    const connectorInfo = walletProvider ? this.functionsUtil.getGlobalConfig([\"connectors\", walletProvider.toLowerCase()]) : null;\n    const walletIcon = connectorInfo && connectorInfo.icon ? connectorInfo.icon : walletProvider ? `${walletProvider.toLowerCase()}.svg` : null;\n\n    return this.props.account ? (\n      <Flex\n        width={1}\n        mr={[0,5]}\n        bg={\"cardBg\"}\n        flexDirection={[\"column\", \"row\"]}\n        alignItems={[\"flex-start\", \"center\"]}\n      >\n        <Flex\n          px={[2,0]}\n          flexDirection={\"row\"}\n          alignItems={\"center\"}\n          width={[1, \"fit-content\"]}\n          justifyContent={\"space-between\"}\n        >\n          {\n            this.props.isMobile && (\n              <Flex\n                ml={1}\n                mr={2}\n                width={'12%'}\n              >\n                <Icon\n                  size={\"2.4em\"}\n                  color={\"copyColor\"}\n                  onClick={this.props.toggleMenu}\n                  name={this.props.menuOpened ? \"Close\" : \"Menu\"}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.isMobile && (\n              <Flex\n                mx={2}\n                width={'fit-content'}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n\n              >\n                <NetworkIndicator\n                  {...this.props}\n                />\n              </Flex>\n            )\n          }\n          {\n            this.props.isMobile && (\n              <Flex\n                width={'87%'}\n                justifyContent={\"space-between\"}\n              >\n                <Link\n                  style={{\n                    width:'80%',\n                    display:'flex',\n                    overflow:'hidden',\n                    textDecoration:'none'\n                  }}\n                  onClick={e => this.toggleModal(\"account\")}\n                >\n                  <Flex\n                    p={0}\n                    width={'100%'}\n                    alignItems={\"center\"}\n                    flexDirection={\"row\"}\n                    justifyContent={[\"center\", \"flex-start\"]}\n                  >\n                  {\n                    connectorInfo ? (\n                      <Image\n                        mr={[1, 2]}\n                        width={\"2em\"}\n                        height={\"2em\"}\n                        display={\"inline-flex\"}\n                        alt={walletProvider.toLowerCase()}\n                        src={`images/connectors/${walletIcon}`}\n                      />\n                    ) : (\n                      <Icon\n                        mr={[1, 2]}\n                        size={\"2em\"}\n                        color={\"copyColor\"}\n                        name={\"AccountCircle\"}\n                      />\n                    )\n                  }\n                  {\n                    this.props.isMobile ? (\n                      <Text\n                        fontSize={2}\n                        fontWeight={3}\n                        color={\"copyColor\"}\n\n                        style={{\n                          flex: '1',\n                          overflow: 'hidden',\n                          textOverflow: 'ellipsis'\n                        }}\n                      >\n                        {this.props.account}\n                      </Text>\n                    ) : (\n                      <Flex\n                        pr={3}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <ShortHash\n                          fontSize={2}\n                          fontWeight={3}\n                          {...this.props}\n                          color={\"copyColor\"}\n                          hash={this.props.account}\n                        />\n                      </Flex>\n                    )\n                  }\n                  </Flex>\n                </Link>\n                <Notifications\n                  flexProps={{ p: 2 }}\n                  iconProps={{ p: 1, size: \"2.5em\" }}\n                  {...this.props}\n                />\n              </Flex>\n            )\n          }\n        </Flex>\n        {\n          !this.props.isMobile && (\n            <Flex\n              pr={[2,0]}\n              style={{\n                flex: \"1 1 auto\"\n              }}\n              width={[1, \"auto\"]}\n              alignItems={\"center\"}\n              flexDirection={\"row\"}\n              justifyContent={\"flex-end\"}\n            >\n              <Link\n                mr={3}\n                style={{\n                  textDecoration:'none'\n                }}\n                onClick={e => this.toggleModal(\"account\")}\n              >\n                <Flex\n                  p={0}\n                  width={1}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  justifyContent={[\"center\", \"flex-start\"]}\n                >\n                  {\n                    connectorInfo ? (\n                      <Image\n                        mr={[1, 2]}\n                        width={\"2em\"}\n                        height={\"2em\"}\n                        display={\"inline-flex\"}\n                        alt={walletProvider.toLowerCase()}\n                        src={`images/connectors/${walletIcon}`}\n                      />\n                    ) : (\n                      <Icon\n                        mr={[1, 2]}\n                        size={\"2em\"}\n                        color={\"copyColor\"}\n                        name={\"AccountCircle\"}\n                      />\n                    )\n                  }\n                  {\n                    this.props.isMobile ? (\n                      <Text\n                        mr={2}\n                        fontSize={2}\n                        fontWeight={3}\n                        color={\"copyColor\"}\n\n                        style={{\n                          flex: '1',\n                          overflow: 'hidden',\n                          textOverflow: 'ellipsis'\n                        }}\n                      >\n                        {this.props.account}\n                      </Text>\n                    ) : (\n                      <Flex\n                        pr={3}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <ShortHash\n                          fontSize={2}\n                          fontWeight={3}\n                          {...this.props}\n                          color={\"copyColor\"}\n                          hash={this.props.account}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Flex>\n              </Link>\n              <Link\n                style={{\n                  textDecoration:'none'\n                }}\n                onClick={e => this.props.setGovModal(true)}\n              >\n                <Flex\n                  p={0}\n                  width={1}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  justifyContent={[\"center\", \"flex-start\"]}\n                >\n                  <Image\n                    mr={2}\n                    width={\"1.7em\"}\n                    height={\"1.7em\"}\n                    display={\"inline-flex\"}\n                    src={`images/tokens/IDLE.svg`}\n                  />\n                  {\n                    this.state.idleTokenBalance ? (\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1, 2]}\n                        color={\"copyColor\"}\n                      >\n                        {this.state.idleTokenBalance.toFixed(2)} IDLE\n                      </Text>\n                    ) : <Loader size={'20px'} />\n                  }\n                </Flex>\n              </Link>\n              <Flex\n                ml={3}\n                alignItems={\"center\"}\n                flexDirection={\"row\"}\n                justifyContent={\"flex-end\"}\n              >\n                <Link\n                  style={{\n                    textDecoration:'none'\n                  }}\n                  onClick={this.props.account ? e => this.logout() : this.props.connectAndValidateAccount}\n                >\n                  <Flex\n                    p={0}\n                    width={1}\n                    alignItems={\"center\"}\n                    flexDirection={\"row\"}\n                    justifyContent={\"flex-start\"}\n                    onMouseEnter={e => this.setState({ isHover: true })}\n                    onMouseLeave={e => this.setState({ isHover: false })}\n                  >\n                    <HoverImage\n                      hoverOn={this.state.isHover}\n                      noHover={'images/logout.svg'}\n                      hover={'images/logoutHover.svg'}\n                      imageProps={{\n                        mx: 2,\n                        width: \"24px\",\n                        height: \"24px\",\n                        display: \"inline-flex\"\n                      }}\n                    />\n                  </Flex>\n                </Link>\n                <Notifications\n                  {...this.props}\n                  iconProps={{\n                    size: \"2.1em\"\n                  }}\n                  flexProps={{\n                    ml: 2\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n        <AccountModal\n          {...this.props}\n          isOpen={this.state.isModalOpen === \"account\"}\n          closeModal={e => this.toggleModal(\"account\")}\n        />\n      </Flex>\n    ) : (\n      <Flex\n        px={2}\n        width={1}\n        mr={[0,5]}\n      >\n        <Flex\n          width={1}\n          alignItems={\"center\"}\n          style={{ justifyContent: \"flex-start\" }}\n          justifyContent={[\"flex-start\", \"flex-end\"]}\n        >\n          {this.props.isMobile && (\n            <Flex mr={2}>\n              <Icon\n                size={\"2.4em\"}\n                color={\"copyColor\"}\n                onClick={this.props.toggleMenu}\n                name={this.props.menuOpened ? \"Close\" : \"Menu\"}\n              />\n            </Flex>\n          )}\n          {\n            !this.props.isMobile && (\n              <Flex\n                width={1}\n                justifyContent={['space-between', 'flex-start']}\n              >\n                <NetworkIndicator\n                  innerProps={{\n                    px: 1,\n                    py: 0,\n                    width: ['100%', 'auto'],\n                    height: ['45px', '54px']\n                  }}\n                  {...this.props}\n                />\n              </Flex>\n            )\n          }\n        </Flex>\n        <Flex\n          width={1}\n          flexDirection={\"row\"}\n          alignItems={[\"center\"]}\n          justifyContent={\"flex-end\"}\n        >\n          <RoundButton\n            {...this.props}\n            buttonProps={{\n              width:'auto',\n              boxShadow: \"none\",\n              style: {\n                display: \"flex\",\n                justifyContent: \"flex-start\"\n              }\n            }}\n            handleClick={this.props.account ? e => this.logout() : this.props.connectAndValidateAccount}\n          >\n            <Flex\n              mr={2}\n              width={1}\n              alignItems={\"center\"}\n              justifyContent={\"flex-start\"}\n            >\n              <Image\n                ml={0}\n                pl={0}\n                mr={[2, 3]}\n                align={\"center\"}\n                height={\"1.4em\"}\n                src={\"images/sidebar/plug_white.svg\"}\n              />\n              <Text\n                pr={1}\n                mr={2}\n                fontWeight={3}\n                color={\"white\"}\n                fontSize={[2]}\n                alignContent={\"center\"}\n                justifyContent={\"center\"}\n              >\n                Connect to Idle\n              </Text>\n            </Flex>\n          </RoundButton>\n          <Notifications\n            {...this.props}\n            iconProps={{\n              size: \"2.2em\"\n            }}\n            flexProps={{\n              ml: 2\n            }}\n          />\n        </Flex>\n      </Flex >\n    );\n  }\n}\n\nexport default MenuAccount;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Text, Modal, Flex, Image, Link, Icon } from \"rimble-ui\";\n\nclass GovModal extends React.Component {\n\n  state = {\n    total:null,\n    balance:null,\n    txStatus:null,\n    unclaimed:null,\n    processing: {\n      txHash:null,\n      loading:false\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  loadTokenInfo = async () => {\n    const [\n      balance,\n      unclaimed\n    ] = await Promise.all([\n      this.idleGovToken.getBalance(this.props.account),\n      this.idleGovToken.getUnclaimedTokens(this.props.account)\n    ]);\n\n    let total = this.functionsUtil.BNify(0);\n    if (balance && unclaimed){\n      total = this.functionsUtil.BNify(balance).plus(unclaimed);\n    }\n\n    this.setState({\n      total,\n      balance,\n      unclaimed\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n    this.loadTokenInfo();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const requiredNetworkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (accountChanged || requiredNetworkChanged || contractsInitialized){\n      this.loadTokenInfo();\n    }\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      txStatus:null,\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  claim = async () => {\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'claim',\n        eventCategory: 'Governance',\n        eventLabel: tx.status ? tx.status : error\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx.status ? tx.status : 'error',\n      };\n\n      if (tx.status === 'success'){\n        newState.balance = this.state.unclaimed;\n        newState.unclaimed = this.functionsUtil.BNify(0);\n\n        if (typeof this.props.claimCallback === 'function'){\n          this.props.claimCallback();\n        }\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.idleGovToken.claimRewards(callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  closeModal = async (action) => {\n    this.props.closeModal();\n  }\n\n  render() {\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n    const governanceConfig = this.functionsUtil.getGlobalConfig(['governance']);\n    const governanceEnabled = governanceConfig.enabled && governanceConfig.availableNetworks.includes(currentNetworkId);\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          bgLayer={true}\n          mainColor={'white'}\n          maxWidth={['auto','420px']}\n          closeFunc={this.props.closeModal}\n          background={'radial-gradient(76.02% 75.41% at 1.84% 0%, rgb(162, 196, 246) 0%, rgb(10, 79, 176) 100%)'}\n        >\n          <ModalCard.Header\n            pt={3}\n            titleProps={{\n              color:'white'\n            }}\n            title={'Your IDLE balance'}\n            borderBottom={'1px solid rgba(255,255,255,0.2)'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body\n            px={3}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Image\n                mt={2}\n                width={'3em'}\n                height={'3em'}\n                src={'images/tokens/IDLE.svg'}\n              />\n              <Text\n                mt={2}\n                fontSize={7}\n                color={'white'}\n                fontWeight={500}\n              >\n                {this.state.total ? this.state.total.toFixed(2) : '-'}\n              </Text>\n              <Text\n                mb={2}\n                fontSize={3}\n                color={'white'}\n                fontWeight={400}\n                textAlign={'center'}\n              >\n                {\n                  this.state.unclaimed && this.state.unclaimed.gt(0) ? 'You can now claim your IDLE tokens from the Early LPs Program!' : 'You don\\'t have any IDLE to claim from the Early LPs Program'\n                }\n              </Text>\n              <Flex\n                pb={2}\n                mb={3}\n                width={1}\n                flexDirection={'column'}\n                borderBottom={'1px solid rgba(255,255,255,0.2)'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    Balance:\n                  </Text>\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    {this.state.balance ? this.state.balance.toFixed(4) : '-'}\n                  </Text>\n                </Flex>\n                <Flex\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    Unclaimed:\n                  </Text>\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    {this.state.unclaimed ? this.state.unclaimed.toFixed(4) : '-'}\n                  </Text>\n                </Flex>\n                {\n                  governanceEnabled && (\n                    <Link\n                      href={`/#${this.functionsUtil.getGlobalConfig(['governance','baseRoute'])}`}\n                    >\n                      <Flex\n                        zIndex={10}\n                        position={'relative'}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Text\n                          fontSize={2}\n                          color={'white'}\n                          fontWeight={400}\n                        >\n                          Go to governance\n                        </Text>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'white'}\n                          name={\"OpenInNew\"}\n                        />\n                      </Flex>\n                    </Link>\n                  )\n                }\n              </Flex>\n              {\n                <Flex\n                  mb={3}\n                  width={1}\n                  zIndex={10}\n                  position={'relative'}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                >\n                  {\n                    this.state.unclaimed && this.state.unclaimed.gt(0) ? \n                      // Sending transaction\n                      this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          textColor={'white'}\n                          cancelTextColor={'moon-gray'}\n                          cancelTextHoverColor={'white'}\n                          waitText={`Claim estimated in`}\n                          hash={this.state.processing.txHash}\n                          endMessage={`Finalizing Claim request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            color:'blue',\n                            width:[1,'45%'],\n                            mainColor:'white',\n                            contrastColor:'blue',\n                            disabled:!this.state.unclaimed || this.state.unclaimed.lte(0)\n                          }}\n                          handleClick={this.claim.bind(this)}\n                        >\n                          Claim\n                        </RoundButton>\n                      )\n                    : (\n                      <RoundButton\n                        buttonProps={{\n                          color:'blue',\n                          width:[1,'45%'],\n                          mainColor:'white',\n                          contrastColor:'blue',\n                        }}\n                        handleClick={this.closeModal.bind(this)}\n                      >\n                        Close\n                      </RoundButton>\n                    )\n                  }\n                </Flex>\n              }\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default GovModal;","import ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport { Box, Flex, Text, Button } from \"rimble-ui\";\nimport MenuAccount from \"../MenuAccount/MenuAccount\";\nimport GovModal from \"../utilities/components/GovModal\";\nimport GovernanceUtil from \"../utilities/GovernanceUtil\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass DashboardHeader extends Component {\n  state = {\n    unclaimed: null,\n    vestingAmount: null,\n    govModalOpened: false\n  };\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils() {\n    if (this.governanceUtil) {\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const networkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    if (accountChanged || networkChanged) {\n      await this.loadData();\n    }\n  }\n\n  async loadData() {\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig([\n      \"govTokens\",\n      \"IDLE\",\n      \"enabled\"\n    ]);\n    if (idleGovTokenEnabled && this.props.account) {\n      const unclaimed = await this.idleGovToken.getUnclaimedTokens(\n        this.props.account\n      );\n      this.setState({\n        unclaimed\n      });\n    }\n  }\n\n  setConnector = async connectorName => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventAction: \"logout\",\n      eventCategory: \"Connect\"\n    });\n\n    if (typeof this.props.setConnector === \"function\") {\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.setConnector(connectorName);\n  };\n\n  async exit() {\n    this.props.goToSection(\"/\", false);\n  }\n\n  setGovModal(govModalOpened) {\n    this.setState({\n      govModalOpened\n    });\n  }\n\n  render() {\n    return (\n      <Box >\n        <Flex\n          py={2}\n          width={1}\n          bg={\"cardBg\"}\n          flexDirection={\"row\"}\n          justifyContent={\"space-between\"}\n          alignItems={[\"flex-end\", \"center\"]}\n          borderBottom={`1px solid ${this.props.theme.colors.menuRightBorder}`}\n        >\n          <MenuAccount\n            width={1}\n            {...this.props}\n            setGovModal={this.setGovModal.bind(this)}\n            goToSection={this.props.goToSection.bind(this)}\n          />\n        </Flex>\n        {\n          this.state.unclaimed && this.state.unclaimed.gt(0) && (\n            <DashboardCard\n              cardProps={{\n                p: 2,\n                mt: 3,\n                width: 1\n              }}\n              isActive={true}\n              isInteractive={false}\n            >\n              <Flex\n                alignItems={\"center\"}\n                justifyContent={\"center\"}\n                flexDirection={[\"column\", \"row\"]}\n              >\n                <Text\n                  fontWeight={500}\n                  fontSize={\"15px\"}\n                  color={\"flashColor\"}\n                  textAlign={\"center\"}\n                >\n                  IDLE Governance Token is now available,\n                  <ExtLink\n                    ml={1}\n                    fontWeight={500}\n                    color={\"primary\"}\n                    fontSize={\"15px\"}\n                    hoverColor={\"primary\"}\n                    href={\n                      \"https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7\"\n                    }\n                  >\n                    discover more\n                  </ExtLink>\n                  ! You have {this.state.unclaimed.toFixed(4)} IDLE tokens to\n                  claim.\n                </Text>\n                <Button\n                  ml={[0, 2]}\n                  mt={[2, 0]}\n                  size={\"small\"}\n                  mainColor={\"blue\"}\n                  onClick={e => this.setGovModal(true)}\n                >\n                  CLAIM NOW\n                </Button>\n              </Flex>\n            </DashboardCard>\n          )\n        }\n        <GovModal\n          {...this.props}\n          isOpen={this.state.govModalOpened}\n          claimCallback={this.loadData.bind(this)}\n          closeModal={e => this.setGovModal(false)}\n        />\n      </Box>\n    );\n  }\n}\n\nexport default DashboardHeader;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bell\":\"Notifications_bell__5m9tk\",\"ring\":\"Notifications_ring__1ir3w\",\"counter\":\"Notifications_counter__3EbuS\",\"list\":\"Notifications_list__2pkAk\",\"notification\":\"Notifications_notification__TMlFX\",\"dark\":\"Notifications_dark__14hO4\"};"],"sourceRoot":""}