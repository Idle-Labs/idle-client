{"version":3,"sources":["utilities/GovernanceUtil.js","StatsCard/StatsCard.js","DashboardMenu/DashboardMenu.js","utilities/components/TooltipModal.js","CryptoInput/CryptoInput.module.scss","Notifications/Notifications.js","utilities/components/AccountModal.js","MenuAccount/MenuAccount.js","utilities/components/GovModal.js","DelegateVesting/DelegateVesting.js","DashboardHeader/DashboardHeader.js","MenuAccount/MenuAccount.module.scss","Notifications/Notifications.module.scss"],"names":["GovernanceUtil","props","_this","this","Object","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","functionsUtil","setProps","FunctionsUtil","getTotalSupply","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","a","mark","_callee","cachedDataKey","cachedData","contractName","totalSupply","wrap","_context","prev","next","getCachedDataWithLocalStorage","BNify","isNaN","abrupt","getGlobalConfig","genericContractCall","sent","fixTokenDecimals","setCachedDataWithLocalStorage","stop","getTokensBalance","_callee2","account","balance","_args2","arguments","_context2","length","undefined","concat","getContractBalance","getVestingContract","_callee3","vestingContract","_args3","_context3","parseInt","initContract","VesterABI","delegateVesting","_callee4","delegate","callback","callbackReceipt","_args4","_context4","contractMethodSendWrapper","getVestingAmount","_callee5","vestingAmount","_args5","_context5","getCurrentDelegate","_callee6","_args6","_context6","getCurrentVotes","_callee7","votes","_args7","_context7","getVotingPeriod","_callee8","votingPeriod","_context8","getTimelockDelay","_callee9","delay","_context9","queueProposal","_ref10","_callee10","proposalId","_args10","_context10","toBN","_x","apply","executeProposal","_ref11","_callee11","_args11","_context11","_x2","proposeAndVoteFor","_ref12","_callee12","targets","values","signatures","calldatas","description","batcher","contract","txs","_context12","Batcher","web3","getContractByName","to","_address","method","methods","propose","args","castVote","_x3","_x4","_x5","_x6","_x7","_ref13","_callee13","_args13","_context13","_x8","_x9","_x10","_x11","_x12","_ref14","_callee14","support","_args14","_context14","_x13","_x14","setDelegate","_ref15","_callee15","_args15","_context15","_x15","getDelegatesChanges","_callee16","lastBlockNumber","delegationsCalls","fromBlock","delegatesContractName","blockNumber","toBlock","all_delegations","_context16","eth","getBlockNumber","Math","min","push","getContractPastEvents","Promise","all","reduce","delegations","d","getDelegatesVotesChanges","_callee17","_context17","getDelegates","_callee18","limit","_ref19","_ref20","all_votes","delegateAccounts","delegates","_args18","_context18","getVotes","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","forEach","e","_e$returnValues","returnValues","newBalance","keys","sort","b","index","rank","toFixed","vote_weight","parseFloat","proposals","filter","v","voter","toLowerCase","splice","getProposalParams","_callee19","govContractName","_ref22","_ref23","proposalThreshold","proposalMaxOperations","params","_context19","getCachedData","setCachedData","_callee20","governanceContractName","_context20","map","_e$returnValues2","getProposals","_callee22","voted_by","filter_by_state","startBlock","enumerateProposalState","proposalCount","proposalGets","proposalStateGets","_arr","_i","i","_ref26","_ref27","proposalStates","proposalQueuedEvents","proposalCreatedEvents","proposalCanceledEvents","proposalExecutedEvents","_args22","_context22","p","state","find","Array","from","n","reverse","asyncForEach","_ref28","_callee21","createdEvent","canceledEvent","executedEvent","queuedEvent","_ref29","_ref30","endBlockInfo","queuedBlockInfo","createdBlockInfo","canceledBlockInfo","executedBlockInfo","createdState","activeState","canceledState","succeededState","queuedState","executedState","endState","_createdEvent$returnV","proposalDetails","_context21","id","endBlock","getBlockInfo","states","end_time","timestamp","start_time","trx_hash","transactionHash","s","title","split","replace","shift","join","attr","eta","actions","executed","canceled","forVotes","proposer","againstVotes","_x16","_x17","StatsCard","loadUtils","prevProps","prevState","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","cardProps","minHeight","rimble_ui__WEBPACK_IMPORTED_MODULE_10__","width","alignItems","flexDirection","justifyContent","titleMinHeight","h4","mb","fontWeight","fontSize","textAlign","color","lineHeight","value","toString","assign","valueProps","children","label","mt","labelTooltip","placement","message","ml","name","size","Component","DashboardMenu","buyModalOpened","setState","_this2","menu","visibleLinks","menuLink","isVisible","visible","showMobile","mobile","isMobile","isDarkTheme","themeMode","isOriginUrl","checkUrlOrigin","darkModeEnabled","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","height","react_router_dom__WEBPACK_IMPORTED_MODULE_9__","position","src","menuIndex","LinkComponent","isExternalLink","ExtLink","RouterLink","inactiveImage","imageInactiveDark","imageInactive","my","key","route","href","style","textDecoration","py","px","borderRadius","border","selected","backgroundColor","image","mr","align","icon","bgColor","whiteSpace","onClick","setThemeMode","TooltipModal","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","componentDidUpdate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","closeModal","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_8__","maxWidth","closeFunc","Header","pt","Body","dangerouslySetInnerHTML","__html","content","_RoundButton_RoundButton_js__WEBPACK_IMPORTED_MODULE_11__","handleClick","buttonProps","React","module","exports","newLink","newPill","ethInput","ethInputDark","mainInput","button","gradientButton","input","newPillContainerAnim","Notifications","tabOpened","notifications","mouseOverBell","unreadNotifications","lastOpenTimestamp","mouseOverNotifications","governanceUtil","loadNotifications","clickEvent","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","updateLastOpenTimestamp","notificationsChanged","JSON","stringify","Date","now","notificationsParams","getStoredItem","setLocalStorage","requiredNetwork","isMainnet","blocksPerWeek","div","oneWeekAgoBlock","minus","getSubstackLatestFeed","getSnapshotProposals","latestFeed","activeSnapshotProposals","governanceProposals","batchedDeposits","enabled","start","currTime","end","latestFeedDate","strToMoment","isoDate","isAfter","subtract","link","_d","getTime","htmlDecode","text","date","utc","format","snapshotProposalBaseUrl","_this3","msg","payload","body","authorIpfsHash","governanceProposalUrl","iconProps","hash","batchDepositConfig","batchDepositBaseUrl","batchToken","batchInfo","lastExecution","timeStamp","batchRedeems","theme","colors","transactions","status","completed","notification","openWindow","window","location","_this4","hasUnreadNotifications","iconColor","react_default","index_es","zIndex","flexProps","onMouseOut","setMouseOverBell","onMouseOver","toggleTab","bind","className","styles","bell","ring","active","counter","DashboardCard","right","maxHeight","overflow","top","minWidth","setMouseOverNotifications","openNotification","dark","borderBottom","divider","textOverflow","AccountModal","logout","balances","loadBalances","regenerator_default","availableStrategies","contractsInitialized","best","baseToken","tokens","strategy","strategyToken","idle","token","setConnector","connectorName","context","accountChanged","acccount","section","goToSection","viewOnly","rows","renderBalances","boxShadow","tokenIndex","AssetField","tokenConfig","objectSpread","fieldInfo","ModalCard","address","toolName","toolConfig","CardIconButton","mx","Footer","ButtonLoader","buttonText","isLoading","asyncToGenerator","MenuAccount","isModalOpen","idleTokenBalance","idleGovToken","toggleModal","modalName","getIdleGovToken","loadIdleTokenBalance","getBalance","getUnclaimedTokens","unclaimed","plus","walletProvider","connectorInfo","walletIcon","governanceRoute","governanceEnabled","dashboardRoute","display","isInteractive","alt","ShortHash","src_Notifications_Notifications","flex","balanceButton","setGovModal","isDashboard","RoundButton","mainColor","isGovernance","components_AccountModal","connectAndValidateAccount","GovModal","total","txStatus","processing","txHash","loading","loadTokenInfo","_ref2","_ref3","slicedToArray","claim","tx","error","eventData","getTransactionError","newState","claimCallback","claimRewards","action","bgLayer","background","titleProps","gt","pb","TxProgressBar","textColor","cancelTextColor","cancelTextHoverColor","waitText","endMessage","cancelTransaction","contrastColor","disabled","lte","DelegateVesting","newDelegate","delegatee","currentDelegate","delegateAddressValid","delegateDifferentWallet","vestingContractDelegated","delegatesChanges","lastDelegateTx","delegator","pop","toDelegate","revoke","repeat","checkAddress","loadData","target","type","required","borderColor","placeholder","onChange","changeDelegate","checked","setDelegateDifferentWallet","DashboardHeader","activeNews","govModalOpened","stakingConfig","nexusMutualConfig","flashNews","url","getDashboardSectionUrl","floor","random","src_MenuAccount_MenuAccount","isActive","hoverColor","src_DelegateVesting_DelegateVesting","components_GovModal","list"],"mappings":"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","file":"static/js/0.c9291beb.chunk.js","sourcesContent":["import Batcher from 'web3-batched-send';\nimport FunctionsUtil from './FunctionsUtil';\nimport VesterABI from '../contracts/Vester.json';\n\n// const env = process.env;\n\nclass GovernanceUtil {\n  // Attributes\n  props = {};\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  getTotalSupply = async () => {\n\n    // Check for cached data\n    const cachedDataKey = 'getTotalSupply';\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n    let totalSupply = await this.functionsUtil.genericContractCall(contractName,'totalSupply');\n    if (totalSupply){\n      totalSupply = this.functionsUtil.fixTokenDecimals(totalSupply,18);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,totalSupply,null);\n    }\n\n    return null;\n  }\n\n  getTokensBalance = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n\n      // Check for cached data\n      const cachedDataKey = `getTokensBalance_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const balance = await this.functionsUtil.getContractBalance(contractName, account);\n      if (balance && !this.functionsUtil.BNify(balance).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,this.functionsUtil.BNify(balance));\n      }\n    }\n    return null;\n  }\n\n  getVestingContract = async (account=null) => {\n    account = account ? account : this.props.account;\n    const vestingContract = await this.functionsUtil.genericContractCall('VesterFactory','vestingContracts',[account]);\n\n    if (parseInt(vestingContract) === 0){\n      return null;\n    }\n    // Init vesting contract\n    await this.props.initContract('VestingContract',vestingContract,VesterABI);\n    return vestingContract;\n  }\n\n  delegateVesting = async (account=null,delegate=null,callback=null,callbackReceipt=null) => {\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      // await this.functionsUtil.contractMethodSendWrapper('IDLE','delegate',[delegate]);\n      return await this.functionsUtil.contractMethodSendWrapper('VestingContract','setDelegate',[delegate],callback,callbackReceipt);\n    }\n    return null;\n  }\n\n  getVestingAmount = async (account=null) => {\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      let vestingAmount = await this.functionsUtil.genericContractCall('VestingContract','vestingAmount');\n      if (vestingAmount){\n        return this.functionsUtil.BNify(vestingAmount);\n      }\n    }\n    return null;\n  }\n\n  getCurrentDelegate = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n\n      // Check for cached data\n      const cachedDataKey = `getCurrentDelegate_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const delegate = await this.functionsUtil.genericContractCall(contractName, 'delegates', [account]);\n\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delegate);\n    }\n\n    return null;\n  }\n\n  getCurrentVotes = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n      // Check for cached data\n      const cachedDataKey = `getCurrentVotes_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const votes = await this.functionsUtil.genericContractCall(contractName, 'getCurrentVotes', [account]);\n      if (votes && !this.functionsUtil.BNify(votes).isNaN() ){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,this.functionsUtil.BNify(votes));\n      }\n    }\n\n    return null;\n  }\n\n  getVotingPeriod = async () => {\n    // Check for cached data\n    const cachedDataKey = `votingPeriod`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    let votingPeriod = await this.functionsUtil.genericContractCall(contractName,'votingPeriod');\n    if (votingPeriod){\n      votingPeriod = this.functionsUtil.BNify(votingPeriod);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,votingPeriod,null);\n    }\n\n    return null;\n  }\n\n  getTimelockDelay = async () => {\n    // Check for cached data\n    const cachedDataKey = `getTimelockDelay`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    let delay = await this.functionsUtil.genericContractCall('Timelock','delay');\n    if (delay){\n      delay = this.functionsUtil.BNify(delay);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delay,null);\n    }\n\n    return null;\n  }\n\n  queueProposal = async (proposalId,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    await this.functionsUtil.contractMethodSendWrapper(contractName,'queue',[this.functionsUtil.toBN(proposalId)],callback,callbackReceipt);\n  }\n\n  executeProposal = async (proposalId,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    await this.functionsUtil.contractMethodSendWrapper(contractName,'execute',[this.functionsUtil.toBN(proposalId)],callback,callbackReceipt);\n  }\n\n  proposeAndVoteFor = async (targets, values, signatures, calldatas, description) => {\n    const batcher = new Batcher(this.props.web3,'0x741A4dCaD4f72B83bE9103a383911d78362611cf');\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    const contract = this.functionsUtil.getContractByName(contractName);\n\n    const txs = [\n      {\n        to:contract._address,\n        method:contract.methods.propose,\n        args:[targets, values, signatures, calldatas, description]\n      },\n      {\n        to:contract._address,\n        method:contract.methods.castVote,\n        args:[this.functionsUtil.BNify(3), true],\n      }\n    ];\n\n    batcher(txs);\n  }\n\n  propose = async (targets, values, signatures, calldatas, description, callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    return await this.props.contractMethodSendWrapper(contractName, 'propose', [targets, values, signatures, calldatas, description], null, callback, callbackReceipt);\n  }\n\n  castVote = async (proposalId,support,callback=null,callbackReceipt=null) => {\n    proposalId = this.functionsUtil.toBN(proposalId);\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    return await this.props.contractMethodSendWrapper(contractName, 'castVote', [proposalId, support], null, callback, callbackReceipt);\n  }\n\n  setDelegate = async (delegate,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n    return await this.props.contractMethodSendWrapper(contractName, 'delegate', [delegate], null, callback, callbackReceipt);\n  }\n\n  getDelegatesChanges = async () => {\n\n    const lastBlockNumber = await this.props.web3.eth.getBlockNumber();\n\n    const delegationsCalls = [];\n    const blocksPerCall = 100000;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const delegatesContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n\n    for (var blockNumber = fromBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      const toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      delegationsCalls.push(this.functionsUtil.getContractPastEvents(delegatesContractName,'DelegateChanged', {fromBlock: blockNumber, toBlock}))\n    }\n\n    const all_delegations = await Promise.all(delegationsCalls);\n\n    return all_delegations.reduce( (delegations,d) => {\n      delegations = delegations.concat(d);\n      return delegations;\n    },[]);\n  }\n\n  getDelegatesVotesChanges = async () => {\n\n    const lastBlockNumber = await this.props.web3.eth.getBlockNumber();\n\n    const delegationsCalls = [];\n    const blocksPerCall = 100000;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const delegatesContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n\n    for (var blockNumber = fromBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      const toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      delegationsCalls.push(this.functionsUtil.getContractPastEvents(delegatesContractName,'DelegateVotesChanged', {fromBlock: blockNumber, toBlock}))\n    }\n\n    const all_delegations = await Promise.all(delegationsCalls);\n\n    return all_delegations.reduce( (delegations,d) => {\n      delegations = delegations.concat(d);\n      return delegations;\n    },[]);\n  }\n\n  getDelegates = async (limit=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getDelegates`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const [\n      all_votes,\n      totalSupply,\n      delegations,\n    ] = await Promise.all([\n      this.getVotes(),\n      this.getTotalSupply(),\n      this.getDelegatesVotesChanges()\n    ]);\n\n    const delegateAccounts = {};\n    delegations.forEach(e => {\n      const { delegate, newBalance } = e.returnValues;\n      delegateAccounts[delegate] = newBalance;\n    });\n\n    let delegates = [];\n    Object.keys(delegateAccounts).forEach((account) => {\n      const votes = +delegateAccounts[account];\n      if (votes === 0) return;\n      delegates.push({\n        votes: votes/1e18,\n        delegate: account\n      });\n    });\n\n    delegates.sort((a, b) => {\n      return a.votes < b.votes ? 1 : -1;\n    });\n\n    delegates.forEach( (d,index) => {\n      d.rank = index+1;\n      d.votes = d.votes.toFixed(6);\n      d.vote_weight = (100 * (d.votes / parseFloat(totalSupply))).toFixed(4) + '%';\n      d.proposals = all_votes.filter( v => (v.voter && d.delegate && v.voter.toLowerCase() === d.delegate.toLowerCase()) ).length;\n    });\n\n    this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delegates);\n\n    if (limit !== null){\n      delegates = delegates.splice(0,limit);\n    }\n\n    return delegates;\n  }\n\n  getProposalParams = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getProposalParams`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    let [\n      proposalThreshold,\n      proposalMaxOperations\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(govContractName,'proposalThreshold'),\n      this.functionsUtil.genericContractCall(govContractName,'proposalMaxOperations')\n    ]);\n\n    if (proposalThreshold){\n      proposalThreshold = this.functionsUtil.BNify(proposalThreshold);\n    }\n\n    const params = {\n      proposalThreshold,\n      proposalMaxOperations\n    };\n\n    return this.functionsUtil.setCachedData(cachedDataKey,params);\n  }\n\n  getVotes = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getVotes`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const governanceContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n\n    let votes = await this.functionsUtil.getContractPastEvents(governanceContractName,'VoteCast', {fromBlock, toBlock: 'latest'});\n\n    if (votes){\n      votes = votes.map( e => {\n        const {\n            voter,\n            votes,\n            support,\n            proposalId\n        } = e.returnValues;\n        return {\n          votes,\n          voter,\n          support,\n          proposalId\n        }\n      });\n    }\n\n    return this.functionsUtil.setCachedData(cachedDataKey,votes);\n  }\n\n  getProposals = async (voted_by=null,filter_by_state=null,startBlock=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getProposals`;\n    let cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      if (filter_by_state){\n        cachedData = cachedData.filter( p => (p && p.state && p.state.toLowerCase() === filter_by_state.toLowerCase() ) );\n      }\n      if (voted_by){\n        cachedData = cachedData.filter( p => (p && p.votes.find( v => (v.voter && v.voter.toLowerCase() === voted_by.toLowerCase()) )) );\n      }\n      if (startBlock){\n        cachedData = cachedData.filter( p => parseInt(p.startBlock)>=parseInt(startBlock) );\n      }\n      return cachedData;\n    }\n\n    const enumerateProposalState = (state) => {\n      const proposalStates = ['Pending', 'Active', 'Canceled', 'Defeated', 'Succeeded', 'Queued', 'Expired', 'Executed'];\n      return proposalStates[state];\n    };\n\n    const governanceContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    const proposalCount = await this.functionsUtil.genericContractCall(governanceContractName,'proposalCount');\n\n    if (!proposalCount){\n      return [];\n    }\n\n    const proposalGets = [];\n    const proposalStateGets = [];\n    for (const i of Array.from(Array(parseInt(proposalCount)),(n,i) => i+1)) {\n      proposalGets.push(this.functionsUtil.genericContractCall(governanceContractName,'proposals',[i]));\n      proposalStateGets.push(this.functionsUtil.genericContractCall(governanceContractName,'state',[i]));\n    }\n\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n\n    let [\n      votes,\n      proposals,\n      proposalStates,\n      proposalQueuedEvents,\n      proposalCreatedEvents,\n      proposalCanceledEvents,\n      proposalExecutedEvents,\n    ] = await Promise.all([\n      this.getVotes(),\n      Promise.all(proposalGets),\n      Promise.all(proposalStateGets),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalQueued', {fromBlock, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalCreated', {fromBlock, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalCanceled', {fromBlock, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalExecuted', {fromBlock, toBlock: 'latest'}),\n    ]);\n\n    if (!proposals){\n      return false;\n    }\n\n    proposals.reverse();\n    proposalStates.reverse();\n    proposalQueuedEvents.reverse();\n    proposalCreatedEvents.reverse();\n    proposalCanceledEvents.reverse();\n    proposalExecutedEvents.reverse();\n\n    // await this.functionsUtil.asyncForEach(proposals, async (p,i) => {\n    await this.functionsUtil.asyncForEach(proposalCreatedEvents, async (createdEvent,i) => {\n      const p = proposals[i];\n\n      if (!p || !p.id){\n        return;\n      }\n\n      const proposalId = parseInt(p.id);\n      const canceledEvent = proposalCanceledEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n      const executedEvent = proposalExecutedEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n      const queuedEvent = proposalQueuedEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n\n      const [\n        endBlockInfo,\n        queuedBlockInfo,\n        createdBlockInfo,\n        canceledBlockInfo,\n        executedBlockInfo,\n      ] = await Promise.all([\n        p.endBlock ? this.functionsUtil.getBlockInfo(p.endBlock) : null,\n        queuedEvent ? this.functionsUtil.getBlockInfo(queuedEvent.blockNumber) : null,\n        createdEvent ? this.functionsUtil.getBlockInfo(createdEvent.blockNumber) : null,\n        canceledEvent ? this.functionsUtil.getBlockInfo(canceledEvent.blockNumber) : null,\n        executedEvent ? this.functionsUtil.getBlockInfo(executedEvent.blockNumber) : null,\n      ]);\n\n      // Init states array\n      p.states = [];\n\n      // Create created state\n      const createdState = {\n        state: \"Pending\",\n        blockNumber: createdEvent.blockNumber,\n        end_time: createdBlockInfo.timestamp,\n        start_time: createdBlockInfo.timestamp,\n        trx_hash: createdEvent.transactionHash\n      };\n      p.states.push(createdState);\n\n      // Push active state\n      const activeState = {\n        end_time: null,\n        trx_hash: null,\n        state: \"Active\",\n        blockNumber: createdEvent.blockNumber,\n        start_time: createdState.start_time\n      };\n      p.states.push(activeState);\n\n      // Push canceled state\n      if (canceledEvent){\n        const canceledState = {\n          end_time: null,\n          state: \"Canceled\",\n          blockNumber: canceledEvent.blockNumber,\n          start_time: canceledBlockInfo.timestamp,\n          trx_hash: canceledEvent.transactionHash\n        }\n        // Update previous state end_time\n        p.states[p.states.length-1].end_time = canceledBlockInfo.timestamp;\n        p.states.push(canceledState);\n      } else {\n        // Push queued state\n        if (queuedEvent){\n          const succeededState = {\n            end_time: null,\n            trx_hash: null,\n            state: \"Succeeded\",\n            blockNumber: queuedEvent.blockNumber,\n            start_time: queuedBlockInfo.timestamp,\n          };\n\n          const queuedState = {\n            end_time: null,\n            state: \"Queued\",\n            blockNumber: queuedEvent.blockNumber,\n            trx_hash: queuedEvent.transactionHash,\n            start_time: queuedBlockInfo.timestamp,\n          };\n\n          // Update previous state end_time\n          p.states[p.states.length-1].end_time = queuedBlockInfo.timestamp;\n          // Push Succeeded state\n          p.states.push(succeededState);\n          // Push queued state\n          p.states.push(queuedState);\n        }\n\n        // Push executed state\n        if (executedEvent){\n          const executedState = {\n            end_time: null,\n            state: \"Executed\",\n            blockNumber: executedEvent.blockNumber,\n            start_time: executedBlockInfo.timestamp,\n            trx_hash: executedEvent.transactionHash\n          }\n          // Update previous state end_time\n          p.states[p.states.length-1].end_time = executedBlockInfo.timestamp;\n          p.states.push(executedState);\n        }\n      }\n\n      // Check for defeated or expired\n      p.state = enumerateProposalState(proposalStates[i]);\n      const foundState = p.states.find( s => (s.state === p.state) );\n      if (!foundState){\n        const endState = {\n          state: p.state,\n          end_time: null,\n          trx_hash: null,\n          blockNumber: p.endBlock,\n          start_time: endBlockInfo.timestamp,\n        }\n        // Update previous state end_time\n        p.states[p.states.length-1].end_time = endBlockInfo.timestamp;\n        p.states.push(endState);\n      }\n\n      p.votes = votes.filter( v => (parseInt(v.proposalId)===proposalId) );\n\n      const { description, signatures, targets, values, calldatas } = createdEvent.returnValues;\n      p.timestamp = createdBlockInfo ? createdBlockInfo.timestamp : null;\n\n\n      // Idle\n      p.title = description.split(/# |\\n|↵/g)[0].replace(/^#/,'') || 'Untitled';\n      p.description = description.split(/\\n|↵/g);\n      p.description.shift();\n      p.description = p.description.join(\"\\n\");\n      p.description = p.description.replace(/\\n/g,\"<br />\")\n\n      // Overwrite proposal details\n      const proposalDetails = this.functionsUtil.getGlobalConfig(['governance','proposals',proposalId]);\n      if (proposalDetails){\n        Object.keys(proposalDetails).forEach( attr => {\n          p[attr] = proposalDetails[attr];\n        });\n      }\n\n      // Save proposal\n      proposals[i] = {\n        eta:p.eta,\n        actions:{\n          values,\n          targets,\n          calldatas,\n          signatures\n        },\n        id:proposalId,\n        title:p.title,\n        state:p.state,\n        votes:p.votes,\n        states:p.states,\n        executed:p.executed,\n        endBlock:p.endBlock,\n        canceled:p.canceled,\n        forVotes:p.forVotes,\n        proposer:p.proposer,\n        timestamp:p.timestamp,\n        startBlock:p.startBlock,\n        description:p.description,\n        againstVotes:p.againstVotes\n      };\n    });\n\n    this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,proposals,3600);\n\n    // console.log('getProposals',filter_by_state,cachedData);\n\n    if (filter_by_state){\n      proposals = proposals.filter( p => (p && p.state && p.state.toLowerCase() === filter_by_state.toLowerCase() ) );\n    }\n\n    if (voted_by){\n      proposals = proposals.filter( p => (p && p.votes.find( v => (v.voter && v.voter.toLowerCase() === voted_by.toLowerCase()) )) );\n    }\n\n    if (startBlock){\n      proposals = proposals.filter( p => parseInt(p.startBlock)>=parseInt(startBlock) );\n    }\n    \n    return proposals;\n  }\n}\n\nexport default GovernanceUtil;","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass StatsCard extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          minHeight:this.props.minHeight ? this.props.minHeight : ['130px','153px']\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'flex-start'}\n          flexDirection={'column'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            alignItems={'flex-start'}\n            minHeight={ this.props.titleMinHeight ? this.props.titleMinHeight : ['auto','60px'] }\n          >\n            <Heading.h4\n              mb={[3,0]}\n              fontWeight={4}\n              fontSize={[2,3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n            >\n              {this.props.title}\n            </Heading.h4>\n          </Flex>\n          {\n            (typeof this.props.value !== 'undefined' && this.props.value !== null && this.props.value.toString().length>0) &&\n              <Text\n                lineHeight={1}\n                fontSize={[4,5]}\n                fontWeight={[3,4]}\n                color={'statValue'}\n                {...this.props.valueProps}\n              >\n                {this.props.value}\n              </Text>\n          }\n          {\n            this.props.children ?\n              this.props.children\n            : null\n          }\n          {\n            (typeof this.props.label !== 'undefined' && this.props.label !== null && this.props.label.toString().length>0) && (\n              <Flex\n                mt={[3,2]}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Text\n                  fontSize={1}\n                  fontWeight={3}\n                  color={'legend'}\n                >\n                  {this.props.label}\n                </Text>\n                {\n                  (this.props.labelTooltip && this.props.labelTooltip.length>0) && (\n                    <Tooltip\n                      placement={'top'}\n                      message={this.props.labelTooltip}\n                    >\n                      <Icon\n                        ml={2}\n                        name={\"Info\"}\n                        size={'1em'}\n                        color={'cellTitle'}\n                      />\n                    </Tooltip>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default StatsCard;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport { Link as RouterLink } from \"react-router-dom\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Icon, Text, Image, Link } from 'rimble-ui';\n\nclass DashboardMenu extends Component {\n  state = {\n    buyModalOpened:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setBuyModalOpened(buyModalOpened){\n    this.setState({\n      buyModalOpened\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    if (!this.props.menu.length){\n      return null;\n    }\n\n    const visibleLinks = this.props.menu.filter(menuLink => {\n      const isVisible = menuLink.visible === undefined || menuLink.visible;\n      const showMobile = menuLink.mobile === undefined || menuLink.mobile;\n      return isVisible && (!this.props.isMobile || showMobile);\n    });\n\n    if (!visibleLinks.length){\n      return null;\n    }\n\n    const isDarkTheme = this.props.themeMode === 'dark';\n    const isOriginUrl = this.functionsUtil.checkUrlOrigin();\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard','theme','darkModeEnabled']);\n\n    return (\n      <Flex\n        p={0}\n        height={'100%'}\n        flexDirection={['row','column']}\n      >\n        {\n          !this.props.isMobile &&\n            <Flex\n              p={3}\n              mb={3}\n              flexDirection={'row'}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <RouterLink to=\"/\">\n                <Image\n                  position={'relative'}\n                  height={['35px','42px']}\n                  src={ isOriginUrl ? (!isDarkTheme ? 'images/logo-gradient.svg' : 'images/logo-white.svg') : (!isDarkTheme ? 'images/logo-gradient-beta.png' : 'images/logo-white-beta.png')}\n                />\n              </RouterLink>\n            </Flex>\n        }\n        {\n          visibleLinks.map((menuLink,menuIndex) => {\n            const isExternalLink = menuLink.isExternalLink;\n            const LinkComponent = isExternalLink ? ExtLink : RouterLink;\n            const inactiveImage = isDarkTheme && menuLink.imageInactiveDark ? menuLink.imageInactiveDark : menuLink.imageInactive;\n            return (\n              <Box\n                my={[0,3]}\n                key={`menu-${menuIndex}`}\n                width={[1/visibleLinks.length,'auto']}\n              >\n                <LinkComponent\n                  to={menuLink.route}\n                  href={menuLink.route}\n                  style={{textDecoration:'none'}}\n                >\n                  <Flex\n                    py={[2,3]}\n                    px={[2,3]}\n                    borderRadius={[0,2]}\n                    flexDirection={'row'}\n                    alignItems={'center'}\n                    border={menuLink.selected ? 2 : null}\n                    backgroundColor={ menuLink.selected ? 'menuHover' : 'transparent' }\n                  >\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={['column','row']}\n                      justifyContent={['center','flex-start']}\n                    >\n                      {menuLink.image &&\n                        <Image\n                          mr={[0,3]}\n                          ml={[0,2]}\n                          mb={[1,0]}\n                          align={'center'}\n                          height={['1.2em','1.6em']}\n                          src={ menuLink.selected ? menuLink.image : inactiveImage}\n                        />\n                      }\n                      {menuLink.icon &&\n                        <Icon\n                          mr={[0,3]}\n                          ml={[0,2]}\n                          mb={[1,0]}\n                          align={'center'}\n                          name={menuLink.icon}\n                          size={ this.props.isMobile ? '1.4em' : '1.6em' }\n                          color={ menuLink.selected ? menuLink.bgColor : 'copyColor' }\n                        />\n                      }\n                      <Text\n                        fontWeight={3}\n                        color={'copyColor'}\n                        textAlign={'center'}\n                        fontSize={['11px',2]}\n                        style={{\n                          whiteSpace:'nowrap'\n                        }}\n                      >\n                        {menuLink.label}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                </LinkComponent>\n              </Box>\n            );\n          })\n        }\n        {\n          darkModeEnabled && !this.props.isMobile && (\n            <Flex\n              my={[0,2]}\n              height={'100%'}\n              flexDirection={'column'}\n              justifyContent={'flex-end'}\n              width={[1/visibleLinks.length,'auto']}\n            >\n              <Link\n                style={{textDecoration:'none'}}\n                onClick={ e => this.props.setThemeMode(this.props.themeMode === 'light' ? 'dark' : 'light') }\n              >\n                <Flex\n                  p={2}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'flex-end'}\n                >\n                  <Icon\n                    mr={[0,2]}\n                    ml={[0,2]}\n                    size={'1.4em'}\n                    align={'center'}\n                    color={'copyColor'}\n                    name={'Brightness2'}\n                  />\n                  <Flex\n                    px={'0.2em'}\n                    width={'3.4em'}\n                    height={'1.6em'}\n                    alignItems={'center'}\n                    borderRadius={'1.6em'}\n                    backgroundColor={'cellText'}\n                    justifyContent={this.props.themeMode === 'light' ? 'flex-end' : 'flex-start'}\n                  >\n                    <Box\n                      width={'1.3em'}\n                      height={'1.3em'}\n                      borderRadius={'1.3em'}\n                      backgroundColor={'copyColor'}\n                    >\n                    </Box>\n                  </Flex>\n                  <Icon\n                    ml={[0,2]}\n                    size={'1.4em'}\n                    align={'center'}\n                    name={'WbSunny'}\n                    color={'copyColor'}\n                  />\n                </Flex>\n              </Link>\n              {\n                /*\n                  <Link\n                    style={{textDecoration:'none'}}\n                    onClick={ e => this.props.setThemeMode(this.props.themeMode === 'light' ? 'dark' : 'light') }\n                  >\n                    <Flex\n                      py={[2,3]}\n                      px={[2,3]}\n                      borderRadius={[0,2]}\n                      flexDirection={'row'}\n                      alignItems={'center'}\n                      backgroundColor={'transparent'}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={['column','row']}\n                        justifyContent={['center','flex-start']}\n                      >\n                        {\n                          this.props.themeMode === 'light' ? (\n                            <Icon\n                              mr={[0,3]}\n                              ml={[0,2]}\n                              mb={[1,0]}\n                              size={'1.6em'}\n                              align={'center'}\n                              color={'copyColor'}\n                              name={'Brightness2'}\n                            />\n                          ) : (\n                            <Icon\n                              mr={[0,3]}\n                              ml={[0,2]}\n                              mb={[1,0]}\n                              size={'1.6em'}\n                              name={'WbSunny'}\n                              align={'center'}\n                              color={'copyColor'}\n                            />\n                          )\n                        }\n                        <Text\n                          fontWeight={3}\n                          color={'copyColor'}\n                          textAlign={'center'}\n                          fontSize={['11px',2]}\n                          style={{\n                            whiteSpace:'nowrap'\n                          }}\n                        >\n                          {this.props.themeMode === 'light' ? 'Dark Mode' : 'Back to Light'}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Link>\n                */\n              }\n            </Flex>\n          )\n        }\n        {\n        /*\n        !this.props.isMobile  &&\n          <Box\n            width={'auto'}\n            borderTop={`1px solid ${theme.colors.divider}`}\n          >\n            <Flex\n              p={[2,3]}\n              style={{\n                cursor:'pointer'\n              }}\n              borderRadius={[0,2]}\n              flexDirection={'row'}\n              alignItems={'center'}\n              onClick={ e => this.setBuyModalOpened(true) }\n            >\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={['column','row']}\n                justifyContent={['center','flex-start']}\n              >\n                <Icon\n                  mr={[0,3]}\n                  ml={[0,2]}\n                  mb={[1,0]}\n                  size={'1.6em'}\n                  align={'center'}\n                  color={'copyColor'}\n                  name={'AddCircleOutline'}\n                />\n                <Text\n                  fontWeight={3}\n                  fontSize={[0,2]}\n                  color={'copyColor'}\n                  textAlign={'center'}\n                  style={{\n                    whiteSpace:'nowrap'\n                  }}\n                >\n                  Add Funds\n                </Text>\n              </Flex>\n            </Flex>\n          </Box>\n        <BuyModal\n          {...this.props}\n          isOpen={this.state.buyModalOpened}\n          closeModal={ e => this.setBuyModalOpened(false) }\n        />\n        */\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default DashboardMenu;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass TooltipModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            title={this.props.title}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n                dangerouslySetInnerHTML={{ __html: this.props.content }}\n              >\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                GOT IT\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TooltipModal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newLink\":\"CryptoInput_newLink__35W_s\",\"newPill\":\"CryptoInput_newPill__2Q8cA\",\"ethInput\":\"CryptoInput_ethInput__3j2LJ\",\"ethInputDark\":\"CryptoInput_ethInputDark__R8OoA\",\"mainInput\":\"CryptoInput_mainInput__1zffg\",\"button\":\"CryptoInput_button__1N9EQ\",\"gradientButton\":\"CryptoInput_gradientButton__2kh5r\",\"input\":\"CryptoInput_input__3X3pI\",\"newPillContainerAnim\":\"CryptoInput_newPillContainerAnim__RvOCw\"};","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Notifications.module.scss';\nimport { Flex, Icon, Box, Text, Image } from \"rimble-ui\";\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Notifications extends Component {\n\n  state = {\n    tabOpened:false,\n    notifications:[],\n    mouseOverBell:false,\n    unreadNotifications:0,\n    lastOpenTimestamp:null,\n    mouseOverNotifications:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadNotifications();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const clickEventChanged = prevProps.clickEvent !== this.props.clickEvent;\n    if (clickEventChanged && this.props.clickEvent && !this.state.mouseOverNotifications && !this.state.mouseOverBell && this.state.tabOpened){\n      this.setState({\n        tabOpened:false\n      });\n    }\n\n    const tabOpenedChanged = prevState.tabOpened !== this.state.tabOpened;\n    if (tabOpenedChanged && this.state.tabOpened && this.state.notifications.length>0){\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Notifications',\n        eventAction: 'open_tab',\n        eventLabel: ''\n      });\n\n      this.updateLastOpenTimestamp();\n    }\n\n    const notificationsChanged = JSON.stringify(prevState.notifications) !== JSON.stringify(this.state.notifications);\n    const lastOpenTimestampChanged = prevState.lastOpenTimestamp !== this.state.lastOpenTimestamp;\n    if (lastOpenTimestampChanged || notificationsChanged){\n      const unreadNotifications = this.state.lastOpenTimestamp ? this.state.notifications.filter( n => n.timestamp>this.state.lastOpenTimestamp ).length  : this.state.notifications.length;\n      this.setState({\n        unreadNotifications\n      });\n    }\n  }\n\n  updateLastOpenTimestamp(){\n    const lastOpenTimestamp = Date.now();\n    \n    // Set Notification params in localStorage\n    const notificationsParams = this.functionsUtil.getStoredItem('notificationsParams',true,{});\n    notificationsParams.lastOpenTimestamp = lastOpenTimestamp;\n    this.functionsUtil.setLocalStorage('notificationsParams',notificationsParams,true);\n\n    this.setState({\n      lastOpenTimestamp\n    });\n  }\n\n  async loadNotifications(){\n\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const isMainnet = requiredNetwork === 1;\n\n    // Get stored lastOpenTimestamp for notifications\n    const notificationsParams = this.functionsUtil.getStoredItem('notificationsParams',true,{});\n    const lastOpenTimestamp = notificationsParams.lastOpenTimestamp || null;\n\n    const blockNumber = this.functionsUtil.BNify(await this.functionsUtil.getBlockNumber());\n    const blocksPerWeek = this.functionsUtil.BNify(this.functionsUtil.getGlobalConfig(['network','blocksPerYear'])).div(52.1429);\n    const oneWeekAgoBlock = parseInt(blockNumber.minus(blocksPerWeek));\n\n    // Get active snapshot proposals\n    const [\n      latestFeed,\n      activeSnapshotProposals,\n      governanceProposals,\n      batchedDeposits,\n    ] = await Promise.all([\n      this.functionsUtil.getSubstackLatestFeed(),\n      this.functionsUtil.getSnapshotProposals(true),\n      (isMainnet && !this.props.isMobile) ? this.governanceUtil.getProposals(null,'Active',oneWeekAgoBlock) : [],\n      [],// (isMainnet && !this.props.isMobile) ? this.functionsUtil.getBatchedDeposits(this.props.account,'executed') : []\n    ]);\n\n    let notifications = this.functionsUtil.getGlobalConfig(['notifications']).filter( n => (n.enabled && n.start<=currTime && n.end>currTime) );\n\n    // Show latest Substack for 1 week\n    if (latestFeed){\n      const latestFeedDate = this.functionsUtil.strToMoment(latestFeed.isoDate);\n      if (latestFeedDate.isAfter(this.functionsUtil.strToMoment().subtract(7,'d'))){\n        notifications.push(\n          {\n            link:latestFeed.link,\n            image:'/images/substack.png',\n            timestamp:latestFeedDate._d.getTime(),\n            title:this.functionsUtil.htmlDecode(latestFeed.title),\n            text:this.functionsUtil.htmlDecode(latestFeed.content),\n            date:latestFeedDate.utc().format('MMM DD, YYYY HH:mm UTC'),\n          }\n        );\n      }\n    }\n\n    const currTime = Date.now();\n\n    // Add snapshot proposals\n    const snapshotProposalBaseUrl = this.functionsUtil.getGlobalConfig(['network','providers','snapshot','urls','proposals']);\n\n    if (activeSnapshotProposals){\n      activeSnapshotProposals.forEach( p => {\n          const text = this.functionsUtil.htmlDecode(p.msg.payload.body.replace(/^[#]*/,''));\n          // const text = p.msg.payload.name.replace(/^[#]*/,'');\n          notifications.push({\n            text,\n            image:'/images/snapshot.png',\n            timestamp:p.msg.payload.start*1000,\n            link:snapshotProposalBaseUrl+p.authorIpfsHash,\n            title:this.functionsUtil.htmlDecode(p.msg.payload.name),\n            date:this.functionsUtil.strToMoment(p.msg.payload.start*1000).utc().format('MMM DD, YYYY HH:mm UTC'),\n          });\n      });\n    }\n\n    // Add governance proposals\n    if (governanceProposals){\n      const governanceProposalUrl = this.functionsUtil.getGlobalConfig(['governance','baseRoute'])+'/proposals/';\n      governanceProposals.forEach( p => {\n        notifications.push(\n          {\n            text:p.title,\n            iconProps:{\n              color:'#00acff'\n            },\n            icon:'LightbulbOutline',\n            timestamp:p.timestamp*1000,\n            title:'Governance Proposal',\n            hash:governanceProposalUrl+p.id,\n            date:this.functionsUtil.strToMoment(p.timestamp*1000).utc().format('MMM DD, YYYY HH:mm UTC'),\n          }\n        );\n      });\n    }\n\n    // Add Executed Batch Deposits\n    if (batchedDeposits){\n      const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n      const batchDepositBaseUrl = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+`/tools/${batchDepositConfig.route}/`;\n      Object.keys(batchedDeposits).forEach( batchToken => {\n        const batchInfo = batchedDeposits[batchToken];\n        const timestamp = batchInfo.lastExecution.timeStamp*1000;\n        const text = `You can claim ${batchInfo.batchRedeems.toFixed(4)} ${batchToken}`;\n        notifications.push({\n          text,\n          timestamp,\n          icon:'DoneAll',\n          title:'Batch Deposit Executed',\n          hash:batchDepositBaseUrl+batchToken,\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          date:this.functionsUtil.strToMoment(timestamp).utc().format('MMM DD, YYYY HH:mm UTC')\n        });\n      });\n    }\n\n    notifications = notifications.sort((a,b) => (a.timestamp < b.timestamp ? 1 : -1));\n\n    this.setState({\n      notifications,\n      lastOpenTimestamp\n    });\n  }\n\n  setMouseOverBell(mouseOverBell){\n    this.setState({\n      mouseOverBell\n    });\n  }\n\n  setMouseOverNotifications(mouseOverNotifications){\n    this.setState({\n      mouseOverNotifications\n    });\n  }\n\n  toggleTab(){\n    this.setState((prevState) => ({\n      tabOpened:!prevState.tabOpened\n    }));\n  }\n\n  openNotification(notification){\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Notifications',\n      eventAction: 'open_notification',\n      eventLabel: notification.link || notification.hash\n    });\n\n    if (notification.link){\n      return this.functionsUtil.openWindow(notification.link);\n    } else if (notification.hash) {\n      return window.location.hash = notification.hash;\n    }\n\n    return false;\n  }\n\n  render() {\n    const hasUnreadNotifications = this.state.unreadNotifications>0;\n    const iconColor = hasUnreadNotifications ? '#ffdc00' : 'cellText';\n    return (\n      <Flex\n        zIndex={999}\n        position={'relative'}\n        {...this.props.flexProps}\n      >\n        <Box\n          width={1}\n          position={'relative'}\n          onMouseOut={(e) => this.setMouseOverBell(false)}\n          onMouseOver={(e) => this.setMouseOverBell(true)}\n        >\n          <Icon\n            size={'2.4em'}\n            color={iconColor}\n            name={'Notifications'}\n            onClick={this.toggleTab.bind(this)}\n            className={[styles.bell,(hasUnreadNotifications ? styles.ring : null),(this.state.tabOpened || this.state.notifications.length>0 ? styles.active : null)]}\n          />\n          {\n            hasUnreadNotifications && \n              <Box\n                className={styles.counter}\n              >\n                {this.state.notifications.length}\n              </Box>\n          }\n        </Box>\n        {\n          this.state.tabOpened &&\n            <DashboardCard\n              cardProps={{\n                style:{\n                  right:0,\n                  maxHeight:'21em',\n                  overflow:'scroll',\n                  position:'absolute',\n                  top:this.props.isMobile ? '2.8em' : '3em',\n                },\n                minWidth:['91vw','22em'],\n                onMouseOut:(e) => this.setMouseOverNotifications(false),\n                onMouseOver:(e) => this.setMouseOverNotifications(true),\n              }}\n            >\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n              {\n                this.state.notifications.length>0 ?\n                  this.state.notifications.map( (n,index) => (\n                    <ExtLink\n                      style={{\n                        textDecoration:'none'\n                      }}\n                      key={`notification_${index}`}\n                      onClick={ e => this.openNotification(n) }\n                    >\n                      <Flex\n                        py={2}\n                        px={1}\n                        flexDirection={'row'}\n                        className={[styles.notification,this.props.themeMode === 'dark' ? styles.dark : null]}\n                        borderBottom={index<this.state.notifications.length-1 ? `1px solid ${this.props.theme.colors.divider}` : null}\n                      >\n                        <Flex\n                          minWidth={'2em'}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          {\n                            n.icon ? (\n                              <Icon\n                                name={n.icon}\n                                size={'1.6em'}\n                                color={'copyColor'}\n                                {...n.iconProps}\n                              />\n                            ) : n.image && (\n                              <Image\n                                src={n.image}\n                                width={'1.6em'}\n                                height={'1.6em'}\n                              />\n                            )\n                          }\n                        </Flex>\n                        <Flex\n                          ml={1}\n                          overflow={'hidden'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={1}\n                            lineHeight={1.3}\n                            color={'primary'}\n                            style={{\n                              overflow:'hidden',\n                              whiteSpace:'nowrap',\n                              textOverflow:'ellipsis'\n                            }}\n                          >\n                            {n.title}\n                          </Text>\n                          <Text\n                            fontSize={1}\n                            lineHeight={1.3}\n                            color={'copyColor'}\n                            style={{\n                              overflow:'hidden',\n                              whiteSpace:'nowrap',\n                              textOverflow:'ellipsis'\n                            }}\n                          >\n                            {n.text}\n                          </Text>\n                          <Text\n                            fontSize={0}\n                            lineHeight={1.3}\n                            color={'cellText'}\n                          >\n                            {n.date}\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </ExtLink>\n                  ))\n                : (\n                  <Text\n                    py={2}\n                    textAlign={'center'}\n                  >\n                    There are no notifications.\n                  </Text>\n                )\n              }\n              </Flex>\n            </DashboardCard>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Notifications;\n","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport AssetField from '../../AssetField/AssetField.js';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport { Heading, Modal, Flex, EthAddress } from \"rimble-ui\";\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\nimport styles from '../../CryptoInput/CryptoInput.module.scss';\nimport CardIconButton from '../../CardIconButton/CardIconButton';\n\nclass AccountModal extends React.Component {\n\n  state = {\n    logout: false,\n    balances: null\n  }\n\n  loadBalances = async () => {\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || !this.props.account || this.state.balances !== null){\n      return false;\n    }\n\n    const balances = [];\n    const allTokens = Object.keys(this.props.availableStrategies.best);\n\n    allTokens.forEach( baseToken => {\n      const tokens = [];\n      tokens.push(baseToken);\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const strategyToken = this.props.availableStrategies[strategy][baseToken];\n        if (strategyToken){\n          tokens.push(strategyToken.idle.token);\n        }\n      });\n\n      balances.push(tokens);\n    });\n\n    this.setState({\n      balances\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n    this.loadBalances();\n  }\n\n  componentDidUpdate(prevProps) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.acccount !== this.props.account;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && this.props.availableStrategies;\n    if (availableStrategiesChanged || accountChanged || contractsInitialized){\n      this.loadBalances();\n    }\n  }\n\n  setConnector = async (connectorName) => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Connect',\n      eventAction: 'logout'\n    });\n\n    if (typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.setConnector(connectorName);\n  }\n\n  async logout(){\n    this.setState({\n      logout:true\n    });\n\n    this.props.logout();\n    await this.setConnector('Infura');\n    // this.props.closeModal();\n  }\n\n  goToSection(section){\n    this.props.goToSection(section);\n    this.props.closeModal();\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n\n    if (this.props.account){\n\n      const rows = (Object.keys(this.props.availableStrategies).length+1);\n      const renderBalances = this.state.balances && this.state.balances.map( (tokens,i) => {\n        return (\n          <Flex\n            mt={2}\n            width={1}\n            boxShadow={0}\n            key={'balance_'+i}\n            alignItems={'center'}\n            flexDirection={'row'}\n            >\n              {\n                tokens.map( (token,tokenIndex) => (\n                  <Flex\n                    width={1/rows}\n                    flexDirection={'row'}\n                    key={'balance_token_'+token}\n                    justifyContent={'flex-start'}\n                  >\n                    <AssetField\n                      token={token}\n                      tokenConfig={{\n                        token:token\n                        ,...this.functionsUtil.getGlobalConfig(['stats','tokens',token])\n                      }}\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mr:[1,2],\n                          ml:[1,4],\n                          width:['1.4em','2em'],\n                          height:['1.4em','2em']\n                        }\n                      }}\n                    />\n                    <AssetField\n                      {...this.props}\n                      token={token}\n                      tokenConfig={{\n                        token:token\n                      }}\n                      fieldInfo={{\n                        name:'tokenBalance',\n                        props:{\n                          fontSize:[0,2],\n                          fontWeight:500,\n                          color:'cellText'\n                        }\n                      }}\n                    />\n                  </Flex>\n                ) )\n              }\n          </Flex>\n        );\n      });\n\n      const showTools = ['addFunds','tokenSwap'];\n\n      return (\n        <Modal isOpen={this.props.isOpen}>\n          <ModalCard closeFunc={this.props.closeModal}>\n            <ModalCard.Header title={'Account overview'}></ModalCard.Header>\n            <ModalCard.Body>\n              <Flex\n                alignItems={'center'}\n                width={[\"auto\", \"40em\"]}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  width={1}\n                  mb={[2,3]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  maxWidth={['100%','30em']}\n                  justifyContent={'stretch'}\n                >\n                  <EthAddress\n                    width={1}\n                    address={this.props.account}\n                    className={ this.props.themeMode === 'light' ? styles.ethInput : styles.ethInputDark }\n                  />\n                </Flex>\n                <Flex\n                  width={1}\n                  mb={[2,3]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  maxWidth={['100%','30em']}\n                >\n                  <Heading.h4\n                    color={'copyColor'}\n                    textAlign={'center'}\n                  >\n                    Balances:\n                  </Heading.h4>\n                  { renderBalances }\n                </Flex>\n                {\n                  !viewOnly && (\n                    <Flex\n                      width={1}\n                      mb={[2,3]}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Heading.h4\n                        mb={2}\n                        color={'copyColor'}\n                        textAlign={'center'}\n                      >\n                        Tools:\n                      </Heading.h4>\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        justifyContent={'center'}\n                        flexDirection={['column','row']}\n                      >\n                        {\n                          showTools.map( toolName => {\n                            const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                            return (\n                              <CardIconButton\n                                {...this.props}\n                                key={`tool_${toolName}`}\n                                cardProps={{\n                                  mx:[0,2],\n                                  my:[2,0],\n                                  width:'auto',\n                                  minWidth:['50%','auto']\n                                }}\n                                icon={toolConfig.icon}\n                                text={toolConfig.label}\n                                handleClick={ e => this.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            )\n                          })\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            </ModalCard.Body>\n\n            <ModalCard.Footer>\n              <ButtonLoader\n                buttonText={'Logout wallet'}\n                isLoading={this.state.logout}\n                handleClick={ async () => { await this.logout() } }\n                buttonProps={{className:styles.gradientButton,borderRadius:'2rem',mt:[4,8],minWidth:['95px','145px'],size:['auto','medium']}}\n              >\n              </ButtonLoader>\n            </ModalCard.Footer>\n          </ModalCard>\n        </Modal>\n      );\n    }\n    return null;\n  }\n}\n\nexport default AccountModal;\n","import React, { Component } from 'react';\nimport styles from './MenuAccount.module.scss';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Icon, Image, Link, Text } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport Notifications from '../Notifications/Notifications';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport AccountModal from \"../utilities/components/AccountModal\";\n\nclass MenuAccount extends Component {\n\n  state = {\n    isModalOpen:null,\n    idleTokenBalance:null\n  };\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadIdleTokenBalance();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.setState({\n        isModalOpen:null\n      },() => {\n        this.loadIdleTokenBalance();\n      });\n    }\n  }\n\n  async loadIdleTokenBalance(){\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    if (idleGovTokenEnabled){\n      let idleTokenBalance = this.functionsUtil.BNify(0);\n      const [\n        balance,\n        unclaimed\n      ] = await Promise.all([\n        this.idleGovToken.getBalance(this.props.account),\n        this.idleGovToken.getUnclaimedTokens(this.props.account)\n      ]);\n\n      if (balance && unclaimed){\n        idleTokenBalance = this.functionsUtil.BNify(balance).plus(unclaimed);\n      }\n\n      return this.setState({\n        idleTokenBalance\n      });\n    }\n    return null;\n  }\n\n  toggleModal = (modalName) => {\n    this.setState(state => ({...state, isModalOpen: (state.isModalOpen===modalName ? null : modalName) }));\n  }\n\n  render() {\n    const walletProvider = this.functionsUtil.getStoredItem('walletProvider',false,null);\n    const connectorInfo = walletProvider ? this.functionsUtil.getGlobalConfig(['connectors',walletProvider.toLowerCase()]) : null;\n    const walletIcon = connectorInfo && connectorInfo.icon ? connectorInfo.icon : walletProvider ? `${walletProvider.toLowerCase()}.svg` : null;\n\n    const governanceRoute = this.functionsUtil.getGlobalConfig(['governance','baseRoute']);\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const dashboardRoute = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+'/'+Object.keys(this.props.availableStrategies)[0];\n\n    return (\n      this.props.account ? (\n        <Flex\n          width={1}\n          flexDirection={['column','row']}\n          alignItems={['flex-start','center']}\n        >\n          <Flex\n            mb={[2,0]}\n            flexDirection={'row'}\n            alignItems={'center'}\n            width={[1,'fit-content']}\n            justifyContent={'space-between'}\n          >\n            <DashboardCard\n              {...this.props}\n              cardProps={{\n                py:1,\n                px:[1,2],\n                mr:[2,0],\n                display:'flex',\n                width:[1,'auto']\n              }}\n              isInteractive={true}\n              handleClick={e => this.toggleModal('account')}\n            >\n              <Flex\n                p={0}\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={['center','flex-start']}\n              >\n                {\n                  connectorInfo ? (\n                    <Image\n                      mr={[1,2]}\n                      width={'2em'}\n                      height={'2em'}\n                      display={'inline-flex'}\n                      alt={walletProvider.toLowerCase()}\n                      src={`images/connectors/${walletIcon}`}\n                    />\n                  ) : (\n                    <Icon\n                      mr={[1,2]}\n                      size={'2em'}\n                      color={'copyColor'}\n                      name={'AccountCircle'}\n                    />\n                  )\n                }\n                <ShortHash\n                  fontSize={2}\n                  fontWeight={3}\n                  {...this.props}\n                  color={'copyColor'}\n                  hash={this.props.account}\n                />\n              </Flex>\n            </DashboardCard>\n            {\n              this.props.isMobile &&\n                <Notifications\n                  {...this.props}\n                />\n            }\n          </Flex>\n          <Flex\n            ml={[0,3]}\n            style={{\n              flex:'1 1 auto'\n            }}\n            width={[1,'auto']}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={this.state.idleTokenBalance ? 'space-between' : 'flex-end'}\n          >\n            {\n              this.state.idleTokenBalance && \n                <Link\n                  style={{\n                    textDecoration:'none'\n                  }}\n                  px={2}\n                  className={styles.balanceButton}\n                  onClick={ e => this.props.setGovModal(true) }\n                >\n                  <Flex\n                    alignItems={'center'}\n                    height={['38px','42px']}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={1}\n                      width={'1.7em'}\n                      height={'1.7em'}\n                      display={'inline-flex'}\n                      src={`images/tokens/IDLE.png`}\n                    />\n                    <Text\n                      color={'white'}\n                      fontSize={[1,2]}\n                      fontWeight={500}\n                    >\n                      {this.state.idleTokenBalance.toFixed(2)} IDLE\n                    </Text>\n                  </Flex>\n                </Link>\n            }\n            <Flex\n              width={'auto'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n            >\n              {\n                governanceEnabled && this.props.isDashboard ? (\n                  <RoundButton\n                    buttonProps={{\n                      mainColor:'redeem',\n                      style:{\n                        width:'auto',\n                        height:this.props.isMobile ? '38px' : '45px'\n                      },\n                      size:this.props.isMobile ? 'small' : 'medium'\n                    }}\n                    handleClick={ (e) => { this.props.goToSection(governanceRoute,false) } }\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        mr={[1,2]}\n                        size={'1.6em'}\n                        color={'white'}\n                        name={'ExitToApp'}\n                      />\n                      <Text\n                        fontWeight={3}\n                        color={'white'}\n                        fontSize={[2,3]}\n                      >\n                        Governance\n                      </Text>\n                    </Flex>\n                  </RoundButton>\n                ) : this.props.isGovernance && (\n                  <RoundButton\n                    buttonProps={{\n                      mainColor:'redeem',\n                      style:{\n                        width:'auto',\n                        height:this.props.isMobile ? '38px' : '45px'\n                      },\n                      size:this.props.isMobile ? 'small' : 'medium'\n                    }}\n                    handleClick={ (e) => { this.props.goToSection(dashboardRoute,false) } }\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        mr={[1,2]}\n                        size={'1.6em'}\n                        color={'white'}\n                        name={'ExitToApp'}\n                      />\n                      <Text\n                        fontWeight={3}\n                        color={'white'}\n                        fontSize={[2,3]}\n                      >\n                        Dashboard\n                      </Text>\n                    </Flex>\n                  </RoundButton>\n                )\n              }\n              {\n                !this.props.isMobile &&\n                  <Notifications\n                    {...this.props}\n                    flexProps={{\n                      ml:2\n                    }}\n                  />\n              }\n            </Flex>\n          </Flex>\n          <AccountModal\n            {...this.props}\n            isOpen={this.state.isModalOpen==='account'}\n            closeModal={e => this.toggleModal('account') }\n          />\n        </Flex>\n      ) : (\n        <Flex\n          width={1}\n          justifyContent={'flex-start'}\n        >\n          <CardIconButton\n            icon={'Power'}\n            {...this.props}\n            text={'Connect'}\n            handleClick={this.props.connectAndValidateAccount}\n          />\n        </Flex>\n      )\n    );\n  }\n}\n\nexport default MenuAccount;\n","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Text, Modal, Flex, Image, Link, Icon } from \"rimble-ui\";\n\nclass GovModal extends React.Component {\n\n  state = {\n    total:null,\n    balance:null,\n    txStatus:null,\n    unclaimed:null,\n    processing: {\n      txHash:null,\n      loading:false\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  loadTokenInfo = async () => {\n    const [\n      balance,\n      unclaimed\n    ] = await Promise.all([\n      this.idleGovToken.getBalance(this.props.account),\n      this.idleGovToken.getUnclaimedTokens(this.props.account)\n    ]);\n\n    let total = this.functionsUtil.BNify(0);\n    if (balance && unclaimed){\n      total = this.functionsUtil.BNify(balance).plus(unclaimed);\n    }\n\n    this.setState({\n      total,\n      balance,\n      unclaimed\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n    this.loadTokenInfo();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    // const txStatusChanged = prevState.txStatus !== this.state.txStatus;\n    // if (txStatusChanged && this.state.txStatus === 'success'){\n    //   this.loadTokenInfo();\n    // }\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      txStatus:null,\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  claim = async () => {\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'claim',\n        eventCategory: 'Governance',\n        eventLabel: tx.status ? tx.status : error\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx.status ? tx.status : 'error',\n      };\n\n      if (tx.status === 'success'){\n        newState.balance = this.state.unclaimed;\n        newState.unclaimed = this.functionsUtil.BNify(0);\n\n        if (typeof this.props.claimCallback === 'function'){\n          this.props.claimCallback();\n        }\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.idleGovToken.claimRewards(callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  closeModal = async (action) => {\n    this.props.closeModal();\n  }\n\n  render() {\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          bgLayer={true}\n          mainColor={'white'}\n          maxWidth={['auto','420px']}\n          closeFunc={this.props.closeModal}\n          background={'radial-gradient(76.02% 75.41% at 1.84% 0%, rgb(162, 196, 246) 0%, rgb(10, 79, 176) 100%)'}\n        >\n          <ModalCard.Header\n            pt={3}\n            titleProps={{\n              color:'white'\n            }}\n            title={'Your IDLE balance'}\n            borderBottom={'1px solid rgba(255,255,255,0.2)'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body\n            px={3}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Image\n                mt={2}\n                width={'3em'}\n                height={'3em'}\n                src={'images/tokens/IDLE.png'}\n              />\n              <Text\n                mt={2}\n                fontSize={7}\n                color={'white'}\n                fontWeight={500}\n              >\n                {this.state.total ? this.state.total.toFixed(2) : '-'}\n              </Text>\n              <Text\n                mb={2}\n                fontSize={3}\n                color={'white'}\n                fontWeight={400}\n                textAlign={'center'}\n              >\n                {\n                  this.state.unclaimed && this.state.unclaimed.gt(0) ? 'You can now claim your IDLE tokens from the Early LPs Program!' : 'You don\\'t have any IDLE to claim from the Early LPs Program'\n                }\n              </Text>\n              <Flex\n                pb={2}\n                mb={3}\n                width={1}\n                flexDirection={'column'}\n                borderBottom={'1px solid rgba(255,255,255,0.2)'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    Balance:\n                  </Text>\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    {this.state.balance ? this.state.balance.toFixed(4) : '-'}\n                  </Text>\n                </Flex>\n                <Flex\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    Unclaimed:\n                  </Text>\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    {this.state.unclaimed ? this.state.unclaimed.toFixed(4) : '-'}\n                  </Text>\n                </Flex>\n                <Link\n                  href={`/#${this.functionsUtil.getGlobalConfig(['governance','baseRoute'])}`}\n                >\n                  <Flex\n                    zIndex={10}\n                    position={'relative'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontSize={2}\n                      color={'white'}\n                      fontWeight={400}\n                    >\n                      Go to governance\n                    </Text>\n                    <Icon\n                      ml={1}\n                      size={'1em'}\n                      color={'white'}\n                      name={\"OpenInNew\"}\n                    />\n                  </Flex>\n                </Link>\n              </Flex>\n              {\n                <Flex\n                  mb={3}\n                  width={1}\n                  zIndex={10}\n                  position={'relative'}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                >\n                  {\n                    this.state.unclaimed && this.state.unclaimed.gt(0) ? \n                      // Sending transaction\n                      this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          textColor={'white'}\n                          cancelTextColor={'moon-gray'}\n                          cancelTextHoverColor={'white'}\n                          waitText={`Claim estimated in`}\n                          hash={this.state.processing.txHash}\n                          endMessage={`Finalizing Claim request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            color:'blue',\n                            width:[1,'45%'],\n                            mainColor:'white',\n                            contrastColor:'blue',\n                            disabled:!this.state.unclaimed || this.state.unclaimed.lte(0)\n                          }}\n                          handleClick={this.claim.bind(this)}\n                        >\n                          Claim\n                        </RoundButton>\n                      )\n                    : (\n                      <RoundButton\n                        buttonProps={{\n                          color:'blue',\n                          width:[1,'45%'],\n                          mainColor:'white',\n                          contrastColor:'blue',\n                        }}\n                        handleClick={this.closeModal.bind(this)}\n                      >\n                        Close\n                      </RoundButton>\n                    )\n                  }\n                </Flex>\n              }\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default GovModal;","import React, { Component } from 'react';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport { Flex, Text, Button, Icon, Checkbox, Input } from \"rimble-ui\";\n\nclass DelegateVesting extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    newDelegate:'',\n    delegatee:null,\n    vestingAmount:null,\n    currentDelegate:null,\n    delegateAddressValid:false,\n    delegateDifferentWallet:false,\n    vestingContractDelegated:false\n  };\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async loadData(){\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    if (idleGovTokenEnabled && this.props.account){\n      const [\n        delegatesChanges,\n        currentDelegate,\n        vestingContract,\n      ] = await Promise.all([\n        this.governanceUtil.getDelegatesChanges(),\n        this.governanceUtil.getCurrentDelegate(this.props.account),\n        this.governanceUtil.getVestingContract(this.props.account)\n      ]);\n\n      // Init flags\n      let delegatee = null;\n      let vestingAmount = null;\n      let vestingContractDelegated = false;\n\n      if (vestingContract){\n        // Take vesting amount\n        vestingAmount = await this.governanceUtil.getVestingAmount(this.props.account);\n\n        // Check Vesting Contract Delegated\n        const lastDelegateTx = delegatesChanges.filter( d => (d.returnValues.delegator.toLowerCase() === vestingContract.toLowerCase() ) ).pop();\n        delegatee = lastDelegateTx ? lastDelegateTx.returnValues.toDelegate : false;\n        vestingContractDelegated = delegatee && delegatee !== '0x0000000000000000000000000000000000000000';\n      }\n\n      return this.setState({\n        delegatee,\n        vestingAmount,\n        currentDelegate,\n        vestingContractDelegated\n      });\n    }\n    return null;\n  }\n\n  /*\n  async delegateTokens(){\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Governance',\n        eventAction: 'delegateTokens',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      };\n\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        newState.idleTokenDelegated = true;\n        this.loadData();\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.setDelegate(this.props.account,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n  */\n\n  async delegateVesting(revoke=false){\n\n    let delegate = this.state.delegateDifferentWallet ? this.state.newDelegate : this.props.account;\n    if (revoke){\n      delegate = '0x'+'0'.repeat(40);\n    }\n\n    const delegateValid = this.functionsUtil.checkAddress(delegate);\n    if (!delegateValid){\n      return false;\n    }\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Governance',\n        eventAction: 'delegateVesting',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      };\n\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        newState.delegatee=delegate;\n        newState.delegateDifferentWallet=false;\n        newState.vestingContractDelegated=!revoke;\n        this.loadData();\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.delegateVesting(this.props.account,delegate,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  changeDelegate(e){\n    const newDelegate = e.target.value;\n    const delegateAddressValid = this.functionsUtil.checkAddress(newDelegate);\n    this.setState({\n      newDelegate,\n      delegateAddressValid\n    });\n  }\n\n  setDelegateDifferentWallet(delegateDifferentWallet){\n    this.setState({\n      delegateDifferentWallet\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  render() {\n    return this.state.vestingAmount ? (\n      <Flex\n        p={2}\n        mt={3}\n        width={1}\n        border={2}\n        borderRadius={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'cardBgHover'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Text\n            mb={1}\n            fontSize={3}\n            fontWeight={500}\n            color={'flashColor'}\n            textAlign={'center'}\n          >\n            You have {this.state.vestingAmount.div(1e18).toFixed(5)} {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} in the Vesting Contract\n          </Text>\n          {\n            (this.state.vestingContractDelegated && this.state.delegatee && !this.state.delegateDifferentWallet) ? (\n              <Text\n                mb={1}\n                fontWeight={500}\n                color={'flashColor'}\n                fontSize={'15px'}\n                textAlign={'center'}\n              >\n                Currently your votes are delegated to {this.state.delegatee}\n              </Text>\n            ) : (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text\n                  mb={1}\n                  fontWeight={500}\n                  fontSize={'15px'}\n                  color={'flashColor'}\n                  textAlign={'center'}\n                >\n                  {\n                    this.state.delegateDifferentWallet ? 'Follow the next steps to delegate your tokens:' : 'Press the button below to delegate the votes in the vesting contract to yourself:'\n                  }\n                </Text>\n                {\n                  this.state.delegateDifferentWallet && (\n                    <Flex\n                      mb={2}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={ this.state.delegateAddressValid ? 'CheckBox' : 'LooksOne'}\n                          color={ this.state.delegateAddressValid ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                        />\n                        <Text\n                          ml={1}\n                          fontWeight={500}\n                          fontSize={'15px'}\n                          textAlign={'left'}\n                          color={'flashColor'}\n                        >\n                          Insert delegate address\n                        </Text>\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={'LooksTwo'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          ml={1}\n                          fontWeight={500}\n                          fontSize={'15px'}\n                          color={'flashColor'}\n                          textAlign={'left'}\n                        >\n                          Delegate Vesting\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n        {\n          this.state.delegateDifferentWallet && (\n            <Input\n              mb={2}\n              min={0}\n              type={'text'}\n              required={true}\n              borderRadius={2}\n              fontWeight={500}\n              textAlign={'center'}\n              width={['100%','30em']}\n              borderColor={'cardBorder'}\n              backgroundColor={'cardBg'}\n              boxShadow={'none !important'}\n              value={this.state.newDelegate}\n              placeholder={`Insert delegate address`}\n              onChange={this.changeDelegate.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n            />\n          )\n        }\n        {\n          this.state.processing && this.state.processing.loading ? (\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <TxProgressBar\n                {...this.props}\n                waitText={`Delegate estimated in`}\n                hash={this.state.processing.txHash}\n                endMessage={`Finalizing delegate request...`}\n                cancelTransaction={this.cancelTransaction.bind(this)}\n              />\n            </Flex>\n          ) : (this.state.vestingContractDelegated && !this.state.delegateDifferentWallet) ? (\n            <Button\n              size={'small'}\n              mainColor={'red'}\n              onClick={ e => this.delegateVesting(true) }\n            >\n              REVOKE DELEGATE\n            </Button>\n          )\n          /*\n          : !this.state.idleTokenDelegated && !this.state.delegateDifferentWallet ? (\n            <Button\n              size={'small'}\n              onClick={ e => this.delegateTokens() }\n            >\n              DELEGATE TOKENS\n            </Button>\n          )*/\n          : (!this.state.vestingContractDelegated || this.state.delegateDifferentWallet) && (\n            <Button\n              size={'small'}\n              mainColor={'blue'}\n              onClick={ e => this.delegateVesting(false) }\n              disabled={ this.state.delegateDifferentWallet && !this.state.delegateAddressValid }\n            >\n              DELEGATE VESTING\n            </Button>\n          )\n        }\n        <Checkbox\n          mt={1}\n          required={false}\n          color={'#f3f6ff'}\n          label={`Delegate to different wallet`}\n          checked={this.state.delegateDifferentWallet}\n          onChange={ e => this.setDelegateDifferentWallet(e.target.checked) }\n        />\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default DelegateVesting;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport MenuAccount from '../MenuAccount/MenuAccount';\nimport GovModal from \"../utilities/components/GovModal\";\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport { Box, Flex, Text, Icon, Button } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport DelegateVesting from '../DelegateVesting/DelegateVesting';\n\nclass DashboardHeader extends Component {\n\n  state = {\n    unclaimed:null,\n    activeNews:null,\n    vestingAmount:null,\n    govModalOpened:false\n  }\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      await this.loadData();\n    }\n  }\n\n  async loadData(){\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    if (idleGovTokenEnabled && this.props.account){\n      const unclaimed = await this.idleGovToken.getUnclaimedTokens(this.props.account);\n      this.setState({\n        unclaimed\n      });\n    }\n\n    const stakingConfig = this.functionsUtil.getGlobalConfig(['tools','stake']);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n\n    const flashNews = [\n      {\n        name:'Governance Forum',\n        icon:'LightbulbOutline',\n        text:`Do you have any idea to improve the Idle Protocol? Let's discuss it in our`,\n        link:{\n          text:`Governance Forum`,\n          url:this.functionsUtil.getGlobalConfig(['forumURL'])\n        }\n      },\n      {\n        icon:stakingConfig.icon,\n        name:stakingConfig.label,\n        text:`You can now stake your $IDLE token and take part of the fee-sharing for long-term holders.`,\n        link:{\n          text:`Stake Now`,\n          url:this.functionsUtil.getDashboardSectionUrl(`tools/${stakingConfig.route}`)\n        }\n      },\n      {\n        icon:nexusMutualConfig.icon,\n        name:nexusMutualConfig.label,\n        text:`Protect your funds against smart-contract attacks with Nexus Mutual.`,\n        link:{\n          text:`Get Covered`,\n          url:this.functionsUtil.getDashboardSectionUrl(`tools/${this.functionsUtil.getGlobalConfig(['tools','nexusMutual','route'])}`)\n        }\n      }\n    ];\n\n    const activeNews = flashNews[Math.floor(Math.random()*flashNews.length)];\n    this.setState({\n      activeNews\n    });\n\n    return null;\n  }\n\n  setConnector = async (connectorName) => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventAction: 'logout',\n      eventCategory: 'Connect'\n    });\n\n    if (typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.setConnector(connectorName);\n  }\n\n  async exit(){\n    this.props.goToSection('/',false);\n  }\n\n  setGovModal(govModalOpened){\n    this.setState({\n      govModalOpened\n    });\n  }\n\n  render() {\n    return (\n      <Box\n        mb={3}\n      >\n        <Flex\n          pb={2}\n          width={1}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n          alignItems={['flex-end','center']}\n          borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n        >\n          <MenuAccount\n            {...this.props}\n            setGovModal={this.setGovModal.bind(this)}\n          />\n        </Flex>\n        {\n          this.state.unclaimed && this.state.unclaimed.gt(0) ? (\n            <DashboardCard\n              cardProps={{\n                p:2,\n                mt:3,\n                width:1,\n              }}\n              isActive={true}\n              isInteractive={false}\n            >\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <Text\n                  fontWeight={500}\n                  fontSize={'15px'}\n                  color={'flashColor'}\n                  textAlign={'center'}\n                >\n                  IDLE Governance Token is now available, \n                  <ExtLink\n                    ml={1}\n                    fontWeight={500}\n                    color={'primary'}\n                    fontSize={'15px'}\n                    hoverColor={'primary'}\n                    href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n                  >\n                    discover more\n                  </ExtLink>! You have {this.state.unclaimed.toFixed(4)} IDLE tokens to claim.\n                </Text>\n                <Button\n                  ml={[0,2]}\n                  mt={[2,0]}\n                  size={'small'}\n                  mainColor={'blue'}\n                  onClick={ e => this.setGovModal(true) }\n                >\n                  CLAIM NOW\n                </Button>\n              </Flex>\n            </DashboardCard>\n          ) : this.props.isDashboard && this.state.activeNews && (\n            <DashboardCard\n              cardProps={{\n                p:2,\n                mt:3,\n                width:1,\n              }}\n              isActive={true}\n              isInteractive={false}\n            >\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <Icon\n                  mr={1}\n                  size={'1.2em'}\n                  color={'flashColor'}\n                  name={this.state.activeNews.icon}\n                />\n                <Text\n                  fontWeight={500}\n                  fontSize={'15px'}\n                  color={'flashColor'}\n                  textAlign={'center'}\n                >\n                  {this.state.activeNews.text}\n                </Text>\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={this.state.activeNews.link.url}\n                  onClick={ e => this.functionsUtil.sendGoogleAnalyticsEvent({\n                    eventCategory: 'UI',\n                    eventAction: 'flashNews',\n                    eventLabel: this.state.activeNews.name\n                  })}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    {this.state.activeNews.link.text}\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </Flex>\n            </DashboardCard>\n          )\n        }\n        {\n          this.props.isGovernance && \n            <DelegateVesting\n              {...this.props}\n            />\n        }\n        <GovModal\n          {...this.props}\n          isOpen={this.state.govModalOpened}\n          claimCallback={this.loadData.bind(this)}\n          closeModal={e => this.setGovModal(false) }\n        />\n      </Box>\n    );\n  }\n}\n\nexport default DashboardHeader;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balanceButton\":\"MenuAccount_balanceButton__3t7wZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bell\":\"Notifications_bell__5m9tk\",\"active\":\"Notifications_active__2Mwzv\",\"ring\":\"Notifications_ring__1ir3w\",\"counter\":\"Notifications_counter__3EbuS\",\"list\":\"Notifications_list__2pkAk\",\"notification\":\"Notifications_notification__TMlFX\",\"dark\":\"Notifications_dark__14hO4\"};"],"sourceRoot":""}