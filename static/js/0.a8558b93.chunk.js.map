{"version":3,"sources":["utilities/GovernanceUtil.js","Breadcrumb/Breadcrumb.js","RoundIconButton/RoundIconButton.js","StatsCard/StatsCard.js","DashboardMenu/DashboardMenu.js","utilities/components/TooltipModal.js","CryptoInput/CryptoInput.module.scss","Notifications/Notifications.js","utilities/components/AccountModal.js","MenuAccount/MenuAccount.js","utilities/components/GovModal.js","DelegateVesting/DelegateVesting.js","DashboardHeader/DashboardHeader.js","MenuAccount/MenuAccount.module.scss","Notifications/Notifications.module.scss"],"names":["GovernanceUtil","props","_this","this","Object","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","functionsUtil","setProps","FunctionsUtil","getTotalSupply","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","a","mark","_callee","cachedDataKey","cachedData","contractName","totalSupply","wrap","_context","prev","next","getCachedDataWithLocalStorage","BNify","isNaN","abrupt","getGlobalConfig","genericContractCall","sent","fixTokenDecimals","setCachedDataWithLocalStorage","stop","getTokensBalance","_callee2","account","balance","_args2","arguments","_context2","length","undefined","concat","getContractBalance","getVestingContract","_callee3","vestingContract","_args3","_context3","parseInt","initContract","VesterABI","delegateVesting","_callee4","delegate","callback","callbackReceipt","_args4","_context4","contractMethodSendWrapper","getVestingAmount","_callee5","vestingAmount","_args5","_context5","getCurrentDelegate","_callee6","_args6","_context6","getCurrentVotes","_callee7","votes","_args7","_context7","getVotingPeriod","_callee8","votingPeriod","_context8","getTimelockDelay","_callee9","delay","_context9","queueProposal","_ref10","_callee10","proposalId","_args10","_context10","toBN","_x","apply","executeProposal","_ref11","_callee11","_args11","_context11","_x2","proposeAndVoteFor","_ref12","_callee12","targets","values","signatures","calldatas","description","batcher","contract","txs","_context12","Batcher","web3","getContractByName","to","_address","method","methods","propose","args","castVote","_x3","_x4","_x5","_x6","_x7","_ref13","_callee13","_args13","_context13","_x8","_x9","_x10","_x11","_x12","_ref14","_callee14","support","_args14","_context14","_x13","_x14","setDelegate","_ref15","_callee15","_args15","_context15","_x15","getDelegatesChanges","_callee16","lastBlockNumber","delegationsCalls","fromBlock","delegatesContractName","blockNumber","toBlock","all_delegations","_context16","eth","getBlockNumber","Math","min","push","getContractPastEvents","Promise","all","reduce","delegations","d","getDelegatesVotesChanges","_callee17","_context17","getDelegates","_callee18","limit","_ref19","_ref20","all_votes","delegateAccounts","delegates","_args18","_context18","getVotes","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","forEach","e","_e$returnValues","returnValues","newBalance","keys","sort","b","index","rank","toFixed","vote_weight","parseFloat","proposals","filter","v","voter","toLowerCase","splice","getProposalParams","_callee19","govContractName","_ref22","_ref23","proposalThreshold","proposalMaxOperations","params","_context19","getCachedData","setCachedData","_callee20","governanceContractName","_context20","map","_e$returnValues2","getProposals","_callee22","voted_by","filter_by_state","startBlock","enumerateProposalState","proposalCount","proposalGets","proposalStateGets","_arr","_i","i","_ref26","_ref27","proposalStates","proposalQueuedEvents","proposalCreatedEvents","proposalCanceledEvents","proposalExecutedEvents","_args22","_context22","p","state","find","Array","from","n","reverse","asyncForEach","_ref28","_callee21","createdEvent","canceledEvent","executedEvent","queuedEvent","_ref29","_ref30","endBlockInfo","queuedBlockInfo","createdBlockInfo","canceledBlockInfo","executedBlockInfo","createdState","activeState","canceledState","succeededState","queuedState","executedState","endState","_createdEvent$returnV","proposalDetails","_context21","id","endBlock","getBlock","states","end_time","timestamp","start_time","trx_hash","transactionHash","s","title","split","replace","shift","join","attr","eta","actions","executed","canceled","forVotes","proposer","againstVotes","_x16","_x17","Breadcrumb","showPathMobile","react__WEBPACK_IMPORTED_MODULE_5___default","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","width","alignItems","handleClick","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","buttonProps","border","height","iconSize","iconName","text","ml","fontSize","fontWeight","color","hoverColor","onClick","isMobile","path","link","pathLink","Component","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","theme","colors","divider","key","goToSection","RoundIconButton","assign","borderRadius","mainColor","disabled","minWidth","react__WEBPACK_IMPORTED_MODULE_6___default","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","name","size","StatsCard","loadUtils","prevProps","prevState","react__WEBPACK_IMPORTED_MODULE_7___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","cardProps","minHeight","rimble_ui__WEBPACK_IMPORTED_MODULE_10__","flexDirection","justifyContent","titleMinHeight","h4","mb","textAlign","lineHeight","value","toString","valueProps","children","label","mt","labelTooltip","placement","message","DashboardMenu","buyModalOpened","setState","_this2","menu","visibleLinks","menuLink","showMobile","mobile","isDarkTheme","themeMode","isOriginUrl","checkUrlOrigin","darkModeEnabled","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","react_router_dom__WEBPACK_IMPORTED_MODULE_9__","position","src","menuIndex","LinkComponent","isExternalLink","ExtLink","RouterLink","inactiveImage","imageInactiveDark","imageInactive","my","route","href","textDecoration","py","px","selected","backgroundColor","image","mr","align","icon","bgColor","setThemeMode","TooltipModal","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","componentDidUpdate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","closeModal","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_8__","closeFunc","Header","pt","Body","dangerouslySetInnerHTML","__html","content","_RoundButton_RoundButton_js__WEBPACK_IMPORTED_MODULE_11__","React","module","exports","newLink","newPill","ethInput","ethInputDark","mainInput","button","gradientButton","input","newPillContainerAnim","Notifications","tabOpened","notifications","mouseOverBell","unreadNotifications","lastOpenTimestamp","mouseOverNotifications","governanceUtil","loadNotifications","clickEvent","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","updateLastOpenTimestamp","notificationsChanged","JSON","stringify","Date","now","notificationsParams","getStoredItem","setLocalStorage","requiredNetwork","isMainnet","blocksPerWeek","div","oneWeekAgoBlock","minus","getSubstackLatestFeed","getSnapshotProposals","latestFeed","activeSnapshotProposals","governanceProposals","batchedDeposits","enabled","start","currTime","end","latestFeedDate","strToMoment","isoDate","isAfter","subtract","_d","getTime","htmlDecode","date","utc","format","snapshotProposalBaseUrl","_this3","msg","payload","body","authorIpfsHash","governanceProposalUrl","iconProps","hash","batchDepositConfig","batchDepositBaseUrl","batchToken","batchInfo","lastExecution","timeStamp","batchRedeems","transactions","status","completed","notification","openWindow","window","location","_this4","hasUnreadNotifications","iconColor","react_default","index_es","zIndex","flexProps","onMouseOut","setMouseOverBell","onMouseOver","toggleTab","bind","className","styles","bell","ring","active","counter","DashboardCard","right","maxHeight","top","setMouseOverNotifications","openNotification","dark","borderBottom","AccountModal","logout","balances","loadBalances","regenerator_default","availableStrategies","contractsInitialized","best","baseToken","tokens","strategy","strategyToken","idle","token","setConnector","connectorName","context","accountChanged","acccount","section","viewOnly","rows","renderBalances","boxShadow","tokenIndex","AssetField","tokenConfig","objectSpread","fieldInfo","ModalCard","address","toolName","toolConfig","CardIconButton","mx","Footer","ButtonLoader","buttonText","isLoading","asyncToGenerator","MenuAccount","isModalOpen","idleTokenBalance","idleGovToken","toggleModal","modalName","getIdleGovToken","loadIdleTokenBalance","getBalance","getUnclaimedTokens","unclaimed","plus","walletProvider","connectorInfo","walletIcon","governanceRoute","governanceEnabled","dashboardRoute","display","isInteractive","alt","ShortHash","src_Notifications_Notifications","flex","balanceButton","setGovModal","isDashboard","RoundButton","isGovernance","components_AccountModal","connectAndValidateAccount","GovModal","total","txStatus","processing","txHash","loading","loadTokenInfo","_ref2","_ref3","slicedToArray","claim","tx","error","eventData","getTransactionError","newState","claimCallback","claimRewards","action","bgLayer","background","titleProps","gt","pb","TxProgressBar","textColor","cancelTextColor","cancelTextHoverColor","waitText","endMessage","cancelTransaction","contrastColor","lte","DelegateVesting","newDelegate","delegatee","currentDelegate","delegateAddressValid","delegateDifferentWallet","vestingContractDelegated","delegatesChanges","lastDelegateTx","delegator","pop","toDelegate","revoke","repeat","checkAddress","loadData","target","type","required","borderColor","placeholder","onChange","changeDelegate","checked","setDelegateDifferentWallet","DashboardHeader","govModalOpened","src_MenuAccount_MenuAccount","isActive","src_DelegateVesting_DelegateVesting","components_GovModal","list"],"mappings":"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","file":"static/js/0.a8558b93.chunk.js","sourcesContent":["import Batcher from 'web3-batched-send';\nimport FunctionsUtil from './FunctionsUtil';\nimport VesterABI from '../contracts/Vester.json';\n\n// const env = process.env;\n\nclass GovernanceUtil {\n  // Attributes\n  props = {};\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  getTotalSupply = async () => {\n\n    // Check for cached data\n    const cachedDataKey = 'getTotalSupply';\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n    let totalSupply = await this.functionsUtil.genericContractCall(contractName,'totalSupply');\n    if (totalSupply){\n      totalSupply = this.functionsUtil.fixTokenDecimals(totalSupply,18);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,totalSupply,null);\n    }\n\n    return null;\n  }\n\n  getTokensBalance = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n\n      // Check for cached data\n      const cachedDataKey = `getTokensBalance_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const balance = await this.functionsUtil.getContractBalance(contractName, account);\n      if (balance && !this.functionsUtil.BNify(balance).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,this.functionsUtil.BNify(balance));\n      }\n    }\n    return null;\n  }\n\n  getVestingContract = async (account=null) => {\n    account = account ? account : this.props.account;\n    const vestingContract = await this.functionsUtil.genericContractCall('VesterFactory','vestingContracts',[account]);\n\n    if (parseInt(vestingContract) === 0){\n      return null;\n    }\n    // Init vesting contract\n    await this.props.initContract('VestingContract',vestingContract,VesterABI);\n    return vestingContract;\n  }\n\n  delegateVesting = async (account=null,delegate=null,callback=null,callbackReceipt=null) => {\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      // await this.functionsUtil.contractMethodSendWrapper('IDLE','delegate',[delegate]);\n      return await this.functionsUtil.contractMethodSendWrapper('VestingContract','setDelegate',[delegate],callback,callbackReceipt);\n    }\n    return null;\n  }\n\n  getVestingAmount = async (account=null) => {\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      let vestingAmount = await this.functionsUtil.genericContractCall('VestingContract','vestingAmount');\n      if (vestingAmount){\n        return this.functionsUtil.BNify(vestingAmount);\n      }\n    }\n    return null;\n  }\n\n  getCurrentDelegate = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n\n      // Check for cached data\n      const cachedDataKey = `getCurrentDelegate_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const delegate = await this.functionsUtil.genericContractCall(contractName, 'delegates', [account]);\n\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delegate);\n    }\n\n    return null;\n  }\n\n  getCurrentVotes = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n      // Check for cached data\n      const cachedDataKey = `getCurrentVotes_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const votes = await this.functionsUtil.genericContractCall(contractName, 'getCurrentVotes', [account]);\n      if (votes && !this.functionsUtil.BNify(votes).isNaN() ){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,this.functionsUtil.BNify(votes));\n      }\n    }\n\n    return null;\n  }\n\n  getVotingPeriod = async () => {\n    // Check for cached data\n    const cachedDataKey = `votingPeriod`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    let votingPeriod = await this.functionsUtil.genericContractCall(contractName,'votingPeriod');\n    if (votingPeriod){\n      votingPeriod = this.functionsUtil.BNify(votingPeriod);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,votingPeriod,null);\n    }\n\n    return null;\n  }\n\n  getTimelockDelay = async () => {\n    // Check for cached data\n    const cachedDataKey = `getTimelockDelay`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    let delay = await this.functionsUtil.genericContractCall('Timelock','delay');\n    if (delay){\n      delay = this.functionsUtil.BNify(delay);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delay,null);\n    }\n\n    return null;\n  }\n\n  queueProposal = async (proposalId,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    await this.functionsUtil.contractMethodSendWrapper(contractName,'queue',[this.functionsUtil.toBN(proposalId)],callback,callbackReceipt);\n  }\n\n  executeProposal = async (proposalId,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    await this.functionsUtil.contractMethodSendWrapper(contractName,'execute',[this.functionsUtil.toBN(proposalId)],callback,callbackReceipt);\n  }\n\n  proposeAndVoteFor = async (targets, values, signatures, calldatas, description) => {\n    const batcher = new Batcher(this.props.web3,'0x741A4dCaD4f72B83bE9103a383911d78362611cf');\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    const contract = this.functionsUtil.getContractByName(contractName);\n\n    const txs = [\n      {\n        to:contract._address,\n        method:contract.methods.propose,\n        args:[targets, values, signatures, calldatas, description]\n      },\n      {\n        to:contract._address,\n        method:contract.methods.castVote,\n        args:[this.functionsUtil.BNify(3), true],\n      }\n    ];\n\n    batcher(txs);\n  }\n\n  propose = async (targets, values, signatures, calldatas, description, callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    return await this.props.contractMethodSendWrapper(contractName, 'propose', [targets, values, signatures, calldatas, description], null, callback, callbackReceipt);\n  }\n\n  castVote = async (proposalId,support,callback=null,callbackReceipt=null) => {\n    proposalId = this.functionsUtil.toBN(proposalId);\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    return await this.props.contractMethodSendWrapper(contractName, 'castVote', [proposalId, support], null, callback, callbackReceipt);\n  }\n\n  setDelegate = async (delegate,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n    return await this.props.contractMethodSendWrapper(contractName, 'delegate', [delegate], null, callback, callbackReceipt);\n  }\n\n  getDelegatesChanges = async () => {\n\n    const lastBlockNumber = await this.props.web3.eth.getBlockNumber();\n\n    const delegationsCalls = [];\n    const blocksPerCall = 100000;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const delegatesContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n\n    for (var blockNumber = fromBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      const toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      delegationsCalls.push(this.functionsUtil.getContractPastEvents(delegatesContractName,'DelegateChanged', {fromBlock: blockNumber, toBlock}))\n    }\n\n    const all_delegations = await Promise.all(delegationsCalls);\n\n    return all_delegations.reduce( (delegations,d) => {\n      delegations = delegations.concat(d);\n      return delegations;\n    },[]);\n  }\n\n  getDelegatesVotesChanges = async () => {\n\n    const lastBlockNumber = await this.props.web3.eth.getBlockNumber();\n\n    const delegationsCalls = [];\n    const blocksPerCall = 100000;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const delegatesContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n\n    for (var blockNumber = fromBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      const toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      delegationsCalls.push(this.functionsUtil.getContractPastEvents(delegatesContractName,'DelegateVotesChanged', {fromBlock: blockNumber, toBlock}))\n    }\n\n    const all_delegations = await Promise.all(delegationsCalls);\n\n    return all_delegations.reduce( (delegations,d) => {\n      delegations = delegations.concat(d);\n      return delegations;\n    },[]);\n  }\n\n  getDelegates = async (limit=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getDelegates`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const [\n      all_votes,\n      totalSupply,\n      delegations,\n    ] = await Promise.all([\n      this.getVotes(),\n      this.getTotalSupply(),\n      this.getDelegatesVotesChanges()\n    ]);\n\n    const delegateAccounts = {};\n    delegations.forEach(e => {\n      const { delegate, newBalance } = e.returnValues;\n      delegateAccounts[delegate] = newBalance;\n    });\n\n    let delegates = [];\n    Object.keys(delegateAccounts).forEach((account) => {\n      const votes = +delegateAccounts[account];\n      if (votes === 0) return;\n      delegates.push({\n        votes: votes/1e18,\n        delegate: account\n      });\n    });\n\n    delegates.sort((a, b) => {\n      return a.votes < b.votes ? 1 : -1;\n    });\n\n    delegates.forEach( (d,index) => {\n      d.rank = index+1;\n      d.votes = d.votes.toFixed(6);\n      d.vote_weight = (100 * (d.votes / parseFloat(totalSupply))).toFixed(4) + '%';\n      d.proposals = all_votes.filter( v => (v.voter && d.delegate && v.voter.toLowerCase() === d.delegate.toLowerCase()) ).length;\n    });\n\n    this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delegates);\n\n    if (limit !== null){\n      delegates = delegates.splice(0,limit);\n    }\n\n    return delegates;\n  }\n\n  getProposalParams = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getProposalParams`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    let [\n      proposalThreshold,\n      proposalMaxOperations\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(govContractName,'proposalThreshold'),\n      this.functionsUtil.genericContractCall(govContractName,'proposalMaxOperations')\n    ]);\n\n    if (proposalThreshold){\n      proposalThreshold = this.functionsUtil.BNify(proposalThreshold);\n    }\n\n    const params = {\n      proposalThreshold,\n      proposalMaxOperations\n    };\n\n    return this.functionsUtil.setCachedData(cachedDataKey,params);\n  }\n\n  getVotes = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getVotes`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const governanceContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n\n    let votes = await this.functionsUtil.getContractPastEvents(governanceContractName,'VoteCast', {fromBlock, toBlock: 'latest'});\n\n    if (votes){\n      votes = votes.map( e => {\n        const {\n            voter,\n            votes,\n            support,\n            proposalId\n        } = e.returnValues;\n        return {\n          votes,\n          voter,\n          support,\n          proposalId\n        }\n      });\n    }\n\n    return this.functionsUtil.setCachedData(cachedDataKey,votes);\n  }\n\n  getProposals = async (voted_by=null,filter_by_state=null,startBlock=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getProposals`;\n    let cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      if (filter_by_state){\n        cachedData = cachedData.filter( p => (p && p.state && p.state.toLowerCase() === filter_by_state.toLowerCase() ) );\n      }\n      if (voted_by){\n        cachedData = cachedData.filter( p => (p && p.votes.find( v => (v.voter && v.voter.toLowerCase() === voted_by.toLowerCase()) )) );\n      }\n      if (startBlock){\n        cachedData = cachedData.filter( p => parseInt(p.startBlock)>=parseInt(startBlock) );\n      }\n      return cachedData;\n    }\n\n    const enumerateProposalState = (state) => {\n      const proposalStates = ['Pending', 'Active', 'Canceled', 'Defeated', 'Succeeded', 'Queued', 'Expired', 'Executed'];\n      return proposalStates[state];\n    };\n\n    const governanceContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    const proposalCount = await this.functionsUtil.genericContractCall(governanceContractName,'proposalCount');\n\n    if (!proposalCount){\n      return [];\n    }\n\n    const proposalGets = [];\n    const proposalStateGets = [];\n    for (const i of Array.from(Array(parseInt(proposalCount)),(n,i) => i+1)) {\n      proposalGets.push(this.functionsUtil.genericContractCall(governanceContractName,'proposals',[i]));\n      proposalStateGets.push(this.functionsUtil.genericContractCall(governanceContractName,'state',[i]));\n    }\n\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n\n    let [\n      votes,\n      proposals,\n      proposalStates,\n      proposalQueuedEvents,\n      proposalCreatedEvents,\n      proposalCanceledEvents,\n      proposalExecutedEvents,\n    ] = await Promise.all([\n      this.getVotes(),\n      Promise.all(proposalGets),\n      Promise.all(proposalStateGets),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalQueued', {fromBlock, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalCreated', {fromBlock, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalCanceled', {fromBlock, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalExecuted', {fromBlock, toBlock: 'latest'}),\n    ]);\n\n    if (!proposals){\n      return false;\n    }\n\n    proposals.reverse();\n    proposalStates.reverse();\n    proposalQueuedEvents.reverse();\n    proposalCreatedEvents.reverse();\n    proposalCanceledEvents.reverse();\n    proposalExecutedEvents.reverse();\n\n    // await this.functionsUtil.asyncForEach(proposals, async (p,i) => {\n    await this.functionsUtil.asyncForEach(proposalCreatedEvents, async (createdEvent,i) => {\n      const p = proposals[i];\n\n      if (!p || !p.id){\n        return;\n      }\n\n      const proposalId = parseInt(p.id);\n      const canceledEvent = proposalCanceledEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n      const executedEvent = proposalExecutedEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n      const queuedEvent = proposalQueuedEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n\n      const [\n        endBlockInfo,\n        queuedBlockInfo,\n        createdBlockInfo,\n        canceledBlockInfo,\n        executedBlockInfo,\n      ] = await Promise.all([\n        p.endBlock ? this.props.web3.eth.getBlock(p.endBlock) : null,\n        queuedEvent ? this.props.web3.eth.getBlock(queuedEvent.blockNumber) : null,\n        createdEvent ? this.props.web3.eth.getBlock(createdEvent.blockNumber) : null,\n        canceledEvent ? this.props.web3.eth.getBlock(canceledEvent.blockNumber) : null,\n        executedEvent ? this.props.web3.eth.getBlock(executedEvent.blockNumber) : null,\n      ]);\n\n      // Init states array\n      p.states = [];\n\n      // Create created state\n      const createdState = {\n        state: \"Pending\",\n        blockNumber: createdEvent.blockNumber,\n        end_time: createdBlockInfo.timestamp,\n        start_time: createdBlockInfo.timestamp,\n        trx_hash: createdEvent.transactionHash\n      };\n      p.states.push(createdState);\n\n      // Push active state\n      const activeState = {\n        end_time: null,\n        trx_hash: null,\n        state: \"Active\",\n        blockNumber: createdEvent.blockNumber,\n        start_time: createdState.start_time\n      };\n      p.states.push(activeState);\n\n      // Push canceled state\n      if (canceledEvent){\n        const canceledState = {\n          end_time: null,\n          state: \"Canceled\",\n          blockNumber: canceledEvent.blockNumber,\n          start_time: canceledBlockInfo.timestamp,\n          trx_hash: canceledEvent.transactionHash\n        }\n        // Update previous state end_time\n        p.states[p.states.length-1].end_time = canceledBlockInfo.timestamp;\n        p.states.push(canceledState);\n      } else {\n        // Push queued state\n        if (queuedEvent){\n          const succeededState = {\n            end_time: null,\n            trx_hash: null,\n            state: \"Succeeded\",\n            blockNumber: queuedEvent.blockNumber,\n            start_time: queuedBlockInfo.timestamp,\n          };\n\n          const queuedState = {\n            end_time: null,\n            state: \"Queued\",\n            blockNumber: queuedEvent.blockNumber,\n            trx_hash: queuedEvent.transactionHash,\n            start_time: queuedBlockInfo.timestamp,\n          };\n\n          // Update previous state end_time\n          p.states[p.states.length-1].end_time = queuedBlockInfo.timestamp;\n          // Push Succeeded state\n          p.states.push(succeededState);\n          // Push queued state\n          p.states.push(queuedState);\n        }\n\n        // Push executed state\n        if (executedEvent){\n          const executedState = {\n            end_time: null,\n            state: \"Executed\",\n            blockNumber: executedEvent.blockNumber,\n            start_time: executedBlockInfo.timestamp,\n            trx_hash: executedEvent.transactionHash\n          }\n          // Update previous state end_time\n          p.states[p.states.length-1].end_time = executedBlockInfo.timestamp;\n          p.states.push(executedState);\n        }\n      }\n\n      // Check for defeated or expired\n      p.state = enumerateProposalState(proposalStates[i]);\n      const foundState = p.states.find( s => (s.state === p.state) );\n      if (!foundState){\n        const endState = {\n          state: p.state,\n          end_time: null,\n          trx_hash: null,\n          blockNumber: p.endBlock,\n          start_time: endBlockInfo.timestamp,\n        }\n        // Update previous state end_time\n        p.states[p.states.length-1].end_time = endBlockInfo.timestamp;\n        p.states.push(endState);\n      }\n\n      p.votes = votes.filter( v => (parseInt(v.proposalId)===proposalId) );\n\n      const { description, signatures, targets, values, calldatas } = createdEvent.returnValues;\n      p.timestamp = createdBlockInfo ? createdBlockInfo.timestamp : null;\n\n\n      // Idle\n      p.title = description.split(/# |\\n|↵/g)[0].replace(/^#/,'') || 'Untitled';\n      p.description = description.split(/\\n|↵/g);\n      p.description.shift();\n      p.description = p.description.join(\"\\n\");\n      p.description = p.description.replace(/\\n/g,\"<br />\")\n\n      // Overwrite proposal details\n      const proposalDetails = this.functionsUtil.getGlobalConfig(['governance','proposals',proposalId]);\n      if (proposalDetails){\n        Object.keys(proposalDetails).forEach( attr => {\n          p[attr] = proposalDetails[attr];\n        });\n      }\n\n      // Save proposal\n      proposals[i] = {\n        eta:p.eta,\n        actions:{\n          values,\n          targets,\n          calldatas,\n          signatures\n        },\n        id:proposalId,\n        title:p.title,\n        state:p.state,\n        votes:p.votes,\n        states:p.states,\n        executed:p.executed,\n        endBlock:p.endBlock,\n        canceled:p.canceled,\n        forVotes:p.forVotes,\n        proposer:p.proposer,\n        timestamp:p.timestamp,\n        startBlock:p.startBlock,\n        description:p.description,\n        againstVotes:p.againstVotes\n      };\n    });\n\n    this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,proposals,3600);\n\n    // console.log('getProposals',filter_by_state,cachedData);\n\n    if (filter_by_state){\n      proposals = proposals.filter( p => (p && p.state && p.state.toLowerCase() === filter_by_state.toLowerCase() ) );\n    }\n\n    if (voted_by){\n      proposals = proposals.filter( p => (p && p.votes.find( v => (v.voter && v.voter.toLowerCase() === voted_by.toLowerCase()) )) );\n    }\n\n    if (startBlock){\n      proposals = proposals.filter( p => parseInt(p.startBlock)>=parseInt(startBlock) );\n    }\n    \n    return proposals;\n  }\n}\n\nexport default GovernanceUtil;","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass StatsCard extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          minHeight:this.props.minHeight ? this.props.minHeight : ['130px','153px']\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'flex-start'}\n          flexDirection={'column'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            alignItems={'flex-start'}\n            minHeight={ this.props.titleMinHeight ? this.props.titleMinHeight : ['auto','60px'] }\n          >\n            <Heading.h4\n              mb={[3,0]}\n              fontWeight={4}\n              fontSize={[2,3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n            >\n              {this.props.title}\n            </Heading.h4>\n          </Flex>\n          {\n            (typeof this.props.value !== 'undefined' && this.props.value !== null && this.props.value.toString().length>0) &&\n              <Text\n                lineHeight={1}\n                fontSize={[4,5]}\n                fontWeight={[3,4]}\n                color={'statValue'}\n                {...this.props.valueProps}\n              >\n                {this.props.value}\n              </Text>\n          }\n          {\n            this.props.children ?\n              this.props.children\n            : null\n          }\n          {\n            (typeof this.props.label !== 'undefined' && this.props.label !== null && this.props.label.toString().length>0) && (\n              <Flex\n                mt={[3,2]}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Text\n                  fontSize={1}\n                  fontWeight={3}\n                  color={'legend'}\n                >\n                  {this.props.label}\n                </Text>\n                {\n                  (this.props.labelTooltip && this.props.labelTooltip.length>0) && (\n                    <Tooltip\n                      placement={'top'}\n                      message={this.props.labelTooltip}\n                    >\n                      <Icon\n                        ml={2}\n                        name={\"Info\"}\n                        size={'1em'}\n                        color={'cellTitle'}\n                      />\n                    </Tooltip>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default StatsCard;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport { Link as RouterLink } from \"react-router-dom\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Icon, Text, Image, Link } from 'rimble-ui';\n\nclass DashboardMenu extends Component {\n  state = {\n    buyModalOpened:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setBuyModalOpened(buyModalOpened){\n    this.setState({\n      buyModalOpened\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    if (!this.props.menu.length){\n      return null;\n    }\n\n    const visibleLinks = this.props.menu.filter(menuLink => {\n      const showMobile = menuLink.mobile === undefined || menuLink.mobile;\n      return !this.props.isMobile || showMobile;\n    });\n\n    if (!visibleLinks.length){\n      return null;\n    }\n\n    const isDarkTheme = this.props.themeMode === 'dark';\n    const isOriginUrl = this.functionsUtil.checkUrlOrigin();\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard','theme','darkModeEnabled']);\n\n    return (\n      <Flex\n        p={0}\n        height={'100%'}\n        flexDirection={['row','column']}\n      >\n        {\n          !this.props.isMobile &&\n            <Flex\n              p={3}\n              mb={3}\n              flexDirection={'row'}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <RouterLink to=\"/\">\n                <Image\n                  position={'relative'}\n                  height={['35px','42px']}\n                  src={ isOriginUrl ? (!isDarkTheme ? 'images/logo-gradient.svg' : 'images/logo-white.svg') : (!isDarkTheme ? 'images/logo-gradient-beta.png' : 'images/logo-white-beta.png')}\n                />\n              </RouterLink>\n            </Flex>\n        }\n        {\n          visibleLinks.map((menuLink,menuIndex) => {\n            const isExternalLink = menuLink.isExternalLink;\n            const LinkComponent = isExternalLink ? ExtLink : RouterLink;\n            const inactiveImage = isDarkTheme && menuLink.imageInactiveDark ? menuLink.imageInactiveDark : menuLink.imageInactive;\n            return (\n              <Box\n                my={[0,3]}\n                key={`menu-${menuIndex}`}\n                width={[1/visibleLinks.length,'auto']}\n              >\n                <LinkComponent\n                  to={menuLink.route}\n                  href={menuLink.route}\n                  style={{textDecoration:'none'}}\n                >\n                  <Flex\n                    py={[2,3]}\n                    px={[2,3]}\n                    borderRadius={[0,2]}\n                    flexDirection={'row'}\n                    alignItems={'center'}\n                    border={menuLink.selected ? 2 : null}\n                    backgroundColor={ menuLink.selected ? 'menuHover' : 'transparent' }\n                  >\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={['column','row']}\n                      justifyContent={['center','flex-start']}\n                    >\n                      {menuLink.image &&\n                        <Image\n                          mr={[0,3]}\n                          ml={[0,2]}\n                          mb={[1,0]}\n                          align={'center'}\n                          height={['1.2em','1.6em']}\n                          src={ menuLink.selected ? menuLink.image : inactiveImage}\n                        />\n                      }\n                      {menuLink.icon &&\n                        <Icon\n                          mr={[0,3]}\n                          ml={[0,2]}\n                          mb={[1,0]}\n                          align={'center'}\n                          name={menuLink.icon}\n                          size={ this.props.isMobile ? '1.4em' : '1.6em' }\n                          color={ menuLink.selected ? menuLink.bgColor : 'copyColor' }\n                        />\n                      }\n                      <Text\n                        fontWeight={3}\n                        color={'copyColor'}\n                        textAlign={'center'}\n                        fontSize={['11px',2]}\n                        style={{\n                          whiteSpace:'nowrap'\n                        }}\n                      >\n                        {menuLink.label}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                </LinkComponent>\n              </Box>\n            );\n          })\n        }\n        {\n          darkModeEnabled && !this.props.isMobile && (\n            <Flex\n              my={[0,2]}\n              height={'100%'}\n              flexDirection={'column'}\n              justifyContent={'flex-end'}\n              width={[1/visibleLinks.length,'auto']}\n            >\n              <Link\n                style={{textDecoration:'none'}}\n                onClick={ e => this.props.setThemeMode(this.props.themeMode === 'light' ? 'dark' : 'light') }\n              >\n                <Flex\n                  p={2}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'flex-end'}\n                >\n                  <Icon\n                    mr={[0,2]}\n                    ml={[0,2]}\n                    size={'1.4em'}\n                    align={'center'}\n                    color={'copyColor'}\n                    name={'Brightness2'}\n                  />\n                  <Flex\n                    px={'0.2em'}\n                    width={'3.4em'}\n                    height={'1.6em'}\n                    alignItems={'center'}\n                    borderRadius={'1.6em'}\n                    backgroundColor={'cellText'}\n                    justifyContent={this.props.themeMode === 'light' ? 'flex-end' : 'flex-start'}\n                  >\n                    <Box\n                      width={'1.3em'}\n                      height={'1.3em'}\n                      borderRadius={'1.3em'}\n                      backgroundColor={'copyColor'}\n                    >\n                    </Box>\n                  </Flex>\n                  <Icon\n                    ml={[0,2]}\n                    size={'1.4em'}\n                    align={'center'}\n                    name={'WbSunny'}\n                    color={'copyColor'}\n                  />\n                </Flex>\n              </Link>\n              {\n                /*\n                  <Link\n                    style={{textDecoration:'none'}}\n                    onClick={ e => this.props.setThemeMode(this.props.themeMode === 'light' ? 'dark' : 'light') }\n                  >\n                    <Flex\n                      py={[2,3]}\n                      px={[2,3]}\n                      borderRadius={[0,2]}\n                      flexDirection={'row'}\n                      alignItems={'center'}\n                      backgroundColor={'transparent'}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={['column','row']}\n                        justifyContent={['center','flex-start']}\n                      >\n                        {\n                          this.props.themeMode === 'light' ? (\n                            <Icon\n                              mr={[0,3]}\n                              ml={[0,2]}\n                              mb={[1,0]}\n                              size={'1.6em'}\n                              align={'center'}\n                              color={'copyColor'}\n                              name={'Brightness2'}\n                            />\n                          ) : (\n                            <Icon\n                              mr={[0,3]}\n                              ml={[0,2]}\n                              mb={[1,0]}\n                              size={'1.6em'}\n                              name={'WbSunny'}\n                              align={'center'}\n                              color={'copyColor'}\n                            />\n                          )\n                        }\n                        <Text\n                          fontWeight={3}\n                          color={'copyColor'}\n                          textAlign={'center'}\n                          fontSize={['11px',2]}\n                          style={{\n                            whiteSpace:'nowrap'\n                          }}\n                        >\n                          {this.props.themeMode === 'light' ? 'Dark Mode' : 'Back to Light'}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Link>\n                */\n              }\n            </Flex>\n          )\n        }\n        {\n        /*\n        !this.props.isMobile  &&\n          <Box\n            width={'auto'}\n            borderTop={`1px solid ${theme.colors.divider}`}\n          >\n            <Flex\n              p={[2,3]}\n              style={{\n                cursor:'pointer'\n              }}\n              borderRadius={[0,2]}\n              flexDirection={'row'}\n              alignItems={'center'}\n              onClick={ e => this.setBuyModalOpened(true) }\n            >\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={['column','row']}\n                justifyContent={['center','flex-start']}\n              >\n                <Icon\n                  mr={[0,3]}\n                  ml={[0,2]}\n                  mb={[1,0]}\n                  size={'1.6em'}\n                  align={'center'}\n                  color={'copyColor'}\n                  name={'AddCircleOutline'}\n                />\n                <Text\n                  fontWeight={3}\n                  fontSize={[0,2]}\n                  color={'copyColor'}\n                  textAlign={'center'}\n                  style={{\n                    whiteSpace:'nowrap'\n                  }}\n                >\n                  Add Funds\n                </Text>\n              </Flex>\n            </Flex>\n          </Box>\n        <BuyModal\n          {...this.props}\n          isOpen={this.state.buyModalOpened}\n          closeModal={ e => this.setBuyModalOpened(false) }\n        />\n        */\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default DashboardMenu;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass TooltipModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            title={this.props.title}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n                dangerouslySetInnerHTML={{ __html: this.props.content }}\n              >\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                GOT IT\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TooltipModal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newLink\":\"CryptoInput_newLink__35W_s\",\"newPill\":\"CryptoInput_newPill__2Q8cA\",\"ethInput\":\"CryptoInput_ethInput__3j2LJ\",\"ethInputDark\":\"CryptoInput_ethInputDark__R8OoA\",\"mainInput\":\"CryptoInput_mainInput__1zffg\",\"button\":\"CryptoInput_button__1N9EQ\",\"gradientButton\":\"CryptoInput_gradientButton__2kh5r\",\"input\":\"CryptoInput_input__3X3pI\",\"newPillContainerAnim\":\"CryptoInput_newPillContainerAnim__RvOCw\"};","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Notifications.module.scss';\nimport { Flex, Icon, Box, Text, Image } from \"rimble-ui\";\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Notifications extends Component {\n\n  state = {\n    tabOpened:false,\n    notifications:[],\n    mouseOverBell:false,\n    unreadNotifications:0,\n    lastOpenTimestamp:null,\n    mouseOverNotifications:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadNotifications();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const clickEventChanged = prevProps.clickEvent !== this.props.clickEvent;\n    if (clickEventChanged && this.props.clickEvent && !this.state.mouseOverNotifications && !this.state.mouseOverBell && this.state.tabOpened){\n      this.setState({\n        tabOpened:false\n      });\n    }\n\n    const tabOpenedChanged = prevState.tabOpened !== this.state.tabOpened;\n    if (tabOpenedChanged && this.state.tabOpened && this.state.notifications.length>0){\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Notifications',\n        eventAction: 'open_tab',\n        eventLabel: ''\n      });\n\n      this.updateLastOpenTimestamp();\n    }\n\n    const notificationsChanged = JSON.stringify(prevState.notifications) !== JSON.stringify(this.state.notifications);\n    const lastOpenTimestampChanged = prevState.lastOpenTimestamp !== this.state.lastOpenTimestamp;\n    if (lastOpenTimestampChanged || notificationsChanged){\n      const unreadNotifications = this.state.lastOpenTimestamp ? this.state.notifications.filter( n => n.timestamp>this.state.lastOpenTimestamp ).length  : this.state.notifications.length;\n      this.setState({\n        unreadNotifications\n      });\n    }\n  }\n\n  updateLastOpenTimestamp(){\n    const lastOpenTimestamp = Date.now();\n    \n    // Set Notification params in localStorage\n    const notificationsParams = this.functionsUtil.getStoredItem('notificationsParams',true,{});\n    notificationsParams.lastOpenTimestamp = lastOpenTimestamp;\n    this.functionsUtil.setLocalStorage('notificationsParams',notificationsParams,true);\n\n    this.setState({\n      lastOpenTimestamp\n    });\n  }\n\n  async loadNotifications(){\n\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const isMainnet = requiredNetwork === 1;\n\n    // Get stored lastOpenTimestamp for notifications\n    const notificationsParams = this.functionsUtil.getStoredItem('notificationsParams',true,{});\n    const lastOpenTimestamp = notificationsParams.lastOpenTimestamp || null;\n\n    const blockNumber = this.functionsUtil.BNify(await this.functionsUtil.getBlockNumber());\n    const blocksPerWeek = this.functionsUtil.BNify(this.functionsUtil.getGlobalConfig(['network','blocksPerYear'])).div(52.1429);\n    const oneWeekAgoBlock = parseInt(blockNumber.minus(blocksPerWeek));\n\n    // Get active snapshot proposals\n    const [\n      latestFeed,\n      activeSnapshotProposals,\n      governanceProposals,\n      batchedDeposits,\n    ] = await Promise.all([\n      this.functionsUtil.getSubstackLatestFeed(),\n      this.functionsUtil.getSnapshotProposals(true),\n      (isMainnet && !this.props.isMobile) ? this.governanceUtil.getProposals(null,'Active',oneWeekAgoBlock) : [],\n      [],// (isMainnet && !this.props.isMobile) ? this.functionsUtil.getBatchedDeposits(this.props.account,'executed') : []\n    ]);\n\n    let notifications = this.functionsUtil.getGlobalConfig(['notifications']).filter( n => (n.enabled && n.start<=currTime && n.end>currTime) );\n\n    // Show latest Substack for 1 week\n    if (latestFeed){\n      const latestFeedDate = this.functionsUtil.strToMoment(latestFeed.isoDate);\n      if (latestFeedDate.isAfter(this.functionsUtil.strToMoment().subtract(7,'d'))){\n        notifications.push(\n          {\n            link:latestFeed.link,\n            image:'/images/substack.png',\n            timestamp:latestFeedDate._d.getTime(),\n            title:this.functionsUtil.htmlDecode(latestFeed.title),\n            text:this.functionsUtil.htmlDecode(latestFeed.content),\n            date:latestFeedDate.utc().format('MMM DD, YYYY HH:mm UTC'),\n          }\n        );\n      }\n    }\n\n    const currTime = Date.now();\n\n    // Add snapshot proposals\n    const snapshotProposalBaseUrl = this.functionsUtil.getGlobalConfig(['network','providers','snapshot','urls','proposals']);\n\n    if (activeSnapshotProposals){\n      activeSnapshotProposals.forEach( p => {\n          const text = this.functionsUtil.htmlDecode(p.msg.payload.body.replace(/^[#]*/,''));\n          // const text = p.msg.payload.name.replace(/^[#]*/,'');\n          notifications.push({\n            text,\n            image:'/images/snapshot.png',\n            timestamp:p.msg.payload.start*1000,\n            link:snapshotProposalBaseUrl+p.authorIpfsHash,\n            title:this.functionsUtil.htmlDecode(p.msg.payload.name),\n            date:this.functionsUtil.strToMoment(p.msg.payload.start*1000).utc().format('MMM DD, YYYY HH:mm UTC'),\n          });\n      });\n    }\n\n    // Add governance proposals\n    if (governanceProposals){\n      const governanceProposalUrl = this.functionsUtil.getGlobalConfig(['governance','baseRoute'])+'/proposals/';\n      governanceProposals.forEach( p => {\n        notifications.push(\n          {\n            text:p.title,\n            iconProps:{\n              color:'#00acff'\n            },\n            icon:'LightbulbOutline',\n            timestamp:p.timestamp*1000,\n            title:'Governance Proposal',\n            hash:governanceProposalUrl+p.id,\n            date:this.functionsUtil.strToMoment(p.timestamp*1000).utc().format('MMM DD, YYYY HH:mm UTC'),\n          }\n        );\n      });\n    }\n\n    // Add Executed Batch Deposits\n    if (batchedDeposits){\n      const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n      const batchDepositBaseUrl = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+`/tools/${batchDepositConfig.route}/`;\n      Object.keys(batchedDeposits).forEach( batchToken => {\n        const batchInfo = batchedDeposits[batchToken];\n        const timestamp = batchInfo.lastExecution.timeStamp*1000;\n        const text = `You can claim ${batchInfo.batchRedeems.toFixed(4)} ${batchToken}`;\n        notifications.push({\n          text,\n          timestamp,\n          icon:'DoneAll',\n          title:'Batch Deposit Executed',\n          hash:batchDepositBaseUrl+batchToken,\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          date:this.functionsUtil.strToMoment(timestamp).utc().format('MMM DD, YYYY HH:mm UTC')\n        });\n      });\n    }\n\n    notifications = notifications.sort((a,b) => (a.timestamp < b.timestamp ? 1 : -1));\n\n    this.setState({\n      notifications,\n      lastOpenTimestamp\n    });\n  }\n\n  setMouseOverBell(mouseOverBell){\n    this.setState({\n      mouseOverBell\n    });\n  }\n\n  setMouseOverNotifications(mouseOverNotifications){\n    this.setState({\n      mouseOverNotifications\n    });\n  }\n\n  toggleTab(){\n    this.setState((prevState) => ({\n      tabOpened:!prevState.tabOpened\n    }));\n  }\n\n  openNotification(notification){\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Notifications',\n      eventAction: 'open_notification',\n      eventLabel: notification.link || notification.hash\n    });\n\n    if (notification.link){\n      return this.functionsUtil.openWindow(notification.link);\n    } else if (notification.hash) {\n      return window.location.hash = notification.hash;\n    }\n\n    return false;\n  }\n\n  render() {\n    const hasUnreadNotifications = this.state.unreadNotifications>0;\n    const iconColor = hasUnreadNotifications ? '#ffdc00' : 'cellText';\n    return (\n      <Flex\n        zIndex={999}\n        position={'relative'}\n        {...this.props.flexProps}\n      >\n        <Box\n          width={1}\n          position={'relative'}\n          onMouseOut={(e) => this.setMouseOverBell(false)}\n          onMouseOver={(e) => this.setMouseOverBell(true)}\n        >\n          <Icon\n            size={'2.4em'}\n            color={iconColor}\n            name={'Notifications'}\n            onClick={this.toggleTab.bind(this)}\n            className={[styles.bell,(hasUnreadNotifications ? styles.ring : null),(this.state.tabOpened || this.state.notifications.length>0 ? styles.active : null)]}\n          />\n          {\n            hasUnreadNotifications && \n              <Box\n                className={styles.counter}\n              >\n                {this.state.notifications.length}\n              </Box>\n          }\n        </Box>\n        {\n          this.state.tabOpened &&\n            <DashboardCard\n              cardProps={{\n                style:{\n                  right:0,\n                  maxHeight:'21em',\n                  overflow:'scroll',\n                  position:'absolute',\n                  top:this.props.isMobile ? '2.8em' : '3em',\n                },\n                minWidth:['91vw','22em'],\n                onMouseOut:(e) => this.setMouseOverNotifications(false),\n                onMouseOver:(e) => this.setMouseOverNotifications(true),\n              }}\n            >\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n              {\n                this.state.notifications.length>0 ?\n                  this.state.notifications.map( (n,index) => (\n                    <ExtLink\n                      style={{\n                        textDecoration:'none'\n                      }}\n                      key={`notification_${index}`}\n                      onClick={ e => this.openNotification(n) }\n                    >\n                      <Flex\n                        py={2}\n                        px={1}\n                        flexDirection={'row'}\n                        className={[styles.notification,this.props.themeMode === 'dark' ? styles.dark : null]}\n                        borderBottom={index<this.state.notifications.length-1 ? `1px solid ${this.props.theme.colors.divider}` : null}\n                      >\n                        <Flex\n                          minWidth={'2em'}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          {\n                            n.icon ? (\n                              <Icon\n                                name={n.icon}\n                                size={'1.6em'}\n                                color={'copyColor'}\n                                {...n.iconProps}\n                              />\n                            ) : n.image && (\n                              <Image\n                                src={n.image}\n                                width={'1.6em'}\n                                height={'1.6em'}\n                              />\n                            )\n                          }\n                        </Flex>\n                        <Flex\n                          ml={1}\n                          overflow={'hidden'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={1}\n                            lineHeight={1.3}\n                            color={'primary'}\n                            style={{\n                              overflow:'hidden',\n                              whiteSpace:'nowrap',\n                              textOverflow:'ellipsis'\n                            }}\n                          >\n                            {n.title}\n                          </Text>\n                          <Text\n                            fontSize={1}\n                            lineHeight={1.3}\n                            color={'copyColor'}\n                            style={{\n                              overflow:'hidden',\n                              whiteSpace:'nowrap',\n                              textOverflow:'ellipsis'\n                            }}\n                          >\n                            {n.text}\n                          </Text>\n                          <Text\n                            fontSize={0}\n                            lineHeight={1.3}\n                            color={'cellText'}\n                          >\n                            {n.date}\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </ExtLink>\n                  ))\n                : (\n                  <Text\n                    py={2}\n                    textAlign={'center'}\n                  >\n                    There are no notifications.\n                  </Text>\n                )\n              }\n              </Flex>\n            </DashboardCard>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Notifications;\n","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport AssetField from '../../AssetField/AssetField.js';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport { Heading, Modal, Flex, EthAddress } from \"rimble-ui\";\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\nimport styles from '../../CryptoInput/CryptoInput.module.scss';\nimport CardIconButton from '../../CardIconButton/CardIconButton';\n\nclass AccountModal extends React.Component {\n\n  state = {\n    logout: false,\n    balances: null\n  }\n\n  loadBalances = async () => {\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || !this.props.account || this.state.balances !== null){\n      return false;\n    }\n\n    const balances = [];\n    const allTokens = Object.keys(this.props.availableStrategies.best);\n\n    allTokens.forEach( baseToken => {\n      const tokens = [];\n      tokens.push(baseToken);\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const strategyToken = this.props.availableStrategies[strategy][baseToken];\n        if (strategyToken){\n          tokens.push(strategyToken.idle.token);\n        }\n      });\n\n      balances.push(tokens);\n    });\n\n    this.setState({\n      balances\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n    this.loadBalances();\n  }\n\n  componentDidUpdate(prevProps) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.acccount !== this.props.account;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && this.props.availableStrategies;\n    if (availableStrategiesChanged || accountChanged || contractsInitialized){\n      this.loadBalances();\n    }\n  }\n\n  setConnector = async (connectorName) => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Connect',\n      eventAction: 'logout'\n    });\n\n    if (typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.setConnector(connectorName);\n  }\n\n  async logout(){\n    this.setState({\n      logout:true\n    });\n\n    this.props.logout();\n    await this.setConnector('Infura');\n    // this.props.closeModal();\n  }\n\n  goToSection(section){\n    this.props.goToSection(section);\n    this.props.closeModal();\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n\n    if (this.props.account){\n\n      const rows = (Object.keys(this.props.availableStrategies).length+1);\n      const renderBalances = this.state.balances && this.state.balances.map( (tokens,i) => {\n        return (\n          <Flex\n            mt={2}\n            width={1}\n            boxShadow={0}\n            key={'balance_'+i}\n            alignItems={'center'}\n            flexDirection={'row'}\n            >\n              {\n                tokens.map( (token,tokenIndex) => (\n                  <Flex\n                    width={1/rows}\n                    flexDirection={'row'}\n                    key={'balance_token_'+token}\n                    justifyContent={'flex-start'}\n                  >\n                    <AssetField\n                      token={token}\n                      tokenConfig={{\n                        token:token\n                        ,...this.functionsUtil.getGlobalConfig(['stats','tokens',token])\n                      }}\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mr:[1,2],\n                          ml:[1,4],\n                          width:['1.4em','2em'],\n                          height:['1.4em','2em']\n                        }\n                      }}\n                    />\n                    <AssetField\n                      {...this.props}\n                      token={token}\n                      tokenConfig={{\n                        token:token\n                      }}\n                      fieldInfo={{\n                        name:'tokenBalance',\n                        props:{\n                          fontSize:[0,2],\n                          fontWeight:500,\n                          color:'cellText'\n                        }\n                      }}\n                    />\n                  </Flex>\n                ) )\n              }\n          </Flex>\n        );\n      });\n\n      const showTools = ['addFunds','tokenSwap'];\n\n      return (\n        <Modal isOpen={this.props.isOpen}>\n          <ModalCard closeFunc={this.props.closeModal}>\n            <ModalCard.Header title={'Account overview'}></ModalCard.Header>\n            <ModalCard.Body>\n              <Flex\n                alignItems={'center'}\n                width={[\"auto\", \"40em\"]}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  width={1}\n                  mb={[2,3]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  maxWidth={['100%','30em']}\n                  justifyContent={'stretch'}\n                >\n                  <EthAddress\n                    width={1}\n                    address={this.props.account}\n                    className={ this.props.themeMode === 'light' ? styles.ethInput : styles.ethInputDark }\n                  />\n                </Flex>\n                <Flex\n                  width={1}\n                  mb={[2,3]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  maxWidth={['100%','30em']}\n                >\n                  <Heading.h4\n                    color={'copyColor'}\n                    textAlign={'center'}\n                  >\n                    Balances:\n                  </Heading.h4>\n                  { renderBalances }\n                </Flex>\n                {\n                  !viewOnly && (\n                    <Flex\n                      width={1}\n                      mb={[2,3]}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Heading.h4\n                        mb={2}\n                        color={'copyColor'}\n                        textAlign={'center'}\n                      >\n                        Tools:\n                      </Heading.h4>\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        justifyContent={'center'}\n                        flexDirection={['column','row']}\n                      >\n                        {\n                          showTools.map( toolName => {\n                            const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                            return (\n                              <CardIconButton\n                                {...this.props}\n                                key={`tool_${toolName}`}\n                                cardProps={{\n                                  mx:[0,2],\n                                  my:[2,0],\n                                  width:'auto',\n                                  minWidth:['50%','auto']\n                                }}\n                                icon={toolConfig.icon}\n                                text={toolConfig.label}\n                                handleClick={ e => this.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            )\n                          })\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            </ModalCard.Body>\n\n            <ModalCard.Footer>\n              <ButtonLoader\n                buttonText={'Logout wallet'}\n                isLoading={this.state.logout}\n                handleClick={ async () => { await this.logout() } }\n                buttonProps={{className:styles.gradientButton,borderRadius:'2rem',mt:[4,8],minWidth:['95px','145px'],size:['auto','medium']}}\n              >\n              </ButtonLoader>\n            </ModalCard.Footer>\n          </ModalCard>\n        </Modal>\n      );\n    }\n    return null;\n  }\n}\n\nexport default AccountModal;\n","import React, { Component } from 'react';\nimport styles from './MenuAccount.module.scss';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Icon, Image, Link, Text } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport Notifications from '../Notifications/Notifications';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport AccountModal from \"../utilities/components/AccountModal\";\n\nclass MenuAccount extends Component {\n\n  state = {\n    isModalOpen:null,\n    idleTokenBalance:null\n  };\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadIdleTokenBalance();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.setState({\n        isModalOpen:null\n      },() => {\n        this.loadIdleTokenBalance();\n      });\n    }\n  }\n\n  async loadIdleTokenBalance(){\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    if (idleGovTokenEnabled){\n      let idleTokenBalance = this.functionsUtil.BNify(0);\n      const [\n        balance,\n        unclaimed\n      ] = await Promise.all([\n        this.idleGovToken.getBalance(this.props.account),\n        this.idleGovToken.getUnclaimedTokens(this.props.account)\n      ]);\n\n      if (balance && unclaimed){\n        idleTokenBalance = this.functionsUtil.BNify(balance).plus(unclaimed);\n      }\n\n      return this.setState({\n        idleTokenBalance\n      });\n    }\n    return null;\n  }\n\n  toggleModal = (modalName) => {\n    this.setState(state => ({...state, isModalOpen: (state.isModalOpen===modalName ? null : modalName) }));\n  }\n\n  render() {\n    const walletProvider = this.functionsUtil.getStoredItem('walletProvider',false,null);\n    const connectorInfo = walletProvider ? this.functionsUtil.getGlobalConfig(['connectors',walletProvider.toLowerCase()]) : null;\n    const walletIcon = connectorInfo && connectorInfo.icon ? connectorInfo.icon : walletProvider ? `${walletProvider.toLowerCase()}.svg` : null;\n\n    const governanceRoute = this.functionsUtil.getGlobalConfig(['governance','baseRoute']);\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const dashboardRoute = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+'/'+Object.keys(this.props.availableStrategies)[0];\n\n    return (\n      this.props.account ? (\n        <Flex\n          width={1}\n          flexDirection={['column','row']}\n          alignItems={['flex-start','center']}\n        >\n          <Flex\n            mb={[2,0]}\n            flexDirection={'row'}\n            alignItems={'center'}\n            width={[1,'fit-content']}\n            justifyContent={'space-between'}\n          >\n            <DashboardCard\n              {...this.props}\n              cardProps={{\n                py:1,\n                px:[1,2],\n                mr:[2,0],\n                display:'flex',\n                width:[1,'auto']\n              }}\n              isInteractive={true}\n              handleClick={e => this.toggleModal('account')}\n            >\n              <Flex\n                p={0}\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={['center','flex-start']}\n              >\n                {\n                  connectorInfo ? (\n                    <Image\n                      mr={[1,2]}\n                      width={'2em'}\n                      height={'2em'}\n                      display={'inline-flex'}\n                      alt={walletProvider.toLowerCase()}\n                      src={`images/connectors/${walletIcon}`}\n                    />\n                  ) : (\n                    <Icon\n                      mr={[1,2]}\n                      size={'2em'}\n                      color={'copyColor'}\n                      name={'AccountCircle'}\n                    />\n                  )\n                }\n                <ShortHash\n                  fontSize={2}\n                  fontWeight={3}\n                  {...this.props}\n                  color={'copyColor'}\n                  hash={this.props.account}\n                />\n              </Flex>\n            </DashboardCard>\n            {\n              this.props.isMobile &&\n                <Notifications\n                  {...this.props}\n                />\n            }\n          </Flex>\n          <Flex\n            ml={[0,3]}\n            style={{\n              flex:'1 1 auto'\n            }}\n            width={[1,'auto']}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={this.state.idleTokenBalance ? 'space-between' : 'flex-end'}\n          >\n            {\n              this.state.idleTokenBalance && \n                <Link\n                  style={{\n                    textDecoration:'none'\n                  }}\n                  px={2}\n                  className={styles.balanceButton}\n                  onClick={ e => this.props.setGovModal(true) }\n                >\n                  <Flex\n                    alignItems={'center'}\n                    height={['38px','42px']}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={1}\n                      width={'1.7em'}\n                      height={'1.7em'}\n                      display={'inline-flex'}\n                      src={`images/tokens/IDLE.png`}\n                    />\n                    <Text\n                      color={'white'}\n                      fontSize={[1,2]}\n                      fontWeight={500}\n                    >\n                      {this.state.idleTokenBalance.toFixed(2)} IDLE\n                    </Text>\n                  </Flex>\n                </Link>\n            }\n            <Flex\n              width={'auto'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n            >\n              {\n                governanceEnabled && this.props.isDashboard ? (\n                  <RoundButton\n                    buttonProps={{\n                      mainColor:'redeem',\n                      style:{\n                        width:'auto',\n                        height:this.props.isMobile ? '38px' : '45px'\n                      },\n                      size:this.props.isMobile ? 'small' : 'medium'\n                    }}\n                    handleClick={ (e) => { this.props.goToSection(governanceRoute,false) } }\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        mr={[1,2]}\n                        size={'1.6em'}\n                        color={'white'}\n                        name={'ExitToApp'}\n                      />\n                      <Text\n                        fontWeight={3}\n                        color={'white'}\n                        fontSize={[2,3]}\n                      >\n                        Governance\n                      </Text>\n                    </Flex>\n                  </RoundButton>\n                ) : this.props.isGovernance && (\n                  <RoundButton\n                    buttonProps={{\n                      mainColor:'redeem',\n                      style:{\n                        width:'auto',\n                        height:this.props.isMobile ? '38px' : '45px'\n                      },\n                      size:this.props.isMobile ? 'small' : 'medium'\n                    }}\n                    handleClick={ (e) => { this.props.goToSection(dashboardRoute,false) } }\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        mr={[1,2]}\n                        size={'1.6em'}\n                        color={'white'}\n                        name={'ExitToApp'}\n                      />\n                      <Text\n                        fontWeight={3}\n                        color={'white'}\n                        fontSize={[2,3]}\n                      >\n                        Dashboard\n                      </Text>\n                    </Flex>\n                  </RoundButton>\n                )\n              }\n              {\n                !this.props.isMobile &&\n                  <Notifications\n                    {...this.props}\n                    flexProps={{\n                      ml:2\n                    }}\n                  />\n              }\n            </Flex>\n          </Flex>\n          <AccountModal\n            {...this.props}\n            isOpen={this.state.isModalOpen==='account'}\n            closeModal={e => this.toggleModal('account') }\n          />\n        </Flex>\n      ) : (\n        <Flex\n          width={1}\n          justifyContent={'flex-start'}\n        >\n          <CardIconButton\n            icon={'Power'}\n            {...this.props}\n            text={'Connect'}\n            handleClick={this.props.connectAndValidateAccount}\n          />\n        </Flex>\n      )\n    );\n  }\n}\n\nexport default MenuAccount;\n","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Text, Modal, Flex, Image, Link, Icon } from \"rimble-ui\";\n\nclass GovModal extends React.Component {\n\n  state = {\n    total:null,\n    balance:null,\n    txStatus:null,\n    unclaimed:null,\n    processing: {\n      txHash:null,\n      loading:false\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  loadTokenInfo = async () => {\n    const [\n      balance,\n      unclaimed\n    ] = await Promise.all([\n      this.idleGovToken.getBalance(this.props.account),\n      this.idleGovToken.getUnclaimedTokens(this.props.account)\n    ]);\n\n    let total = this.functionsUtil.BNify(0);\n    if (balance && unclaimed){\n      total = this.functionsUtil.BNify(balance).plus(unclaimed);\n    }\n\n    this.setState({\n      total,\n      balance,\n      unclaimed\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n    this.loadTokenInfo();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    // const txStatusChanged = prevState.txStatus !== this.state.txStatus;\n    // if (txStatusChanged && this.state.txStatus === 'success'){\n    //   this.loadTokenInfo();\n    // }\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      txStatus:null,\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  claim = async () => {\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'claim',\n        eventCategory: 'Governance',\n        eventLabel: tx.status ? tx.status : error\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx.status ? tx.status : 'error',\n      };\n\n      if (tx.status === 'success'){\n        newState.balance = this.state.unclaimed;\n        newState.unclaimed = this.functionsUtil.BNify(0);\n\n        if (typeof this.props.claimCallback === 'function'){\n          this.props.claimCallback();\n        }\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.idleGovToken.claimRewards(callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  closeModal = async (action) => {\n    this.props.closeModal();\n  }\n\n  render() {\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          bgLayer={true}\n          mainColor={'white'}\n          maxWidth={['auto','420px']}\n          closeFunc={this.props.closeModal}\n          background={'radial-gradient(76.02% 75.41% at 1.84% 0%, rgb(162, 196, 246) 0%, rgb(10, 79, 176) 100%)'}\n        >\n          <ModalCard.Header\n            pt={3}\n            titleProps={{\n              color:'white'\n            }}\n            title={'Your IDLE balance'}\n            borderBottom={'1px solid rgba(255,255,255,0.2)'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body\n            px={3}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Image\n                mt={2}\n                width={'3em'}\n                height={'3em'}\n                src={'images/tokens/IDLE.png'}\n              />\n              <Text\n                mt={2}\n                fontSize={7}\n                color={'white'}\n                fontWeight={500}\n              >\n                {this.state.total ? this.state.total.toFixed(2) : '-'}\n              </Text>\n              <Text\n                mb={2}\n                fontSize={3}\n                color={'white'}\n                fontWeight={400}\n                textAlign={'center'}\n              >\n                {\n                  this.state.unclaimed && this.state.unclaimed.gt(0) ? 'You can now claim your IDLE tokens from the Early LPs Program!' : 'You don\\'t have any IDLE to claim from the Early LPs Program'\n                }\n              </Text>\n              <Flex\n                pb={2}\n                mb={3}\n                width={1}\n                flexDirection={'column'}\n                borderBottom={'1px solid rgba(255,255,255,0.2)'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    Balance:\n                  </Text>\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    {this.state.balance ? this.state.balance.toFixed(4) : '-'}\n                  </Text>\n                </Flex>\n                <Flex\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    Unclaimed:\n                  </Text>\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    {this.state.unclaimed ? this.state.unclaimed.toFixed(4) : '-'}\n                  </Text>\n                </Flex>\n                <Link\n                  href={`/#${this.functionsUtil.getGlobalConfig(['governance','baseRoute'])}`}\n                >\n                  <Flex\n                    zIndex={10}\n                    position={'relative'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontSize={2}\n                      color={'white'}\n                      fontWeight={400}\n                    >\n                      Go to governance\n                    </Text>\n                    <Icon\n                      ml={1}\n                      size={'1em'}\n                      color={'white'}\n                      name={\"OpenInNew\"}\n                    />\n                  </Flex>\n                </Link>\n              </Flex>\n              {\n                <Flex\n                  mb={3}\n                  width={1}\n                  zIndex={10}\n                  position={'relative'}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                >\n                  {\n                    this.state.unclaimed && this.state.unclaimed.gt(0) ? \n                      // Sending transaction\n                      this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          textColor={'white'}\n                          cancelTextColor={'moon-gray'}\n                          cancelTextHoverColor={'white'}\n                          waitText={`Claim estimated in`}\n                          hash={this.state.processing.txHash}\n                          endMessage={`Finalizing Claim request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            color:'blue',\n                            width:[1,'45%'],\n                            mainColor:'white',\n                            contrastColor:'blue',\n                            disabled:!this.state.unclaimed || this.state.unclaimed.lte(0)\n                          }}\n                          handleClick={this.claim.bind(this)}\n                        >\n                          Claim\n                        </RoundButton>\n                      )\n                    : (\n                      <RoundButton\n                        buttonProps={{\n                          color:'blue',\n                          width:[1,'45%'],\n                          mainColor:'white',\n                          contrastColor:'blue',\n                        }}\n                        handleClick={this.closeModal.bind(this)}\n                      >\n                        Close\n                      </RoundButton>\n                    )\n                  }\n                </Flex>\n              }\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default GovModal;","import React, { Component } from 'react';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport { Flex, Text, Button, Icon, Checkbox, Input } from \"rimble-ui\";\n\nclass DelegateVesting extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    newDelegate:'',\n    delegatee:null,\n    vestingAmount:null,\n    currentDelegate:null,\n    delegateAddressValid:false,\n    delegateDifferentWallet:false,\n    vestingContractDelegated:false\n  };\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async loadData(){\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    if (idleGovTokenEnabled && this.props.account){\n      const [\n        delegatesChanges,\n        currentDelegate,\n        vestingContract,\n      ] = await Promise.all([\n        this.governanceUtil.getDelegatesChanges(),\n        this.governanceUtil.getCurrentDelegate(this.props.account),\n        this.governanceUtil.getVestingContract(this.props.account)\n      ]);\n\n      // Init flags\n      let delegatee = null;\n      let vestingAmount = null;\n      let vestingContractDelegated = false;\n\n      if (vestingContract){\n        // Take vesting amount\n        vestingAmount = await this.governanceUtil.getVestingAmount(this.props.account);\n\n        // Check Vesting Contract Delegated\n        const lastDelegateTx = delegatesChanges.filter( d => (d.returnValues.delegator.toLowerCase() === vestingContract.toLowerCase() ) ).pop();\n        delegatee = lastDelegateTx ? lastDelegateTx.returnValues.toDelegate : false;\n        vestingContractDelegated = delegatee && delegatee !== '0x0000000000000000000000000000000000000000';\n      }\n\n      return this.setState({\n        delegatee,\n        vestingAmount,\n        currentDelegate,\n        vestingContractDelegated\n      });\n    }\n    return null;\n  }\n\n  /*\n  async delegateTokens(){\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Governance',\n        eventAction: 'delegateTokens',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      };\n\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        newState.idleTokenDelegated = true;\n        this.loadData();\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.setDelegate(this.props.account,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n  */\n\n  async delegateVesting(revoke=false){\n\n    let delegate = this.state.delegateDifferentWallet ? this.state.newDelegate : this.props.account;\n    if (revoke){\n      delegate = '0x'+'0'.repeat(40);\n    }\n\n    const delegateValid = this.functionsUtil.checkAddress(delegate);\n    if (!delegateValid){\n      return false;\n    }\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Governance',\n        eventAction: 'delegateVesting',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      };\n\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        newState.delegatee=delegate;\n        newState.delegateDifferentWallet=false;\n        newState.vestingContractDelegated=!revoke;\n        this.loadData();\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.delegateVesting(this.props.account,delegate,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  changeDelegate(e){\n    const newDelegate = e.target.value;\n    const delegateAddressValid = this.functionsUtil.checkAddress(newDelegate);\n    this.setState({\n      newDelegate,\n      delegateAddressValid\n    });\n  }\n\n  setDelegateDifferentWallet(delegateDifferentWallet){\n    this.setState({\n      delegateDifferentWallet\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  render() {\n    return this.state.vestingAmount ? (\n      <Flex\n        p={2}\n        mt={3}\n        width={1}\n        border={2}\n        borderRadius={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'cardBgHover'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Text\n            mb={1}\n            fontSize={3}\n            fontWeight={500}\n            color={'flashColor'}\n            textAlign={'center'}\n          >\n            You have {this.state.vestingAmount.div(1e18).toFixed(5)} {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} in the Vesting Contract\n          </Text>\n          {\n            (this.state.vestingContractDelegated && this.state.delegatee && !this.state.delegateDifferentWallet) ? (\n              <Text\n                mb={1}\n                fontWeight={500}\n                color={'flashColor'}\n                fontSize={'15px'}\n                textAlign={'center'}\n              >\n                Currently your votes are delegated to {this.state.delegatee}\n              </Text>\n            ) : (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text\n                  mb={1}\n                  fontWeight={500}\n                  fontSize={'15px'}\n                  color={'flashColor'}\n                  textAlign={'center'}\n                >\n                  {\n                    this.state.delegateDifferentWallet ? 'Follow the next steps to delegate your tokens:' : 'Press the button below to delegate the votes in the vesting contract to yourself:'\n                  }\n                </Text>\n                {\n                  this.state.delegateDifferentWallet && (\n                    <Flex\n                      mb={2}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={ this.state.delegateAddressValid ? 'CheckBox' : 'LooksOne'}\n                          color={ this.state.delegateAddressValid ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                        />\n                        <Text\n                          ml={1}\n                          fontWeight={500}\n                          fontSize={'15px'}\n                          textAlign={'left'}\n                          color={'flashColor'}\n                        >\n                          Insert delegate address\n                        </Text>\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={'LooksTwo'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          ml={1}\n                          fontWeight={500}\n                          fontSize={'15px'}\n                          color={'flashColor'}\n                          textAlign={'left'}\n                        >\n                          Delegate Vesting\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n        {\n          this.state.delegateDifferentWallet && (\n            <Input\n              mb={2}\n              min={0}\n              type={'text'}\n              required={true}\n              borderRadius={2}\n              fontWeight={500}\n              textAlign={'center'}\n              width={['100%','30em']}\n              borderColor={'cardBorder'}\n              backgroundColor={'cardBg'}\n              boxShadow={'none !important'}\n              value={this.state.newDelegate}\n              placeholder={`Insert delegate address`}\n              onChange={this.changeDelegate.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n            />\n          )\n        }\n        {\n          this.state.processing && this.state.processing.loading ? (\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <TxProgressBar\n                {...this.props}\n                waitText={`Delegate estimated in`}\n                hash={this.state.processing.txHash}\n                endMessage={`Finalizing delegate request...`}\n                cancelTransaction={this.cancelTransaction.bind(this)}\n              />\n            </Flex>\n          ) : (this.state.vestingContractDelegated && !this.state.delegateDifferentWallet) ? (\n            <Button\n              size={'small'}\n              mainColor={'red'}\n              onClick={ e => this.delegateVesting(true) }\n            >\n              REVOKE DELEGATE\n            </Button>\n          )\n          /*\n          : !this.state.idleTokenDelegated && !this.state.delegateDifferentWallet ? (\n            <Button\n              size={'small'}\n              onClick={ e => this.delegateTokens() }\n            >\n              DELEGATE TOKENS\n            </Button>\n          )*/\n          : (!this.state.vestingContractDelegated || this.state.delegateDifferentWallet) && (\n            <Button\n              size={'small'}\n              mainColor={'blue'}\n              onClick={ e => this.delegateVesting(false) }\n              disabled={ this.state.delegateDifferentWallet && !this.state.delegateAddressValid }\n            >\n              DELEGATE VESTING\n            </Button>\n          )\n        }\n        <Checkbox\n          mt={1}\n          required={false}\n          color={'#f3f6ff'}\n          label={`Delegate to different wallet`}\n          checked={this.state.delegateDifferentWallet}\n          onChange={ e => this.setDelegateDifferentWallet(e.target.checked) }\n        />\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default DelegateVesting;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport MenuAccount from '../MenuAccount/MenuAccount';\nimport GovModal from \"../utilities/components/GovModal\";\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport { Box, Flex, Text, Icon, Button } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport DelegateVesting from '../DelegateVesting/DelegateVesting';\n\nclass DashboardHeader extends Component {\n\n  state = {\n    unclaimed:null,\n    vestingAmount:null,\n    govModalOpened:false\n  }\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      await this.loadData();\n    }\n  }\n\n  async loadData(){\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    if (idleGovTokenEnabled && this.props.account){\n      const unclaimed = await this.idleGovToken.getUnclaimedTokens(this.props.account);\n      return this.setState({\n        unclaimed\n      });\n    }\n    return null;\n  }\n\n  setConnector = async (connectorName) => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventAction: 'logout',\n      eventCategory: 'Connect'\n    });\n\n    if (typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.setConnector(connectorName);\n  }\n\n  async exit(){\n    this.props.goToSection('/',false);\n  }\n\n  setGovModal(govModalOpened){\n    this.setState({\n      govModalOpened\n    });\n  }\n\n  render() {\n    return (\n      <Box\n        mb={3}\n      >\n        <Flex\n          pb={2}\n          width={1}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n          alignItems={['flex-end','center']}\n          borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n        >\n          <MenuAccount\n            {...this.props}\n            setGovModal={this.setGovModal.bind(this)}\n          />\n        </Flex>\n        {\n          this.state.unclaimed && this.state.unclaimed.gt(0) ? (\n            <DashboardCard\n              cardProps={{\n                p:2,\n                mt:3,\n                width:1,\n              }}\n              isActive={true}\n              isInteractive={false}\n            >\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <Text\n                  fontWeight={500}\n                  fontSize={'15px'}\n                  color={'flashColor'}\n                  textAlign={'center'}\n                >\n                  IDLE Governance Token is now available, \n                  <ExtLink\n                    ml={1}\n                    fontWeight={500}\n                    color={'primary'}\n                    fontSize={'15px'}\n                    hoverColor={'primary'}\n                    href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n                  >\n                    discover more\n                  </ExtLink>! You have {this.state.unclaimed.toFixed(4)} IDLE tokens to claim.\n                </Text>\n                <Button\n                  ml={[0,2]}\n                  mt={[2,0]}\n                  size={'small'}\n                  mainColor={'blue'}\n                  onClick={ e => this.setGovModal(true) }\n                >\n                  CLAIM NOW\n                </Button>\n              </Flex>\n            </DashboardCard>\n          ) : this.props.isDashboard && (\n            <DashboardCard\n              cardProps={{\n                p:2,\n                mt:3,\n                width:1,\n              }}\n              isActive={true}\n              isInteractive={false}\n            >\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <Icon\n                  mr={1}\n                  size={'1.2em'}\n                  color={'flashColor'}\n                  name={'LightbulbOutline'}\n                />\n                <Text\n                  fontWeight={500}\n                  fontSize={'15px'}\n                  color={'flashColor'}\n                  textAlign={'center'}\n                >\n                  Do you have any idea to improve the Idle Protocol? Let's discuss it in our\n                </Text>\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={this.functionsUtil.getGlobalConfig(['forumURL'])}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Governance Forum\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </Flex>\n            </DashboardCard>\n          )\n        }\n        {\n          this.props.isGovernance && \n            <DelegateVesting\n              {...this.props}\n            />\n        }\n        <GovModal\n          {...this.props}\n          isOpen={this.state.govModalOpened}\n          claimCallback={this.loadData.bind(this)}\n          closeModal={e => this.setGovModal(false) }\n        />\n      </Box>\n    );\n  }\n}\n\nexport default DashboardHeader;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balanceButton\":\"MenuAccount_balanceButton__3t7wZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bell\":\"Notifications_bell__5m9tk\",\"active\":\"Notifications_active__2Mwzv\",\"ring\":\"Notifications_ring__1ir3w\",\"counter\":\"Notifications_counter__3EbuS\",\"list\":\"Notifications_list__2pkAk\",\"notification\":\"Notifications_notification__TMlFX\",\"dark\":\"Notifications_dark__14hO4\"};"],"sourceRoot":""}