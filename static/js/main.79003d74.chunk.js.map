{"version":3,"sources":["ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetField/AssetField.js","SmartNumber/SmartNumber.js","PageNotFound/PageNotFound.module.scss","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","IconBox/IconBox.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","FlexLoader/FlexLoader.js","PortfolioEquity/PortfolioEquity.js","ChartCustomTooltip/ChartCustomTooltip.js","ImageButton/ImageButton.js","RoundButton/RoundButton.js","ExtLink/ExtLink.js","theme.js","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","utilities/components/ModalCard.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","utilities/components/Header.module.scss","TxProgressBar/TxProgressBar.js","AssetSelector/AssetSelector.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","GenericSelector/GenericSelector.js","Title/Title.js","GenericChart/GenericChart.js","DashboardCard/DashboardCard.module.scss","FastBalanceSelector/FastBalanceSelector.js","TokenSwap/TokenSwap.js","SendTxWithBalance/SendTxWithBalance.js","ETHWrapper/ETHWrapper.js","NexusMutual/NexusMutual.js","CustomField/CustomField.js","CustomList/CustomList.js","PortfolioDonut/PortfolioDonut.js","TotalEarningsCounter/TotalEarningsCounter.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","TotalBalanceCounter/TotalBalanceCounter.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","configs/globalConfigs.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","TableRow/TableRow.js","TableHeader/TableHeader.js","Migrate/Migrate.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","colors.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","utilities/components/BuyModal.js","utilities/components/ModalCard.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","CardIconButton/CardIconButton.js"],"names":["ChartCustomTooltipRow","prevProps","prevState","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","mb","width","alignItems","flexDirection","pr","style","flexBasis","flex","justifyContent","this","props","color","mr","height","borderRadius","backgroundColor","fontSize","fontWeight","textAlign","textTransform","label","whiteSpace","dangerouslySetInnerHTML","__html","value","Component","AssetField","state","ready","functionsUtil","componentUnmounted","loadField","_callee","fieldName","isRisk","setState","fieldInfo","fieldProps","decimals","addGovTokens","output","govTokens","getGovTokensDistributionSpeed","tokenPrice","_ref2","oldContractBalanceFormatted","_ref3","redeemableBalanceCurveEnd","redeemableBalanceCurveStart","_ref4","redeemableBalanceEnd","redeemableBalanceStart","_ref5","_ref6","earningsCounter","feePercentage","feesStart","feesEnd","_ref7","_ref8","curveApy","earningsCurveStart","amountLentCurve","earningsCurveEnd","_ref9","_ref10","tokenAPY2","earningsStart","amountLent2","earningsEnd","tokenScore","tokenAPR","oldTokenConfig","tokenAPY","govTokensAprs","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","cachedDataKey","cachedData","startTimestamp","y","i","mDate","x","frequencySeconds","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","path","_args","arguments","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","wrap","_context","prev","next","length","undefined","_this","token","tokenConfig","abrupt","selectedStrategy","name","isMobile","t0","loadAssetField","account","sent","setStateSafe","tokenBalance","toString","getTokenGovTokens","showPrice","fee","checkMigration","amountToMigrate","amountLent","idleTokenBalance","earnings","Promise","all","getTokenFees","Object","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","times","getCurveAPY","gt","div","plus","redeemableBalance","getTokenScore","score","poolSize","earningsPercCurveDirection","parseFloat","earningsPercCurve","toFixed","earningsPerc","earningsPercDirection","showAPR","migration","oldContract","assign","idle","protocols","values","oldProtocols","forEach","oldProtocol","foundProtocol","find","p","protocolPos","indexOf","isNaN","oldAPY","tokenAPYNoGov","curveAvgSlippage","showTooltip","getGovTokensAprs","t1","allocationChartRowElement","document","getElementById","parentId","rowId","$allocationChartRowElement","window","jQuery","innerWidth","css","innerHeight","parseInt","Math","min","removeEventListener","bind","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","addEventListener","getGlobalConfig","max","strToMoment","Date","format","subtract","_d","getTime","concat","address","getCachedData","id","join","data","add","random","push","getFrequencySeconds","getTokenApiData","d","timestamp","fixTokenDecimals","idleRate","setCachedData","aprChartRowElement","$aprChartRowElement","Line","pointSize","lineWidth","useMesh","axisLeft","animate","axisBottom","enableArea","areaOpacity","curve","enableGridX","enableGridY","pointBorderWidth","isInteractive","colors","defs","linearGradientDef","offset","enableSlices","yFormat","fill","match","margin","top","right","bottom","left","sliceTooltip","slideData","slice","point","points","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","map","protocolName","serieId","protocolEarning","yFormatted","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","key","chartProps","keys","PerformanceChartRowElement","$PerformanceChartRowElement","clone","idlePrice","minus","blocknumber","pointLabelYOffset","getArrayPath","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","stop","setProps","FunctionsUtil","loadUtils","newState","callback","tokenChanged","accountChanged","mobileChanged","themeModeChanged","themeMode","fieldChanged","contractInitialized","contractsInitialized","transactionsChanged","transactions","filter","tx","status","_this2","oldState","_this3","loader","showLoader","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","size","flexProps","funcProps","maxPrecision","minPrecision","icon1","icon","placement","message","tooltipProps","src","icon2","strategyIcon","strategy","strategyName","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","number","react_countup__WEBPACK_IMPORTED_MODULE_11___default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","abbreviateNumber","_ref11","countUpRef","ref","_ref12","_ref13","_ref14","_ref15","govTokenConfig","govTokenIndex","distributionFrequency","position","ml","zIndex","boxShadow","showDirection","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","direction","earningsCurve","governanceTokenName","idleTokenConfig","idleDistribution","userDistributionSpeed","distributionSpeed","iconProps","govToken","tooltipMode","buttonLabel","onClick","handleClick","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","type","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__","loaderProps","loaderText","selectedToken","inline","CustomComponent","customValue","BNify","SmartNumber","Icon","customFieldName","pop","customFieldProps","Text","formattedValue","_isBigNumber","formattedNumber","formatMoney","precision","showUnit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unit","unitProps","module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","ShortHash","shortenHash","hash","shortHash","txStart","substr","txEnd","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","display","React","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","buttonProps","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","IconBox","cardProps","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","text","mt","textProps","children","TransactionListFilters","maxWidth","minWidth","maxHeight","isOpened","activeFilters","assets","actions","setFilter","objectSpread","defineProperty","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","DashboardCard","py","px","transition","cursor","overflow","borderTop","theme","divider","filters","filterCategory","filterValues","TableCellHeader","pb","toUpperCase","filterValue","filterLabel","isChecked","my","checked","radioBtn","onChange","e","mainColor","v","filterName","hoverColor","TransactionsList","page","prevTxs","txsPerPage","loading","totalTxs","totalPages","deposit","redeem","send","receive","migrate","swap","swapout","withdraw","completed","pending","failed","renderedTxs","processedTxs","lastBlockNumber","processTxs","availableActions","action","toLowerCase","txsIndexes","includes","sort","b","timeStamp","ceil","availableTokens","date","getTxAction","parsedValue","tokenAmount","amount","momentDate","preventDefault","loadTxs","JSON","stringify","enabledTokens","count","firstBlockNumber","enabledActions","getEtherscanTxs","etherscanTxs","hashKey","lastTx","blockNumber","_this4","hasActiveFilters","m","FlexLoader","minHeight","pt","src_TransactionListFilters_TransactionListFilters","TableHeader","cols","index","txHash","txHashKey","TableRow","rowProps","transaction","open","cardId","fieldComponent","TransactionField","prevPage","nextPage","h3","fontFamily","CustomTooltip","react__WEBPACK_IMPORTED_MODULE_6___default","itemPos","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","xFormatted","AllocationChart","chartData","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","loadData","getTokenAllocation","padAngle","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","onMouseEnter","onMouseLeave","tooltipFormat","sliceLabel","radialLabel","tooltip","container","background","cardBg","labels","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","protocolInfo","protocolAddr","protocolAllocationPercParsed","globalConfigs","stats","hsl","capitalize","protocolIcon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","CustomTooltipRow","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","componentDidMount","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","mark","_callee3","filteredTxs","_context3","lt","balance","idleTokens","_x3","apply","currentDate","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","tokensData","_callee4","_context4","_x4","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","filteredTokenData","tokenDecimals","filteredBalances","lastFilteredTx","newBalance","lastTxBalance","tokenUsdConversionRate","conversionRateField","chartToken","conversionRate","isSameOrAfter","isSameOrBefore","formattedDate","_loop","aggregatedBalances","balances","itemIndex","item","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","xScale","yScale","stacked","xFormat","legend","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","tickRotation","pointLabel","areaBaselineValue","pointColor","axis","ticks","grid","line","stroke","lineChartStroke","strokeDasharray","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","parentIdHeight","ChartCustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","ImageButton","image","imageSrc","imageProps","iconName","caption","isActive","contrastColor","buttonStyle","Fragment","badge","bgColor","captionPos","subcaption","split","lineHeight","RoundButton","ExtLink","target","rel","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","fontSizes","fontWeights","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","disabled","primary","blue","base","gradient-bg","primary-light","light","primary-dark","dark","bgBlue","dark-blue","skyBlue","lightBlue","copyColor","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","menuBg","menuHover","flashColor","menuRightBorder","cardHoverShadow","cardBgHover","cardBorder","boost","curvein","default","curveout","curvedepositin","curvedepositout","actionBg","blacks","whites","zIndices","messageStyle","shade","tint","success","green","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","bg","button","gradientButton","empty","select","selectDark","input","TxProgressBar","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","initProgressBar","getTransaction","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","customLog","web3","eth","err","_x","_x2","getBlockTime","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txProgressBarData","_context7","localStorage","getItem","parse","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","href","cancelTransaction","cancelTextColor","cancelTextHoverColor","AssetSelector","options","defaultValue","CustomOptionValue","CustomValueContainer","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","showCustomField","showBalance","selectProps","innerProps","loadComponents","selectedTokenChanged","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","isSearchable","changeToken","hashChanged","textOverflow","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","align","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_12__","border","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","tokenSymbol","GenericSelector","optionsChanged","defaultValueChanged","componentsChanged","ControlComponent","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","CustomInputContainer","searchInput","searchInputHidden","CustomOption","selectedValue","o","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","Title","HeadingComponent","component","Heading","h1","GenericChart","handleWindowSizeChange","chartContainer","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","defaultOpacity","hidden","interactive","rainbow","FastBalanceSelector","onMouseDown","replaceArrayProps","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","baseToken","regenerator_default","selectDestToken","getGlobalConfigs","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","enabled","remoteResources","url","j","scriptID","script","remoteResourceParams","precall","readyState","onreadystatechange","onload","async","parentElement","appendChild","head","stylesheetId","loadTokens","toolProps","asyncToGenerator","getContractByName","abi","initContract","fromTokenChanged","destTokenChanged","loadKyberWidget","SendTxWithBalance","inputValue","txSucceeded","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","lte","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","eventData","getTransactionError","transactionHash","enableERC20","contractInfo","executeTx","_amount","params","callbackReceipt","methodName","methodParams","contractName","normalizeTokenAmount","getTransactionParams","eventValue","contractMethodSendWrapper","approveCallback","actionChanged","tokenBalanceChanged","contractChanged","tokenConfigChanged","changeInputCallback","approveEnabled","checkTokenApproved","infoBox","steps","step","stepIndex","link","description","balanceSelectorInfo","required","placeholder","approveDescription","ETHWrapper","balanceETH","balanceWETH","loadBalance","updateActionData","contract","getETHBalance","getTokenBalance","mintLog","txReceipt","logs","log","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","depositOnly","CardIconButton","iconColor","iconBgColor","setAction","src_SendTxWithBalance_SendTxWithBalance","transactionSucceeded","connectAndValidateAccount","NexusMutual","1","2","3","amountValue","periodValue","quoteResponse","changeAmount","changePeriod","makeRequest","textDecoration","activeColor","changeSelectedToken","getQuote","CustomField","componentHasChildren","fieldType","fieldPath","row","Image","Button","CustomList","rows","rowIndex","PortfolioDonut","totalFunds","parentWidth","selectedTokenConfig","loadPortfolio","portfolio","getIdleTokenPrice","convertTokenBalance","getGovTokensUserBalances","govTokensUserBalances","govTokenBalance","tokenPercentage","tokenColorHsl","round","radialLabelsLinkOffset","itemWidth","itemHeight","translateY","symbolSize","anchor","itemTextColor","symbolShape","effects","on","convertToken","TotalEarningsCounter","loadTotalEarnings","availableStrategies","counterStyle","getAccountPortfolio","totalEarnings","totalAmountLent","avgAPY","build_default","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","90","2 Years","5 Years","loadEarnings","aggregatedEarnings","earningsYear","amountDeposited","avgBuyPrice","idleTokenPrice","tokenAprs","earningsPercStep","possibleSteps","maxPossibleStep","getAmountDeposited","getAvgBuyPrice","slicedToArray","getTokenAprs","avgApr","avgApy","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","tokenEarnings","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","gte","pl","src_TotalEarningsCounter_TotalEarningsCounter","estimationLabel","DashboardIconButton","TotalBalanceCounter","counterEnd","counterStart","StrategyPage","tokensToMigrate","aggregatedValues","activeCoverages","depositedTokens","remainingTokens","batchedDeposits","portfolioLoaded","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","portfolioEquityQuickSelection","getActiveCoverages","getBatchedDeposits","getTokensToMigrate","c","statusColors","statusIcon","statusColor","portfolioCoverage","totalBalance","statusIconProps","reduce","batchInfo","deposited","batchDeposits","redeemable","batchRedeems","avgScore","amountLentToken","tokenWeight","getGovTokensUserTotalBalance","govTokensTotalBalance","govTokensUserBalance","govTokensTotalBalanceTooltip","viewOnly","connectorName","apyLong","riskScore","yieldFarming","batchDepositConfig","coverProtocolConfig","src_TotalBalanceCounter_TotalBalanceCounter","totalEarningsPerc","titleProps","src_PortfolioDonut_PortfolioDonut","aligItems","setPortfolioEquityQuickSelection","AssetsList","fields","mobile","parentProps","goToSection","route","borderBottom","h4","desc","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","src_CustomList_CustomList","fileClaimUrl","openWindow","src_EarningsEstimation_EarningsEstimation","textSize","BatchDeposit","canClaim","batchTotals","canDeposit","execute","claim","usePermit","lastExecution","permitEnabled","hasDeposited","permitSigned","showPermitBox","currBatchIndex","batchCompleted","claimSucceeded","componentLoaded","executeSucceeded","migrationEnabled","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","urlParams","param2","selectToken","executeSucceededChanged","contractApprovedChanged","callbackExecute","callbackReceiptExecute","migrationContract","migrationContractInfo","getBatchedDepositExecutions","genericContractCall","batchExecutions","functions","functionInfo","nonceMethod","permitContract","methods","batchIndex","batchTotal","batchRedeem","batchDeposit","batchDepositInfo","depositEnabled","availableStrategiesKeys","strategyConfig","selectStrategy","_this5","obj","baseTokenConfig","strategyAvailableTokens","migrateFunction","setStrategyToken","_this6","batchId","callbackClaim","_this7","callbackReceiptClaim","_this8","canExecuteBatch","strategyDefaultValue","s","openTooltipModal","isDisabled","togglePermitEnabled","Migrate","showActions","getTokenPrice","isMigrationTool","showBalanceSelector","migrationIcon","migrationParams","toMigrate","callbackPermit","migrationText","minPoolSize","utc","CoverProtocol","swapInfo","selectedAction","successMessage","defaultCoverage","selectedCoverage","collateral","selectedActionChanged","inputValueChanged","swapInfoChanged","updateData","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","pow","expirationTimestamp","integerValue","balancerTokenConfig","tokens","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","apy","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","isClaim","now","apyPrice","currTime","coverages","expirationDate","selectCoverage","coverage","isMint","isBuyClaim","isBuyNoClaim","txAction","BuyModal","showInline","availableMethods","buyToken","TokenMigration","changeFromToken","convertTool","tokenInfo","destTokenConfig","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","env","process","appName","version","baseURL","forumURL","darkModeEnabled","betaURL","countries","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","errorsEnabled","messagesEnabled","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","fortmatic","portis","authereum","torus","trezor","ledger","custom","newsletterSubscription","endpoint","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","batchDepositExecutionSchedule","curveInstructions","analytics","google","events","debugEnabled","addPostfixForTestnet","modals","first_deposit_referral","first_deposit_share","welcome","frequency","dashboard","baseRoute","mode","governance","test","startBlock","tokenName","availableContracts","IDLE","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","contracts","delegates","n_coins","imageInactive","rates","poolContract","CurvePool","depositContract","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","coinIndex","idleUSDCYield","idleUSDTYield","permit","DAI","EIPVersion","USDC","showAUM","protocol","disabledTokens","aprTooltipMode","COMP","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","UniswapRouter","UniswapV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","assetData","affiliateInfo","feeRecipient","strategies","best","comingSoon","titlePostfix","govTokensEnabled","chartColor","iconInactive","iconInactiveDark","descLong","descShort","risk","new","TTL","tvls","substack","scores","config","headers","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","endTimestamp","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","rgb","hex","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","WETH","idleDAI+idleUSDC+idleUSDT","compound","compoundWithCOMP","rateField","fulcrum","dsr","dydx","iearn","aave","aavev2","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","permitType","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","network","availableNetworks","4","42","1337","isForked","requiredNetwork","blocksPerYear","requiredConfirmations","accountBalanceMinimum","providers","infura","etherscan","endpoints","snapshot","whitelist","proposals","urls","biconomy","enableLogin","supportedNetworks","disabledWallets","limits","debug","apiKey","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","apiId","terminal","REACT_APP_TERMINAL_KEY","projectId","REACT_APP_TERMINAL_PROJECT_ID","source","web3Version","Web3Versions","one","simpleID","getNetwork","networkId","networkName","appOrigin","location","origin","appId","renderNotifications","notifications","tools","ethWrapper","subComponent","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","permitName","batchMigration","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","oldAddresses","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","directProps","showAllTokens","insurance","ETH","ens","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","payments","bank","defaultProvider","showDefaultOnly","card","wallet","wyre","supportedMethods","supportedCountries","supportedTokens","envParams","accountId","prod","getInfo","selectedMethod","buyParams","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","innerHTML","body","wyreStyle","ramp","hostAppName","userAddress","hostApiKey","REACT_APP_RAMP_KEY","variant","hostLogoUrl","swapAsset","RampInstantSDK","event","getAccountBalance","getTokenDecimals","payload","purchase","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","selectedCountry","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","onSuccess","onClose","tokenParams","RimbleWeb3_context","chainId","provider","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","contractAddress","decodeLogsData","internalType","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","IdleGovToken","classCallCheck","getBalance","claimRewards","getPriorVotes","priorVotes","_args3","refreshIdleSpeed","getUnclaimedTokens","getAPR","IDLETokenConfig","APR","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","getDistribution","getUniswapConversionRate","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","totalSpeed","_args10","_context10","_callee9","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","idleGovToken","trimEth","toBN","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","childNodes","nodeValue","BNify_obj","BigNumber","String","_len","Array","_key","moment","customLogError","_console","_len2","_key2","console","normalizeSimpleIDNotification","replace","str","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","t","animateScroll","val","getQueryStringParameterByName","results","RegExp","exec","decodeURIComponent","depositProxyContractInfo","migrationContractAddr","migrationContractOldAddrs","batchMigrationContractAddr","isMigrationTx","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","orderedTokensBalance","totalBalanceConverted","tokenBalanceConverted","getCurveAvgSlippage","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args4","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","getCurveAvgBuyPrice","_args5","prevAvgBuyPrice","idleTokensBalance","getFirstDepositTx","deposits","_args7","firstDepositTx","asyncTimeout","ms","getDepositTimestamp","firstDepositTxs","_args8","acc","userAvgPrice","getAmountLent","amountLents","getEtherscanBaseTxs","endBlockNumber","firstIdleBlockNumber","etherscanInfo","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","requestCount","requestStatus","cachedRequests","_args11","REACT_APP_ETHERSCAN_KEY","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","toConsumableArray","saveEtherscanTxs","filterCurveTxs","txsToStore","cachedRequest","saveCachedRequest","_callee13","allAvailableTokens","_args13","_context13","processStoredTxs","_ref19","_callee14","_args14","_context14","_ref20","_callee15","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args15","_context15","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenDecimal","tokenValue","newValue","iTxs","withdrawnValue","processEtherscanTransactions","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref21","_callee20","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args20","_context20","baseTokenAddress","_ref22","_callee19","minedTxs","_context19","_ref23","_callee18","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context18","getCurveTokenPrice","_ref24","_callee16","_context16","getTransactionReceipt","_x11","_x12","topics","baseTokensConfig","t2","_ref25","_callee17","_context17","_x13","_x14","_x9","_x10","_ref26","_callee26","txsToProcess","_args26","_context26","_ref27","_callee25","_context25","_ref28","_callee24","isStoredTx","allowedMethods","pendingStatus","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context24","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","method","created","_ref29","_callee21","_context21","_x19","_x20","_ref30","_callee22","_context22","_x21","_x22","raw","_ref31","_callee23","_context23","_x23","_x24","decodeLog","_token","_x17","_x18","_x16","_x15","alias","getCustomAddress","setCustomAddress","customAddress","_ref32","_callee27","error_callback","_args27","_context27","catch","_x25","_ref33","_callee28","return_data","_args28","_context28","_x26","code","errorCode","array","prop","shift","configs","checkUrlOrigin","checkUrlBeta","_ref34","_callee30","googleEventsInfo","originOk","currentNetwork","_args30","_context30","ga","_ref35","_callee29","_context29","hitCallback","hitCallbackFail","_x28","_x29","_x27","createContract","_ref36","_callee31","_context31","Contract","_x30","_x31","_x32","getWalletProvider","simpleIDPassUserInfo","userInfo","email","initSimpleID","passUserInfo","getEtherscanTransactionUrl","tx_address","getEtherscanAddressUrl","decimalCount","thousands","abs","negativeSign","Number","getSnapshotProposals","_callee34","activeOnly","validProposals","_args34","_context34","addr","msg","_ref38","_callee33","checkedStrategies","_context33","metadata","_ref39","_callee32","_context32","symbol","_x34","_x33","_ref40","_callee35","forceStartTimestamp","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args35","_context35","_x35","_ref41","_callee36","_context36","_x36","aprs","allocations","aprWeighted","allocation","apr","quantity","hour","day","week","getProtocolInfoByAddress","ROUND_FLOOR","normalizeTokenDecimals","normalizedTokenDecimals","exchangeRate","checkContractPaused","_callee37","contractPaused","_args37","_context37","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref43","_callee39","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context39","lastAllocationsPromise","_ref44","_callee38","lastAllocations","_context38","_x38","_x39","alloc","_x37","_ref45","_callee40","oldContractBalance","oldContractTokenDecimals","oldContractName","_context40","getContractBalance","_x40","_x41","_ref46","_callee41","signedParameters","callback_receipt","_contract$methods","_context41","getGasPrice","once","confirmationNumber","receipt","_x42","_x43","_x44","_x45","_x46","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref47","_callee42","biconomyInfo","res","_context42","x-api-key","_x47","sendTxWithPermit","_ref48","_callee43","_contract$methods2","messageToSign","_this$getSignaturePar","_context43","encodeABI","_address","personal","sign","_x48","_x49","_x50","_x51","_x52","_x53","buildBiconomyErc20ForwarderTx","_ref49","_callee44","tokenAddress","callData","gasLimit","_context44","erc20ForwarderClient","buildTx","txGas","_x54","_x55","_x56","_x57","_x58","sendBiconomyTxWithErc20Forwarder","_ref50","_callee45","req","metaInfo","txResponse","fetchReceiptIntervalId","_context45","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x59","_x60","_x61","_x62","sendBiconomyTxWithPersonalSign","_ref51","_callee46","_this$getSignaturePar2","_context46","getNonce","call","_x63","_x64","_x65","_x66","signPermitEIP2612","_ref52","_callee47","erc20Name","owner","spender","deadline","domain","domainData","_context47","getChainId","verifyingContract","types","EIP712Domain","Permit","primaryType","currentProvider","jsonrpc","substring","_x67","_x68","_x69","_x70","_x71","_x72","_x73","_x74","signPermit","_ref53","_callee48","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","_args48","_context48","net","getId","allowed","response","_x75","_x76","_x77","_ref54","_callee49","permitParams","methodAbi","useNonce","_args49","_context49","_jsonInterface","f","inputs","unshift","_x78","_x79","_x80","_x81","_x82","_x83","_x84","sendSignedTx","_ref55","_callee50","MetaTransaction","dataToSign","_context50","_x85","_x86","_x87","_x88","_x89","_ref56","_callee51","contractAddr","walletAddr","_ref57","_ref58","allowance","_context51","getAllowance","_x90","_x91","_x92","_ref59","_callee52","_context52","_x93","_x94","_x95","txData","disableERC20","toTwosComplement","_ref60","_callee53","field","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref61","_ref62","curveAvgBuyPrice","curveTokenBalance","_ref63","_ref64","amountLentCurve1","redeemableBalanceCurve","_ref65","_ref66","earningPerYear","_ref67","_ref68","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref69","_ref70","tokenPriceFirstDeposit","_ref71","_ref72","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref73","_ref74","tokenAPY1","_earningPerYear","_govTokenConfig2","_ref75","_ref76","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","_ref77","_ref78","amountLentCurve2","redeemableBalanceCurve1","_ref79","_ref80","redeemableBalance2","_args53","_context53","getCurveTokenBalance","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getIdleGovToken","t3","getCompDistribution","t4","getCompAvgApr","t5","t6","t7","getUserTokenFees","t8","t9","getGovTokenUserBalance","_x96","_x97","_x98","_x99","getIdleTokenSupply","_ref81","_callee54","idleTokenSupply","_args54","_context54","_x100","getIdleTokenPriceWithFee","_ref82","_callee55","_ref83","_ref84","priceWFee","_args55","_context55","eq","_x101","_x102","_ref85","_callee56","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args56","_context56","_x103","clearCachedData","useLocalStorage","_ref86","_callee57","_ref87","_ref88","idleTokensTotalSupply","userShare","_context57","_x104","_x105","_callee59","_args59","_context59","_ref90","_callee58","coverageTokens","protocolImage","_context58","_x106","_ref91","_callee60","etherscanEndpoint","_context60","_x107","_callee62","filter_by_status","_args62","_context62","_ref93","_callee61","_ref94","_ref95","_context61","_x108","_ref96","_callee63","fixDecimals","_args63","_context63","_x109","_ref97","_callee64","_ref98","_ref99","_args64","_context64","_x110","_x111","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","attr","isValidJSON","checkAddress","_ref100","_callee65","_args65","_context65","_x112","_x113","getProtocolBalance","_ref101","_callee66","_context66","_x114","_x115","getAprs","_ref102","_callee67","_context67","_x116","genericIdleCall","_ref103","_callee68","callParams","_args68","_context68","_x117","estimateGas","_ref104","_callee69","_contract$methods3","_args69","_context69","_x118","_x119","getTxDecodedLogs","_ref105","_callee71","logAddr","decodeLogs","internalTransfers","_context71","_ref106","_callee70","_context70","_x124","_x125","_x120","_x121","_x122","_x123","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee72","_context72","getContractPastEvents","_ref108","_callee73","_args73","_context73","getPastEvents","_x126","_x127","_ref109","_callee74","_contract$methods4","_args74","_context74","_x128","_x129","_ref110","_callee75","_args75","_context75","_x130","_x131","apr2apy","getUnlentBalance","_ref111","_callee76","unlentBalance","_context76","_x132","_ref112","_callee77","_args77","_context77","_x133","_ref113","_callee79","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_args79","_context79","totalAllocationConverted","totalAllocationWithUnlentConverted","_ref114","_callee78","_ref115","_ref116","protocolBalance","protocolAllocation","_context78","_x135","_x136","protocolAllocationPerc","getGovTokensBalances","total","getTokenConversionRate","_x134","getUniswapConversionRate_path","_ref117","_callee80","unires","_context80","_x137","_ref118","_callee81","tokenConfigFrom","tokenConfigDest","WETHAddr","_context81","_x138","_x139","getCurveDepositedTokens","_ref119","_callee82","idleTokensBalances","remainingCurveTokens","_args82","_context82","_x140","getCurveUnevenTokenAmounts","_ref120","_callee83","amounts","max_burn_amount","unevenAmounts","_context83","getCurveDepositContract","_x141","_x142","_callee84","curveRatesInfo","_context84","strategyTokens","getCurveAPYContract","_callee85","blocksForPrevTokenPrice","_ref123","_ref124","prevTokenPrice","blocksMultiplier","curveAPR","_context85","getCurveTokenSupply","_callee86","_context86","getCurvePoolContract","_callee87","_args87","_context87","_callee88","_args88","_context88","_ref128","_callee89","_ref129","_ref130","_context89","_x143","_callee90","depositContractInfo","_context90","getCurveZapContract","_callee91","zapContractInfo","_context91","_callee92","poolContractInfo","_context92","getCurveSwapContract","_callee93","_context93","getCurveIdleTokensAmounts","_callee95","max_slippage","curveTokenSupply","curveTokenShare","_args95","_context95","_ref136","_callee94","curveIdleTokens","_context94","_x144","getCurveTokensAmounts","_callee97","useCoinIndex","_args97","_context97","_ref138","_callee96","_ref139","_ref140","totalTokenSupply","_context96","_x145","getCurveAmounts","_ref141","_callee99","_args99","_context99","_ref142","_callee98","_context98","_x148","_x146","_x147","getCurveTokenAmount","_ref143","_callee100","_args100","_context100","_x149","getCurveSlippage","_ref144","_callee101","uneven_amounts","_ref145","_ref146","virtualPrice","Sv","_args101","_context101","_x150","_x151","getCompAPR","_ref147","_callee102","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args102","_context102","_x152","_x153","getCompSpeed","_ref148","_callee103","cTokenAddress","compSpeed","_context103","_x154","_ref149","_callee104","annualize","cTokenInfo","compoundAllocationPerc","_ref150","_ref151","cTokenTotalSupply","compoundPoolShare","_args104","_context104","_x155","_callee106","_args106","_context106","_ref153","_callee105","_ref154","_ref155","_context105","_x156","_callee108","_args108","_context108","_ref157","_callee107","_ref158","_ref159","compApr","_context107","_x157","getTokensCsv","_callee111","csv","_context111","prototype","sum","pv","cv","avg","_ref161","_callee110","_context110","_ref162","_callee109","header","aprAvg","scoreAvg","lastRow","_context109","protocolsData","p1","p2","rate","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","_x159","_x158","_callee113","_args113","_context113","_ref164","_callee112","compTokenBalance","_context112","_x160","speed","getGovTokensUserDistributionSpeed","_ref165","_callee115","govTokensUserDistribution","_args115","_context115","_ref166","_callee114","_context114","_x162","_x161","_ref167","_callee117","govTokensDistribution","_args117","_context117","_ref168","_callee116","govSpeed","_context116","_x164","_x163","_ref169","_callee119","_args119","_context119","_ref170","_callee118","_ref171","_ref172","compoundInfo","_context118","_x167","_x165","_x166","_callee121","_args121","_context121","_ref174","_callee120","tokenConversionRate","fromTokenConfig","_context120","_x168","getGovTokenConfigByAddress","_callee122","checkShowBalance","govTokensEarnings","_args122","_context122","govTokenAmount","_callee125","govTokenConfigForced","_args125","_context125","_ref177","_callee124","govTokensAmounts","_context124","_ref178","_callee123","govTokenAddress","_context123","_x170","_x171","_x169","_callee126","_args126","_context126","_callee127","_ref181","_ref182","gain","fees","_args127","_context127","_ref183","_callee128","_args128","_context128","_x172","getTotalTVL","_callee129","tokensTVL","_context129","getTokensTVL","totalTVL","tokenTVL","_callee133","_context133","_ref186","_callee132","_context132","_ref187","_callee131","oldTokenTVL","idleTokenName","_ref188","_ref189","totalSupply","_ref193","_ref194","oldTokenPrice","oldTotalSupply","_context131","_ref190","_callee130","_ref191","_ref192","govTokenConversionRate","govTokenBalanceConverted","_context130","_x175","_x174","_x173","getSubstackLatestFeed","_callee134","endpointInfo","idleSubstackFeed","latestFeed","_context134","items","getAggregatedStats","_callee135","totalAUM","_args135","_context135","getAggregatedStats_chain","_callee139","avgAPR","_args139","_context139","_ref198","_callee138","_context138","_ref199","_callee137","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context137","_ref200","_callee136","_ref201","_ref202","_context136","_x178","_x177","_x176","getTokenApy","_ref203","_callee140","_context140","_x179","_callee143","_args143","_context143","_ref205","_callee142","_context142","_ref206","_callee141","_ref207","_context141","_x181","_x180","getProtocolsTokensBalances","_callee145","tokenBalances","minTokenBalance","protocolsTokens","_args145","_context145","_ref209","_callee144","tokenContract","_context144","_x182","_ref210","_callee146","_args146","_context146","_x183","_x184","_x185","getAvgAPYStats","_ref211","_callee147","apiResults","_args147","_context147","_x186","_x187","_ref212","_callee148","_conversionRate","_args148","_context148","_x188","_x189","_ref213","_callee149","_ref214","_ref215","_context149","protocolScore","getTokenScoreApi","_x190","_x191","_ref216","_callee150","_context150","_x192","_x193","_ref217","_callee152","Aprs","addresses","protocolsApys","idleGovTokenShowAPR","idleAPR","_args152","_context152","_ref218","_callee151","addrIndex","protocolApr","protocolApy","_context151","_x195","_x196","_x194","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","mouseOver","isVisible","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","titleParentProps","Tos","h2","listStyle","Footer","theme_dark","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","current","NetworkUtil","isCorrectNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","isOpen","ModalCard","closeFunc","closeModal","Body","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","Header","subtitle","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","connectorInfo","walletIcon","flexWrap","ConnectionModal","validated","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","componentDidUpdate","resetModal","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","pattern","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","permitClient","accountBalance","initWeb3","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","availableStrategiesChanged","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","terminalInfo","TerminalHttpProviderParams","terminalSourceType","terminalHttpProvider","web3Callback","originalWeb3","biconomyWeb3Provider","detectEthereumProvider","autoRefreshOnNetworkChange","Web3","HttpProvider","library","SourceType","customHttpProvider","TerminalHttpProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkName","getNetworkType","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args24","confirmationCount","call_callback","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","constant","outputs","payable","stateMutability","anonymous","indexed","ERC20","govTokensDisabled","defiPrime","IdleTokenV4","cToken","yToken","iToken","aToken","CHAI","skipMintForDeposit","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","then","Dashboard","Governance","App","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","cachedKeyFound","storedCachedData","widthChanged","heightChanged","tabIndex","loadAvailableTokens","warn","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","strategyChanged","self","parent","hasMetamask","store","themeDark","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","RimbleWeb3","needsPreflight","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","registration","unregister","FieldComponent","colInfo","colIndex","visible","fieldIndex","colProps","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","tokenApproved","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","useMetaTx","_skipRebalance","_migrationContract$me","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","VariationNumber","IconDirection","iconSize","iconPos","loading-dots","loading-dots--dot","dot-keyframes","selectedProvider","availableProviders","renderPaymentMethod","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","goBack","componentWillMount","getProviderInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","providerSupportToken","defaultPaymentProvider","selectProvider","ethAvailable","tokenAvailable","selectMethod","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","countryCode","methodInfo","loadAvailableMethods","InnerComponent","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","noOptionsMessage","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","iconHeight","subtitleProps","BackButton","currYear","getFullYear","columnWidth","react__WEBPACK_IMPORTED_MODULE_9___default","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","useIconOnly"],"mappings":"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","file":"static/js/main.79003d74.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          const [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        // console.log('score',this.state.score);\n        output = this.state.score !== undefined && this.state.score !== null ? (\n          <SmartNumber {...fieldProps} decimals={1} number={this.state.score} />\n        ) : loader\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            const customFieldName = Object.values(fieldInfo.path).pop();\n            if (this.props.tokenConfig[`${customFieldName}Props`]){\n              const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n              // Replace props\n              if (customFieldProps && Object.keys(customFieldProps).length){\n                Object.keys(customFieldProps).forEach(p => {\n                  fieldProps[p] = customFieldProps[p];\n                });\n              }\n            }\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React from \"react\";\nimport { Text } from \"rimble-ui\";\n\nclass ShortHash extends React.Component {\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  };\n  render() {\n    const shortHash = this.shortenHash(this.props.hash);\n\n    return <Text display={'inline'} {...this.props}>{shortHash}</Text>;\n  }\n}\n\nexport default ShortHash;\n","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.status = tx.status ? tx.status : 'Completed';\n      tx.action = action;\n      tx.momentDate = momentDate;\n      tx.amount = amount;\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(`https://etherscan.io/tx/${txHash}`) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    // console.log('AllocationChart',this.props.token,totalAllocation,protocolsAllocations,protocolsAllocationsPerc);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #eee','1px solid #b6c2ff'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    arrowActive:'#4f4f4f',\n    arrowInactive:'#d8d8d8',\n    selectBgFocused:'#fbfbfb',\n    selectBg:'#ffffff',\n    backButtonBg:'#ffffff',\n    lineChartStroke:'#dbdbdb',\n    wrongNetworkBannerBg:'#ffffff',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    menuBg:'#fff',\n    menuHover:'#f3f6ff',\n    cardBg:'#fff',\n    flashColor:'#3f4e9a',\n    menuRightBorder:'#eee',\n    cardHoverShadow:'0px 0px 0px 1px rgba(0, 54, 255, 0.3)',\n    cardBgHover:'#f7f8ff',\n    cardBorder:'#eee',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      this.functionsUtil.customLog('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              href={`https://etherscan.io/tx/${this.props.hash}`}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\nimport ShortHash from \"../utilities/components/ShortHash\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let bgColor = theme.colors.transactions.actionBg.default;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${transaction.tokenSymbol.toUpperCase()}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol}</Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'legend'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || tokenConfigChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.setState((prevState) => ({\n      inputValue,\n      fastBalanceSelector\n    }));\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n    this.setState({\n      inputValue\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n    const params = await this.props.getTransactionParams(_amount);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    if (params){\n      const {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n\n      const contractName = this.props.contractInfo.name;\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(){\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    return null;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const contractApproved = await this.checkContractApproved();\n    this.setState({\n      inputValue,\n      contractApproved\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.tokenConfig && this.props.tokenBalance && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              {\n                !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        web3={this.props.web3}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3,\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.props.approveDescription}\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      waitText={`Deposit estimated in`}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing deposit request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          this.props.tokenBalance && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.props.tokenBalance.toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled\n                          }}\n                          handleClick={this.executeTx.bind(this)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass ETHWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceETH:null,\n    balanceWETH:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadBalance();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevState.action !== this.state.action;\n    if (actionChanged){\n      this.updateActionData();\n    }\n  }\n\n  async loadBalance(){\n\n    // Init Contract\n    await this.props.initContract(this.props.toolProps.contract.name,this.props.toolProps.contract.address,this.props.toolProps.contract.abi);\n\n    // Load Balances\n    const [\n      balanceETH,\n      balanceWETH\n    ] = await Promise.all([\n      this.functionsUtil.getETHBalance(this.props.account),\n      this.functionsUtil.getTokenBalance('WETH',this.props.account)\n    ]);\n\n    const action = this.state.action || 'wrap';\n    const tokenBalance = action === 'wrap' ? balanceETH : balanceWETH;\n\n    this.setState({\n      action,\n      balanceETH,\n      balanceWETH,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        selectedToken = 'ETH';\n        approveEnabled = true;\n        tokenConfig = {\n          token:'ETH',\n          decimals:18\n        };\n        tokenBalance = this.state.balanceETH;\n        approveDescription = 'To Mint new WETH you need to approve the Smart-Contract first';\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ETH and get WETH with a 1:1 ratio`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = 'WETH';\n        approveEnabled = false;\n        tokenBalance = this.state.balanceWETH;\n        tokenConfig = this.props.toolProps.contract;\n        approveDescription = 'To withdraw your ETH you need to approve the Smart-Contract first';\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your WETH and get back ETH with a 1:1 ratio`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} WETH</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ETH</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = 'deposit';\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = 'withdraw';\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n    const depositOnly = !!this.props.depositOnly;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !depositOnly && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'wrap'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.contract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                        }}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </DashboardCard>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ETHWrapper;\n","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport { Flex, Box, Text, Input, Link, Progress } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    steps:{\n      1:'Get Quote',\n      2:'Enable NXS',\n      3:'Buy Cover'\n    },\n    loading:false,\n    amountValue:'',\n    periodValue:'',\n    quoteResponse:null,\n    selectedToken:'DAI'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async changeSelectedToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      amountValue\n    });\n  }\n\n  changePeriod = (e) => {\n\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      periodValue\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    let quoteResponse = await this.functionsUtil.makeRequest(`https://api.nexusmutual.io/getQuote/${this.state.amountValue}/${this.state.selectedToken}/${this.state.periodValue}/0x78751B12Da02728F467A44eAc40F5cbc16Bd7934/M1`);\n\n    const newState = {\n      loading:false\n    };\n\n    if (quoteResponse){\n      newState.quoteResponse = quoteResponse.data;\n    }\n\n    this.setState({\n      quoteResponse\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Flex\n            mb={1}\n            width={1}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n          >\n            {\n              Object.keys(this.state.steps).map( stepIndex => (\n                <Link\n                  style={{\n                    flexBasis:'0',\n                    flex:'1 1 0px',\n                    textDecoration:'none',\n                    cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                  }}\n                  fontSize={2}\n                  textAlign={'center'}\n                  key={`step_${stepIndex}`}\n                  color={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  hoverColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  activeColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                >\n                  {this.state.steps[stepIndex]}\n                </Link>\n              ) )\n            }\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Progress\n              style={{\n                width:'100%',\n                height:'15px'\n              }}\n              value={(1/Object.keys(this.state.steps).length)*this.state.step}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}>\n              Select asset:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              selectedToken={this.state.selectedToken}\n              onChange={this.changeSelectedToken.bind(this)}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How much do you want to cover?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.amountValue}\n              onChange={this.changeAmount.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n              placeholder={`Insert ${this.state.selectedToken.toUpperCase()} amount`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              For how many days?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.periodValue}\n              placeholder={'Insert days of coverage'}\n              onChange={this.changePeriod.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n            />\n          </Box>\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <ButtonLoader\n              buttonProps={{\n                my:2,\n                mx:[0, 2],\n                size:'medium',\n                borderRadius:4,\n                mainColor:'blue',\n                disabled:(!this.state.amountValue || !this.state.selectedToken || !this.state.periodValue)\n              }}\n              buttonText={'GET QUOTE'}\n              isLoading={this.state.loading}\n              handleClick={ e => this.getQuote(e) }\n            />\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport { Text, Icon, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.props.rows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsTextColor:'#333',\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = portfolio.totalAmountLent.times(portfolio.avgAPY.div(100));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let tokensEarnings = {};\n    let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n      estimationStepsPerc = Math.max(estimationStepsPerc,maxPossibleStep);\n\n      // console.log(token,amountLent.toFixed(5),earnings.toFixed(5),earningsYear.toFixed(5),tokenConfig,tokenAprs,tokenAPR.toFixed(5),tokenAPY.toFixed(5),earningsPercStep,maxPossibleStep,estimationStepsPerc);\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    // console.log(estimationStepsOptions,estimationStepsDefaultOption)\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={`images/tokens/${token}.svg`} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport CustomList from '../CustomList/CustomList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    activeCoverages:null,\n    depositedTokens:null,\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    if (this.state.portfolioLoaded){\n      return false;\n    }\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load data\n      const [\n        activeCoverages,\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio\n      ] = await Promise.all([\n        // Load active coverages\n        this.functionsUtil.getActiveCoverages(this.props.account),\n        // Load claimable batches\n        this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.activeCoverages = activeCoverages && activeCoverages.length>0 ? activeCoverages.map( c => {\n        const statusColors = this.props.theme.colors.transactions.status;\n        const statusIcon = c.status === 'Expired' ? 'Error' : 'VerifiedUser';\n        const statusColor = c.status === 'Expired' ? statusColors.failed : statusColors.completed;\n        const portfolioCoverage = portfolio.totalBalance.gt(0) ? c.balance.div(portfolio.totalBalance).times(100).toFixed(2)+'%' : 'N/A';\n        const statusIconProps = {\n          color:statusColor\n        };\n        return Object.assign(c,{\n          statusIcon,\n          statusIconProps,\n          portfolioCoverage\n        });\n      }) : null;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenAPY = this.functionsUtil.BNify(tokenAprs.avgApy);\n          const tokenWeight = portfolio.tokensBalance[token].tokenBalance.div(portfolio.totalBalance);\n\n          if (tokenAPY){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (tokenScore){\n            avgScore = avgScore.plus(tokenScore.times(tokenWeight));\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const coverProtocolConfig = this.functionsUtil.getGlobalConfig(['tools','coverProtocol']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy\n        </Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={4}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgScore ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgScore.toFixed(2) }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg Risk Score\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                /*\n                !this.state.activeCoverages && coverProtocolConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    mt={[3,4]}\n                    alignItems={'center'}\n                    id={'no-active-cover'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:[3,4],\n                        width:[1,'auto'],\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Image\n                          mb={2}\n                          height={['1.8em','2.2em']}\n                          src={coverProtocolConfig.image}\n                        />\n                        <Text\n                          mb={1}\n                          fontSize={[2,4]}\n                          fontWeight={500}\n                          textAlign={'center'}\n                        >\n                          You don't have an active coverage\n                        </Text>\n                        <Text\n                          mb={2}\n                          color={'blue'}\n                          fontSize={[1,2]}\n                          fontWeight={500}\n                          hoverColor={'blue'}\n                          textAlign={'center'}\n                        >\n                          Cover Protocol provides coverage against Smart-Contract attacks\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:1,\n                            width:'auto',\n                            minHeight:'40px',\n                            mainColor:'redeem',\n                            size:this.props.isMobile ? 'small' : 'medium'\n                          }}\n                          handleClick={ e => this.props.goToSection(`tools/${coverProtocolConfig.route}`) }\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              color={'white'}\n                              fontSize={[1,2]}\n                              fontWeight={500}\n                            >\n                              Get Covered\n                            </Text>\n                            <Icon\n                              ml={1}\n                              size={'1.3em'}\n                              name={'KeyboardArrowRight'}\n                            />\n                          </Flex>\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                )\n                */\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                !viewOnly && this.props.account && coverProtocolConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','coverProtocol','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens)}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.activeCoverages && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Coverages</Title>\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <CustomList\n                        rows={this.state.activeCoverages}\n                        handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n                        cols={[\n                          {\n                            title:'PROTOCOL',\n                            props:{\n                              width:[0.42,0.17]\n                            },\n                            fields:[\n                              {\n                                type:'image',\n                                path:['protocolImage'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['protocolName'],\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            props:{\n                              width:[0.34, 0.15],\n                            },\n                            fields:[\n                              {\n                                type:'number',\n                                path:['balance'],\n                                props:{\n                                  decimals: 4,\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['token'],\n                                props:{\n                                  ml:[1,2],\n                                  style:{\n                                    textTransform:'uppercase'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EXPIRATION DATE',\n                            props:{\n                              width:0.23,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['expirationDate'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'COVERAGE',\n                            props:{\n                              width:0.15,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['portfolioCoverage'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.24,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                type:'button',\n                                name:'custom',\n                                label:'File Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.row.status==='Expired')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'#ff9900'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import IDLE from '../contracts/IDLE.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport ETHWrapper from '../ETHWrapper/ETHWrapper';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport CoverMint from '../abis/cover/CoverMint.json';\nimport LockedIDLE from '../contracts/LockedIDLE.json';\nimport { Web3Versions } from '@terminal-packages/sdk';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport FeeTreasury from '../contracts/FeeTreasury.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport BatchDeposit from '../BatchDeposit/BatchDeposit';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport IdleDepositForwarder from '../contracts/IdleDepositForwarder.json';\nimport BalancerExchangeProxy from '../abis/balancer/BalancerExchangeProxy.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.6',\n  baseToken: 'ETH',\n  baseURL: 'https://idle.finance',\n  forumURL:'https://gov.idle.finance',\n  theme:{\n    darkModeEnabled:true\n  },\n  betaURL: 'https://beta.idle.finance',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    custom:{\n      enabled:true,\n      icon:'tokens/ETH.svg',\n      subcaption:'Custom address'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    performanceFee:'This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    riskScoreShort:'It\\'s a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.',\n    batchDepositExecutionSchedule:'Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        debugEnabled:false, // Enable sending for test environments\n        addPostfixForTestnet:true // Append testnet to eventCategory\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n    theme:{\n      mode:'light',\n      darkModeEnabled:true\n    },\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:3,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','idle'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'idleDAI+idleUSDC+idleUSDT',\n      token:'idleDAI+idleUSDC+idleUSDT',\n      address:'0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7'\n    },\n    gaugeContract:{\n      abi:LiquidityGaugeV2,\n      name:'LiquidityGaugeV2',\n      address:'0xd69ac8d9D25e99446171B5D0B3E4234dAd294890'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:2\n        },\n      },\n    }\n  },\n  permit:{\n    DAI:{\n      version:1,\n      EIPVersion:null,\n      nonceMethod:'nonces',\n      name:'Dai Stablecoin',\n      type:[\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" },\n      ]\n    },\n    USDC:{\n      version:2,\n      name:'USD Coin',\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      disabledTokens:[], // Disable IDLE distribution for idleToken\n      showBalance:false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode:false,\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in Portfolio Donut\n      disabledTokens:[],\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    }\n  },\n  contracts:{\n    LockedIDLE:{\n      abi:LockedIDLE,\n      address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n    },\n    FeeTreasury:{\n      abi:FeeTreasury,\n      address:'0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n    },\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n    BalancerExchangeProxy:{\n      abi:BalancerExchangeProxy,\n      address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n    }\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  strategies:{\n    best:{\n      token:'DAI',\n      color:'#f32121',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      iconInactiveDark:'images/strategies/best-white.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      iconInactiveDark:'images/strategies/risk-white.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    tvls:{\n      TTL:120,\n      endpoint:'https://api.idle.finance/tvls/'\n    },\n    substack:{\n      TTL:1800,\n      endpoint:'https://api.idle.finance/substack/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    config:{\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'0340a1',\n          rgb:[3, 64, 161],\n          hsl:['217', '96%', '32%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      WETH:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#ee1f79',\n          rgb:[238, 31, 121],\n          hsl:['334', '86%', '53%']\n        },\n        startTimestamp:'2021-02-16',\n        conversionRateField:'wethDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        enabled:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      compoundWithCOMP:{\n        enabled:true,\n        rateField:['rate','compoundAdditionalAPR'],\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        }\n      },\n      fulcrum:{\n        legend:false,\n        enabled:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        enabled:false,\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        legend:true,\n        label:'DyDx',\n        enabled:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'Yearn',\n        enabled:true,\n      },\n      aave:{\n        label:'Aave V1',\n        legend:true,\n        enabled:true,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        }\n      },\n      aavev2:{\n        legend:true,\n        enabled:true,\n        icon:'aave.svg',\n        label:'Aave V2',\n        color:{\n          rgb:[151, 79, 141],\n          hsl:['308', '31%', '45%']\n        }\n      },\n      curve:{\n        label:'',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:100000,\n        erc20ForwarderEnabled:true,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract:{\n          forwarder:{\n            enabled:true,\n            abi:erc20Forwarder,\n            name:'erc20Forwarder',\n            function:'emitMessage',\n            address:'0x84a0856b038eaAd1cC7E297cF34A7e72685A8693', // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens:{\n            DAI:{\n              enabled:true,\n              permitType:'DAI_Permit',\n              abi:IdleDepositForwarder,\n              function:'permitAndDeposit', // foo\n              name:'IdleDepositForwarderDAI',\n              address:'0xDe3c769cCD1878372864375e9f89956806B86daA', // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC:{\n              enabled:true,\n              permitType:'USDC_Permit',\n              abi:IdleDepositForwarder,\n              name:'IdleDepositForwarderUSDC',\n              function:'permitEIP2612AndDeposit',\n              address:'0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761', // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            },\n          }\n        },\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan',\n      1337:'Hardhat'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        42: 'https://kovan.infura.io/v3/',\n        1: 'https://mainnet.infura.io/v3/',\n        1337: 'https://mainnet.infura.io/v3/'\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        }\n      },\n      snapshot:{\n        whitelist:[\n          '0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa',\n          '0xf12ce5807e3d3128B876aa1Cec0632D63547E22E'\n        ],\n        endpoints:{\n          proposals:'https://hub.snapshot.page/api/idlefinance.eth/proposals'\n        },\n        urls:{\n          proposals:'https://signal.idle.finance/#/idlefinance.eth/proposal/'\n        }\n      },\n      biconomy:{\n        enabled:false,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829',\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      terminal:{\n        enabled:false,\n        supportedNetworks:[1,42],\n        params:{\n          apiKey: env.REACT_APP_TERMINAL_KEY,\n          projectId: env.REACT_APP_TERMINAL_PROJECT_ID,\n          source: null,\n          web3Version: Web3Versions.one\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  notifications:[\n    {\n      enabled:false,\n      end:1612282726374,\n      start:1611677841027,\n      date:'Jan 26, 2021 16:18 UTC',\n      title:'Cover Protocol Available',\n      hash:'/dashboard/tools/cover-protocol',\n      image:'/images/protocols/cover-logo.svg',\n      text:'Protect your portfolio with Cover Protocol',\n    }\n  ],\n  tools:{\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      subComponent:ETHWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        contract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol:{\n      enabled:false,\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral:'DAI',\n            expirationTimestamp:1614470400,\n            tokens:{\n              Claim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                address:'0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                  address:'0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c',\n                }\n              },\n              NoClaim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                address:'0x53df0bfa014b7522299c129c5a7b318f02adb469',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                  address:'0xce0e9e7a1163badb7ee79cfe96b5148e178cab73',\n                }\n              }\n            }\n          },\n        ],\n      }\n    },\n    batchDeposit:{\n      enabled:true,\n      icon:'Storage',\n      claimEnabled:true,\n      depositEnabled:true,\n      route:'batch-deposit',\n      label:'Batch Deposit',\n      subComponent:BatchDeposit,\n      desc:'Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            strategy:'best',\n            baseToken:'DAI',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAI',\n              address:'0x633fb4d38B24dC890b11Db2AE2B248D13F996A79', // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  usePermit:true,\n                  label:'Deposit',\n                  permitName:'permitAndDeposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:6,\n            strategy:'best',\n            baseToken:'USDC',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDC',\n              address:'0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B', // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                  permitName:'permitEIP2612AndDepositUnlimited'\n                },\n              ]\n            },\n          },\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    insurance:{\n      enabled:false,\n      icon:'Security',\n      route:'nexus-mutual',\n      label:'Nexus Mutual',\n      desc:'Buy tokens with Bank account or Credit card',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n        }\n      },\n      directProps:{\n        ens:'idlefinancev3.nexusmutual.eth',\n        address:'0x78751B12Da02728F467A44eAc40F5cbc16Bd7934'\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens using Kyber Swap widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank','card'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedTokens:['ETH','DAI','USDC'],\n        supportedCountries:['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'],\n        getInfo: (props) => {\n          const info = {};\n            switch (props.selectedMethod){\n              case 'bank':\n                info.supportedCountries = ['GBR','EUR'];\n                info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n              case 'card':\n                info.supportedCountries = ['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'];\n                info.subcaption = `~ 2.90% fee ~`;\n              break;\n              default:\n              break;\n            }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['WETH','USDC','DAI','USDT','TUSD','SUSD','WBTC'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n                      \n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      if (this.tokenConfig && this.tokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str.substr(0,1).toUpperCase()+str.substr(1);\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const amountDeposited = await this.getAmountDeposited(tokenConfig,account);\n\n      // console.log(token,'amountDeposited',amountDeposited.toString(),'amountLent',amountLents[token].toString());\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n      const [\n        tokenAprs\n        // tokenEarnings\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig)\n        // this.loadAssetField('earnings',token,tokenConfig,this.props.account,false),\n      ]);\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return amountDeposited;\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - etherscanBaseTxs',etherscanBaseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n\n        // console.log('makeRequest 1',account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(etherscanBaseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          cachedRequests[etherscanBaseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    if (debug){\n      console.log('DEBUG - getEtherscanTxs -',etherscanTxs);\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.getGlobalConfig(['network','requiredNetwork']);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (tx_address) => {\n    return tx_address ? 'https://etherscan.io/tx/'+tx_address : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    return address ? 'https://etherscan.io/address/'+address : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    if (proposals){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,p.address,s.name,checkedStrategies);\n          });\n          \n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName ? contractName : this.props.selectedToken;\n    return await this.genericContractCall(contractName,'decimals');\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCall(contractName, 'paused', [], {}).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try{\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error){\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName,tokenAddress,permitType,callData,gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      return false;\n    }\n\n    console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx({\n      permitType,\n      data:callData,\n      token:tokenAddress,\n      to:contract._address,\n      txGas:Number(gasLimit)\n    });\n\n    return tx;\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req,metaInfo,callback,callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({req,metaInfo});\n      transactionHash = txResponse.txHash;\n      console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null,true);\n      return false;\n    }\n\n    if (!transactionHash){\n      console.log('!transactionHash ERROR');\n      callback(null,true);\n      return false;\n    }\n    \n    const tx = {\n      method:'mintIdleToken',\n      transactionHash\n    };\n    console.log('sendBiconomyTxWithErc20Forwarder',transactionHash);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(()=> {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt)=> {\n        console.log('sendBiconomyTxWithErc20Forwarder',transactionHash,err,receipt);\n        if(!err && receipt){\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx,err);\n\n          if (typeof window.updateTransaction === 'function'){\n            window.updateTransaction(tx,transactionHash,tx.status,null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce=0) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    // console.log('permitConfig',permitConfig);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce>0){\n      nonce = parseInt(nonce)+parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        const value = this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    const { expiry, nonce, r, s, v } = signedParameters;\n    const permitParams = [expiry, v, r, s];\n\n    const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n    const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n    if (!isNaN(parseInt(nonce)) && useNonce){\n      permitParams.unshift(nonce);\n    }\n    const params = methodParams.concat(permitParams);\n    this.contractMethodSendWrapper(spenderContractName, methodName, params, callback_receipt, callback_receipt);\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toString() : null,tokenApys.avgApy ? tokenApys.avgApy.toString() : null);\n\n        if (tokenApys && tokenApys.avgApy !== null){\n          output = tokenApys.avgApy;\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        }\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.genericContractCall(tokenConfig.idle.token, 'tokenPrice');\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        let redeemableBalanceEnd = null;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        // this.customLog('redeemableBalanceCounter',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd));\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.genericContractCall(idleToken,'totalSupply',[],{},blockNumber);\n    if (idleTokenSupply){\n      idleTokenSupply = this.BNify(idleTokenSupply);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCall(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCall(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCall(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 5 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    if (cachedData && cachedData.data && (!cachedData.expirationDate || cachedData.expirationDate>=parseInt(Date.now()/1000))){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.genericContractCall(tokenConfig.idle.token,'totalSupply')\n    ]);\n\n    let userShare = this.BNify(0);\n    if (idleTokensBalance && idleTokensTotalSupply){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const fileClaimUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            collateral,\n            protocolName,\n            fileClaimUrl,\n            protocolImage,\n            expirationDate\n          });\n        }\n      });\n    }\n\n    return activeCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address]);\n  }\n  getAprs = async (contractName) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    return await this.genericContractCall(contractName, 'getAPRs');\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      this.customLog(`genericContractCall - ${contractName} - ${methodName} : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(12))).pow(12).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsBalances:{},\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.genericContractCall(contractName,protocolInfo.functions.exchangeRate.name,protocolInfo.functions.exchangeRate.params) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    tokenAllocation.totalAllocationConverted = await this.convertTokenBalance(tokenAllocation.totalAllocation,tokenConfig.token,tokenConfig);\n    tokenAllocation.totalAllocationWithUnlentConverted = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,tokenConfig.token,tokenConfig);\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getUniswapConversionRate_path = async (path) => {\n    const one = this.normalizeTokenDecimals(18);\n    const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n    return unires;\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      // console.log('getUniswapConversionRate',tokenConfigFrom,tokenConfigDest,path,unires);\n\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.genericContractCall(curvePoolContract.name,'totalSupply');\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCall(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCall('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.genericContractCall(cTokenInfo.token,'totalSupply'),\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.genericContractCall(cTokenInfo.token,'balanceOf',[tokenConfig.idle.address]);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = compDistribution.div(1e18).times(this.BNify(blocksPerYear));\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        if (!govTokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n          output[govToken] = govTokenConfig;\n        }\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency) => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      switch (frequency){\n        case 'day':\n          const blocksPerDay = blocksPerYear.div(365.242199);\n          speed = speed.times(blocksPerDay);\n        break;\n        case 'week':\n          const blocksPerWeek = blocksPerYear.div(52.1429);\n          speed = speed.times(blocksPerWeek);\n        break;\n        case 'month':\n          const blocksPerMonth = blocksPerYear.div(12);\n          speed = speed.times(blocksPerMonth);\n        break;\n        case 'year':\n          speed = speed.times(blocksPerYear);\n        break;\n        default:\n        break;\n      }\n      return speed;\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      let govSpeed = null;\n      switch (govToken){\n        case 'COMP':\n          const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n          if (cTokenInfo){\n            govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const compoundInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (compoundInfo){\n                  if (tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n          } catch (error) {\n            \n          }\n        }\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return govTokensBalances;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(availableTokens)}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.genericContractCall(idleTokenConfig.token,'getGovTokensAmounts',[account]);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.genericContractCall(idleTokenConfig.token,'govTokens',[govTokenIndex]);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCall(tokenConfig.idle.token, 'fee');\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(tokenConfig)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint,false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    const tvls = await this.makeCachedRequest(endpointInfo.endpoint,endpointInfo.TTL,true,false,config);\n\n    if (tvls){\n      const avgAPY = this.BNify(tvls.avgAPY);\n      const totalAUM = this.BNify(tvls.totalTVL);\n      return {\n        avgAPY,\n        totalAUM\n      };\n    } else {\n      return await this.getAggregatedStats_chain();\n    }\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return null;\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      // console.log('CACHED -',count,cachedDataKey,this.BNify(cachedData).toFixed());\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    // console.log('TOKEN DATA - ',tokenConfig.address,isRisk,tokenData);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          // console.log('NOT CACHED -',count,cachedDataKey,this.BNify(conversionRate).toFixed());\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    } else {\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n      const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,tokenConfig);\n      if (!this.BNify(conversionRate).isNaN()){\n        // console.log('NOT CACHED -',count,cachedDataKey,this.BNify(conversionRate).toFixed());\n        return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n      }\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenData && tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001) && tokenData.length>0){\n          const protocolInfo = tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) );\n          if (protocolInfo){\n            const protocolScore = this.BNify(protocolInfo.defiScore);\n            if (!protocolScore.isNaN()){\n              tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n              // this.customLog(protocolAddr,tokenAllocation.protocolsAllocationsPerc[protocolAddr].toFixed(6),protocolScore.toFixed(6),tokenScore.toFixed(6));\n            }\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let tokenData = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (tokenData && tokenData.length){\n      let tokenScore = this.BNify(tokenData[0].idleScore);\n      if (tokenScore && tokenScore.gt(0)){\n        // Set cached data\n        return this.setCachedData(cachedDataKey,tokenScore);\n      // Take latest historical valid score\n      } else {\n        const timestamp = parseInt(Date.now()/1000);\n        const startTimestamp = parseInt(timestamp)-(60*60*24);\n        tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n        const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n        if (filteredTokenData.length){\n          tokenScore = this.BNify(filteredTokenData[0].idleScore);\n          if (!this.BNify(tokenScore).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      return false;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      return false;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const protocolsAprs = {};\n    const protocolsApys = {};\n    let compAPR = null;\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens && protocolInfo.name === 'compound'){\n          compAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    const tokenAprs = {\n      avgApr: null,\n      avgApy: null\n    };\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.getAvgApr(protocolsApys,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n\n      if (compAPR){\n        tokenAprs.avgApr = tokenAprs.avgApr.plus(compAPR);\n        tokenAprs.avgApy = tokenAprs.avgApy.plus(compAPR);\n      }\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return null;\n  }\n  abbreviateNumber(value,decimals=3,maxPrecision=5,minPrecision=0){\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    // console.log('onActivation',this.provider);\n\n    if (this.provider){\n\n      await this.provider.enable();\n\n      /*\n      // Subscribe to accounts change\n      this.provider.on(\"accountsChanged\", (accounts) => {\n        console.log('accountsChanged',accounts);\n      });\n\n      // Subscribe to chainId change\n      this.provider.on(\"chainChanged\", (chainId) => {\n        console.log('chainChanged',chainId);\n      });\n\n      // Subscribe to networkId change\n      this.provider.on(\"networkChanged\", (networkId) => {\n        console.log('networkChanged',networkId);\n      });\n\n      // Subscribe to session connection/open\n      this.provider.on(\"open\", () => {\n        console.log('open');\n      });\n\n      // Subscribe to session disconnection/close\n      this.provider.on(\"close\", (code, reason) => {\n        console.log('close',code, reason);\n      });\n      */\n\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: [defaultNetwork]\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  const buttons = basicConnectorsName.map(connectorName => {\n\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageSrc={`images/${walletIcon}`}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/browser-wallet.png`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      await this.props.context.setFirstValidConnector(['Infura']);\n      this.props.setConnector('Infura',null);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\nimport { TerminalHttpProvider, SourceType } from '@terminal-packages/sdk';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    if (customAddressChanged){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged/* || availableTokensChanged*/ || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    // Suppress console warning\n    if (window.ethereum && window.ethereum.autoRefreshOnNetworkChange) {\n      window.ethereum.autoRefreshOnNetworkChange = false;\n    }\n\n    const context = this.props.context;\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (!context.active || connectorNameChanged) {\n      // Select preferred web3 provider\n      if (connectorName && connectorNameChanged){\n        // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n        setConnectorName = connectorName;\n        await context.setConnector(connectorName);\n        // await context.setFirstValidConnector([connectorName, 'Infura']);\n        return web3;\n      }\n      /*\n      else if (setConnectorName){\n        // Catch WalletConnect unexpected disconnect and fallback to Infura\n        if (connectorName === 'WalletConnect' && connectorName === setConnectorName && last_context && last_context.active && last_context.connectorName==='WalletConnect' && !context.connectorName){\n          this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          this.functionsUtil.removeStoredItem('walletProvider');\n          this.functionsUtil.removeStoredItem('connectorName');\n          this.functionsUtil.setLocalStorage('context',JSON.stringify({active:context.active,connectorName:context.connectorName}));\n          setConnectorName = null;\n          await context.setConnector('Infura');\n          if (context.connector && typeof context.connector.disable === 'function'){\n            await context.connector.disable();\n          }\n        }\n\n        this.functionsUtil.customLog('initWeb3 skip due to setConnectorName ('+setConnectorName+') already set');\n        return web3;\n      }\n      */\n    }\n    /* else if (context.connectorName === \"WalletConnect\") {\n      if (!context.account) {\n\n        // WalletConnect already opened\n        if (document.getElementById('walletconnect-wrapper')){\n          return web3;\n        }\n\n        WalletConnectQRCodeModal.open(\n          context.connector.walletConnector.uri,\n          async () => {\n            document.getElementById('walletconnect-wrapper').remove();\n            this.props.setConnector('Infura',null);\n            await context.setConnector('Infura');\n            setConnectorName = null;\n          }\n        );\n      } else {\n        try {\n          WalletConnectQRCodeModal.close();\n        } catch {}\n      }\n    // Reset web3 if Infura\n    } */\n    /*\n    else if (context.active && (connectorName === 'Infura' || context.connectorName === \"Infura\")){\n      if (typeof web3.currentProvider.disable === 'function'){\n        await web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        await context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n    */\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    const terminalInfo = globalConfigs.network.providers.terminal;\n\n    if (terminalInfo && terminalInfo.enabled && terminalInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const TerminalHttpProviderParams = terminalInfo.params;\n      const terminalSourceType = localStorage && localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : SourceType.Infura;\n      TerminalHttpProviderParams.source = terminalSourceType;\n\n      if (web3Provider){\n        TerminalHttpProviderParams.customHttpProvider = web3Provider;\n      } else if (web3Host){\n        TerminalHttpProviderParams.host = web3Host;\n      }\n\n      const terminalHttpProvider = new TerminalHttpProvider(TerminalHttpProviderParams);\n      web3 = new Web3(terminalHttpProvider);\n    } else {\n      // Injected web3 provider\n      if (web3Provider){\n        web3 = new Web3(web3Provider);\n      // Infura\n      } else if (web3Host) {\n        web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n        if (connectorName !== 'Infura'){\n          this.props.setConnector('Infura',null);\n        }\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.setState({\n              accountInizialized: true,\n              account: this.props.customAddress\n            });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(globalConfigs.network.requiredNetwork) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await this.state.web3.eth.getAccounts();\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        this.setState({\n          accountInizialized: true\n        });\n        return false;\n      }\n\n      // Request account access if needed\n      if (account && walletProvider !== 'Infura'){\n\n        if (walletProvider === 'Infura'){\n          this.setState({\n            accountInizialized: true,\n            account:this.props.customAddress\n          });\n          return false;\n        }\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        /*\n        // Unsubscribes to all subscriptions\n        if (this.state.web3SocketProvider && typeof this.state.web3SocketProvider.clearSubscriptions === 'function'){\n          this.functionsUtil.customLog('Clear all web3SocketProvider subscriptions');\n          this.state.web3SocketProvider.clearSubscriptions();\n        }\n\n        const networkName = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork].toLowerCase();\n        const web3SocketProvider = new Web3(new Web3.providers.WebsocketProvider(`wss://${networkName}.infura.io/ws/v3/${INFURA_KEY}`));\n\n        // Subscribe to logs\n        const addressTopic = '0x00000000000000000000000'+account.toLowerCase().replace('x','');\n\n        // Subscribe for payment methods\n        const paymentProviders = Object.keys(globalConfigs.payments.providers).filter((providerName,i) => { const providerInfo = globalConfigs.payments.providers[providerName]; return providerInfo.enabled && providerInfo.web3Subscription && providerInfo.web3Subscription.enabled  })\n        if (paymentProviders && paymentProviders.length){\n          paymentProviders.forEach((providerName,i) => {\n            const providerInfo = globalConfigs.payments.providers[providerName];\n\n            this.functionsUtil.customLog(`Subscribe to ${providerName} logs`);\n\n            // Subscribe for deposit transactions\n            web3SocketProvider.eth.subscribe('logs', {\n                address: [account,providerInfo.web3Subscription.contractAddress],\n                topics: [null,[addressTopic]]\n            }, function(error, result){\n              \n            })\n            .on(\"data\", async (log) => {\n              this.functionsUtil.customLog(providerName,'logs',log);\n\n              if (log){\n                const txHash = log.transactionHash;\n                const subscribedTransactions = this.state.subscribedTransactions;\n                const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n                this.functionsUtil.customLog(providerName,txHash,walletAddressFound);\n\n                if (!subscribedTransactions[txHash] && walletAddressFound.length){\n                  const decodedLogs = web3SocketProvider.eth.abi.decodeLog(providerInfo.web3Subscription.decodeLogsData,log.data,log.topics);\n\n                  this.functionsUtil.customLog(providerName,txHash,decodedLogs);\n\n                  if (decodedLogs && decodedLogs._tokenAmount && decodedLogs._tokenAddress && decodedLogs._tokenAddress.toLowerCase() === this.props.tokenConfig.address.toLowerCase()){\n\n                    const receiptCallback = async (tx,decodedLogs) => {\n                      const tokenDecimals = await this.getTokenDecimals();\n                      const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                      const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                      const isProviderTx = tx.from.toLowerCase() === account.toLowerCase() && tx.to.toLowerCase() === providerInfo.web3Subscription.contractAddress.toLowerCase();\n\n                      if (isProviderTx){\n\n                        // Mined\n                        if (tx.blockNumber && tx.status){\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'success',\n                            message:'Deposit completed',\n                            secondaryMessage:`${providerName} sent you ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n\n                          // Update User Balance\n                          this.getAccountBalance(tokenAmount);\n                        } else {\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'processing',\n                            message:'Deposit pending',\n                            secondaryMessage:`${providerName} is sending ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n                        }\n                      }\n                    }\n\n                    let checkTransactionReceiptTimeoutID = null;\n\n                    const checkTransactionReceipt = (txHash,decodedLogs) => {\n                      if (checkTransactionReceiptTimeoutID){\n                        window.clearTimeout(checkTransactionReceiptTimeoutID);\n                      }\n                      web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                        if (!err){\n                          if (txReceipt){\n                            receiptCallback(txReceipt,decodedLogs);\n                          } else{\n                            checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                          }\n                        }\n                      });\n                    }\n\n                    checkTransactionReceipt(txHash,decodedLogs);\n\n                    subscribedTransactions[txHash] = log;\n                    this.setState({subscribedTransactions});\n                  }\n                }\n              }\n            });\n          })\n        }\n\n        // Subscribe for deposit transactions\n        web3SocketProvider.eth.subscribe('logs', {\n            address: [account,this.props.tokenConfig.address],\n            topics: [null,null,[addressTopic]]\n        }, function(error, result){\n\n        })\n        .on(\"data\", async (log) => {\n          if (log){\n            const txHash = log.transactionHash;\n            const subscribedTransactions = this.state.subscribedTransactions;\n            const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n            if (!subscribedTransactions[txHash] && walletAddressFound.length){\n              const decodedLogs = web3SocketProvider.eth.abi.decodeLog([\n                {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"_tokenAmount\",\n                  \"type\": \"uint256\"\n                },\n              ],log.data,log.topics);\n\n              if (decodedLogs && decodedLogs._tokenAmount){\n\n                const receiptCallback = async (tx,decodedLogs) => {\n                  const tokenDecimals = await this.getTokenDecimals();\n                  const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                  const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                  const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                  const isDepositTokenTx = tx.to.toLowerCase() === this.props.tokenConfig.address.toLowerCase();\n\n                  if (isDepositTokenTx){\n\n                    // Mined\n                    if (tx.blockNumber && tx.status){\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit completed',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} has been deposited`,\n                        variant: \"success\",\n                      });\n\n                      // Update User Balance\n                      this.getAccountBalance(tokenAmount);\n                    } else {\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit pending',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} are on the way`,\n                        variant: \"processing\",\n                      });\n                    }\n                  }\n                }\n\n                let checkTransactionReceiptTimeoutID = null;\n\n                const checkTransactionReceipt = (txHash,decodedLogs) => {\n                  if (checkTransactionReceiptTimeoutID){\n                    window.clearTimeout(checkTransactionReceiptTimeoutID);\n                  }\n                  web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                    if (!err){\n                      if (txReceipt){\n                        receiptCallback(txReceipt,decodedLogs);\n                      } else{\n                        checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                      }\n                    }\n                  });\n                }\n\n                checkTransactionReceipt(txHash,decodedLogs);\n\n                subscribedTransactions[txHash] = log;\n                this.setState({subscribedTransactions});\n              }\n            }\n          }\n        })\n        .on(\"changed\", log => {\n          \n        });\n        */\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = { ...this.state.network };\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = { ...this.state.network };\n    network.isCorrectNetwork = this.state.network.current.id === this.state.network.required.id;\n\n    // console.log('checkNetwork',this.state.network.current.id,this.state.network.required.id);\n\n    // To do, check window.web3.currentProvider.networkVersion to see if Metamask is in the requiredNetwork\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n\n    // this.functionsUtil.customLog('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n\n    modals.data.connectionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    accountBalanceDAI: null,\n    erc20ForwarderClient:null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:USDC,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xc11b1268c1a384e55c48c2391d8d480264a3a7f4',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    cachedData:{},\n    buyToken: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode:'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme:theme,\n    currentSection:null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = () => {\n    this.functionsUtil.setLocalStorage('cachedData',{},true);\n    this.setState({\n      cachedData:{}\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now()/1000);\n\n    const update_key = !cachedKeyFound || ( (!cachedKeyFound.expirationDate || cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n        storedCachedData = {\n          ...storedCachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        }\n      }));\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = globalConfigs.network.requiredNetwork;\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = availableTokens[requiredNetwork][strategy];\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && this.state.availableStrategies[selectedStrategy]){\n      newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode',false);\n    if (themeMode){\n      this.setThemeMode(themeMode);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadAvailableTokens();\n  }\n\n  loadCustomAddress(){\n    if (!this.state.customAddress){\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom'){\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress){\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged){\n      if (this.state.currentSection === 'landing'){\n        this.setThemeMode('light',false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode',false) || this.functionsUtil.getGlobalConfig(['dashboard','theme','mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n\n    if (tokenChanged || strategyChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n      window.parent.closeIframe(window.self);\n    }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      const connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      const walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    // Reset Custom Address\n    this.setState({\n      customAddress:null\n    });\n    // Reset Localstorage\n    this.functionsUtil.clearStoredData(['version','themeMode','lastLogin']);\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    },() => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode,store=true){\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard','theme','darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled){\n      themeMode = 'light';\n    }\n\n    switch (themeMode){\n      default:\n      case 'light':\n        selectedTheme = theme;\n      break;\n      case 'dark':\n        selectedTheme = themeDark;\n      break;\n    }\n\n    if (store){\n      this.functionsUtil.setLocalStorage('themeMode',themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection){\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'80px',\n            color:'primary'\n          }}\n          flexProps={{\n            my:3,\n            flexDirection:'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?\"\n                              render={\n                                (props) => \n                                  <Suspense\n                                    fallback={SuspenseLoader}\n                                  >\n                                    <Dashboard\n                                      {...props}\n                                      web3={web3}\n                                      modals={modals}\n                                      network={network}\n                                      context={context}\n                                      account={account}\n                                      isDashboard={true}\n                                      initWeb3={initWeb3}\n                                      biconomy={biconomy}\n                                      isMobile={isMobile}\n                                      simpleID={simpleID}\n                                      contracts={contracts}\n                                      initAccount={initAccount}\n                                      permitClient={permitClient}\n                                      initSimpleID={initSimpleID}\n                                      initContract={initContract}\n                                      transactions={transactions}\n                                      buyToken={this.state.buyToken}\n                                      logout={this.logout.bind(this)}\n                                      accountBalance={accountBalance}\n                                      themeMode={this.state.themeMode}\n                                      theme={this.state.selectedTheme}\n                                      validateAccount={validateAccount}\n                                      connecting={this.state.connecting}\n                                      cachedData={this.state.cachedData}\n                                      setToken={this.setToken.bind(this)}\n                                      accountValidated={accountValidated}\n                                      getTokenDecimals={getTokenDecimals}\n                                      rejectValidation={rejectValidation}\n                                      tokenConfig={this.state.tokenConfig}\n                                      getAccountBalance={getAccountBalance}\n                                      accountBalanceLow={accountBalanceLow}\n                                      accountInizialized={accountInizialized}\n                                      selectedToken={this.state.selectedToken}\n                                      connectorName={this.state.connectorName}\n                                      setStrategy={this.setStrategy.bind(this)}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountBalanceToken={accountBalanceToken}\n                                      initializeContracts={initializeContracts}\n                                      walletProvider={this.state.walletProvider}\n                                      buyModalOpened={this.state.buyModalOpened}\n                                      erc20ForwarderClient={erc20ForwarderClient}\n                                      contractsInitialized={contractsInitialized}\n                                      openBuyModal={this.openBuyModal.bind(this)}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      handleMenuClick={this.selectTab.bind(this)}\n                                      setConnector={this.setConnector.bind(this)}\n                                      setThemeMode={this.setThemeMode.bind(this)}\n                                      availableTokens={this.state.availableTokens}\n                                      closeBuyModal={this.closeBuyModal.bind(this)}\n                                      setCachedData={this.setCachedData.bind(this)}\n                                      selectedStrategy={this.state.selectedStrategy}\n                                      userRejectedValidation={userRejectedValidation}\n                                      clearCachedData={this.clearCachedData.bind(this)}\n                                      setStrategyToken={this.setStrategyToken.bind(this)}\n                                      accountValidationPending={accountValidationPending}\n                                      availableStrategies={this.state.availableStrategies}\n                                      setCurrentSection={this.setCurrentSection.bind(this)}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      contractMethodSendWrapper={contractMethodSendWrapper}\n                                      setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                    />\n                                  </Suspense>\n\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Governance\n                                          {...props}\n                                          web3={web3}\n                                          modals={modals}\n                                          network={network}\n                                          context={context}\n                                          account={account}\n                                          initWeb3={initWeb3}\n                                          biconomy={biconomy}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          isGovernance={true}\n                                          contracts={contracts}\n                                          initAccount={initAccount}\n                                          initSimpleID={initSimpleID}\n                                          initContract={initContract}\n                                          transactions={transactions}\n                                          buyToken={this.state.buyToken}\n                                          logout={this.logout.bind(this)}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          validateAccount={validateAccount}\n                                          connecting={this.state.connecting}\n                                          cachedData={this.state.cachedData}\n                                          setToken={this.setToken.bind(this)}\n                                          accountValidated={accountValidated}\n                                          getTokenDecimals={getTokenDecimals}\n                                          rejectValidation={rejectValidation}\n                                          tokenConfig={this.state.tokenConfig}\n                                          getAccountBalance={getAccountBalance}\n                                          accountBalanceLow={accountBalanceLow}\n                                          accountInizialized={accountInizialized}\n                                          selectedToken={this.state.selectedToken}\n                                          connectorName={this.state.connectorName}\n                                          setStrategy={this.setStrategy.bind(this)}\n                                          userRejectedConnect={userRejectedConnect}\n                                          accountBalanceToken={accountBalanceToken}\n                                          initializeContracts={initializeContracts}\n                                          walletProvider={this.state.walletProvider}\n                                          buyModalOpened={this.state.buyModalOpened}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          rejectAccountConnect={rejectAccountConnect}\n                                          handleMenuClick={this.selectTab.bind(this)}\n                                          setConnector={this.setConnector.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          availableTokens={this.state.availableTokens}\n                                          closeBuyModal={this.closeBuyModal.bind(this)}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          selectedStrategy={this.state.selectedStrategy}\n                                          userRejectedValidation={userRejectedValidation}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          setStrategyToken={this.setStrategyToken.bind(this)}\n                                          accountValidationPending={accountValidationPending}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          contractMethodSendWrapper={contractMethodSendWrapper}\n                                          setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        />\n                                      </Suspense>\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          cachedData={this.state.cachedData}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </Suspense>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil\n                            transactions={transactions}\n                            themeMode={this.state.themeMode}\n                          />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            <FieldComponent\n                              {...this.props}\n                              fieldInfo={fieldInfo}\n                              colProps={colInfo.props}\n                              parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            />\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            web3={this.props.web3}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          web3={this.props.web3}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         isActive={this.props.isActive}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n          {\n            this.props.image ? (\n              <Image\n                align={'center'}\n                src={this.props.image}\n                height={ this.props.isMobile ? '1.2em' : '1.4em' }\n                width={ this.props.isMobile ? '1.2em' : '1.4em' }\n                {...this.props.imageProps}\n              />\n            ) : this.props.useIconOnly ? (\n              <Icon\n                align={'center'}\n                name={this.props.icon}\n                size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                {...this.props.iconProps}\n              />\n            ) : (\n             <Flex\n               mr={2}\n               p={['4px','7px']}\n               borderRadius={'50%'}\n               alignItems={'center'}\n               justifyContent={'center'}\n               backgroundColor={ this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem }\n             >\n               <Icon\n                 align={'center'}\n                 name={this.props.icon}\n                 size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                 color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                 {...this.props.iconProps}\n               />\n             </Flex>\n            )\n          }\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n             {...this.props.textProps}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;"],"sourceRoot":""}