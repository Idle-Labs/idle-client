{"version":3,"sources":["SmartNumber/SmartNumber.js","TrancheWelcome/TrancheWelcome.module.scss","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","RoundIconButton/RoundIconButton.js","CardIconButton/CardIconButton.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","Faquestion/Faquestion.js","ActiveCoverages/ActiveCoverages.js","PortfolioEquity/PortfolioEquity.js","GenericSelector/GenericSelector.js","TxProgressBar/TxProgressBar.js","theme.js","IconBox/IconBox.js","AssetSelector/AssetSelector.js","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","GenericChart/GenericChart.js","utilities/components/Header.module.scss","ExecuteTransaction/ExecuteTransaction.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","utilities/components/BuyModal.js","DashboardCard/DashboardCard.module.scss","DashboardCard/DashboardCard.js","TableRow/TableRow.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","CustomList/CustomList.js","Staking/Staking.js","GenericFaqs/GenericFaqs.js","SendTxWithBalance/SendTxWithBalance.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","TrancheHarvests/TrancheHarvests.js","TrancheDepositRedeem/TrancheDepositRedeem.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TranchesList/TranchesList.js","TrancheBox/TrancheBox.js","TrancheFlash/TrancheFlash.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","StatsCardSmall/StatsCardSmall.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","PolygonBridgeTransactions/PolygonBridgeTransactions.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","PolygonBridge/PolygonBridge.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","../node_modules/@maticnetwork/meta/network sync /^/.//.*//index/.json$","../node_modules/@maticnetwork/meta/network sync /^/.//.*/.json$","ConnectBox/ConnectBox.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","utilities/components/ModalCard.js","colors.js","AssetsUnderManagement/AssetsUnderManagement.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","FlexLoader/FlexLoader.js","Title/Title.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","ChartCustomTooltip/ChartCustomTooltip.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","TrancheField/TrancheField.js","CustomField/CustomField.js","ImageButton/ImageButton.js","RoundButton/RoundButton.js","ExtLink/ExtLink.js","AssetField/AssetField.js"],"names":["SmartNumber","functionsUtil","this","setProps","props","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","width","alignItems","flexDirection","justifyContent","Object","keys","length","forEach","p","showUnit","unit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unitProps","Component","module","exports","trancheFlash","mobile","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","showPathMobile","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","id","handleClick","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","buttonProps","border","height","iconSize","iconName","text","ml","fontSize","fontWeight","color","hoverColor","onClick","isMobile","path","map","index","link","pathLink","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","theme","colors","divider","key","e","goToSection","ShortHash","state","componentUnmounted","loadData","prevProps","prevState","hash","newState","callback","setState","resolveAddress","shortenHash","getENSName","ensName","setStateSafe","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","size","assign","display","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","RoundIconButton","borderRadius","mainColor","disabled","minWidth","react__WEBPACK_IMPORTED_MODULE_6___default","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","name","CardIconButton","cardProps","py","px","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","isInteractive","isActive","isDisabled","backgroundColor","margin","my","align","image","src","imageProps","useIconOnly","icon","iconColor","iconProps","mr","isSidebar","iconBgColor","transactions","actionBg","redeem","textProps","CustomTooltip","point","left","data","itemPos","xFormatted","mb","textAlign","children","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","selectedToken","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","_this3","onMouseLeave","tooltipFormat","v","sliceLabel","value","radialLabel","tooltip","container","inline","background","cardBg","labels","fontFamily","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","top","right","bottom","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","position","zIndex","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","CustomTooltipRow","pr","flexBasis","flex","textTransform","dangerouslySetInnerHTML","__html","Faquestion","isShowingAnswer","preventDefault","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","isOpened","boxShadow","cursor","h4","question","answer","Base","loaded","activeCoverages","loadCoverages","account","getActiveCoverages","coverages","c","availableTokens","includes","collateral","statusColors","status","statusIcon","statusColor","completed","failed","pending","statusIconProps","portfolioCoverage","react__WEBPACK_IMPORTED_MODULE_9___default","title","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","titleProps","_CustomList_CustomList__WEBPACK_IMPORTED_MODULE_10__","rows","row","fileClaimUrl","openWindow","cols","fields","themeMode","parentProps","funcProps","actionLabel","actionDisabled","actionUrl","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","JSON","stringify","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","tx","token","BNify","action","Math","min","parseInt","timeStamp","tokenAmount","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","tokenAddress","_context4","getAvailableTokenAddress","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","toUpperCase","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","axisBottomIndex","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","tickValues","legendPosition","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","menuIsOpen","noShadow","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","notInteractive","CustomIndicatorSeparator","CustomMenu","mt","outerColor","selectProps","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","searchInput","dark","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isDashboard","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","TxProgressBar","txCount","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","transaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","web3","eth","err","_x","_x2","abrupt","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","getRequiredNetwork","provider","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txHash","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","currentNetwork","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","target","rel","href","getEtherscanTransactionUrl","explorer","cancelTransaction","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","copy","serif","counter","space","radii","widths","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","tick","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","green","connect","newblue","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider2","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","menuIconActive","cardBgContrast","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","blacks","whites","zIndices","messageStyle","shade","tint","success","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","IconBox","isVisible","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","bg","twitterIcon","radioBtn","button","GenericChart","addEventListener","handleWindowSizeChange","bind","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","undefined","loaderText","gradientButton","empty","select","selectDark","input","ExecuteTransaction","txStatus","loading","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","network","progressBarProps","execute","componentProps","TransactionField","loadField","hashChanged","accountChanged","output","tokenSymbol","bgColor","fieldProps","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","regenerator_default","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","enabled","idle","getDistribution","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","currentNetworkId","totalSpeed","_args10","_context10","availableStrategies","getRequiredNetworkId","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","toBN","n","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","console","getContractByName","networkId","required","contract","contracts","current","isCorrectNetwork","contractsNetworks","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","duration","start","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","startLen","endLen","shortHash","txStart","txEnd","switchEthereumChain","chainId","getCurrentWeb3","currentProvider","request","toHex","method","addEthereumChain","networkConfig","chainName","providerConfig","blockExplorerUrl","rpcUrls","publicRpc","rpc","nativeCurrency","baseToken","symbol","blockExplorerUrls","ensConfig","TTL","ens","addressCheck","supportedNetworks","checkAddress","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","portfolio","tranches","avgAPY","totalBalance","totalEarnings","totalAmountLent","totalEarningsPerc","_args5","tranchesBalance","protocol","protocolConfig","_ref4","_ref5","tranche","trancheConfig","trancheTokenBalance","trancheUserInfo","trancheStakedBalance","tranchePrice","tranchePool","tokenBalance","_ref11","tokenBalanceConverted","trancheEarnings","trancheApy","poolShare","amountDeposited","getContractBalance","getTrancheUserInfo","getTrancheStakedBalance","CDORewards","toConsumableArray","loadTrancheFieldRaw","convertTrancheTokenBalance","amountDepositedConverted","trancheInfo","trancheWeight","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args8","tokensToMigrate","totalBalanceConverted","_ref15","_ref15$","migrationEnabled","oldContractBalanceFormatted","tokenKey","checkMigration","strategy","getIdleTokenPrice","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getTokenAprs","getAmountDeposited","avgApy","requiredNetwork","web3RpcKey","web3Rpc","ethereum","Web3","providers","HttpProvider","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args9","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","prevAvgBuyPrice","getAvgBuyPrice","_args11","idleTokensBalance","getFirstDepositTx","deposits","firstDepositTx","getDashboardSectionUrl","section","env","envUrl","baseUrl","origin","asyncTimeout","ms","getDepositTimestamp","_callee13","firstDepositTxs","_args13","_context13","reduce","acc","getTrancheStakingRewardsDistributions","_ref24","_callee15","stakingDistributions","stakingRewards","_context15","_ref25","_callee14","eventFilters","transfers","_context14","CDO","getContractEvents","fromBlock","toBlock","_x9","getTrancheHarvests","_ref26","_callee17","_ref27","_ref28","stakingRewardsDistributions","autoFarming","harvestsList","_context17","_ref29","_callee16","_context16","_x12","_x10","_x11","getTrancheRewardTokensInfo","_ref30","_callee19","tokensDistribution","_context19","_ref31","_callee18","firstHarvest","latestHarvest","firstBlock","govTokenConfig","_ref32","_ref33","prevBlockInfo","lastBlockInfo","lastBlockPoolSize","poolSize","elapsedBlocks","elapsedSeconds","lastAmount","totalAmount","tokensPerBlock","tokensPerSecond","tokensPerDay","tokensPerYear","convertedTokensPerYear","tokenApr","tokenApy","_context18","_address","getBlockInfo","genericContractCallCached","returnValues","total","apr2apy","apr","apy","_x15","_x13","_x14","_ref34","_callee21","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters","_ref35","_ref36","underlying_transfers","trancheToken_transfers","totalAmountDeposited","blocksInfo","_context21","sort","_ref37","_callee20","trancheTokenTransferEvent","tokenTransferEvent","_ref38","_ref39","blockInfo","tokenConversionRate","_context20","_x19","trancheTokenAmount","hashKey","trancheTokens","tokenAmountConverted","_x16","_x17","_x18","getTrancheUserTransactions","_ref40","_callee22","_context22","_x20","_x21","_x22","getTrancheFirstDepositTx","_ref41","_callee23","_context23","_x23","_x24","_x25","getAmountDepositedTranche","_ref42","_callee24","_context24","_x26","_x27","_x28","_ref43","_callee25","_ref44","_ref45","userAvgPrice","_context25","_x29","_x30","getAmountLent","_callee26","amountLents","_args26","_context26","getBaseToken","getCurrentNetwork","getCurrentNetworkId","defaultNetwork","getPolygonBridgeTxs","_callee32","txs","covalentInfo","etherscanInfo","stateSenderConfig","erc20PredicateConfig","etherPredicateConfig","depositManagerConfig","rootChainManagerConfig","polygonNetworkId","covalentApiUrl","polygonAvailableTokens","polygonEndpoint","ethereumNetworkId","etherscanApiUrl","etherscanEndpoint","etherscanTxlistEndpoint","etherscanTxlistInternalEndpoint","_ref48","_ref49","last_state_id","polygonTxs","etherscanTxlist","etherscanTxlistInternal","rootTokensAddresses","childTokensAddresses","depositTxs","exitTxs","depositTxsHashes","depositETHInputRexExp","depositETHTxs","exitETHTxs","_args32","_context32","getCachedData","endpoints","getPolygonCurrentLastStateId","makeCachedRequest","makeEtherscanApiRequest","childToken","rootToken","result","_ref50","_callee27","ethereumTx","txReceipt","stateSenderLog","tx_state_id","_context27","bridgeType","getTxReceipt","web3Infura","log","hexToNumberString","topics","included","_x31","_ref51","_callee28","_context28","_x32","match","_ref52","_callee29","_context29","_x33","_ref53","_callee30","_context30","_x34","items","to_address","_ref54","_callee31","polygonTx","_context31","normalizePolygonTx","exited","maticPOSClient","exitERC20","encodeAbi","_x35","getPolygonBaseTxs","_callee33","debug","baseTxs","baseEndpoint","cachedRows","lastCachedTx","lastCachedBlockNumber","covalentEndpointLastBlock","latestTxs","latestBlockNumbers","requestCount","requestStatus","dataToCache","_args33","_context33","getCachedRequest","block_height","filterPolygonTxs","tx_hash","saveFetchedTransactions","makeRequest","now","addKeyToCachedDataWithLocalStorage","getEtherscanBaseTxs","_callee34","firstBlockNumber","endBlockNumber","firstIdleBlockNumber","etherscanEndpointLastBlock","_args34","_context34","filterEthereumTxs","_callee35","_args35","_context35","filterCurveTxs","endpoint","txsToStore","cachedRequest","saveCachedRequest","_callee36","resultData","_resultData","allAvailableTokens","_args36","_context36","processStoredTxs","t1","_callee37","contractInstance","_context37","web3Polygon","Contract","constant","inputs","outputs","internalType","payable","stateMutability","methods","lastStateId","call","checkPolygonTransactionIncluded","_ref60","_callee38","_ref61","_ref62","_context38","getTransactionReceipt","_x36","_ref63","_callee39","_args39","_context39","_x37","depositLogEvent","log_events","sender_address","decoded","param","redeemLogEvent","withdrawLogEvent","tokenDecimal","idleToken","block_signed_at","_d","logEvent","raw_log_topics","from_address","gasUsed","gas_spent","gas_price","_ref64","_callee40","processTransactions","idleTokensAddresses","_args40","_context40","mappedTx","_x38","_x39","filterEtherscanTxs","_ref65","_callee41","processTxs","_args41","_context41","_x40","_ref66","_callee42","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args42","_context42","tokenMigrationToolParams","curveTokenConfig","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenValue","newValue","iTxs","withdrawnValue","_x41","addStoredTransaction","txKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref67","_callee47","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args47","_context47","baseTokenConfig","baseTokenAddress","_ref68","_callee46","minedTxs","_context46","_ref69","_callee45","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context45","getCurveTokenPrice","_ref70","_callee43","_context43","_x46","_x47","baseTokensConfig","t2","_ref71","_callee44","_context44","_x48","_x49","_x44","_x45","_x43","_x42","_ref72","_callee53","txsToProcess","_args53","_context53","_ref73","_callee52","_context52","_ref74","_callee51","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context51","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref75","_callee48","_context48","_x54","_x55","_ref76","_callee49","_context49","_x56","_x57","oldContract","events","raw","_ref77","_callee50","_context50","_x58","_x59","abi","decodeLog","_token","_x52","_x53","_x51","_x50","alias","getCustomAddress","setCustomAddress","customAddress","cachedRequests","makePostRequest","_ref78","_callee54","postData","error_callback","config","_args54","_context54","post","catch","_x60","_ref79","_callee55","_args55","_context55","_x61","_ref80","_callee56","apiKeyIndex","apiKey","_args56","_context56","message","_x62","_ref81","_callee57","return_data","_args57","_context57","_x63","makeCachedPostRequest","_ref82","_callee58","_args58","_context58","_x64","code","errorCode","split","getGlobalConfigs","array","prop","shift","configs","getAppUrl","baseURL","getCurrentEnvironment","environments","checkUrlPolygon","polygonUrl","checkUrlOrigin","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee59","page","googlePageviewInfo","isOrigin","_args59","_context59","ga","_ref84","_callee61","googleEventsInfo","debugEnabled","originOk","_args61","_context61","analytics","google","addPostfixForTestnet","availableNetworks","_ref85","_callee60","_context60","hitCallback","hitCallbackFail","_x66","_x67","_x65","createContract","_ref86","_callee62","_context62","_x68","_x69","_x70","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","defaultUrl","baseurl","getEtherscanAddressUrl","decimalCount","decimal","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee65","activeOnly","whitelist","query","proposals","currTime","validProposals","_args65","_context65","addr","_ref88","_callee64","checkedStrategies","_context64","end","author","snapshot","strategies","_ref89","_callee63","tokenContract","_context63","_x72","_x71","getAprsFromApi","_callee66","endpointInfo","aprs","_args66","_context66","_ref91","_callee67","startTimestamp","endTimestamp","forceStartTimestamp","frequency","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args67","_context67","_x73","getTokenExchangeRate","_ref92","_callee68","exchangeRateParams","exchangeRate","_context68","_x74","_x75","getTokenDecimals","_ref93","_callee69","_context69","_x76","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee70","idleTokenConfig","feeDistributorConfig","_context70","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee71","contractPaused","_args71","_context71","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref96","_callee73","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context73","lastAllocationsPromise","_ref97","_callee72","lastAllocations","_context72","_x78","_x79","alloc","_x77","_ref98","_callee74","oldContractBalance","oldContractTokenDecimals","oldContractName","_context74","_x80","_x81","_ref99","_callee75","eventName","_args75","_context75","getContractPastEvents","_x82","_x83","estimateMethodGasUsage","_ref100","_callee76","methodParams","_contract$methods","functionCall","gasLimit","_ref101","_ref102","_args76","_context76","getGasPrice","estimateGas","_x84","_x85","_ref103","_callee77","userAddress","signedParameters","callback_receipt","_contract$methods2","_context77","on","once","confirmationNumber","receipt","_x86","_x87","_x88","_x89","_x90","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref104","_callee78","biconomyInfo","res","_context78","limits","apiId","headers","x-api-key","_x91","sendTxWithPermit","_ref105","_callee79","_contract$methods3","messageToSign","_this$getSignaturePar","_context79","encodeABI","personal","sign","_x92","_x93","_x94","_x95","_x96","_x97","buildBiconomyErc20ForwarderTx","_ref106","_callee80","permitType","callData","buildParams","_context80","txGas","erc20ForwarderClient","buildTx","_x98","_x99","_x100","_x101","_x102","_ref107","_callee82","_context82","_ref108","_callee81","_context81","_x104","_x105","_x103","sendBiconomyTxWithErc20Forwarder","_ref109","_callee83","req","metaInfo","txResponse","fetchReceiptIntervalId","_context83","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x106","_x107","_x108","_x109","sendBiconomyTxWithPersonalSign","_ref110","_callee84","_this$getSignaturePar2","_context84","getNonce","_x110","_x111","_x112","_x113","signPermitEIP2612","_ref111","_callee85","erc20Name","owner","spender","deadline","domain","permit","domainData","_context85","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x114","_x115","_x116","_x117","_x118","_x119","_x120","_x121","signPermit","_ref112","_callee86","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args86","_context86","net","getId","round","nonceMethod","pow","allowed","response","_x122","_x123","_x124","_ref113","_callee87","permitParams","methodAbi","useNonce","_args87","_context87","_jsonInterface","f","unshift","_x125","_x126","_x127","_x128","_x129","_x130","_x131","sendSignedTx","_ref114","_callee88","MetaTransaction","dataToSign","_context88","_x132","_x133","_x134","_x135","_x136","checkTokenApproved","_ref115","_callee89","contractAddr","walletAddr","_ref116","_ref117","allowance","_context89","getAllowance","gte","_x137","_x138","_x139","_ref118","_callee90","_context90","_x140","_x141","_x142","contractMethodSendWrapperWithValue","txData","send_raw","raw_tx_data","disableERC20","toTwosComplement","enableERC20","getBestToken","_callee92","highestValue","_args92","_context92","lendRates","aprInfo","tokenAPR","_ref120","_callee91","_context91","_x143","_ref121","_callee93","stakedBalance","_args93","_context93","_x144","_x145","getTrancheStakingRewards","_ref122","_callee95","_context95","_ref123","_callee94","tokenGlobalConfig","_context94","_x148","_x146","_x147","_ref124","_callee96","field","addGovTokens","_args96","_context96","loadTrancheField","_x149","_x150","_x151","_x152","_x153","_x154","_x155","_x156","_ref125","_callee97","formatValue","addTokenName","rewardsTokensInfo","internal_view","stakingRewardsEnabled","stakingEnabled","strategyConfig","show_idle_apy","idleStrategyAddress","idleGovTokenConfig","_ref126","_ref127","totalSupply","virtualPrice","_ref128","_ref129","staked1","lastPrice1","_ref130","_ref131","deposited1","lastPrice","_ref132","_ref133","redeemable1","staked2","_ref134","_ref135","earningsStart","trancheApy2","deposited3","earningsEnd","_ref136","_ref137","trancheFee","earningsCounter","feesStart","feesEnd","_ref138","_ref139","deposited4","redeemable3","_ref140","_ref141","deposited2","redeemable2","_ref142","_ref143","_ref144","_ref145","earningsPerc","secondsFromFirstTx","_ref146","_ref147","rewardsTokens","incentiveTokens","govTokens","_args97","_context97","Strategy","initContract","AA","BB","getTokenTotalSupply","IDLE","rewardTokenAddr","govTokenAddress","getGovTokenConfigByAddress","stakingRewardsTokenConfig","govToken","_x157","_x158","_x159","_x160","_x161","_x162","_x163","loadAssetField","_ref148","_callee98","addCurveApy","showIdleAPR","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref149","_ref150","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref151","_ref152","amountLentCurve1","redeemableBalanceCurve","_ref153","_ref154","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref155","_ref156","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref157","_ref158","tokenPriceFirstDeposit","_ref159","_ref160","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref161","_ref162","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref163","_ref164","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref165","_ref166","amountLentCurve2","redeemableBalanceCurve1","_ref167","_ref168","redeemableBalance2","_args98","_context98","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x164","_x165","_x166","_x167","getIdleTokenSupply","_ref169","_callee99","idleTokenSupply","_args99","_context99","_x168","getIdleTokenPriceWithFee","_ref170","_callee100","_ref171","_ref172","fee","priceWFee","_args100","_context100","eq","_x169","_x170","_ref173","_callee101","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args101","_context101","_x171","clearCachedData","clear_all","parent_key","useLocalStorage","expirationDate","_ref174","_callee102","_ref175","_ref176","idleTokensTotalSupply","userShare","_context102","_x172","_x173","open","_callee104","coverProtocolConfig","nexusMutualConfig","_args104","_context104","_ref178","_callee103","coverage","coverageTokens","protocolImage","_context103","tokens","expirationTimestamp","utc","_x174","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref179","_callee106","incidentsInfo","_ref180","_ref181","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context106","directProps","startBlock","contractInfo","buyer","_ref182","_callee105","cover","coverId","claimSubmittedEvent","_ref183","_ref184","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref185","_ref186","_context105","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x176","_x175","getBatchedDepositExecutions","_ref187","_callee107","_context107","_x177","getBatchedDeposits","_callee109","filter_by_status","batchDepositConfig","batchedDeposits","_args109","_context109","_ref189","_callee108","currBatchIndex","batchIndex","_ref190","_ref191","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context108","_x178","getETHBalance","_ref192","_callee110","fixDecimals","_args110","_context110","_x179","_ref193","_callee111","_ref194","_ref195","_args111","_context111","_x180","_x181","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","_ref196","_callee112","_args112","_context112","_x182","_ref197","_callee113","_args113","_context113","_x183","_ref198","_callee114","_args114","_context114","_x184","_x185","getProtocolBalance","_ref199","_callee115","_context115","_x186","_x187","getAprs","_ref200","_callee116","_context116","addresses","_x188","genericIdleCall","_ref201","_callee117","callParams","_args117","_context117","_x189","_ref202","_callee118","_contract$methods4","_args118","_context118","_x190","_x191","_ref203","_callee120","_args120","_context120","_ref204","_callee119","_context119","_x193","_x194","_x192","getTxDecodedLogs","_ref205","_callee122","logAddr","decodeLogs","internalTransfers","_context122","_ref206","_callee121","_context121","_x199","_x200","_x195","_x196","_x197","_x198","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee123","_context123","_callee124","_args124","_context124","getBlock","_ref209","_callee125","_args125","_context125","getPastEvents","_x201","_x202","_ref210","_callee126","_args126","_context126","_x203","_x204","cachedContractCall","_ref211","_callee127","_args127","_context127","_x205","_x206","_ref212","_callee128","_contract$methods5","_args128","_context128","_x207","_x208","_ref213","_callee129","async","_args129","_context129","_x209","_x210","getUnlentBalance","_ref214","_callee130","unlentBalance","_context130","_x211","_ref215","_callee131","_args131","_context131","_x212","getLastAllocations","_ref216","_callee133","tokenAllocations","_context133","_ref217","_callee132","_context132","_x214","_x215","_x213","_ref218","_callee134","protocolsAprs","_ref219","_ref220","govTokensBalances","_args134","_context134","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","_x216","getSushiswapPoolTokenPrice","_ref221","_callee135","_ref222","_ref223","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref224","_ref225","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context135","getSushiswapConversionRate","_x217","_ref226","_callee136","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context136","_x218","_x219","_ref227","_callee137","unires","_args137","_context137","addressForPrice","_x220","_x221","getCurveDepositedTokens","_ref228","_callee138","idleTokensBalances","remainingCurveTokens","_args138","_context138","_x222","getCurveUnevenTokenAmounts","_ref229","_callee139","amounts","max_burn_amount","unevenAmounts","_context139","getCurveDepositContract","_x223","_x224","_callee140","curveRatesInfo","_context140","strategyTokens","getCurveAPYContract","_callee141","blocksForPrevTokenPrice","_ref232","_ref233","prevTokenPrice","blocksMultiplier","curveAPR","_context141","getCurveTokenSupply","_callee142","_context142","getCurvePoolContract","_callee143","_args143","_context143","_callee144","_args144","_context144","_ref237","_callee145","_ref238","_ref239","_context145","_x225","_callee146","depositContractInfo","_context146","getCurveZapContract","_callee147","zapContractInfo","_context147","_callee148","poolContractInfo","_context148","getCurveSwapContract","_callee149","migrationContractInfo","_context149","getCurveIdleTokensAmounts","_callee151","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args151","_context151","_ref245","_callee150","coinIndex","curveIdleTokens","_context150","migrationParams","_x226","getCurveTokensAmounts","_callee153","useCoinIndex","_args153","_context153","_ref247","_callee152","_ref248","_ref249","idleTokenPrice","totalTokenSupply","_context152","_x227","getCurveAmounts","_ref250","_callee155","_args155","_context155","_ref251","_callee154","_context154","_x230","_x228","_x229","getCurveTokenAmount","_ref252","_callee156","_args156","_context156","_x231","getCurveSlippage","_ref253","_callee157","uneven_amounts","depositContract","_ref254","_ref255","Sv","_args157","_context157","_x232","_x233","_ref256","_callee158","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","disabledTokens","aaveIncentivesController_address","IAaveIncentivesController_name","_ref257","_ref258","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args158","_context158","IAaveIncentivesController","emissionPerSecond","_x234","_callee160","_args160","_context160","_ref260","_callee159","_ref261","_ref262","_context159","_x235","getWMaticApr","_ref263","_callee161","maticConversionRate","wMaticTokenConfig","wMaticApr","distributionSpeed","destTokenConfig","wMaticValue","_args161","_context161","_x236","_x237","getStkAaveApr","_ref264","_callee162","aaveConversionRate","stkAaveAPR","stkAaveValue","_args162","_context162","_x238","_x239","getCompAPR","_ref265","_callee163","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args163","_context163","_x240","_x241","getCompSpeed","_ref266","_callee164","cTokenAddress","compSpeed","_context164","_x242","_ref267","_callee165","cTokenInfo","compoundAllocationPerc","_ref268","_ref269","cTokenTotalSupply","compoundPoolShare","_args165","_context165","_x243","_callee167","_args167","_context167","_ref271","_callee166","_ref272","_ref273","_context166","_x244","_callee169","_args169","_context169","_ref275","_callee168","_ref276","_ref277","compApr","_context168","_x245","getTokensCsv","_callee172","csv","_context172","prototype","sum","pv","cv","avg","_ref279","_callee171","_context171","_ref280","_callee170","rates","header","aprAvg","scoreAvg","lastRow","_context170","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x247","_x246","_callee174","convertToken","_args174","_context174","_ref282","_callee173","compTokenBalance","_context173","_x248","getGovTokensFarming","tokenGovTokens","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref283","_callee176","govTokensUserDistribution","_args176","_context176","_ref284","_callee175","_context175","_x250","_x249","getGovTokensDistributionSpeed","_ref285","_callee178","govTokensDistribution","_args178","_context178","_ref286","_callee177","govSpeed","_context177","_x252","_x251","getGovTokensAprs","_ref287","_callee180","govTokensAprs","_args180","_context180","_ref288","_callee179","_ref289","_ref290","_ref291","_ref292","cTokenConfig","_context179","aprTooltipMode","_x255","_x253","_x254","_callee182","_args182","_context182","_ref294","_callee181","govTokenBalance","fromTokenConfig","_context181","_x256","_callee183","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args183","_context183","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref296","_callee185","govTokensAmounts","_context185","getGovTokensUserAmounts","_ref297","_callee184","govTokenIndex","_context184","getGovTokenAddessByIndex","_x259","_x260","_x257","_x258","_ref298","_callee186","_context186","_x261","_x262","_ref299","_callee187","_context187","_x263","_x264","_callee190","govTokenConfigForced","_args190","_context190","_ref301","_callee189","_context189","_ref302","_callee188","_context188","_x266","_x267","_x265","getTokenFees","_callee191","_args191","_context191","_callee192","_ref305","_ref306","feePercentage","gain","fees","_args192","_context192","_ref307","_callee193","_args193","_context193","_x268","getTotalTVL","_callee194","tokensTVL","_context194","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee198","_context198","_ref310","_callee197","_context197","_ref311","_callee196","oldTokenTVL","idleTokenName","_ref312","_ref313","oldTokenConfig","_ref317","_ref318","oldTokenPrice","oldTotalSupply","_context196","showAUM","_ref314","_callee195","_ref315","_ref316","govTokenConversionRate","govTokenBalanceConverted","_context195","_x271","oldProtocols","oldProtocol","protocolPos","_x270","_x269","getSubstackLatestFeed","_callee199","idleSubstackFeed","latestFeed","_context199","getTrancheAggregatedStats","_callee203","totalAUM","_args203","_context203","_ref321","_callee202","_context202","_ref322","_callee201","_context201","_ref323","_callee200","_ref324","_ref325","_context200","_x274","_x273","_x272","getAggregatedStats","_callee205","allNetworks","networkIds","_args205","_context205","_ref327","_callee204","tvls","_context204","getAggregatedStats_chain","_x275","_callee209","avgAPR","_args209","_context209","_ref329","_callee208","_context208","_ref330","_callee207","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context207","_ref331","_callee206","_ref332","_ref333","_context206","_x278","_x277","_x276","getTokenApy","_ref334","_callee210","_context210","_x279","getTokensToMigrate","_callee213","_args213","_context213","_ref336","_callee212","_context212","_ref337","_callee211","_ref338","_context211","_x281","_x280","getProtocolsTokensBalances","_callee215","tokenBalances","minTokenBalance","protocolsTokens","_args215","_context215","_ref340","_callee214","_context214","_x282","getTokenConversionRateField","_ref341","_callee216","_args216","_context216","getTokenConversionRateUniswap","_x283","_x284","_ref342","_callee217","_args217","_context217","_x285","_x286","_x287","getAvgAPYStats","_ref343","_callee218","apiResults","_args218","_context218","_x288","_x289","_ref344","_callee219","ToTokenConfig","_args219","_context219","_x290","_ref345","_callee220","count","_conversionRate","_args220","_context220","_x291","_x292","getTokenScore","_ref346","_callee221","_ref347","_ref348","tokenScore","_context221","protocolScore","getTokenScoreApi","_x293","_x294","_ref349","_callee222","scores","_context222","_x295","_x296","_ref350","_callee223","idleGovTokenShowAPR","idleAPR","_args223","_context223","_x297","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","Fragment","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","getInitParams","render","closeModal","goBack","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","remoteResources","scriptID","remoteResourceParams","precall","parentElement","head","stylesheetId","methodInfo","loadAvailableMethods","_this4","caption","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","imageSrc","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","buyText","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","placeholder","noOptionsMessage","inputValue","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","closeFunc","Header","Body","Footer","React","defaultOpacity","hidden","interactive","rainbow","DashboardCard","mouseOver","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","titleParentProps","lineHeight","description","placement","TableRow","FieldComponent","fieldComponent","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","cardId","rowProps","rowId","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","colProps","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","CustomList","rowsPerPage","totalPages","processedRows","processRows","totalRows","paginationEnabled","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","rowIndex","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_8__","CustomField","prevPage","nextPage","Staking","selectedOption","toolProps","SelectedComponent","component","AssetField","FlexLoader","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","borderBottom","q","toggleAnswer","SendTxWithBalance","permitEnabled","showPermitBox","approveEnabled","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","executeTx","_amount","_params","checkLimit","eventValue","getPermitTransactionParams","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","viewOnly","connectorName","infoBox","steps","step","stepIndex","ExtLink","checked","togglePermitEnabled","approveDescription","RoundButton","balanceSelectorInfo","ConnectBox","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","componentDidUpdate","ModalCard","iconHeight","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","balanceProp","trancheBalance","selectedAction","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","trancheAPY","trancheDetails","cdoConfig","cantUnstake","cantWithdraw","functions","trancheLimit","otherTrancheType","otherTrancheDetails","showSelectButton","contrastColor","hex","selectTrancheType","experimental","TrancheField","setSelectedAction","src_SendTxWithBalance_SendTxWithBalance","transactionSucceeded","contractApprovedCallback","components_LimitReachedModal","ShareModal","confettiEnabled","tweet","TrancheHarvests","distributions","tokenIcon","Title","stakeEnabled","unstakeEnabled","selectedTrancheOption","selectedStakeAction","selectedActionChanged","selectedStakeActionChanged","trancheType","isStake","isDeposit","isWithdraw","option","selectTranche","ImageButton","setStakeAction","PortfolioEquityTranches","transactionsList","lastTxTimestamp","tokenBalanceConfig","tranchePriceAA","tranchePriceBB","tokenDataAA","tokenDataBB","lastTimestamp","filteredTrancheBalances","_timeStamp","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","colWidth","src_PortfolioEquityTranches_PortfolioEquityTranches","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","transactionsChanged","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","rewardToken","rewardTokenInfo","staked","reedemable","Button","claimCallback","TranchePage","userHasFunds","componentLoaded","trancheTypeChanged","balanceInfo","tranchesDetails","filteredTranchesTypes","TrancheDepositRedeem","src_TrancheDetails_TrancheDetails","src_FundsOverviewTranche_FundsOverviewTranche","src_StakingRewardsTranche_StakingRewardsTranche","src_TrancheHarvests_TrancheHarvests","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","TranchesList","enabledProtocols","alt","showTooltip","baseName","justifyItems","long","features","feature","TrancheFlash","flashData","bold","subtitle","openTooltipModal","msg","helpcircle","arrows","seniorinfo","juniorinfo","TrancheWelcome","AssetsUnderManagement","loaderAlign","aggregatedStatsMethod","src_TrancheFlash_TrancheFlash","TrancheBox","GenericPieChart","showLegend","itemWidth","legendItemWidth","itemHeight","translateY","symbolSize","anchor","direction","itemTextColor","symbolShape","effects","valueHover","valueHoverProps","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","contractsInitialized","counterStyle","oldState","build_default","delay","separator","useEasing","formattingFn","countUpRef","ref","TotalEarningsCounter","Tranches","trancheRoute","useTrancheType","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","loadPortfolio","then","urlParams","param1","param3","param2","availableTranchesChanged","tranchesTokens","tranchesBalances","tranchesConfig","weight","portfolioDonutData","balanceValue","tokenPercentage","trancheName","_this5","breadcrumbPath","src_TranchePage_TranchePage","aligItems","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","setPortfolioEquityQuickSelection","src_TranchesList_TranchesList","src_TrancheWelcome_TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","programEnded","rewardMultiplier","accountingData","programEndDate","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","isUnstake","isStats","txAction","poolLink","statInfo","setAction","IdleStaking","maxApr","lockPeriods","lockedEnd","maxTime","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","getMaxStakeTimestamp","maxStakeTimestamp","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","maxDateTimestamp","_this8","_this9","isLock","isClaim","isIncrease","canIncrease","StatsCardSmall","maxHeight","reward","setIncreaseAction","changeLockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","selectedUnderlyingChanged","loadTokenData","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","PortfolioDonut","totalFunds","parentWidth","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","setEstimationStepsPerc","tokenIndex","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","borderTop","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","PolygonBridgeTransactions","bridgeEnabled","polygonTransactions","polygonTransactionsAvailableTokens","polygonBridgeConfig","actionIcon","actionIconProps","StrategyPage","remainingTokens","portfolioLoading","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","apyLong","yieldFarming","strategyName","toolsToShow","toolName","toolConfig","src_PortfolioDonut_PortfolioDonut","toolIndex","src_DashboardIconButton_DashboardIconButton","ActiveCoverages","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","src_PolygonBridgeTransactions_PolygonBridgeTransactions","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","obj","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","PolygonBridge","txsToExit","dataLoaded","defaultTransaction","selectedTransaction","rootTokenConfig","childTokenConfig","encodeParameter","depositData","sendValue","exitCalldata","ERC20Predicate","DepositManager","depositedTokensLog","depositedTokensEvent","EtherPredicate","maticNetwork","mainNetworkId","mainNetworkName","withdrawnTokensEvent","withdrawnTokensLog","withdrawnTokens","Transfer","paramIsToken","defaultAction","loadPolygonTxs","isExit","selectTransaction","exitCallback","getExitTransactionParams","setRequiredNetwork","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","process","appName","forumURL","telegramURL","discordURL","twitterURL","darkModeEnabled","live","beta","polygon","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","messages","scoreShort","apyShort","totalProfitPerc","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","riskAdjustedDisabledMessageDeposit","riskScore","curveInstructions","riskAdjustedDisabledMessageRedeem","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","12","7","delegates","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","DAI","USDC","SLP","showAPR","showPrice","137","COMP","stkAAVE","aToken","WMATIC","ERC20","ProtocolDataProvider","ChildChainManager","UniswapRouter","UniswapV2Router02","SushiswapRouter","SushiV2Router02","RootChainManager","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","BalancerExchangeProxy","zeroExInstant","orderSource","affiliateInfo","feeRecipient","tranchflash","rgb","bubble","stake","unstake","extraicons","best","iconDark","iconInactive","iconInactiveDark","risk","tools","forum","leaderboard","overview","delegate","landingStrategies","enabledEnvs","comingSoon","titlePostfix","govTokensEnabled","chartColor","descShort","descLong","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","ETH","STETH","CVX","CRV","FRAX3CRV","MIM3CRV","MATIC","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","disabledCharts","FEI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","lido","convex","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","42","3","4","5","1337","80001","isForked","requiredConfirmations","enabledNetworks","accountBalanceMinimum","infura","REACT_APP_INFURA_KEY","networkPairs","nexus","covalent","REACT_APP_COVALENT_KEY","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","urls","queries","proposalsActive","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","stakePolygon","nexusMutual","IdleTokenV4","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","polygonBridge","StateSender","ChildERC20","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","wyre","captionPos","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","payload","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","anonymous","indexed","govTokensDisabled","defiPrime","crToken","cToken","yToken","iToken","CHAI","skipMintForDeposit","fToken","defiScoreDisabled","disabledMessageRedeemKey","disabledMessageDepositKey","./mainnet/v1/index.json","./testnet/mumbai/index.json","webpackContext","webpackContextResolve","./mainnet/v1/artifacts/fx-portal/FxChild.json","./mainnet/v1/artifacts/fx-portal/FxERC1155ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC1155RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC20ChildToken.json","./mainnet/v1/artifacts/fx-portal/FxERC20ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC20RootToken.json","./mainnet/v1/artifacts/fx-portal/FxERC20RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC721ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC721RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxRoot.json","./mainnet/v1/artifacts/genesis/BorValidatorSet.json","./mainnet/v1/artifacts/genesis/IStateReceiver.json","./mainnet/v1/artifacts/genesis/Migrations.json","./mainnet/v1/artifacts/genesis/StateReceiver.json","./mainnet/v1/artifacts/genesis/System.json","./mainnet/v1/artifacts/genesis/TestBorValidatorSet.json","./mainnet/v1/artifacts/genesis/TestCommitState.json","./mainnet/v1/artifacts/genesis/TestStateReceiver.json","./mainnet/v1/artifacts/genesis/TestSystem.json","./mainnet/v1/artifacts/genesis/ValidatorSet.json","./mainnet/v1/artifacts/genesis/ValidatorVerifier.json","./mainnet/v1/artifacts/plasma/BaseERC20.json","./mainnet/v1/artifacts/plasma/ChainIdMixin.json","./mainnet/v1/artifacts/plasma/ChildChain.json","./mainnet/v1/artifacts/plasma/ChildERC20.json","./mainnet/v1/artifacts/plasma/ChildERC20Proxified.json","./mainnet/v1/artifacts/plasma/ChildERC721.json","./mainnet/v1/artifacts/plasma/ChildERC721Mintable.json","./mainnet/v1/artifacts/plasma/ChildERC721Proxified.json","./mainnet/v1/artifacts/plasma/ChildToken.json","./mainnet/v1/artifacts/plasma/ChildTokenProxy.json","./mainnet/v1/artifacts/plasma/Common.json","./mainnet/v1/artifacts/plasma/ContractReceiver.json","./mainnet/v1/artifacts/plasma/ContractWitRevertingFallback.json","./mainnet/v1/artifacts/plasma/ContractWithFallback.json","./mainnet/v1/artifacts/plasma/ContractWithoutFallback.json","./mainnet/v1/artifacts/plasma/DelegateProxy.json","./mainnet/v1/artifacts/plasma/DepositManager.json","./mainnet/v1/artifacts/plasma/DepositManagerHeader.json","./mainnet/v1/artifacts/plasma/DepositManagerProxy.json","./mainnet/v1/artifacts/plasma/DepositManagerStorage.json","./mainnet/v1/artifacts/plasma/DrainStakeManager.json","./mainnet/v1/artifacts/plasma/Drainable.json","./mainnet/v1/artifacts/plasma/ECVerify.json","./mainnet/v1/artifacts/plasma/ERC165.json","./mainnet/v1/artifacts/plasma/ERC20.json","./mainnet/v1/artifacts/plasma/ERC20Detailed.json","./mainnet/v1/artifacts/plasma/ERC20Mintable.json","./mainnet/v1/artifacts/plasma/ERC20NonTransferable.json","./mainnet/v1/artifacts/plasma/ERC20Predicate.json","./mainnet/v1/artifacts/plasma/ERC20PredicateBurnOnly.json","./mainnet/v1/artifacts/plasma/ERC721.json","./mainnet/v1/artifacts/plasma/ERC721Enumerable.json","./mainnet/v1/artifacts/plasma/ERC721Full.json","./mainnet/v1/artifacts/plasma/ERC721Metadata.json","./mainnet/v1/artifacts/plasma/ERC721MetadataMintable.json","./mainnet/v1/artifacts/plasma/ERC721Mintable.json","./mainnet/v1/artifacts/plasma/ERC721PlasmaMintable.json","./mainnet/v1/artifacts/plasma/ERC721Predicate.json","./mainnet/v1/artifacts/plasma/ERC721PredicateBurnOnly.json","./mainnet/v1/artifacts/plasma/ERCProxy.json","./mainnet/v1/artifacts/plasma/ExitNFT.json","./mainnet/v1/artifacts/plasma/FallbackManager.json","./mainnet/v1/artifacts/plasma/GnosisSafe.json","./mainnet/v1/artifacts/plasma/GnosisSafeProxy.json","./mainnet/v1/artifacts/plasma/Governable.json","./mainnet/v1/artifacts/plasma/Governance.json","./mainnet/v1/artifacts/plasma/GovernanceLockable.json","./mainnet/v1/artifacts/plasma/GovernanceLockableTest.json","./mainnet/v1/artifacts/plasma/GovernanceProxy.json","./mainnet/v1/artifacts/plasma/IDepositManager.json","./mainnet/v1/artifacts/plasma/IERC165.json","./mainnet/v1/artifacts/plasma/IERC20.json","./mainnet/v1/artifacts/plasma/IERC721.json","./mainnet/v1/artifacts/plasma/IERC721Enumerable.json","./mainnet/v1/artifacts/plasma/IERC721Metadata.json","./mainnet/v1/artifacts/plasma/IERC721Receiver.json","./mainnet/v1/artifacts/plasma/IErcPredicate.json","./mainnet/v1/artifacts/plasma/IGovernance.json","./mainnet/v1/artifacts/plasma/IParentToken.json","./mainnet/v1/artifacts/plasma/IPredicate.json","./mainnet/v1/artifacts/plasma/IRootChain.json","./mainnet/v1/artifacts/plasma/ISignatureValidator.json","./mainnet/v1/artifacts/plasma/ISlashingManager.json","./mainnet/v1/artifacts/plasma/IStakeManager.json","./mainnet/v1/artifacts/plasma/IStakeManagerLocal.json","./mainnet/v1/artifacts/plasma/IValidatorShare.json","./mainnet/v1/artifacts/plasma/IWithdrawManager.json","./mainnet/v1/artifacts/plasma/LibEIP712Domain.json","./mainnet/v1/artifacts/plasma/LibTokenTransferOrder.json","./mainnet/v1/artifacts/plasma/Lockable.json","./mainnet/v1/artifacts/plasma/MRC20.json","./mainnet/v1/artifacts/plasma/Marketplace.json","./mainnet/v1/artifacts/plasma/MarketplacePredicate.json","./mainnet/v1/artifacts/plasma/MarketplacePredicateTest.json","./mainnet/v1/artifacts/plasma/MarketplaceToken.json","./mainnet/v1/artifacts/plasma/MasterCopy.json","./mainnet/v1/artifacts/plasma/MaticWETH.json","./mainnet/v1/artifacts/plasma/Merkle.json","./mainnet/v1/artifacts/plasma/Migrations.json","./mainnet/v1/artifacts/plasma/MintableERC721Predicate.json","./mainnet/v1/artifacts/plasma/MinterRole.json","./mainnet/v1/artifacts/plasma/Module.json","./mainnet/v1/artifacts/plasma/ModuleManager.json","./mainnet/v1/artifacts/plasma/Ownable.json","./mainnet/v1/artifacts/plasma/OwnableLockable.json","./mainnet/v1/artifacts/plasma/OwnerManager.json","./mainnet/v1/artifacts/plasma/ParentTokenMock.json","./mainnet/v1/artifacts/plasma/PredicateUtils.json","./mainnet/v1/artifacts/plasma/PriorityQueue.json","./mainnet/v1/artifacts/plasma/Proxy.json","./mainnet/v1/artifacts/plasma/ProxyStorage.json","./mainnet/v1/artifacts/plasma/ProxyTestImpl.json","./mainnet/v1/artifacts/plasma/ProxyTestImplStorageLayoutChange.json","./mainnet/v1/artifacts/plasma/Registry.json","./mainnet/v1/artifacts/plasma/RootChain.json","./mainnet/v1/artifacts/plasma/RootChainHeader.json","./mainnet/v1/artifacts/plasma/RootChainProxy.json","./mainnet/v1/artifacts/plasma/RootChainStorage.json","./mainnet/v1/artifacts/plasma/RootChainable.json","./mainnet/v1/artifacts/plasma/RootERC721.json","./mainnet/v1/artifacts/plasma/SlashingManager.json","./mainnet/v1/artifacts/plasma/StakeManager.json","./mainnet/v1/artifacts/plasma/StakeManagerProxy.json","./mainnet/v1/artifacts/plasma/StakeManagerStorage.json","./mainnet/v1/artifacts/plasma/StakeManagerTest.json","./mainnet/v1/artifacts/plasma/StakeManagerTestable.json","./mainnet/v1/artifacts/plasma/StakingInfo.json","./mainnet/v1/artifacts/plasma/StakingNFT.json","./mainnet/v1/artifacts/plasma/StateReceiver.json","./mainnet/v1/artifacts/plasma/StateSender.json","./mainnet/v1/artifacts/plasma/StateSyncerVerifier.json","./mainnet/v1/artifacts/plasma/TestMRC20.json","./mainnet/v1/artifacts/plasma/TestToken.json","./mainnet/v1/artifacts/plasma/TransferWithSigPredicate.json","./mainnet/v1/artifacts/plasma/TransferWithSigUtils.json","./mainnet/v1/artifacts/plasma/UpgradableProxy.json","./mainnet/v1/artifacts/plasma/ValidatorShare.json","./mainnet/v1/artifacts/plasma/ValidatorShareFactory.json","./mainnet/v1/artifacts/plasma/ValidatorShareProxy.json","./mainnet/v1/artifacts/plasma/ValidatorShareTest.json","./mainnet/v1/artifacts/plasma/WETH.json","./mainnet/v1/artifacts/plasma/WithdrawManager.json","./mainnet/v1/artifacts/plasma/WithdrawManagerHeader.json","./mainnet/v1/artifacts/plasma/WithdrawManagerProxy.json","./mainnet/v1/artifacts/plasma/WithdrawManagerStorage.json","./mainnet/v1/artifacts/pos/AccessControl.json","./mainnet/v1/artifacts/pos/AccessControlMixin.json","./mainnet/v1/artifacts/pos/ChainConstants.json","./mainnet/v1/artifacts/pos/ChildChainManager.json","./mainnet/v1/artifacts/pos/ChildChainManagerProxy.json","./mainnet/v1/artifacts/pos/ChildERC1155.json","./mainnet/v1/artifacts/pos/ChildERC20.json","./mainnet/v1/artifacts/pos/ChildERC721.json","./mainnet/v1/artifacts/pos/ChildMintableERC721.json","./mainnet/v1/artifacts/pos/ChildTunnel.json","./mainnet/v1/artifacts/pos/DummyERC1155.json","./mainnet/v1/artifacts/pos/DummyERC20.json","./mainnet/v1/artifacts/pos/DummyERC721.json","./mainnet/v1/artifacts/pos/DummyMintableERC721.json","./mainnet/v1/artifacts/pos/DummyStateSender.json","./mainnet/v1/artifacts/pos/EIP712Base.json","./mainnet/v1/artifacts/pos/ERC1155.json","./mainnet/v1/artifacts/pos/ERC1155Predicate.json","./mainnet/v1/artifacts/pos/ERC1155PredicateProxy.json","./mainnet/v1/artifacts/pos/ERC1155Receiver.json","./mainnet/v1/artifacts/pos/ERC165.json","./mainnet/v1/artifacts/pos/ERC20.json","./mainnet/v1/artifacts/pos/ERC20Predicate.json","./mainnet/v1/artifacts/pos/ERC20PredicateProxy.json","./mainnet/v1/artifacts/pos/ERC721.json","./mainnet/v1/artifacts/pos/ERC721Predicate.json","./mainnet/v1/artifacts/pos/ERC721PredicateProxy.json","./mainnet/v1/artifacts/pos/EtherPredicate.json","./mainnet/v1/artifacts/pos/EtherPredicateProxy.json","./mainnet/v1/artifacts/pos/ICheckpointManager.json","./mainnet/v1/artifacts/pos/IChildChainManager.json","./mainnet/v1/artifacts/pos/IChildToken.json","./mainnet/v1/artifacts/pos/IERC1155.json","./mainnet/v1/artifacts/pos/IERC1155MetadataURI.json","./mainnet/v1/artifacts/pos/IERC1155Receiver.json","./mainnet/v1/artifacts/pos/IERC165.json","./mainnet/v1/artifacts/pos/IERC20.json","./mainnet/v1/artifacts/pos/IERC721.json","./mainnet/v1/artifacts/pos/IERC721Enumerable.json","./mainnet/v1/artifacts/pos/IERC721Metadata.json","./mainnet/v1/artifacts/pos/IERC721Receiver.json","./mainnet/v1/artifacts/pos/IERCProxy.json","./mainnet/v1/artifacts/pos/IMintableERC721.json","./mainnet/v1/artifacts/pos/IRootChainManager.json","./mainnet/v1/artifacts/pos/IStateSender.json","./mainnet/v1/artifacts/pos/ITokenPredicate.json","./mainnet/v1/artifacts/pos/MaticWETH.json","./mainnet/v1/artifacts/pos/Merkle.json","./mainnet/v1/artifacts/pos/MerklePatriciaTest.json","./mainnet/v1/artifacts/pos/Migrations.json","./mainnet/v1/artifacts/pos/MintableERC1155Predicate.json","./mainnet/v1/artifacts/pos/MintableERC1155PredicateProxy.json","./mainnet/v1/artifacts/pos/MintableERC20Predicate.json","./mainnet/v1/artifacts/pos/MintableERC20PredicateProxy.json","./mainnet/v1/artifacts/pos/MintableERC721Predicate.json","./mainnet/v1/artifacts/pos/MintableERC721PredicateProxy.json","./mainnet/v1/artifacts/pos/MockCheckpointManager.json","./mainnet/v1/artifacts/pos/NativeMetaTransaction.json","./mainnet/v1/artifacts/pos/NetworkAgnostic.json","./mainnet/v1/artifacts/pos/Proxy.json","./mainnet/v1/artifacts/pos/ProxyTestImpl.json","./mainnet/v1/artifacts/pos/ProxyTestImplStorageLayoutChange.json","./mainnet/v1/artifacts/pos/RootChainManager.json","./mainnet/v1/artifacts/pos/RootChainManagerProxy.json","./mainnet/v1/artifacts/pos/RootChainManagerStorage.json","./mainnet/v1/artifacts/pos/RootTunnel.json","./mainnet/v1/artifacts/pos/UpgradableProxy.json","./networks.json","./testnet/mumbai/artifacts/fx-portal/FxChild.json","./testnet/mumbai/artifacts/fx-portal/FxERC1155ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC1155RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC20ChildToken.json","./testnet/mumbai/artifacts/fx-portal/FxERC20ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC20RootToken.json","./testnet/mumbai/artifacts/fx-portal/FxERC20RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC721ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC721RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxRoot.json","./testnet/mumbai/artifacts/genesis/BorValidatorSet.json","./testnet/mumbai/artifacts/genesis/IStateReceiver.json","./testnet/mumbai/artifacts/genesis/Migrations.json","./testnet/mumbai/artifacts/genesis/StateReceiver.json","./testnet/mumbai/artifacts/genesis/System.json","./testnet/mumbai/artifacts/genesis/TestBorValidatorSet.json","./testnet/mumbai/artifacts/genesis/TestCommitState.json","./testnet/mumbai/artifacts/genesis/TestStateReceiver.json","./testnet/mumbai/artifacts/genesis/TestSystem.json","./testnet/mumbai/artifacts/genesis/ValidatorSet.json","./testnet/mumbai/artifacts/genesis/ValidatorVerifier.json","./testnet/mumbai/artifacts/plasma/BaseERC20.json","./testnet/mumbai/artifacts/plasma/ChainIdMixin.json","./testnet/mumbai/artifacts/plasma/ChildChain.json","./testnet/mumbai/artifacts/plasma/ChildERC20.json","./testnet/mumbai/artifacts/plasma/ChildERC20Proxified.json","./testnet/mumbai/artifacts/plasma/ChildERC721.json","./testnet/mumbai/artifacts/plasma/ChildERC721Mintable.json","./testnet/mumbai/artifacts/plasma/ChildERC721Proxified.json","./testnet/mumbai/artifacts/plasma/ChildToken.json","./testnet/mumbai/artifacts/plasma/ChildTokenProxy.json","./testnet/mumbai/artifacts/plasma/Common.json","./testnet/mumbai/artifacts/plasma/ContractReceiver.json","./testnet/mumbai/artifacts/plasma/ContractWitRevertingFallback.json","./testnet/mumbai/artifacts/plasma/ContractWithFallback.json","./testnet/mumbai/artifacts/plasma/ContractWithoutFallback.json","./testnet/mumbai/artifacts/plasma/DelegateProxy.json","./testnet/mumbai/artifacts/plasma/DepositManager.json","./testnet/mumbai/artifacts/plasma/DepositManagerHeader.json","./testnet/mumbai/artifacts/plasma/DepositManagerProxy.json","./testnet/mumbai/artifacts/plasma/DepositManagerStorage.json","./testnet/mumbai/artifacts/plasma/DrainStakeManager.json","./testnet/mumbai/artifacts/plasma/Drainable.json","./testnet/mumbai/artifacts/plasma/ECVerify.json","./testnet/mumbai/artifacts/plasma/ERC165.json","./testnet/mumbai/artifacts/plasma/ERC20.json","./testnet/mumbai/artifacts/plasma/ERC20Detailed.json","./testnet/mumbai/artifacts/plasma/ERC20Mintable.json","./testnet/mumbai/artifacts/plasma/ERC20NonTransferable.json","./testnet/mumbai/artifacts/plasma/ERC20Predicate.json","./testnet/mumbai/artifacts/plasma/ERC20PredicateBurnOnly.json","./testnet/mumbai/artifacts/plasma/ERC721.json","./testnet/mumbai/artifacts/plasma/ERC721Enumerable.json","./testnet/mumbai/artifacts/plasma/ERC721Full.json","./testnet/mumbai/artifacts/plasma/ERC721Metadata.json","./testnet/mumbai/artifacts/plasma/ERC721MetadataMintable.json","./testnet/mumbai/artifacts/plasma/ERC721Mintable.json","./testnet/mumbai/artifacts/plasma/ERC721PlasmaMintable.json","./testnet/mumbai/artifacts/plasma/ERC721Predicate.json","./testnet/mumbai/artifacts/plasma/ERC721PredicateBurnOnly.json","./testnet/mumbai/artifacts/plasma/ERCProxy.json","./testnet/mumbai/artifacts/plasma/ExitNFT.json","./testnet/mumbai/artifacts/plasma/FallbackManager.json","./testnet/mumbai/artifacts/plasma/GnosisSafe.json","./testnet/mumbai/artifacts/plasma/GnosisSafeProxy.json","./testnet/mumbai/artifacts/plasma/Governable.json","./testnet/mumbai/artifacts/plasma/Governance.json","./testnet/mumbai/artifacts/plasma/GovernanceLockable.json","./testnet/mumbai/artifacts/plasma/GovernanceLockableTest.json","./testnet/mumbai/artifacts/plasma/GovernanceProxy.json","./testnet/mumbai/artifacts/plasma/IDepositManager.json","./testnet/mumbai/artifacts/plasma/IERC165.json","./testnet/mumbai/artifacts/plasma/IERC20.json","./testnet/mumbai/artifacts/plasma/IERC721.json","./testnet/mumbai/artifacts/plasma/IERC721Enumerable.json","./testnet/mumbai/artifacts/plasma/IERC721Metadata.json","./testnet/mumbai/artifacts/plasma/IERC721Receiver.json","./testnet/mumbai/artifacts/plasma/IErcPredicate.json","./testnet/mumbai/artifacts/plasma/IGovernance.json","./testnet/mumbai/artifacts/plasma/IParentToken.json","./testnet/mumbai/artifacts/plasma/IPredicate.json","./testnet/mumbai/artifacts/plasma/IRootChain.json","./testnet/mumbai/artifacts/plasma/ISignatureValidator.json","./testnet/mumbai/artifacts/plasma/ISlashingManager.json","./testnet/mumbai/artifacts/plasma/IStakeManager.json","./testnet/mumbai/artifacts/plasma/IStakeManagerLocal.json","./testnet/mumbai/artifacts/plasma/IValidatorShare.json","./testnet/mumbai/artifacts/plasma/IWithdrawManager.json","./testnet/mumbai/artifacts/plasma/LibEIP712Domain.json","./testnet/mumbai/artifacts/plasma/LibTokenTransferOrder.json","./testnet/mumbai/artifacts/plasma/Lockable.json","./testnet/mumbai/artifacts/plasma/MRC20.json","./testnet/mumbai/artifacts/plasma/Marketplace.json","./testnet/mumbai/artifacts/plasma/MarketplacePredicate.json","./testnet/mumbai/artifacts/plasma/MarketplacePredicateTest.json","./testnet/mumbai/artifacts/plasma/MarketplaceToken.json","./testnet/mumbai/artifacts/plasma/MasterCopy.json","./testnet/mumbai/artifacts/plasma/MaticWETH.json","./testnet/mumbai/artifacts/plasma/Merkle.json","./testnet/mumbai/artifacts/plasma/Migrations.json","./testnet/mumbai/artifacts/plasma/MintableERC721Predicate.json","./testnet/mumbai/artifacts/plasma/MinterRole.json","./testnet/mumbai/artifacts/plasma/Module.json","./testnet/mumbai/artifacts/plasma/ModuleManager.json","./testnet/mumbai/artifacts/plasma/Ownable.json","./testnet/mumbai/artifacts/plasma/OwnableLockable.json","./testnet/mumbai/artifacts/plasma/OwnerManager.json","./testnet/mumbai/artifacts/plasma/ParentTokenMock.json","./testnet/mumbai/artifacts/plasma/PredicateUtils.json","./testnet/mumbai/artifacts/plasma/PriorityQueue.json","./testnet/mumbai/artifacts/plasma/Proxy.json","./testnet/mumbai/artifacts/plasma/ProxyStorage.json","./testnet/mumbai/artifacts/plasma/ProxyTestImpl.json","./testnet/mumbai/artifacts/plasma/ProxyTestImplStorageLayoutChange.json","./testnet/mumbai/artifacts/plasma/Registry.json","./testnet/mumbai/artifacts/plasma/RootChain.json","./testnet/mumbai/artifacts/plasma/RootChainHeader.json","./testnet/mumbai/artifacts/plasma/RootChainProxy.json","./testnet/mumbai/artifacts/plasma/RootChainStorage.json","./testnet/mumbai/artifacts/plasma/RootChainable.json","./testnet/mumbai/artifacts/plasma/RootERC721.json","./testnet/mumbai/artifacts/plasma/SlashingManager.json","./testnet/mumbai/artifacts/plasma/StakeManager.json","./testnet/mumbai/artifacts/plasma/StakeManagerProxy.json","./testnet/mumbai/artifacts/plasma/StakeManagerStorage.json","./testnet/mumbai/artifacts/plasma/StakeManagerTest.json","./testnet/mumbai/artifacts/plasma/StakeManagerTestable.json","./testnet/mumbai/artifacts/plasma/StakingInfo.json","./testnet/mumbai/artifacts/plasma/StakingNFT.json","./testnet/mumbai/artifacts/plasma/StateReceiver.json","./testnet/mumbai/artifacts/plasma/StateSender.json","./testnet/mumbai/artifacts/plasma/StateSyncerVerifier.json","./testnet/mumbai/artifacts/plasma/TestMRC20.json","./testnet/mumbai/artifacts/plasma/TestToken.json","./testnet/mumbai/artifacts/plasma/TransferWithSigPredicate.json","./testnet/mumbai/artifacts/plasma/TransferWithSigUtils.json","./testnet/mumbai/artifacts/plasma/UpgradableProxy.json","./testnet/mumbai/artifacts/plasma/ValidatorShare.json","./testnet/mumbai/artifacts/plasma/ValidatorShareFactory.json","./testnet/mumbai/artifacts/plasma/ValidatorShareProxy.json","./testnet/mumbai/artifacts/plasma/ValidatorShareTest.json","./testnet/mumbai/artifacts/plasma/WETH.json","./testnet/mumbai/artifacts/plasma/WithdrawManager.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerHeader.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerProxy.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerStorage.json","./testnet/mumbai/artifacts/pos/AccessControl.json","./testnet/mumbai/artifacts/pos/AccessControlMixin.json","./testnet/mumbai/artifacts/pos/ChainConstants.json","./testnet/mumbai/artifacts/pos/ChildChainManager.json","./testnet/mumbai/artifacts/pos/ChildChainManagerProxy.json","./testnet/mumbai/artifacts/pos/ChildERC1155.json","./testnet/mumbai/artifacts/pos/ChildERC20.json","./testnet/mumbai/artifacts/pos/ChildERC721.json","./testnet/mumbai/artifacts/pos/ChildMintableERC721.json","./testnet/mumbai/artifacts/pos/ChildTunnel.json","./testnet/mumbai/artifacts/pos/DummyERC1155.json","./testnet/mumbai/artifacts/pos/DummyERC20.json","./testnet/mumbai/artifacts/pos/DummyERC721.json","./testnet/mumbai/artifacts/pos/DummyMintableERC721.json","./testnet/mumbai/artifacts/pos/DummyStateSender.json","./testnet/mumbai/artifacts/pos/EIP712Base.json","./testnet/mumbai/artifacts/pos/ERC1155.json","./testnet/mumbai/artifacts/pos/ERC1155Predicate.json","./testnet/mumbai/artifacts/pos/ERC1155PredicateProxy.json","./testnet/mumbai/artifacts/pos/ERC1155Receiver.json","./testnet/mumbai/artifacts/pos/ERC165.json","./testnet/mumbai/artifacts/pos/ERC20.json","./testnet/mumbai/artifacts/pos/ERC20Predicate.json","./testnet/mumbai/artifacts/pos/ERC20PredicateProxy.json","./testnet/mumbai/artifacts/pos/ERC721.json","./testnet/mumbai/artifacts/pos/ERC721Predicate.json","./testnet/mumbai/artifacts/pos/ERC721PredicateProxy.json","./testnet/mumbai/artifacts/pos/EtherPredicate.json","./testnet/mumbai/artifacts/pos/EtherPredicateProxy.json","./testnet/mumbai/artifacts/pos/ICheckpointManager.json","./testnet/mumbai/artifacts/pos/IChildChainManager.json","./testnet/mumbai/artifacts/pos/IChildToken.json","./testnet/mumbai/artifacts/pos/IERC1155.json","./testnet/mumbai/artifacts/pos/IERC1155MetadataURI.json","./testnet/mumbai/artifacts/pos/IERC1155Receiver.json","./testnet/mumbai/artifacts/pos/IERC165.json","./testnet/mumbai/artifacts/pos/IERC20.json","./testnet/mumbai/artifacts/pos/IERC721.json","./testnet/mumbai/artifacts/pos/IERC721Enumerable.json","./testnet/mumbai/artifacts/pos/IERC721Metadata.json","./testnet/mumbai/artifacts/pos/IERC721Receiver.json","./testnet/mumbai/artifacts/pos/IERCProxy.json","./testnet/mumbai/artifacts/pos/IMintableERC721.json","./testnet/mumbai/artifacts/pos/IRootChainManager.json","./testnet/mumbai/artifacts/pos/IStateSender.json","./testnet/mumbai/artifacts/pos/ITokenPredicate.json","./testnet/mumbai/artifacts/pos/MaticWETH.json","./testnet/mumbai/artifacts/pos/Merkle.json","./testnet/mumbai/artifacts/pos/MerklePatriciaTest.json","./testnet/mumbai/artifacts/pos/Migrations.json","./testnet/mumbai/artifacts/pos/MintableERC1155Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC1155PredicateProxy.json","./testnet/mumbai/artifacts/pos/MintableERC20Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC20PredicateProxy.json","./testnet/mumbai/artifacts/pos/MintableERC721Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC721PredicateProxy.json","./testnet/mumbai/artifacts/pos/MockCheckpointManager.json","./testnet/mumbai/artifacts/pos/NativeMetaTransaction.json","./testnet/mumbai/artifacts/pos/NetworkAgnostic.json","./testnet/mumbai/artifacts/pos/Proxy.json","./testnet/mumbai/artifacts/pos/ProxyTestImpl.json","./testnet/mumbai/artifacts/pos/ProxyTestImplStorageLayoutChange.json","./testnet/mumbai/artifacts/pos/RootChainManager.json","./testnet/mumbai/artifacts/pos/RootChainManagerProxy.json","./testnet/mumbai/artifacts/pos/RootChainManagerStorage.json","./testnet/mumbai/artifacts/pos/RootTunnel.json","./testnet/mumbai/artifacts/pos/UpgradableProxy.json","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","renderedTxs","lastBlockNumber","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","Tos","h1","h2","listStyle","theme_dark","exit","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","isSupportedNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","RimbleTransactionContext","createContext","currentWeb3","permitClient","web3Providers","accountBalance","initWeb3","maticPlasmaClient","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","handleNetworkChanged","_args2","reload","networkInitialized","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","customAddressChanged","contextAccountChanged","accountDisconnected","gnosisSafeLoaded","setNetwork","initCurrentWeb3","useWeb3Provider","web3InfuraRpc","connectorNameChanged","web3Host","web3Provider","forceCallback","polygonConfig","web3PolygonRpc","maticProvider","parentProvider","maticPOSClientConfig","maticPlasmaClientConfig","web3Callback","originalWeb3","biconomyWeb3Provider","_args7","netId","providerRpc","library","IFrameEthereumProvider","MaticJs","MaticPOSClient","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","initContractWithoutSet","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","requiredNetworkId","contractsToInitialize","newContracts","availableStrategiesNetworks","contractFound","contractIndex","_ref20","balanceOf","determineAccountLowBalance","openConnectionModal","_args21","getNetworkType","getNetworkId","currentNetworkChanged","requiredNetworkChanged","_args23","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args24","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","IdleCDO","IdleStrategy","IdleCDOTrancheRewards","stETH","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","_args","cachedKeyFound","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCurrentEnvironment","loadCustomAddress","tokenChanged","strategyChanged","networkChanged","hasMetamask","store","themeDark","_this10","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","recreateOnNetworkChange","recreateOnAccountChange","RimbleWeb3","needsPreflight","initContractCustomProvider","react_router","react","fallback","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","subtitleProps","BackButton","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","totalAUMEndOfYear","loadTotalAUM","aggregatedStatsMethodParams","_this$props","_this$functionsUtil","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","react_countup__WEBPACK_IMPORTED_MODULE_9___default","VariationNumber","IconDirection","iconPos","loading-dots","loading-dots--dot","dot-keyframes","HeadingComponent","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","TwitterShareButton","share","parent","escape","customText","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","fieldName","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","trancheChanged","protocolChanged","fieldChanged","buttonLabel","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_11__","feesCounter","react_countup__WEBPACK_IMPORTED_MODULE_8___default","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_10__","tooltipProps","formattedValue","_isBigNumber","componentHasChildren","fieldPath","rimble_ui__WEBPACK_IMPORTED_MODULE_10__","customFieldName","customFieldProps","tokenConfigStats","earningsCurveStart","earningsCurveEnd","tokenAPY2","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","apiResultsAprChart","totalItems","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","random","aprChartRowElement","$aprChartRowElement","lineWidth","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","icon1","icon2","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__"],"mappings":"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","file":"static/js/main.82a075fe.chunk.js","sourcesContent":["import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = this.props.unit && formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trancheFlash\":\"TrancheWelcome_trancheFlash__2aaz5\",\"mobile\":\"TrancheWelcome_mobile__fIBQP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const hashChanged = prevProps.hash !== this.props.hash;\n    if (hashChanged){\n      this.loadData();\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    if (ensName){\n      text = ensName;\n    }\n    this.setStateSafe({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from \"react\";\nimport { Flex, Button } from \"rimble-ui\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner.js\";\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n      <Button onClick={this.props.handleClick} {...this.props.buttonProps}>\n        <Flex\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n        >\n          <Flex width={1} display={this.props.isLoading ? \"flex\" : \"none\"}>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={this.props.isLoading ? \"none\" : \"flex\"}>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n      </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import React, { Component } from \"react\";\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign(\n      {\n        py: 1,\n        width: \"auto\",\n        px: [\"12px\", 3]\n      },\n      this.props.cardProps\n    );\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isInteractive={true}\n        isActive={this.props.isActive}\n        isDisabled={this.props.isDisabled}\n        handleClick={this.props.handleClick}\n        backgroundColor={\"blue\"}\n      >\n        <Flex\n          mx={this.props.margin ? this.props.margin : 0}\n          my={1}\n          alignItems={\"center\"}\n          flexDirection={\"row\"}\n          justifyContent={this.props.align ? this.props.align : \"center\"}\n        >\n          {this.props.image ? (\n            <Image\n              align={\"center\"}\n              src={this.props.image}\n              height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              {...this.props.imageProps}\n            />\n          ) : this.props.useIconOnly ? (\n            <Icon\n              align={\"center\"}\n              name={this.props.icon}\n              size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n              {...this.props.iconProps}\n            />\n          ) : (\n            <Flex\n              mr={this.props.isSidebar ? 0 : 2}\n              p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n              borderRadius={\"50%\"}\n              alignItems={\"center\"}\n              justifyContent={\"center\"}\n              backgroundColor={\n                this.props.iconBgColor\n                  ? this.props.iconBgColor\n                  : this.props.theme.colors.transactions.actionBg.redeem\n              }\n            >\n              <Icon\n                align={\"center\"}\n                name={this.props.icon}\n                size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n                {...this.props.iconProps}\n              />\n            </Flex>\n          )}\n          <Text fontWeight={3} fontSize={[1, 3]} {...this.props.textProps}>\n            {this.props.text}\n          </Text>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  state = {\n    loaded:false,\n    activeCoverages:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadCoverages();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadCoverages();\n    }\n  }\n\n  async loadCoverages(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const coverages = await this.functionsUtil.getActiveCoverages(this.props.account);\n    const activeCoverages = [];\n    if (coverages && coverages.length>0){\n      coverages.forEach( c => {\n        if (!this.props.availableTokens || !this.props.availableTokens.length || this.props.availableTokens.includes(c.collateral)){\n          const statusColors = this.props.theme.colors.transactions.status;\n          let statusIcon = 'VerifiedUser';\n          let statusColor = statusColors.completed;\n          switch (c.status){\n            case 'Expired':\n              statusIcon = 'Error';\n              statusColor = statusColors.failed;\n            break;\n            case 'Claimed':\n              statusIcon = 'Error';\n              statusColor = statusColors.pending;\n            break;\n            default:\n            case 'Active':\n              statusIcon = 'VerifiedUser';\n              statusColor = statusColors.completed;\n            break;\n          }\n\n          const statusIconProps = {\n            color:statusColor\n          };\n\n          const portfolioCoverage = c.portfolioCoverage || 'N/A';\n\n          activeCoverages.push(Object.assign(c,{\n            statusIcon,\n            statusIconProps,\n            portfolioCoverage\n          }));\n        }\n      })\n    }\n\n    this.setState({\n      loaded:true,\n      activeCoverages\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.activeCoverages && this.state.activeCoverages.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.activeCoverages && this.state.activeCoverages.length>0 ? (\n            <CustomList\n              rows={this.state.activeCoverages}\n              handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n              cols={[\n                {\n                  title:'PROTOCOL',\n                  props:{\n                    width:[0.28,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:[this.props.themeMode === 'dark' ? 'protocolImageDark' : 'protocolImage']\n                    },\n                    {\n                      type:'text',\n                      path:['protocolName'],\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.33,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:['collateralIcon']\n                    },\n                    {\n                      type:'text',\n                      path:['collateral'],\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.24, 0.12],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['balance'],\n                      props:{\n                        decimals: this.props.isMobile ? 2 :  4,\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                      props:{\n                        ml:[1,2],\n                        style:{\n                          textTransform:'uppercase'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'EXPIRATION DATE',\n                  props:{\n                    width:0.19,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['expirationDate'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'COVERED FUNDS',\n                  props:{\n                    width:0.14,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['portfolioCoverage'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.15,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      name:'custom',\n                      path:['statusIcon'],\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'',\n                  mobile:false,\n                  props:{\n                    width:0.17,\n                  },\n                  parentProps:{\n                    width:1\n                  },\n                  fields:[\n                    {\n                      type:'button',\n                      name:'custom',\n                      funcProps:{\n                        label:(props) => (props.row.actionLabel),\n                        disabled:(props) => (props.row.actionDisabled)\n                      },\n                      props:{\n                        width:1,\n                        fontSize:3,\n                        fontWeight:3,\n                        height:'45px',\n                        borderRadius:4,\n                        boxShadow:null,\n                        mainColor:'redeem',\n                        size: this.props.isMobile ? 'small' : 'medium',\n                        handleClick:(props) => props.row.status!=='Expired' && props.row.actionUrl && this.functionsUtil.openWindow(props.row.actionUrl)\n                      }\n                    }\n                  ]\n                }\n              ]}\n              {...this.props}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default Base;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || !tx.action || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      const tokenAddress = this.functionsUtil.getAvailableTokenAddress(token,this.props.selectedStrategy);\n      tokensData[token] = await this.functionsUtil.getTokenApiData(tokenAddress,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    // debugger;\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    let axisBottomIndex = 0;\n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        tickValues:'every day',\n        legendPosition: 'middle',\n        format: (value) => {\n          if (axisBottomIndex++ % daysFrequency === 0){\n            return this.functionsUtil.strToMoment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n          }\n        },\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged) {\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents() {\n\n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p: 2,\n          width: 1,\n          style: { cursor: 'pointer' }\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen) {\n        cardProps.boxShadow = this.props.noShadow ? 0 : 4;\n      }\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n          isInteractive={this.props.notInteractive ? false : true}\n        >\n          <Flex\n            width={1}\n            height={'100%'}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps, {\n        mt: 2,\n        zIndex: 1,\n        boxShadow: null,\n        position: 'absolute',\n        backgroundColor: this.props.outerColor ? this.props.outerColor : \"cardBg\"\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable) {\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput, this.props.themeMode === 'dark' ? styles.dark : null, !props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map(o => o.value).indexOf(selectedValue) === -1 && this.props.defaultValue) {\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value) {\n        return null;\n      }\n\n      // console.log('CustomOption',this.props.customOptionProps);\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{ cursor: 'pointer' }}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={this.props.isDashboard ? 'cardBg' : (props.isFocused ? 'selectBgFocused' : 'selectBg')}\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={v => this.props.onChange(v.value)}\n        components={{\n          Menu: this.state.CustomMenu,\n          Option: this.state.CustomOption,\n          Control: this.state.ControlComponent,\n          Input: this.state.CustomInputContainer,\n          SingleValue: this.state.CustomValueContainer,\n          IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    if (currentNetwork.provider === 'polygon'){\n      return 30;\n    } else {\n      let prediction = null;\n      if (this.state.predictTable){\n        this.state.predictTable.forEach((p,i) => {\n          if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n            prediction = p;\n            return true;\n          }\n        });\n      }\n\n      if (this.state.blockTime && prediction){\n        const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n        const blocksWait = pdValues[0];\n        const blockInterval = this.state.blockTime.block_time;\n        let txMeanSecs = blocksWait * blockInterval;\n        txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n        this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n        return txMeanSecs; // Customized\n      }\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in {this.functionsUtil.capitalize(currentNetwork.explorer)}\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from \"polished\";\n\n// theme.js\nexport default {\n  breakpoints: [\"52em\", \"64em\"],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: [\"0\", \"4px\", \"8px\", \"16px\", \"2rem\"],\n  widths: [0, 16, 32, 64, 128, 256, 550],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, \"1px solid #eee\", \"1px solid #b6c2ff\"],\n  borderWidths: [\"0\", \"1px\", \"2px\", \"4px\"],\n  shadows: [\n    \"0\",\n    \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n    \"0 7px 14px rgba(50,50,93,.1)\",\n    \"1px 1px 0px rgba(0,0,0,0.2)\",\n    \"0px 0px 16px 2px rgba(0,54,255,0.3)\"\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: blue.base,\n    \"gradient-bg\": \"linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)\",\n    \"primary-light\": blue.light[1],\n    \"primary-dark\": blue.dark[1],\n    bgBlue: \"#0030e0\",\n    blue: \"#0036ff\",\n    tick: \"#00b84a\",\n    \"dark-blue\": \"#00219a\",\n    skyBlue: \"#00abfe\",\n    lightBlue: \"#79f4e1\",\n    copyColor: \"#3F3D4B\",\n    subColor: \"#a7a7a7\",\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#000000\",\n    border: \"#EAEAEA\",\n    connect: \"#0042F5\",\n    newblue: \"#2B65D9\",\n    alert: \"#ff9900\",\n    arrowActive: \"#4f4f4f\",\n    arrowInactive: \"#d8d8d8\",\n    selectBgFocused: \"#fbfbfb\",\n    selectBg: \"#ffffff\",\n    backButtonBg: \"#ffffff\",\n    lineChartStroke: \"#dbdbdb\",\n    wrongNetworkBannerBg: \"#ffffff\",\n    dashboardBg: \"#f9fafd\",\n    statValue: \"#959595\",\n    boxBorder: \"#eeeeee\",\n    cellTitle: \"#a3a4a5\",\n    cellText: \"#a6a6a6\",\n    divider: \"#d8d8d8\",\n    divider2: \"#EBEBEB\",\n    counter: \"#5d5d5d\",\n    redeem: \"#00a9fe\",\n    link: \"#0036ff\",\n    deposit: \"#0239ff\",\n    migrate: \"#00a9fe\",\n    legend: \"#c9c9c9\",\n    menuBg: \"#fff\",\n    menuHover: \"#f3f6ff\",\n    cardBg: \"#fff\",\n    flashColor: \"#3f4e9a\",\n    menuRightBorder: \"#eee\",\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#fafafa\",\n    cardHoverShadow: \"0px 0px 0px 1px rgba(0, 54, 255, 0.3)\",\n    cardBgHover: \"#f7f8ff\",\n    cardBorder: \"#eee\",\n    pageActive: \"#4f4f4f\",\n    pageInactive: \"#d8d8d8\",\n    transactions: {\n      action: {\n        send: \"#10a0dd\",\n        swap: \"#3d53c0\",\n        boost: \"#ffff00\",\n        redeem: \"#10a0dd\",\n        swapout: \"#10a0dd\",\n        deposit: \"#3d53c0\",\n        curvein: \"#10a0dd\",\n        receive: \"#3d53c0\",\n        migrate: \"#3d53c0\",\n        default: \"#4f4f4f\",\n        curveout: \"#3d53c0\",\n        withdraw: \"#10a0dd\",\n        curvedepositin: \"#10a0dd\",\n        curvedepositout: \"#3d53c0\"\n      },\n      actionBg: {\n        send: \"#ceeff6\",\n        swap: \"#ced6ff\",\n        boost: \"#ff7979\",\n        redeem: \"#ceeff6\",\n        swapout: \"#ceeff6\",\n        deposit: \"#ced6ff\",\n        curvein: \"#ceeff6\",\n        default: \"#dadada\",\n        receive: \"#ced6ff\",\n        migrate: \"#ced6ff\",\n        withdraw: \"#ceeff6\",\n        curveout: \"#ced6ff\",\n        curvedepositin: \"#ceeff6\",\n        curvedepositout: \"#ced6ff\"\n      },\n      status: {\n        completed: \"#00b84a\",\n        pending: \"#a5a5a5\",\n        failed: \"#fa0000\"\n      }\n    },\n    blacks: [\n      \"rgba(0,0,0,.0125)\",\n      \"rgba(0,0,0,.025)\",\n      \"rgba(0,0,0,.05)\",\n      \"rgba(0,0,0,.1)\",\n      \"rgba(0,0,0,.2)\",\n      \"rgba(0,0,0,.3)\",\n      \"rgba(0,0,0,.4)\",\n      \"rgba(0,0,0,.5)\",\n      \"rgba(0,0,0,.6)\",\n      \"rgba(0,0,0,.7)\",\n      \"rgba(0,0,0,.8)\",\n      \"rgba(0,0,0,.9)\"\n    ],\n    whites: [\n      \"rgba(255,255,255,.0125)\",\n      \"rgba(255,255,255,.025)\",\n      \"rgba(255,255,255,.05)\",\n      \"rgba(255,255,255,.1)\",\n      \"rgba(255,255,255,.2)\",\n      \"rgba(255,255,255,.3)\",\n      \"rgba(255,255,255,.4)\",\n      \"rgba(255,255,255,.5)\",\n      \"rgba(255,255,255,.6)\",\n      \"rgba(255,255,255,.7)\",\n      \"rgba(255,255,255,.8)\",\n      \"rgba(255,255,255,.9)\"\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, \"#AAA\"),\n      backgroundColor: tint(0.9, \"#AAA\"),\n      borderColor: \"#AAA\"\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: \"#f3f6ff\",\n      borderColor: \"#b6c2ff\"\n    }\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      \"--main-color\": blue.base,\n      \"--contrast-color\": blue.text\n    },\n    normal: {\n      color: baseColors.black,\n      \"--contrast-color\": baseColors.black\n    },\n    success: {\n      \"--main-color\": green.base,\n      \"--contrast-color\": green.text\n    },\n    danger: {\n      \"--main-color\": red.base,\n      \"--contrast-color\": red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: \"0.75rem\",\n      height: \"2rem\",\n      minWidth: \"2rem\",\n      padding: \"0 1rem\"\n    },\n    medium: {\n      fontSize: \"1rem\",\n      height: \"3rem\",\n      minWidth: \"3rem\"\n    },\n    large: {\n      fontSize: \"1.5rem\",\n      height: \"4rem\",\n      minWidth: \"4rem\",\n      borderRadius: \"2rem\"\n    }\n  }\n};\n","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      // console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    if (!params){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let tokenSymbol = null;\n    let tokenConfig = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(transaction.hash)}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n      tokenSymbol = transaction.tokenSymbol.toUpperCase();\n      tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        output = (\n          <Text {...fieldProps}>{tokenConfig && tokenConfig.label ? tokenConfig.label : tokenSymbol}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      const disabledTokens = this.functionsUtil.getArrayPath(['disabledTokens',currentNetworkId],this.tokenConfig);\n\n      if (disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import Web3 from \"web3\";\nimport React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\nimport availableTokens from '../configs/availableTokens';\nimport IAaveIncentivesController from '../abis/aave/IAaveIncentivesController.json';\n\nconst ethereumjsABI = require('ethereumjs-abi');\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props) {\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber(typeof s === 'object' ? s : String(s))\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'), ...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'), ...props); }\n  getContractByName = (contractName, networkId = null) => {\n    networkId = networkId || this.props.network.required.id;\n    let contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    if (this.props.network && this.props.network.required && this.props.network.current && (!this.props.network.isCorrectNetwork || networkId !== this.props.network.current.id) && this.props.contractsNetworks && this.props.contractsNetworks[networkId]) {\n      contract = this.props.contractsNetworks[networkId].find(c => c && c.name && c.name === contractName);\n    } else {\n      contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    }\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g, \"\\n\")\n      .replace(/<p>/g, \"\")\n      .replace(/<br>/g, \"\")\n      .replace(/&nbsp;/g, \" \")\n      .replace(/<\\/p>/g, \"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0, 1).toUpperCase() + str.substr(1) : '';\n  }\n  strToMoment = (date, format = null) => {\n    return moment(date, format);\n  }\n  replaceArrayProps = (arr1, arr2) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1, arr2, props = null) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p] === 'function') {\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p] === 'object') {\n          arr1[p] = { ...arr1[p], ...this.replaceArrayPropsRecursive(arr1, arr2[p], props) };\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n    var tmp = document.createElement(\"DIV\");\n    tmp.innerHTML = html;\n    return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d / 2;\n      if (t < 1) return c / 2 * t * t + b;\n      t--;\n      return -c / 2 * (t * (t - 2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n      currentTime += increment;\n      var val = Math.easeInOutQuad(currentTime, start, change, duration);\n      window.scrollTo(0, val);\n      if (currentTime < duration) {\n        window.setTimeout(animateScroll, increment);\n      }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx, tokenConfig) => {\n\n    if (!tokenConfig.idle) {\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx) {\n      action = 'Deposit';\n    } else if (isRedeemTx) {\n      action = 'Redeem';\n    } else if (isMigrationTx) {\n      action = 'Migrate';\n    } else if (isSendTransferTx) {\n      action = 'Send';\n    } else if (isReceiveTransferTx) {\n      action = 'Receive';\n    } else if (isSwapTx) {\n      action = 'Swap';\n    } else if (isSwapTx) {\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = (hash, startLen = 7, endLen = 4) => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, startLen);\n    const txEnd = shortHash.substr(shortHash.length - endLen);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n\n  switchEthereumChain = (chainId) => {\n    const web3 = this.getCurrentWeb3();\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    const params = [{\n      chainId: web3.utils.toHex(chainId)\n    }];\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_switchEthereumChain',\n    });\n  }\n\n  addEthereumChain = (chainId) => {\n    const web3 = this.getCurrentWeb3();\n\n    // console.log('addEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    if (chainId === 1) {\n      return this.switchEthereumChain(chainId);\n    }\n\n    const chainName = networkConfig.chainName || networkConfig.name;\n    const providerConfig = this.getGlobalConfig(['network', 'providers', networkConfig.provider]);\n    const blockExplorerUrl = this.getGlobalConfig(['network', 'providers', networkConfig.explorer, 'baseUrl', chainId]);\n    const rpcUrl = (providerConfig.publicRpc && providerConfig.publicRpc[chainId]) || (providerConfig.rpc[chainId] + providerConfig.key);\n    const params = [{\n      chainName,\n      rpcUrls: [rpcUrl],\n      chainId: web3.utils.toHex(chainId),\n      nativeCurrency: {\n        decimals: 18,\n        name: networkConfig.baseToken,\n        symbol: networkConfig.baseToken\n      },\n      blockExplorerUrls: [blockExplorerUrl]\n    }];\n\n    // console.log('addEthereumChain',params);\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_addEthereumChain',\n    });\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.getRequiredNetworkId();\n    const ensConfig = this.getGlobalConfig(['network', 'providers', 'ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)) {\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3) {\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1) {\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name) {\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, ensName.name, TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches = null, account = null) => {\n    const portfolio = {\n      transactions: [],\n      tranchesBalance: [],\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches) {\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches), async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(Object.keys(tranches), async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          let [\n            trancheTokenBalance,\n            trancheUserInfo,\n            trancheStakedBalance,\n          ] = await Promise.all([\n            this.getContractBalance(trancheConfig.name,account),\n            this.getTrancheUserInfo(tokenConfig, trancheConfig, account),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account),\n          ]);\n\n          // console.log(protocol,token,tranche,trancheConfig.name,account,this.BNify(trancheTokenBalance).toFixed(5),this.BNify(trancheStakedBalance).toFixed(5));\n\n          if (trancheUserInfo && trancheUserInfo.transactions){\n            portfolio.transactions = [...portfolio.transactions, ...trancheUserInfo.transactions];\n          }\n\n          if ((trancheTokenBalance && this.BNify(trancheTokenBalance).gt(0)) || (trancheStakedBalance && this.BNify(trancheStakedBalance).gt(0))) {\n            trancheTokenBalance = this.fixTokenDecimals(trancheTokenBalance,trancheConfig.decimals);\n            trancheStakedBalance = this.fixTokenDecimals(trancheStakedBalance,trancheConfig.decimals);\n            trancheTokenBalance = trancheTokenBalance.plus(trancheStakedBalance);\n\n            // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5));\n\n            if (this.BNify(trancheTokenBalance).gt(0)) {\n              const [\n                tranchePrice,\n                tranchePool\n              ] = await Promise.all([\n                this.loadTrancheFieldRaw('tranchePrice', {}, protocol, token, tranche, tokenConfig, trancheConfig, account),\n                this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n              ]);\n\n              if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tranchePool).isNaN()) {\n                const tokenBalance = trancheTokenBalance.times(tranchePrice);\n                const [\n                  tokenBalanceConverted,\n                  trancheEarnings,\n                  trancheApy\n                ] = await Promise.all([\n                  this.convertTrancheTokenBalance(tokenBalance,tokenConfig),\n                  this.convertTrancheTokenBalance(tokenBalance.minus(trancheUserInfo.amountDeposited),tokenConfig),\n                  this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n                ])\n\n                const poolShare = tokenBalanceConverted.div(tranchePool);\n                const amountDeposited = trancheUserInfo.amountDepositedConverted;\n\n                // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5),'trancheStakedBalance',trancheStakedBalance.toFixed(5),'tranchePrice',tranchePrice.toFixed(5),'tokenBalance',tokenBalance.toFixed(5),'amountDeposited',trancheUserInfo.amountDeposited.toFixed(5),'tokenBalanceConverted',tokenBalanceConverted.toFixed(5),'amountDepositedConverted',amountDeposited.toFixed(5),'trancheEarnings',trancheEarnings.toFixed(5));\n\n                portfolio.tranchesBalance.push({\n                  token,\n                  tranche,\n                  protocol,\n                  poolShare,\n                  trancheApy,\n                  tranchePrice,\n                  trancheEarnings,\n                  amountDeposited,\n                  trancheTokenBalance,\n                  trancheStakedBalance,\n                  tokenBalance:tokenBalanceConverted\n                });\n\n                // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n                // Increment total balance\n                portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalanceConverted);\n              }\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalBalance = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach(trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings) {\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy) {\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited) {\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n        // console.log(trancheInfo.protocol,trancheInfo.token,trancheInfo.tranche,trancheInfo.amountDeposited.toFixed(5),totalAmountLent.toFixed(5));\n      }\n\n      if (trancheInfo.tokenBalance){\n        totalBalance = totalBalance.plus(trancheInfo.tokenBalance);\n      }\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalBalance = totalBalance;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // console.log('portfolio',portfolio);\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens = null, account = null) => {\n    const portfolio = {\n      tokensBalance: {},\n      tokensToMigrate: {},\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n      totalBalanceConverted: this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens) {\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        },\n        idleTokenBalance\n      ] = await Promise.all([\n        this.checkMigration(tokenConfig, this.props.account),\n        this.getTokenBalance(tokenConfig.idle.token, account)\n      ]);\n\n      if (migrationEnabled) {\n        const tokenKey = this.props.selectedStrategy ? token : tokenConfig.idle.token;\n        portfolio.tokensToMigrate[tokenKey] = {\n          token,\n          tokenConfig,\n          oldContractBalanceFormatted,\n          strategy: this.props.selectedStrategy\n        };\n      }\n\n      if (idleTokenBalance) {\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance, token, tokenConfig, isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()) {\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach(token => {\n      if (portfolio.tokensBalance[token]) {\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => (this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0)));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens, async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        tokenAprs,\n        amountDeposited\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig),\n        this.getAmountDeposited(tokenConfig, account)\n      ]);\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited, token, tokenConfig, isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings) {\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY) {\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken) {\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n    portfolio.totalBalance = totalAmountLent.plus(totalEarnings);\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurrentWeb3 = () => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork.id]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.getGlobalConfig(['network', 'providers', provider, 'key']);\n    const web3Rpc = this.getGlobalConfig(['network', 'providers', provider, 'rpc', requiredNetwork.id]) + web3RpcKey;\n\n    let currentWeb3 = null;\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    } else {\n      currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Rpc));\n    }\n\n    return currentWeb3;\n  }\n  getCurveAvgSlippage = async (enabledTokens = [], account = null, fixDecimals = true) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]) {\n              processedTxs[tx.hash] = {\n                price: null,\n                received: null,\n                slippage: null,\n                deposited: this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null) {\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]) {\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)) {\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach(tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens = [], account = null) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        if (!processedTxs[tx.hash]) {\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)) {\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)) {\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    enabledTokens.forEach(selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance = this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice) {\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action) {\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n              break;\n            default:\n              break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)) {\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx) {\n                firstDepositTx = tx;\n              }\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section, env = null) => {\n    const envUrl = this.getGlobalConfig(['environments', env, 'url']);\n    const baseUrl = env && envUrl ? envUrl : window.location.origin;\n    return `${baseUrl}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens = [], account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens, account);\n    if (firstDepositTxs) {\n      return Object.keys(firstDepositTxs).reduce((acc, token) => {\n        if (firstDepositTxs[token]) {\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      }, {});\n    }\n    return null;\n  }\n\n  getTrancheStakingRewardsDistributions = async (tokenConfig,trancheConfig) => {\n    const stakingDistributions = {};\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from: tokenConfig.CDO.address,\n        to: trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer', { fromBlock: tokenConfig.blockNumber, toBlock: 'latest', filter: eventFilters });\n\n      if (transfers && transfers.length>0){\n        stakingDistributions[token] = transfers;\n      }\n    });\n\n    return stakingDistributions;\n  }\n  getTrancheHarvests = async (tokenConfig,trancheConfig) => {\n    const [\n      stakingRewardsDistributions,\n      autoFarming\n    ] = await Promise.all([\n      this.getTrancheStakingRewardsDistributions(tokenConfig,trancheConfig),\n      this.loadTrancheFieldRaw('autoFarming',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig)\n    ])\n\n    const harvestsList = stakingRewardsDistributions || {};\n    \n    await this.asyncForEach(Object.keys(autoFarming),async (token) => {\n      const eventFilters = {\n        to: tokenConfig.CDO.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer', { fromBlock: tokenConfig.blockNumber, toBlock: 'latest', filter: eventFilters });\n\n      if (transfers && transfers.length > 0) {\n        harvestsList[token] = transfers;\n      }\n    });\n\n    // console.log('getTrancheHarvests',stakingRewards,autoFarming,harvestsList);\n    return harvestsList;\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig, trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards), async (token) => {\n      const eventFilters = {\n        from: tokenConfig.CDO.address,\n        to: trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer', { fromBlock: tokenConfig.blockNumber, toBlock: 'latest', filter: eventFilters });\n\n      if (transfers && transfers.length > 0) {\n        const firstHarvest = transfers.length ? transfers[0] : null;\n        const latestHarvest = transfers[transfers.length - 1];\n        const firstBlock = firstHarvest ? firstHarvest.blockNumber : tokenConfig.blockNumber;\n\n        const govTokenConfig = this.getGlobalConfig(['govTokens', token]);\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        const [\n          prevBlockInfo,\n          lastBlockInfo,\n          conversionRate,\n          lastBlockPoolSize\n        ] = await Promise.all([\n          this.getBlockInfo(firstBlock),\n          this.getBlockInfo(latestHarvest.blockNumber),\n          this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n          this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue', [], {}, latestHarvest.blockNumber)\n        ]);\n\n        if (prevBlockInfo && lastBlockInfo) {\n          const poolSize = this.fixTokenDecimals(lastBlockPoolSize, tokenConfig.CDO.decimals);\n          const elapsedBlocks = latestHarvest.blockNumber - firstBlock;\n          const elapsedSeconds = lastBlockInfo.timestamp - prevBlockInfo.timestamp;\n\n          const lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value, govTokenConfig.decimals);\n          const totalAmount = transfers.reduce((total, t) => {\n            total = total.plus(this.fixTokenDecimals(t.returnValues.value, govTokenConfig.decimals));\n            return total;\n          }, this.BNify(0));\n\n          const tokensPerBlock = totalAmount.div(elapsedBlocks);\n          const tokensPerSecond = totalAmount.div(elapsedSeconds);\n          const tokensPerDay = tokensPerSecond.times(86400);\n          const tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network', 'secondsPerYear']));\n          const convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          const tokenApr = convertedTokensPerYear.div(poolSize);\n          const tokenApy = this.apr2apy(tokenApr);\n\n          tokensDistribution[token] = {\n            lastAmount,\n            totalAmount,\n            apr: tokenApr,\n            apy: tokenApy,\n            tokensPerDay,\n            firstHarvest,\n            tokensPerYear,\n            latestHarvest,\n            tokensPerBlock,\n            tokensPerSecond,\n            convertedTokensPerYear\n          };\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig, trancheConfig, account) => {\n    account = account || this.props.account;\n    const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters = {};\n    underlyingEventsFilters[underlyingEventsConfig.to] = [this.props.account, tokenConfig.CDO.address];\n    underlyingEventsFilters[underlyingEventsConfig.from] = [this.props.account, tokenConfig.CDO.address];\n\n    let [\n      underlying_transfers,\n      trancheToken_transfers\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token, 'Transfer', { fromBlock: trancheConfig.blockNumber, toBlock: 'latest', filter: underlyingEventsFilters }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', { fromBlock: trancheConfig.blockNumber, toBlock: 'latest', filter: { from: ['0x0000000000000000000000000000000000000000', this.props.account], to: ['0x0000000000000000000000000000000000000000', this.props.account] } })\n    ]);\n\n    // console.log('getAmountDepositedTranche',trancheConfig.name,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n    let amountDepositedConverted = this.BNify(0);\n\n    // Order token transfers\n    underlying_transfers = underlying_transfers.sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n    trancheToken_transfers = trancheToken_transfers.sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n\n    const blocksInfo = {};\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n      if (!tokenTransferEvent) {\n        return;\n      }\n      const [\n        blockInfo,\n        tokenConversionRate\n      ] = await Promise.all([\n        this.getBlockInfo(tokenTransferEvent.blockNumber),\n        this.convertTrancheTokenBalance(1,tokenConfig,tokenTransferEvent.blockNumber)\n      ]);\n\n      blocksInfo[tokenTransferEvent.blockNumber] = {\n        blockInfo,\n        tokenConversionRate\n      };\n    });\n\n\n    trancheToken_transfers.forEach( trancheTokenTransferEvent => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent) {\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value], tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value, trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = blocksInfo[tokenTransferEvent.blockNumber].blockInfo;\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats', 'protocols', tokenConfig.protocol]);\n      const protocolIcon = protocolConfig && protocolConfig.icon ? `images/protocols/${protocolConfig.icon}` : `images/protocols/${tokenConfig.protocol}.svg`;\n\n      const tx = {\n        hashKey,\n        action: null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value: tokenAmount,\n        status: 'Completed',\n        token: tokenConfig.token,\n        tranche: trancheConfig.tranche,\n        protocol: protocolConfig.label,\n        tokenSymbol: tokenConfig.token,\n        trancheTokens: trancheTokenAmount,\n        hash: tokenTransferEvent.transactionHash,\n        blockNumber: tokenTransferEvent.blockNumber,\n        timeStamp: blockInfo ? blockInfo.timestamp : null,\n      };\n\n      const tokenAmountConverted = this.BNify(tokenAmount).times(blocksInfo[tokenTransferEvent.blockNumber].tokenConversionRate);\n\n      // Get conversion rate outside the loop\n      // await this.convertTrancheTokenBalance(tokenAmount,tokenConfig,tokenTransferEvent.blockNumber);\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        // Set first deposit tx\n        if (!firstDepositTx) {\n          firstDepositTx = tx;\n        }\n\n        tx.action = 'Deposit';\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDepositedConverted = amountDepositedConverted.plus(tokenAmountConverted);\n\n        // console.log('Deposit',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n        // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        amountDepositedConverted = amountDepositedConverted.minus(tokenAmountConverted);\n        if (amountDeposited.lt(0)) {\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n          amountDepositedConverted = this.BNify(0);\n        }\n        // console.log('Redeem',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited,\n      amountDepositedConverted\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.firstDepositTx;\n    }\n    return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig, account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance, userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice) {\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice, tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey, amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens = [], account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens, false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getBaseToken = () => {\n    const networkConfig = this.getCurrentNetwork();\n    return networkConfig ? networkConfig.baseToken : this.getGlobalConfig(['baseToken']);\n  }\n  getCurrentNetwork = () => {\n    const networkId = this.getCurrentNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetwork = () => {\n    const networkId = this.getRequiredNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.required ? this.props.network.required.id || defaultNetwork : defaultNetwork;\n  }\n  getCurrentNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.current ? this.props.network.current.id || defaultNetwork : defaultNetwork;\n  }\n  getPolygonBridgeTxs = async (account = false, enabledTokens = []) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !this.props.web3) {\n      return [];\n    }\n\n    const cachedDataKey = `polygonBridgeTxs_${account}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    account = account.toLowerCase();\n\n    let txs = [];\n    const currentNetwork = this.getRequiredNetwork();\n    const currentNetworkId = this.getRequiredNetworkId();\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const stateSenderConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'StateSender']);\n    const erc20PredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'ERC20Predicate']);\n    const etherPredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'EtherPredicate']);\n    const depositManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'DepositManager']);\n    const rootChainManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'RootChainManager']);\n\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? currentNetworkId : this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', currentNetworkId]);\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[polygonNetworkId]) {\n      const covalentApiUrl = covalentInfo.endpoints[polygonNetworkId];\n      const polygonAvailableTokens = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'availableTokens']);\n      const polygonEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=0&key=${covalentInfo.key}`;\n\n      const ethereumNetworkId = this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', polygonNetworkId]);\n      const etherscanApiUrl = etherscanInfo.endpoints[ethereumNetworkId];\n      const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistEndpoint = `${etherscanApiUrl}?module=account&action=txlist&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistInternalEndpoint = `${etherscanApiUrl}?module=account&action=txlistinternal&address=${this.props.account}&sort=desc`;\n\n      const [\n        last_state_id,\n        polygonTxs,\n        etherscanTxs,\n        etherscanTxlist,\n        etherscanTxlistInternal\n      ] = await Promise.all([\n        this.getPolygonCurrentLastStateId(),\n        this.makeCachedRequest(polygonEndpoint, 120),\n        this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistInternalEndpoint, etherscanInfo.keys, 120),\n      ]);\n\n      // console.log('polygonTxs',polygonTxs);\n      // console.log('etherscanTxs',etherscanTxs);\n      // console.log('etherscanTxlist',etherscanTxlist);\n      // console.log('etherscanTxlistInternal',etherscanTxlistInternal);\n\n      const rootTokensAddresses = [];\n      const childTokensAddresses = [];\n      Object.values(polygonAvailableTokens).forEach(tokenConfig => {\n        if (tokenConfig.childToken) {\n          childTokensAddresses.push(tokenConfig.childToken.address.toLowerCase())\n        }\n        if (tokenConfig.rootToken) {\n          rootTokensAddresses.push(tokenConfig.rootToken.address.toLowerCase())\n        }\n      });\n\n      let depositTxs = [];\n\n      if (etherscanTxs && etherscanTxs.data && etherscanTxs.data.result && typeof etherscanTxs.data.result.filter === 'function') {\n        depositTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.to.toLowerCase()) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n        const exitTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.from.toLowerCase()) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      const depositTxsHashes = depositTxs.map(tx => tx.hash.toLowerCase());\n      const depositETHInputRexExp = new RegExp(this.props.account.replace('0x', '').toLowerCase() + '$');\n      if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n        const depositETHTxs = etherscanTxlist.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.to.toLowerCase() === rootChainManagerConfig.address.toLowerCase() && tx.input.toLowerCase().match(depositETHInputRexExp) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (etherscanTxlistInternal && etherscanTxlistInternal.data && etherscanTxlistInternal.data.result && typeof etherscanTxlistInternal.data.result.filter === 'function') {\n        const exitETHTxs = etherscanTxlistInternal.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.from.toLowerCase() === etherPredicateConfig.address.toLowerCase() && !tx.input.toLowerCase().match(depositETHInputRexExp) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.timeStamp = parseInt(tx.timeStamp);\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (polygonTxs && polygonTxs.data && polygonTxs.data.data && polygonTxs.data.data.items && Object.values(polygonTxs.data.data.items).length) {\n        const filteredTxs = polygonTxs.data.data.items.filter(tx => tx.to_address && childTokensAddresses.includes(tx.to_address.toLowerCase()));\n        // console.log('polygonTxs',polygonTxs,filteredTxs);\n        await this.asyncForEach(filteredTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(tokenConfig => (tokenConfig.childToken && tx.to_address && tokenConfig.childToken.address.toLowerCase() === tx.to_address.toLowerCase()));\n          if (!tokenConfig || !tokenConfig.childToken) {\n            return;\n          }\n          tokenConfig.address = tokenConfig.childToken.address;\n          if (!enabledTokens || !enabledTokens.length || enabledTokens.includes(tokenConfig.token)) {\n            const polygonTx = this.normalizePolygonTx(tx, tokenConfig);\n            // console.log('polygonTx',polygonTx);\n            if (polygonTx.action === 'Withdraw') {\n              const tx_state_id = this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(polygonTx.logs[polygonTx.logs.length - 1].topics[1])) : 0;\n              polygonTx.exited = false;\n              polygonTx.networkId = polygonNetworkId;\n              polygonTx.bridgeType = tokenConfig.bridgeType;\n              polygonTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n              try {\n                await this.props.maticPOSClient.exitERC20(polygonTx.hash, { from: this.props.account, encodeAbi: true });\n              } catch (error) {\n                if (error.toString().match('EXIT_ALREADY_PROCESSED')) {\n                  polygonTx.exited = true;\n                }\n              }\n              txs.push(polygonTx);\n            }\n          }\n        });\n        // debugger;\n      }\n    }\n\n    txs = txs.sort((a, b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    // console.log('getPolygonBridgeTxs',cachedDataKey,txs);\n\n    return this.setCachedData(cachedDataKey, txs, 120);\n  }\n  getPolygonBaseTxs = async (account = false, enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n    const requiredNetwork = this.getRequiredNetworkId();\n    // const selectedStrategy = this.props.selectedStrategy;\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[requiredNetwork]) {\n      const covalentApiUrl = covalentInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&key=${covalentInfo.key}`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data && baseTxs.data.data && baseTxs.data.data.items && Object.values(baseTxs.data.data.items).length) {\n\n        const cachedRows = Object.values(baseTxs.data.data.items).length;\n        const lastCachedTx = Object.values(baseTxs.data.data.items).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.block_height ? parseInt(lastCachedTx.block_height) + 1 : 0;\n\n        const covalentEndpointLastBlock = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=${cachedRows}`;\n        let latestTxs = await this.makeCachedRequest(covalentEndpointLastBlock, 15);\n\n        if (latestTxs && latestTxs.data.data.items && latestTxs.data.data.items.length) {\n          latestTxs = await this.filterPolygonTxs(latestTxs.data.data.items, enabledTokens);\n          // latestTxs = await this.filterEthereumTxs(latestTxs,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.block_height)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.data.items).includes(tx.tx_hash);\n                if (!txFound) {\n                  baseTxs.data.data.items[tx.tx_hash] = tx;\n                }\n              });\n\n              // Save covalent txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.data.items);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests_polygon = this.getCachedDataWithLocalStorage('cachedRequests_polygon',{});\n          const dataToCache = {\n            data: txs,\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests_polygon', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests_polygon',cachedRequests_polygon);\n        }\n      }\n\n      if (txs && txs.data && txs.data.data && txs.data.data.items) {\n        results = txs.data.data.items;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getEtherscanBaseTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network', 'firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber, firstBlockNumber);\n\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${etherscanInfo.keys[0]}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      if (debug) {\n        console.log('DEBUG - CACHED - baseTxs', baseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data.result && Object.values(baseTxs.data.result).length) {\n\n        const lastCachedTx = Object.values(baseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber) + 1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        // let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n        let latestTxs = await this.makeEtherscanApiRequest(etherscanEndpointLastBlock, etherscanInfo.keys, 15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length) {\n\n          latestTxs = await this.filterEthereumTxs(latestTxs.data.result, enabledTokens, true, false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.blockNumber)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.result).includes(tx.hashKey);\n                if (!txFound) {\n                  baseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          const dataToCache = {\n            data: txs,\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result) {\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getCurveTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = []) => {\n    const results = await this.getEtherscanTxs(account, firstBlockNumber, endBlockNumber, enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results, enabledTokens);\n  }\n  saveFetchedTransactions = (endpoint, txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')) {\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data: {\n        result: txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint, false, cachedRequest);\n  }\n  getEtherscanTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n\n    let resultData = null;\n    const currentNetwork = this.getRequiredNetwork();\n\n    switch (currentNetwork.explorer) {\n      case 'polygon':\n        resultData = await this.getPolygonBaseTxs(account, enabledTokens, debug);\n        break;\n      case 'etherscan':\n      default:\n        resultData = await this.getEtherscanBaseTxs(account, firstBlockNumber, endBlockNumber, enabledTokens, debug);\n        break;\n    }\n\n    // Initialize prevTxs\n    let txs = {};\n\n    if (resultData) {\n      let {\n        results,\n        baseTxs,\n        baseEndpoint\n      } = resultData;\n\n      if (baseTxs) {\n        // Filter txs for token\n        txs = await this.processStoredTxs(results, enabledTokens);\n      } else {\n        const allAvailableTokens = Object.keys(this.props.availableTokens);\n        // Save base endpoint with all available tokens\n        switch (currentNetwork.explorer) {\n          case 'polygon':\n            txs = await this.filterPolygonTxs(results, allAvailableTokens);\n            // console.log('polygon txs',results,allAvailableTokens,txs);\n            break;\n          case 'etherscan':\n          default:\n            txs = await this.filterEthereumTxs(results, allAvailableTokens);\n            break;\n        }\n\n        // Store filtered txs\n        if (txs && Object.keys(txs).length) {\n          this.saveFetchedTransactions(baseEndpoint, txs);\n        }\n      }\n    }\n\n    // console.log('DEBUG - TXS -',txs);\n\n    return Object\n      .values(txs)\n      .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n      .sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  getPolygonCurrentLastStateId = async () => {\n    const contractInstance = new this.props.web3Polygon.eth.Contract(\n      [\n        {\n          constant: true,\n          inputs: [],\n          name: \"lastStateId\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n          payable: false,\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ],\n      \"0x0000000000000000000000000000000000001001\"\n    );\n\n    return parseInt(await contractInstance.methods.lastStateId().call());\n  }\n  checkPolygonTransactionIncluded = async (txHash) => {\n    const [\n      last_state_id,\n      tx,\n    ] = await Promise.all([\n      this.getPolygonCurrentLastStateId(),\n      this.props.web3Polygon.eth.getTransactionReceipt(txHash)\n    ]);\n\n    const tx_state_id = tx && tx.logs && tx.logs.length && this.props.web3.utils ? this.props.web3.utils.hexToNumberString(tx.logs[tx.logs.length - 1].topics[1]) : null;\n\n    return tx_state_id ? parseInt(last_state_id) >= parseInt(tx_state_id) : null;\n  }\n  filterCurveTxs = async (results, enabledTokens = []) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter(tx => (enabledTokens.includes(tx.token) && ['CurveIn', 'CurveOut', 'CurveZapIn', 'CurveZapOut', 'CurveTransferIn', 'CurveTransferOut', 'CurveDepositIn', 'CurveDepositOut'].includes(tx.action)));\n\n    if (curveTxs.length) {\n      curveTxs.sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  normalizePolygonTx = (tx, tokenConfig = null) => {\n    tokenConfig = tokenConfig || Object.values(this.props.availableTokens).find(tokenConfig => tx.to_address && tokenConfig.idle.address.toLowerCase() === tx.to_address.toLowerCase());\n\n    const depositLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const redeemLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const withdrawLogEvent = tx.log_events && tokenConfig && tokenConfig.address ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === '0x0000000000000000000000000000000000000000') : null;\n\n    const tokenDecimal = tokenConfig.decimals;\n    const tokenSymbol = tokenConfig.name || tokenConfig.token;\n    const hashKey = `${tx.tx_hash}_${tokenSymbol}`;\n    const idleToken = tokenConfig.idle ? tokenConfig.idle.token : null;\n    const action = depositLogEvent ? 'Deposit' : (redeemLogEvent ? 'Redeem' : (withdrawLogEvent ? 'Withdraw' : null));\n    const timeStamp = parseInt(this.strToMoment(tx.block_signed_at)._d.getTime() / 1000);\n\n    let logEvent = null;\n    switch (action) {\n      case 'Deposit':\n        logEvent = depositLogEvent;\n        break;\n      case 'Redeem':\n        logEvent = redeemLogEvent;\n        break;\n      case 'Withdraw':\n        logEvent = withdrawLogEvent;\n        break;\n      default:\n        break;\n    }\n\n    const logs = tx.log_events ? tx.log_events.map(log => ({\n      topics: log.raw_log_topics\n    })) : [];\n    const value = logEvent ? this.fixTokenDecimals(logEvent.decoded.params.find(param => param.name === 'value').value, tokenDecimal) : this.fixTokenDecimals(tx.value, tokenDecimal);\n\n    const blockNumber = tx.log_events && tx.log_events.length ? tx.log_events[0].block_height : null;\n\n    return {\n      logs,\n      value,\n      action,\n      hashKey,\n      timeStamp,\n      idleToken,\n      tokenSymbol,\n      blockNumber,\n      tokenDecimal,\n      hash: tx.tx_hash,\n      to: tx.to_address,\n      status: 'Completed',\n      from: tx.from_address,\n      gasUsed: tx.gas_spent,\n      gasPrice: tx.gas_price,\n      token: tokenConfig.token,\n      contractAddress: tokenConfig.address,\n    };\n  }\n  filterPolygonTxs = async (txs, enabledTokens, processTransactions = true) => {\n    const idleTokensAddresses = Object.values(this.props.availableTokens).map(tokenConfig => tokenConfig.idle.address.toLowerCase());\n    const polygonTxs = txs ? txs.filter(tx => tx.to_address && idleTokensAddresses.includes(tx.to_address.toLowerCase())).reduce((output, tx) => {\n      const mappedTx = this.normalizePolygonTx(tx);\n      output[mappedTx.hashKey] = mappedTx;\n      return output;\n    }, {}) : {};\n\n    return processTransactions ? await this.processTransactions(polygonTxs, enabledTokens) : polygonTxs;\n  }\n  filterEtherscanTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    return await this.filterEthereumTxs(results, enabledTokens, processTxs, processStoredTxs);\n  }\n  filterEthereumTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve', 'migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve', 'depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', tokenConfig.idle.token]);\n\n      results.forEach(tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length > 1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length > 0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find(iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0)));\n        const isRedeemInternalTx = isRightToken && internalTxs.find(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase());\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length > 1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase())).length > 0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find(tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase())));\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut) {\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx) {\n            action = 'Deposit';\n          } else if (isRedeemTx) {\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx) {\n            action = 'Migrate';\n          } else if (isSendTransferTx) {\n            action = 'Send';\n          } else if (isReceiveTransferTx) {\n            action = 'Receive';\n          } else if (isSwapTx) {\n            action = 'Swap';\n          } else if (isSwapOutTx) {\n            action = 'SwapOut';\n          } else if (isWithdrawTx) {\n            action = 'Withdraw';\n          } else if (isCurveDepositTx) {\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx) {\n            action = 'CurveOut';\n          } else if (isCurveZapIn) {\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut) {\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn) {\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut) {\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn) {\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut) {\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx) {\n            hashKey += '_' + tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value, curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)) {\n              hashKey += '_' + action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()) {\n            tokenDecimals = 18;\n          } else if (isCurveTx) {\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]) {\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action) {\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx) {\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value, tokenDecimals);\n                }\n                break;\n              default:\n                if (!curveTx) {\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value, tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n                break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut) {\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTokens = this.fixTokenDecimals(tx.value, curvePoolContract.decimals);\n                curveTransfersTxs.push({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n              }\n            } else {\n              etherscanTxs[hashKey] = ({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action) {\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length > 0) {\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value, iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                  break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                  break;\n                default:\n                  break;\n              }\n            }\n          }\n        }\n      });\n    });\n\n    curveTransfersTxs.forEach(tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n\n    if (processTxs) {\n      etherscanTxs = await this.processTransactions(etherscanTxs, enabledTokens, processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey, transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]) {\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]) {\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]) {\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions', JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account = null, tokenKey = null, selectedToken = null) => {\n    const storedTxs = this.getStoredItem('transactions', true, {});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account) {\n      if (storedTxs[account]) {\n        output = storedTxs[account];\n        if (tokenKey) {\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken) {\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()) {\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processTransactions = async (etherscanTxs, enabledTokens = [], processStoredTxs = true) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object') {\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    Object.keys(curveAvailableTokens).forEach(token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats', 'tokens', curveTokenConfig.baseToken.toUpperCase()]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object') {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = { ...storedTxs[this.props.account][tokenKey] };\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        await this.asyncForEach(filteredTxs, async (tx, index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n\n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()) {\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig, tx.blockNumber, tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash) {\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action) {\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n              break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount) {\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n              break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n              break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n              break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n              break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount) {\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length - 1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x', '').toLowerCase()}`));\n\n                  this.customLog('filteredLogs', filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length) {\n                    filteredLogs.forEach(log => {\n                      let tokenAmount = parseInt(log.data, 16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount, tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount (' + tx.hash + ')', baseTokensConfig.token, tokenAmount.toFixed(5), storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n              break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens) {\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n                  const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (log.address.toLowerCase() === idleTokenAddress));\n                  if (filteredLogs && filteredLogs.length) {\n                    idleTokens = parseInt(filteredLogs[0].data, 16);\n                    idleTokens = this.fixTokenDecimals(idleTokens, idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n              break;\n            default:\n              break;\n          }\n\n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs) {\n        etherscanTxs = await this.processStoredTxs(etherscanTxs, [selectedToken], this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs, enabledTokens = [], txsToProcess = null) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions', true, {})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]) {\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({}, etherscanTxs);\n\n    const networkId = this.getRequiredNetworkId();\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]) {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account, tokenKey, selectedToken);\n\n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess), async (txKey, i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))) {\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken: 'Deposit',\n          redeemIdleToken: 'Redeem',\n          migrateFromToIdle: 'Migrate',\n          mintIdleTokensProxy: 'Deposit',\n          migrateFromAaveToIdle: 'Migrate',\n          migrateFromIearnToIdle: 'Migrate',\n          executeMetaTransaction: 'Migrate',\n          migrateFromFulcrumToIdle: 'Migrate',\n          migrateFromCompoundToIdle: 'Migrate',\n        };\n        const pendingStatus = ['pending', 'started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice) {\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length) {\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status: 'Pending',\n            token: selectedToken,\n            action: allowedMethods[tx.method],\n            timeStamp: parseInt(tx.created / 1000),\n            hash: txHash ? tx.transactionHash : null,\n            tokenSymbol: isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0], decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed) {\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx) {\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise(async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash, (err, txReceipt) => {\n              if (err) {\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())) {\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig, realTx.blockNumber, realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created / 1000);\n\n        let txValue = null;\n        switch (tx.method) {\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()) {\n              // Remove wrong contract tx\n              if (isStoredTx) {\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0], tokenConfig.decimals).toString() : 0;\n            if (!txValue) {\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n            break;\n          case 'redeemIdleToken':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice) {\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0], 18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n            break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt) {\n              executeMetaTransactionReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract', 'deposit', 'proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo) {\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x', '').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length) {\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data, 16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data, 16) : null;\n\n            if (!metaTxValue) {\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue, tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n            break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract) {\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt) {\n              migrationTxReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x', '');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x', '');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length >= 3 && tx.topics[tx.topics.length - 2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length) {\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ], migrationInternalTransfer.data, migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token) {\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue, tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n            break;\n          default:\n            break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx) {\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint, alias = false, data) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    return this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    // return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress', false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress', customAddress);\n  }\n  getCachedRequest = (endpoint, alias = false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]) {\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makePostRequest = async (endpoint, postData={}, error_callback = false, config = null) => {\n    const data = await axios\n      .post(endpoint, postData, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    return data;\n  }\n  makeRequest = async (endpoint, error_callback = false, config = null) => {\n    const data = await axios\n      .get(endpoint, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    if (data) {\n      return data;\n    } else {\n      let result= axios(config)\n      return result\n    }\n  }\n  makeEtherscanApiRequest = async (endpoint, keys = [], TTL = 120, apiKeyIndex = 0) => {\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp - cachedRequests[endpoint].timestamp < TTL) {\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint + '&apikey=' + apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK') {\n      const dataToCache = {\n        data,\n        timestamp\n      };\n      // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      this.addKeyToCachedDataWithLocalStorage('cachedRequests', endpoint, dataToCache);\n      return data;\n    } else if (apiKeyIndex < keys.length - 1) {\n      return await this.makeEtherscanApiRequest(endpoint, keys, TTL, apiKeyIndex + 1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint, TTL = 60, return_data = false, alias = false, config = null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // console.log('makeCachedRequest',endpoint,TTL,cachedRequests[key],(cachedRequests[key] ? timestamp-cachedRequests[key].timestamp : null));\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint, false, config);\n\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  makeCachedPostRequest = async (endpoint, postData={}, TTL=60, return_data=false, alias=false, config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makePostRequest(endpoint, postData, false, config);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)) {\n      const errorCode = parseInt(error.code);\n      switch (errorCode) {\n        case 4001:\n          output = 'denied';\n          break;\n        default:\n          output = `error_${errorCode}`;\n          break;\n      }\n    } else if (error.message) {\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path, array) => {\n    if (!array) {\n      return null;\n    }\n    path = Object.assign([], path);\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path, array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path, configs = false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return configs[prop] !== undefined ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path, configs[prop]);\n      }\n    }\n    return null;\n  }\n  getAppUrl = (path) => {\n    return globalConfigs.baseURL + '/' + path;\n  }\n  getCurrentEnvironment = () => {\n    let environment = Object.keys(globalConfigs.environments).find(env => {\n      const envUrl = globalConfigs.environments[env].url;\n      return envUrl.toLowerCase() === window.location.origin.toLowerCase();\n    });\n    return environment || 'beta';\n  }\n  checkUrlPolygon = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.polygonUrl.toLowerCase());\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page = null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics', 'google', 'pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga) {\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData, callback = null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && (debugEnabled || originOk)) {\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet) {\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1) {\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n          // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise(async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function') {\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function') {\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return { name, contract };\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\", name, address, error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider = null) => {\n    return this.getStoredItem('walletProvider', false, defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo, simpleID) => {\n    if (!userInfo.address && this.props.account) {\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider) {\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email) {\n      delete userInfo.email;\n    }\n    if (!userInfo.address) {\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID) {\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly = false) => {\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network', 'providers', 'snapshot', 'whitelist']).map(addr => addr.toLowerCase());\n    const endpoint = this.getGlobalConfig(['network', 'providers', 'snapshot', 'endpoints', 'proposals']);\n    const query = activeOnly ? this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposalsActive']) : this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposals']);\n\n    const data = {\n      query: `${query}`\n    }\n\n    let proposals = await this.makeCachedPostRequest(endpoint, data, 1440, true, false);\n    if (proposals && proposals.data && proposals.data.proposals){\n      proposals = proposals.data.proposals;\n      const currTime = parseInt(Date.now() / 1000);\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        if (p.end <= currTime || whitelist.includes(p.author.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.snapshot;\n          let checkedStrategies = false;\n          await this.asyncForEach(p.strategies, async (s) => {\n            if (checkedStrategies) {\n              return;\n            }\n            if (s.name === 'erc20-balance-of') {\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract) {\n                const tokenBalance = await this.getTokenBalance(tokenName, tokenContract.address, true, blockNumber);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)) {\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n          });\n\n          // Add proposal is passed token balances check\n          if (checkedStrategies) {\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey, validProposals);\n    }\n  }\n  getAprsFromApi = async (networkId = null) => {\n    const config = this.getGlobalConfig(['stats', 'config']);\n    if (!networkId || !this.getGlobalConfig(['network', 'enabledNetworks']).includes(networkId)) {\n      networkId = this.getRequiredNetworkId();\n    }\n    const endpointInfo = this.getGlobalConfig(['stats', 'aprs']);\n    const aprs = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n    return aprs;\n  }\n  getTokenApiData = async (address, isRisk = null, startTimestamp = null, endTimestamp = null, forceStartTimestamp = false, frequency = null, order = null, limit = null) => {\n    const networkId = this.getRequiredNetworkId();\n    // const statsConfig = this.getGlobalConfig(['stats']);\n    // const statsEnabled = statsConfig.enabled && statsConfig.availableNetworks.includes(networkId);\n    // if (!statsEnabled){\n    //   return [];\n    // }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${networkId}_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null) {\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter(c => ((c.startTimestamp === null || (startTimestamp && c.startTimestamp <= startTimestamp)) && (c.endTimestamp === null || (endTimestamp && c.endTimestamp >= endTimestamp))))\n      if (filteredCachedData && filteredCachedData.length > 0) {\n        let filteredData = filteredCachedData.pop().data;\n        if (filteredData) {\n          filteredData = filteredData.filter(d => ((!startTimestamp || d.timestamp >= startTimestamp) && (!endTimestamp || d.timestamp <= endTimestamp)));\n          if (filteredData.length > 0) {\n            return filteredData;\n          }\n        }\n      }\n      // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    let endpoint = `${apiInfo.endpoint[networkId]}${address}`;\n\n    // console.log('getTokenApiData',cachedDataKey,apiInfo,endpoint);\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null) {\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)) {\n        if (forceStartTimestamp) {\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp - (60 * 60 * 24 * 2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)) {\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null) {\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)) {\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null) {\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)) {\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length) {\n        endpoint += '?' + params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    let output = await this.makeRequest(endpoint, false, config);\n    if (!output) {\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null) {\n      filteredData = data.filter(d => (d.isRisk === isRisk));\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data: filteredData,\n    });\n\n    this.setCachedData(cachedDataKey, cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName, exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName, exchangeRateParams.name, exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, exchangeRate, null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName) {\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats', 'tokens', contractName.toUpperCase()]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName, 'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, decimals, null);\n  }\n  getAvgApr = (aprs, allocations, totalAllocation) => {\n    if (aprs && allocations && totalAllocation) {\n      let avgApr = Object.keys(aprs).reduce((aprWeighted, protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      }, 0);\n\n      if (avgApr) {\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency, quantity = 1) => {\n    const frequency_seconds = {\n      hour: 3600,\n      day: 86400,\n      week: 604800\n    };\n    return frequency_seconds[frequency] * quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools', 'stake', 'props', 'availableTokens', 'IDLE', 'feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n      return etherscanTxlist.data.result.filter(tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0)));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance, tokenDecimals, round = true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance, tokenDecimals, exchangeRate = null) => {\n    if (!tokenDecimals) {\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()) {\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName = null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key, parse_json = true, return_default = null) => {\n    let output = return_default;\n    if (window.localStorage) {\n      const item = localStorage.getItem(key);\n      if (item) {\n        output = item;\n        if (parse_json) {\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output) {\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys = []) => {\n    if (window.localStorage) {\n\n      if (!excludeKeys || !excludeKeys.length) {\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i = 0; i < window.localStorage.length; i++) {\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)) {\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage) {\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key, value, stringify = false) => {\n    if (window.localStorage) {\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key, value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig) {\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length) {\n      return false;\n    }\n\n    for (let protocolIndex = 0; protocolIndex < allocations.length; protocolIndex++) {\n      const lastAllocationsPromise = new Promise(async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations) {\n      return true;\n    }\n\n    const diff = allocations.filter((alloc, index) => alloc !== newAllocations[index]);\n\n    return diff.length > 0;\n  }\n  checkMigration = async (tokenConfig, account) => {\n\n    if (!tokenConfig || !account) {\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled) {\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract) {\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName, account);\n\n        if (oldContractBalance) {\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance, oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]) {\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n\n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({ from: account })\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit) {\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice, 9).times(gasLimit), 9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function (hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function (confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\", receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null, error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\", \"address\", \"uint256\", \"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network', 'providers', 'biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`, null, {\n      headers: {\n        'x-api-key': biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data) {\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName, methodName, methodParams, nonce, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]) {\n      callback(null, 'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try {\n      const userAddress = this.props.account;\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null, error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName, tokenAddress, permitType, callData, gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data: callData,\n      token: tokenAddress,\n      to: contract._address,\n      txGas: parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise(async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req, metaInfo, callback, callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({ req, metaInfo });\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null, true);\n      return false;\n    }\n\n    if (!transactionHash) {\n      // console.log('!transactionHash ERROR');\n      callback(null, true);\n      return false;\n    }\n\n    const tx = {\n      method: 'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(() => {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt) => {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if (!err && receipt) {\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx, err);\n\n          if (typeof window.updateTransaction === 'function') {\n            window.updateTransaction(tx, transactionHash, tx.status, null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName, functionSignature, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    try {\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null, error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce = 0, value = null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit', baseContractName]);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce > 0) {\n      nonce = parseInt(nonce) + parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion) {\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n        break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n        break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit = null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters) {\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find(f => f.name === methodName);\n      const useNonce = methodAbi ? methodAbi.inputs.find(i => i.name === 'nonce') : true;\n      if (!isNaN(parseInt(nonce)) && useNonce) {\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null, 'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName, contractAddress, functionSignature, callback, callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null, error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n\n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName, contractAddr, walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName, walletAddr, false),\n      this.getAllowance(contractName, contractAddr, walletAddr)\n    ]);\n    this.customLog('checkTokenApproved', contractName, this.BNify(allowance).toFixed(), this.BNify(balance).toFixed(), (allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName, contractAddr, walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr) {\n      return false;\n    }\n    this.customLog('getAllowance', contractName, contractAddr, walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName, methodName, params, value, callback, callback_receipt, txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName, methodName, params, callback, callback_receipt, txData = null, send_raw = false, raw_tx_data = null) => {\n    try {\n      this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx) => {\n        if (typeof callback === 'function') {\n          callback(tx);\n        }\n      }, (tx) => {\n        if (typeof callback_receipt === 'function') {\n          callback_receipt(tx);\n        }\n      }, null, txData, send_raw, raw_tx_data);\n    } catch (error) {\n      callback(null, error);\n    }\n  }\n  disableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  getBestToken = async (networkId=null,availableTokens=null) => {\n    let highestValue = null;\n    let selectedToken = null;\n    if (!networkId){\n      networkId = this.getRequiredNetworkId();\n    }\n    const aprs = await this.getAprsFromApi(networkId);\n    if (aprs && aprs.lendRates){\n      aprs.lendRates.forEach( aprInfo => {\n        const tokenAPR = this.BNify(aprInfo.apy);\n        if (tokenAPR){\n          const token = aprInfo.tokenSymbol;\n          if ((!highestValue || highestValue.lt(tokenAPR)) && (!availableTokens || availableTokens[token])){\n            highestValue = tokenAPR;\n            selectedToken = token;\n          }\n        }\n      });\n    } else if (availableTokens) {\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAPR = await this.getTokenAprs(tokenConfig);\n        if (tokenAPR && tokenAPR.avgApr !== null){\n          if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n            highestValue = tokenAPR.avgApr;\n            selectedToken = token;\n          }\n        }\n      });\n    }\n    return selectedToken;\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null) => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName, 'usersStakes', [walletAddr]);\n    if (stakedBalance) {\n      if (decimals) {\n        stakedBalance = this.fixTokenDecimals(stakedBalance, decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, stakedBalance, 30);\n      }\n    }\n    return this.BNify(0);\n  }\n  getTrancheStakingRewards = async (account, trancheConfig) => {\n    const stakingRewards = {};\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]);\n      tokenConfig = { ...tokenConfig, ...tokenGlobalConfig };\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name, 'expectedUserReward', [account, tokenConfig.address]);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount, tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens = true) => {\n    const result = await this.loadTrancheField(field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens, false);\n    return result;\n  }\n  loadTrancheField = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account = null, addGovTokens = true, formatValue = true, addTokenName = true) => {\n    let output = null;\n    let rewardsTokensInfo = null;\n    const maxPrecision = (fieldProps && fieldProps.maxPrecision) || 5;\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const decimals = (fieldProps && fieldProps.decimals) || (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && fieldProps.minPrecision) || (this.props.isMobile ? 3 : 4);\n    const tokenName = this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'label']) || this.capitalize(token);\n\n    const stakingRewards = tokenConfig && tranche ? tokenConfig[tranche].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length>0 ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0 ? true : false;\n\n    // console.log('loadTrancheField',protocol,token,tranche,stakingRewards,stakingEnabled);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const show_idle_apy = internal_view && parseInt(internal_view) === 1;\n    \n    // Create Tranche Strategy contract\n    const idleStrategyAddress = await this.genericContractCallCached(tokenConfig.CDO.name, 'strategy');\n    if (idleStrategyAddress) {\n      await this.props.initContract(strategyConfig.name, idleStrategyAddress, strategyConfig.abi);\n    }\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    switch (field) {\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats', 'protocols', protocol, 'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches', tranche, 'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue');\n        if (!this.BNify(poolSize).isNaN()) {\n          output = this.fixTokenDecimals(poolSize, tokenConfig.CDO.decimals);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision);\n          }\n        }\n      break;\n      case 'poolConverted':\n        output = await this.loadTrancheFieldRaw('pool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'seniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.AA, account, addGovTokens, formatValue, false);\n      break;\n      case 'juniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.BB, account, addGovTokens, formatValue, false);\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name, 'latest', 180),\n          this.loadTrancheField('tranchePrice', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()) {\n          output = this.fixTokenDecimals(totalSupply, tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'tranchePoolConverted':\n        output = await this.loadTrancheFieldRaw('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig, trancheConfig, account);\n        output = output || this.BNify(0);\n        output = this.BNify(deposited);\n        if (output.gt(0)) {\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'fee');\n        if (output) {\n          output = this.BNify(output).div(this.BNify(100000));\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name, 'virtualPrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        output = formatValue ? 'N/A' : this.BNify(0);\n        if (stakingEnabled){\n          let [\n            staked1,\n            lastPrice1\n          ] = await Promise.all([\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name, account, trancheConfig.CDORewards.decimals),\n            this.loadTrancheField(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n          ]);\n\n          if (staked1 && lastPrice1) {\n            output = this.BNify(staked1).times(lastPrice1);\n            // console.log('trancheStaked',staked1.toString(),lastPrice1.toString(),output.toString());\n            if (formatValue) {\n              output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n            }\n          }\n        }\n      break;\n      case 'trancheLimit':\n        output = formatValue ? 'None' :  this.BNify(0);\n        if (this.BNify(tokenConfig.limit).gt(0)){\n          output = this.BNify(tokenConfig.limit);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name, account),\n          this.loadTrancheFieldRaw(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice) {\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2) {\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheApy`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n\n        if (deposited3 && earningsStart && trancheApy2) {\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter) {\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n          const feesEnd = earningsCounter.earningsEnd.times(trancheFee);\n\n          // console.log('feesCounter',feesStart.toString(),feesEnd.toString());\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3) {\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n        if (!this.BNify(redeemable2).isNaN() && !this.BNify(deposited2).isNaN()){\n          output = redeemable2.div(deposited2).minus(1).times(100);\n          if (formatValue) {\n            output = output.toFixed(decimals) + '%';\n          }\n        }\n      break;\n      case 'trancheApy':\n        let trancheApy = null;\n        output = this.BNify(0);\n        [\n          rewardsTokensInfo,\n          trancheApy\n        ] = await Promise.all([\n          show_idle_apy ? this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig) : null,\n          this.genericContractCallCached(tokenConfig.CDO.name, 'getApr', [trancheConfig.address])\n        ]);\n        // console.log('trancheApy',this.props.network.required,tokenConfig.CDO.name,trancheConfig.address,trancheApy);\n        if (trancheApy){\n          let apr = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n\n          // Hot-fix for convex\n          if (protocol === 'convex'){\n            apr = apr.times(100);\n          }\n\n          let apy = this.apr2apy(apr.div(100)).times(100);\n\n          if (rewardsTokensInfo && rewardsTokensInfo.IDLE && !this.BNify(rewardsTokensInfo.IDLE.apy).isNaN()){\n            apy = apy.plus(this.BNify(rewardsTokensInfo.IDLE.apy).times(100));\n          }\n\n          if (apy.gt(9999)){\n            output = this.BNify(9999.99);\n          } else {\n            output = this.BNify(apy);\n          }\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n            if (apy.gt(9999)){\n              output = `>${output}`;\n            }\n          }\n        } else {\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig, trancheConfig, account),\n          this.loadTrancheFieldRaw(`earningsPerc`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx) {\n          const secondsFromFirstTx = parseInt(Date.now() / 1000) - parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue) {\n            output = output.toFixed(2) + '%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        output = this.BNify(0);\n        rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig, trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE) {\n          if (field === 'trancheIDLEDistribution') {\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond, idleGovTokenConfig.distributionFrequency);\n            if (formatValue) {\n              output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue) {\n              output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE <a href=\"${this.getEtherscanTransactionUrl(rewardsTokensInfo.IDLE.latestHarvest.transactionHash)}\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">(last harvest)</a>`\n            }\n          }\n        } else {\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE/${idleGovTokenConfig.distributionFrequency}`\n          }\n        }\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'trancheAPRSplitRatio':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'trancheAPRSplitRatio')\n        output= output/1000\n        output= output.toString()+\"/\"+(100-output).toString();\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321', decimals, maxPrecision, minPrecision) + ` IDLE/day`;\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCall(strategyConfig.name, 'getRewardTokens'),\n          this.genericContractCall(tokenConfig.CDO.name, 'getIncentiveTokens')\n        ]);\n\n        const govTokens = field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter(rewardTokenAddr => incentiveTokens && !incentiveTokens.map(addr => addr.toLowerCase()).includes(rewardTokenAddr.toLowerCase())) : incentiveTokens);\n\n        if (govTokens) {\n          govTokens.forEach(govTokenAddress => {\n            const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n            // Skip reward token if globally disabled\n            if (govTokenConfig && !govTokenConfig.enabled) {\n              return;\n            }\n            // Skip reward token if not enabled for this specific tranche\n            const stakingRewardsTokenConfig = trancheConfig ? trancheConfig.CDORewards.stakingRewards.find(tokenConfig => tokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()) : null;\n            if (stakingRewardsTokenConfig && !stakingRewardsTokenConfig.enabled) {\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n\n        // Add hard-coded tokens\n        if (tokenConfig[field] && typeof tokenConfig[field].forEach === 'function'){\n          tokenConfig[field].forEach( govToken => {\n            const govTokenConfig = this.getGlobalConfig(['stats','tokens',govToken]);\n            if (govTokenConfig){\n              output[govToken] = govTokenConfig;\n            }\n          });\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field, token, tokenConfig, account, addGovTokens = true, addCurveApy = false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const showIdleAPR = internal_view && parseInt(internal_view) === 1;\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies', this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined') {\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken) {\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig) {\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)) {\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field) {\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([], account),\n          this.getCurveTokenBalance(account, true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance) {\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage) {\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n        break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1, redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)) {\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n        break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n        break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n        break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n        break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy', token, tokenConfig, account),\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve) {\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n        break;\n      case 'earningsPerc':\n        let [amountLent1, redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)) {\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n        break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp', token, tokenConfig, account);\n        if (depositTimestamp) {\n          const currTimestamp = parseInt(Date.now() / 1000);\n          output = (currTimestamp - depositTimestamp) / 86400;\n        }\n        break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig, addGovTokens);\n        }\n        break;\n      case 'userDistributionSpeed':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account, govTokenAvailableTokens);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n          if (output) {\n            output = this.fixDistributionSpeed(output, tokenConfig.distributionFrequency, tokenConfig.distributionMode);\n          }\n        }\n        break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance', 'props', 'tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens', tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output) {\n\n          output = this.fixTokenDecimals(output, govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency) {\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n              break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n              break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n              break;\n            case 'year':\n              output = output.times(blocksPerYear);\n              break;\n            default:\n              break;\n          }\n        }\n        break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n        }\n        break;\n      case 'apr':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n            break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n            if (tokenAprs && tokenAprs.avgApr !== null) {\n              output = tokenAprs.avgApr;\n            }\n            break;\n        }\n        break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()) {\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy) {\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY) {\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n        break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token], account),\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]) {\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig, firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n        break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account),\n          this.loadAssetField('earningsPerc', token, tokenConfig, account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc) {\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n        break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token], account) : false;\n        if (depositTimestamps && depositTimestamps[token]) {\n          output = depositTimestamps[token];\n        }\n        break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig, account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n        break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = {\n            address: this.getContractByName('DAI')._address\n          };\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig, govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()) {\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n        break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig, account);\n        break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getTokenBalance(token, account);\n          if (!output || output.isNaN()) {\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token, account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()) {\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n        break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token, account) : false;\n        if (idleTokenBalance) {\n          output = idleTokenBalance;\n        }\n        break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1, amountLent2, redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy', token, tokenConfig, account, false),\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2) {\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n        break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig, account, govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance', token, tokenConfig, account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account, govTokenAvailableTokens, token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1) {\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()) {\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n        break;\n      case 'earningsCurve':\n        let [amountLentCurve2, redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (!amountLentCurve2) {\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1) {\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n        break;\n      case 'earnings':\n        let [amountLent, redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (!amountLent) {\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2) {\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))) {\n          output = this.BNify(0);\n        }\n        break;\n      default:\n        break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken, blockNumber = 'latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken, blockNumber);\n    if (idleTokenSupply) {\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig, account, blockNumber = 'latest') => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n\n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))) {\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig, blockNumber = 'latest', timestamp = false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp) {\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp) - (60 * 60);\n      const endTimestamp = parseInt(timestamp) + (60 * 60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, endTimestamp, true);\n\n      let beforePrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      let afterPrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      tokenData.forEach(d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp) - parseInt(timestamp));\n        if (parseInt(d.timestamp) < parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff < beforePrice.timeDiff)) {\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp) > parseInt(timestamp) && !afterPrice.timeDiff) {\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data) {\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()) {\n      tokenPrice = this.fixTokenDecimals(tokenPrice, decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)) {\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n    this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = (clear_all = false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function') {\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData(null, clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL);\n    }\n    return data;\n  }\n  addKeyToCachedDataWithLocalStorage = (parent_key, key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      const cachedData = this.getCachedDataWithLocalStorage(parent_key, {});\n      cachedData[key] = data;\n      this.props.setCachedData(parent_key, cachedData, TTL, true);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL, true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key, defaultValue = null) => {\n    return this.getCachedData(key, defaultValue, true);\n  }\n  getCachedData = (key, defaultValue = null, useLocalStorage = false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]) {\n      cachedData = this.props.cachedData[key];\n      // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]) {\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || cachedData.expirationDate >= parseInt(Date.now() / 1000));\n\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid) {\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr, tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, walletAddr, false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)) {\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url, '_blank', 'noopener');\n  }\n  getActiveCoverages = async (account = null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account) {\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now() / 1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools', 'coverProtocol']);\n    if (coverProtocolConfig.enabled) {\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name, tokenConfig.address, tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name, account);\n        if (balance && balance.gt(0)) {\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp <= currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n    if (nexusMutualConfig.enabled) {\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach(coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance', 'nexusMutual', 'label']);\n        const protocolImage = this.getGlobalConfig(['insurance', 'nexusMutual', 'image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance', 'nexusMutual', 'imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil) <= currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n\n    await Promise.all([\n      this.props.initContract(incidentsInfo.name, incidentsInfo.address, incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name, feeDistributorConfig.address, feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n      this.getContractEvents(feeDistributorConfig.name, 'CoverBought', { fromBlock, toBlock: 'latest', filter: { buyer: account } }),\n      this.getContractEvents(feeDistributorConfig.name, 'ClaimSubmitted', { fromBlock, toBlock: 'latest', filter: { buyer: account } })\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents, async (cover) => {\n      // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find(claim => parseInt(claim.returnValues.coverId) === coverId);\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name, 'getCover', [coverId]),\n        this.getContractEvents(incidentsInfo.name, 'IncidentAdded', { fromBlock: cover.blockNumber, toBlock: 'latest', filter: { productId: cover.contractAddress } })\n      ]);\n\n      if (!coverDetails) {\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents ? incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n          this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n          this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n          parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      }) : [];\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find(tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase());\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured, yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find(underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase());\n      const expiryDate = this.strToMoment(coverDetails.validUntil * 1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name, 'getPayoutOutcome', [claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent) {\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find(log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase()) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data, 16), coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured, coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount, coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token, account, false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice, yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance, yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2) + '%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? { ...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date) } : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint, 1800, true);\n      if (transactions && typeof transactions.result === 'object') {\n        return transactions.result.filter(tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase());\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account = null, filter_by_status = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools', 'batchDeposit']);\n    if (!batchDepositConfig.enabled) {\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name, 'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex); batchIndex++) {\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name, 'batchTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchRedeemedTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchDeposits', [this.props.account, batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null) {\n          batchTotals = this.fixTokenDecimals(batchTotal, tokenConfig.decimals);\n        }\n        if (batchDeposit !== null) {\n          batchRedeem = this.fixTokenDecimals(batchRedeem, 18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit, tokenConfig.decimals);\n          if (batchDeposit.gt(0)) {\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)) {\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status) {\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, batchedDeposits);\n  }\n  getETHBalance = async (walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName, walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName, walletAddr, blockNumber)\n    ]);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance, 30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ', contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function') {\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url, props, callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props) {\n      Object.keys(props).forEach((attr, i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function') {\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function () {\n          if (script.readyState === 'loaded' || script.readyState === 'complete') {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)) {\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, totalSupply);\n  }\n  getTokenPrice = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName, 'tokenPrice', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice, 60);\n  }\n  getContractBalance = async (contractName, address, blockNumber = 'latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, balance, 30);\n  }\n  getProtocolBalance = async (contractName, address) => {\n    return await this.getContractBalance(contractName, address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs) {\n      const result = {\n        aprs: aprs[1],\n        addresses: aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey, result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxReceipt = async (txHash, web3 = null) => {\n    web3 = web3 || this.props.web3;\n    if (!web3 || !web3.eth) {\n      return null;\n    }\n    return await (new Promise(async (resolve, reject) => {\n      web3.eth.getTransactionReceipt(txHash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n  getTxDecodedLogs = async (tx, logAddr, decodeLogs, storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt) {\n      txReceipt = await (new Promise(async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n          if (err) {\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt) {\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length) {\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs, internalTransfers[0].data, internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    if (!this.props.web3) {\n      return false;\n    }\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber='latest') => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && blockNumber !== 'latest') {\n      return cachedData;\n    }\n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n    if (blockNumber === 'latest'){\n      return blockInfo;\n    }\n\n    return blockInfo ? this.setCachedDataWithLocalStorage(cachedDataKey, blockInfo, null) : null;\n  }\n  getContractPastEvents = async (contractName, methodName, params = {}) => {\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    // console.log('getContractPastEvents',contractName,methodName);\n\n    return await contract.getPastEvents(methodName, params);\n  }\n\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  cachedContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    return await this.genericContractCallCached(contractName, methodName, params, callParams, blockNumber, TTL);\n  }\n\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', count = 0) => {\n\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try {\n      // console.log(`genericContractCall - ${contractName} - ${methodName} - [${params.join(',')}]`);\n      const value = await contract.methods[methodName](...params).call(callParams, blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n      // if (count<=3){\n      //   await this.asyncTimeout(1000);\n      //   return await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, count+1);\n      // }\n    }\n  }\n  asyncForEach = async (array, callback, async = true) => {\n    let output = [];\n    if (async) {\n      output = await Promise.all(array.map((c, index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        output.push(await callback(array[index], index, array));\n      }\n    }\n    return output;\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token, tokenConfig.idle.address);\n    if (unlentBalance) {\n      unlentBalance = this.fixTokenDecimals(unlentBalance, tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig, addGovTokens = true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent) {\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getLastAllocations = async (tokenConfig) => {\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    const aprs = await this.getAprs(tokenConfig.idle.token);\n    const allAvailableTokens = aprs ? aprs.addresses : null;\n    if (allAvailableTokens) {\n      const tokenAllocations = await this.asyncForEach(allAvailableTokens, async (protocolAddr, index) => {\n        return await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [index]);\n      });\n      return allAvailableTokens.reduce((lastAllocations, protocolAddr, index) => {\n        lastAllocations[protocolAddr.toLowerCase()] = tokenAllocations[index];\n        return lastAllocations;\n      }, {});\n    }\n\n    return {};\n  }\n  getTokenAllocation = async (tokenConfig, protocolsAprs = false, addGovTokens = true) => {\n\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance: null,\n      totalAllocation: null,\n      protocolsAllocations: null,\n      protocolsAllocationsPerc: null,\n      totalAllocationConverted: null,\n      totalAllocationWithUnlent: null,\n      totalAllocationWithUnlentConverted: null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      lastAllocations,\n      tokenUsdConversionRate,\n      totalSupply,\n      govTokensBalances,\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getLastAllocations(tokenConfig),\n      this.getTokenConversionRate(tokenConfig, false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n    ]);\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice).minus(unlentBalance);\n\n    if (lastAllocations) {\n      Object.keys(lastAllocations).forEach((protocolAddr) => {\n        const protocolInfo = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n        if (protocolInfo && protocolInfo.enabled) {\n          const protocolAllocationPerc = this.BNify(lastAllocations[protocolAddr]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance) {\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total) {\n      if (tokenUsdConversionRate) {\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate) {\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs) {\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs, protocolsAllocations, totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey, tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName, 'token0'),\n      this.genericContractCallCached(contractName, 'token1'),\n      this.genericContractCallCached(contractName, 'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply) {\n      const token0_config = {\n        address: token0_address\n      };\n      const token1_config = {\n        address: token1_address\n      };\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig, token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig, token1_config)\n      ]);\n\n      if (token0_price && token1_price) {\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0], 18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1], 18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply, 18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom, tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter', 'getAmountsIn', [one.toFixed(), path]);\n\n      // console.log('getSushiswapConversionRate',path,res);\n\n      if (res) {\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest') => {\n\n    if (tokenConfigDest.addressForPrice) {\n      tokenConfigDest = Object.assign({}, tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter', 'getAmountsIn', [one.toFixed(), path], {}, blockNumber);\n\n      // console.log('getUniswapConversionRate',path,unires);\n\n      if (unires) {\n        const price = this.BNify(unires[0]).div(one);\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey, price);\n        }\n        return price;\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account, enabledTokens = []) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach(tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]) {\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action) {\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n          break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])) {\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)) {\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)) {\n        Object.keys(idleTokensBalances).forEach(token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)) {\n            if (tokenBalance.gt(remainingCurveTokens)) {\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts, max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path, results.data);\n        if (curveApy) {\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()) {\n            return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies) {\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce((availableTokens, token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled) {\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    }, {});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber) {\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice, prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name, 'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name, 'get_virtual_price', [], {}, blockNumber - blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice) {\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account = null, fixDecimals = true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name, account, fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber = 'latest', fixDecimals = true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name, 'get_virtual_price', [], {}, blockNumber);\n    if (curveTokenPrice) {\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals) {\n        const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice, curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice, curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice) {\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve', 'depositContract']);\n    if (depositContractInfo) {\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi) {\n        curveDepositContract = await this.props.initContract(depositContractInfo.name, depositContractInfo.address, depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve', 'zapContract']);\n    if (zapContractInfo) {\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi) {\n        curveZapContract = await this.props.initContract(zapContractInfo.name, zapContractInfo.address, zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve', 'poolContract']);\n    if (poolContractInfo) {\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi) {\n        curvePoolContract = await this.props.initContract(poolContractInfo.name, poolContractInfo.address, poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve', 'migrationContract']);\n    if (migrationContractInfo) {\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi) {\n        migrationContract = await this.props.initContract(migrationContractInfo.name, migrationContractInfo.address, migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account = null, curveTokenBalance = null, max_slippage = null) => {\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage) {\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]);\n        if (curveIdleTokens) {\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage) {\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account = null, curveTokenBalance = null, fixDecimals = false, useCoinIndex = false) => {\n\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals) {\n          tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token, amount, deposit = false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount) > 0) {\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount, 18);\n        if (!deposit) {\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount, curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts, deposit = true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract) {\n      return await this.genericContractCall(migrationContract.name, 'calc_token_amount', [amounts, deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token, amount, deposit = true, uneven_amounts = null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract) {\n\n      const n_coins = this.getGlobalConfig(['curve', 'params', 'n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)) {\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins) {\n        amounts = await this.getCurveAmounts(token, amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name, 'get_virtual_price'),\n        this.genericContractCall(depositContract.name, 'calc_token_amount', [amounts, deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount) {\n        amount = this.fixTokenDecimals(amount, 18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice, 18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount, 18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit) {\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit) {\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig, aTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const currentNetworkId = this.getRequiredNetworkId();\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find(p => p.name === stkAAVETokenConfig.protocol);\n\n    // console.log('getStkAaveDistribution_1',tokenConfig.idle.token,aTokenConfig.token);\n    const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], stkAAVETokenConfig) || [];\n\n    if (!aTokenConfig || disabledTokens.includes(tokenConfig.idle.token)) {\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token, 'getIncentivesController');\n\n    if (!aaveIncentivesController_address) {\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aaveIncentivesController_address}`;\n    await this.props.initContract(IAaveIncentivesController_name, aaveIncentivesController_address, IAaveIncentivesController);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig, false, false),\n      this.genericContractCall(IAaveIncentivesController_name, 'assets', [aTokenConfig.address]),\n    ]);\n\n    // console.log('getStkAaveDistribution',IAaveIncentivesController_name,aTokenConfig.address,assetData);\n\n    if (assetData && tokenAllocation) {\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)) {\n        if (!aTokenIdleSupply) {\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token, 'balanceOf', [tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData.emissionPerSecond);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network', 'secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize) {\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        if (!this.BNify(aaveDistribution).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find(p => (p.name === stkAAVETokenConfig.protocol));\n      if (aTokenInfo) {\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getStkAaveDistribution(tokenConfig, null, false),\n        ]);\n\n        if (aaveDistribution && userPoolShare && !this.BNify(aaveDistribution).isNaN() && !this.BNify(userPoolShare).isNaN()) {\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getWMaticApr = async (token, tokenConfig, maticConversionRate = null) => {\n    const wMaticTokenConfig = this.getGlobalConfig(['govTokens', 'WMATIC']);\n    if (!wMaticTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getWMaticApr_${tokenConfig.idle.token}_${maticConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let wMaticApr = this.BNify(0);\n    const distributionSpeed = await this.getStkAaveDistribution(tokenConfig);\n\n    if (distributionSpeed && this.BNify(distributionSpeed).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!maticConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: wMaticTokenConfig.addressForPrice || wMaticTokenConfig.address\n          };\n          maticConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!maticConversionRate || maticConversionRate.isNaN()) {\n          maticConversionRate = this.BNify(1);\n        }\n      }\n\n      const wMaticValue = this.BNify(maticConversionRate).times(distributionSpeed);\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),tokenAllocation);\n\n      if (tokenAllocation) {\n        wMaticApr = wMaticValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),wMaticValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),wMaticApr.toFixed());\n\n        if (!this.BNify(wMaticApr).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, wMaticApr);\n        }\n      }\n    }\n\n    return wMaticApr;\n  }\n  getStkAaveApr = async (token, tokenConfig, aaveConversionRate = null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    if (!stkAAVETokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()) {\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      if (tokenAllocation) {\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token, tokenConfig, cTokenIdleSupply = null, compConversionRate = null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens', 'COMP']);\n    if (!COMPTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig, cTokenIdleSupply);\n\n    if (compDistribution) {\n\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      // Get COMP conversion rate\n      if (!compConversionRate) {\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig, COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()) {\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      console.log('getCompAPR', tokenConfig.idle.token, compConversionRate.toFixed(5), compDistribution.toFixed(5), compValue.toFixed(5), tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation) {\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller', 'compSupplySpeeds', [cTokenAddress]);\n    if (compSpeed) {\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig, cTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n    if (cTokenInfo) {\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)) {\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply) {\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply) {\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token, tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply) {\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network', 'blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize) {\n              compDistribution = this.fixTokenDecimals(compDistribution, 18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n      if (cTokenInfo) {\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getCompDistribution(tokenConfig, null, false),\n        ]);\n\n        if (compDistribution && userPoolShare) {\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens = null) => {\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr, tokenAllocation] = await Promise.all([\n        this.getCompAPR(token, tokenConfig),\n        this.getTokenAllocation(tokenConfig, false, false)\n      ]);\n\n      if (compApr && tokenAllocation) {\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function () {\n      return this.reduce(function (pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function () {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function () {\n      return this.sum() / this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, 7200, 'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length - 1];\n\n        rates.forEach(r => {\n          if (!protocols) {\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach(p1 => {\n              const foundProtocol = tokenConfig.protocols.find(p2 => (p2.address.toLowerCase() === p1.protocolAddr.toLowerCase()));\n              if (foundProtocol) {\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach(p => {\n              header.push('APR ' + p.name);\n              header.push('SCORE ' + p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp * 1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach(pInfo => {\n            const pData = r.protocolsData.find(p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()));\n            let pRate = '';\n            let pScore = '';\n            if (pData) {\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined') {\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()) {\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n                if (!isNaN(parseFloat(pRate))) {\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))) {\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach(p => {\n          const avgRate = aprAvg[p].sum() / aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach(p => {\n          const avgScore = scoreAvg[p].sum() / scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken = null, availableTokens = null, convertToken = null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address, convertToken, enabledTokens);\n      if (compTokenBalance && compTokenBalance.total) {\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken) {\n      this.idleGovToken = new IdleGovToken(this.props);\n    } else {\n      this.idleGovToken.setProps(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getGovTokensFarming = () => {\n    const output = {};\n    const availableTokens = this.props.availableTokens;\n\n    Object.keys(availableTokens).forEach(token => {\n      const tokenGovTokens = this.getTokenGovTokens(availableTokens[token]);\n      Object.keys(tokenGovTokens).forEach(govToken => {\n        output[govToken] = tokenGovTokens[govToken];\n      });\n    });\n\n    return output;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const currentNetworkId = this.getRequiredNetworkId();\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach(govToken => {\n      const govTokenConfig = govTokens[govToken];\n      const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], govTokenConfig) || [];\n      if (!govTokenConfig.enabled || disabledTokens.includes(tokenConfig.idle.token) || (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(currentNetworkId))) {\n        return;\n      }\n\n      if (govTokenConfig.protocol === 'idle') {\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find(p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()))\n        if (foundProtocol) {\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed, frequency = 'day', mode = 'block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network', 'secondsPerYear']));\n    const multipliers = {\n      'day': {\n        'block': blocksPerYear.div(365.242199),\n        'second': secondsPerYear.div(365.242199)\n      },\n      'week': {\n        'block': blocksPerYear.div(52.1429),\n        'second': secondsPerYear.div(52.1429)\n      },\n      'month': {\n        'block': blocksPerYear.div(12),\n        'second': secondsPerYear.div(12)\n      },\n      'year': {\n        'block': blocksPerYear.div(1),\n        'second': secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()) {\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account, tokenConfig = null, enabledTokens = null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken) {\n        case 'COMP':\n          output = await this.getCompUserDistribution(account, availableTokens);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account, availableTokens);\n          break;\n        default:\n          break;\n      }\n\n      if (output) {\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency) {\n          output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig, enabledTokens = null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n\n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken) {\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig, null, false);\n          break;\n        case 'WMATIC':\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig, null, false);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n          break;\n        default:\n          break;\n      }\n\n      if (govSpeed) {\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode) {\n          govSpeed = this.fixDistributionSpeed(govSpeed, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token, tokenConfig, enabledTokens = null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false) {\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken) {\n        case 'WMATIC':\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation) {\n                const aTokenConfig = tokenConfig.protocols.find(p => (p.name === govTokenConfig.protocol));\n                if (aTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]) {\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getCompAPR(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation) {\n                const cTokenConfig = tokenConfig.protocols.find(p => (p.name === 'compound'));\n                if (cTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]) {\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode) {\n            case 'apr':\n              output = await idleGovToken.getAPR(token, tokenConfig);\n              break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output) {\n                output = this.fixTokenDecimals(output, 18);\n                output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n              }\n              break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n              break;\n            default:\n              break;\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)) {\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address = null, convertToken = 'DAI', enabledTokens = null) => {\n    if (!address) {\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const destTokenConfig = {\n        address: govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token, address);\n\n      if (govTokenBalance) {\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken) {\n          const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance, govTokens[token].decimals, tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total) {\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find(tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()));\n  }\n  getGovTokensUserTotalBalance = async (account = null, availableTokens = null, convertToken = null, checkShowBalance = true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${availableTokens ? JSON.stringify(Object.keys(availableTokens)) : 'null'}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, null, checkShowBalance);\n    if (govTokensUserBalances) {\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce((acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account, tokenConfig) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token, account);\n    if (govTokensAmounts) {\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token, govTokenIndex);\n\n        if (govTokenAddress) {\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig) {\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token, govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'govTokens', [govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress, null);\n  }\n  getGovTokensUserAmounts = async (token, account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'getGovTokensAmounts', [account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account = null, availableTokens = null, convertToken = null, govTokenConfigForced = null, checkShowBalance = false) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token, account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts) {\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token, govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress) {\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()) {\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken) {\n                const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n                if (fromTokenConfig) {\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, govTokenConfig);\n                  } catch (error) {\n\n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount, govTokenConfig.decimals, tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]) {\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee) {\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig = null, account = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig) {\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent', tokenConfig.token, tokenConfig, account),\n      this.loadAssetField('redeemableBalance', tokenConfig.token, tokenConfig, account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance) {\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig, account = null, availableTokens = null, convertToken = null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce((totalTVL, tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()) {\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    }, this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens: {},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL, token, tokenConfig, isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens) {\n          await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken, tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n            ]);\n\n            if (govTokenBalance && govTokenConversionRate) {\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance, govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()) {\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n          const oldTokenConfig = Object.assign({}, tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols) {\n            oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n              if (foundProtocol) {\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply) {\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply, 18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL, token, oldTokenConfig, isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()) {\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint[networkId], false, config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length > 0) {\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey, latestFeed, endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAvailableTokenAddress = (token, strategy) => {\n    const networkId = this.getRequiredNetworkId();\n    const tokenConfig = this.getArrayPath([networkId, strategy, token], availableTokens);\n    return tokenConfig ? tokenConfig.address : null;\n  }\n  getTrancheAggregatedStats = async (tranches = null) => {\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    if (!tranches || !tranches.length) {\n      tranches = Object.keys(this.getGlobalConfig(['tranches']));\n    }\n    await this.asyncForEach(Object.keys(this.props.availableTranches), async (protocol) => {\n      const protocolConfig = this.props.availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(tranches, async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const [\n            trancheApy,\n            tranchePool\n          ] = await Promise.all([\n            this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, null),\n            this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, null)\n          ]);\n\n          avgAPY = avgAPY.plus(this.BNify(trancheApy).times(this.BNify(tranchePool)));\n          totalAUM = totalAUM.plus(this.BNify(tranchePool));\n\n          // console.log('getTrancheAggregatedStats',protocol, token, tranche, trancheApy.toFixed(5), tranchePool.toFixed(5),totalAUM.toFixed(5));\n        });\n      });\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    // console.log('getTrancheAggregatedStats',avgAPY.toFixed(5),totalAUM.toFixed(5));\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats = async (addGovTokens = true, allNetworks = false) => {\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'tvls']);\n    let networkIds = [networkId];\n    if (allNetworks) {\n      networkIds = Object.keys(endpointInfo.endpoint);\n    }\n\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n\n    await this.asyncForEach(networkIds, async (networkId) => {\n      let tvls = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n      if (!tvls) {\n        tvls = await this.getAggregatedStats_chain();\n      }\n\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalTVL)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalTVL));\n      }\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats_chain = async (addGovTokens = true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())) {\n      return {\n        avgAPR: this.BNify(cachedData.avgAPR),\n        avgAPY: this.BNify(cachedData.avgAPY),\n        totalAUM: this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig, tokenAllocation, addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()) {\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent, token, tokenConfig, isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()) {\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens) {\n          await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken, tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n            ]);\n\n            if (tokenBalance && tokenConversionRate) {\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance, govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()) {\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n          const oldTokenConfig = Object.assign({}, tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols) {\n            oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n              if (foundProtocol) {\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig, false, false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()) {\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation, token, oldTokenConfig, isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null) {\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy = null) => {\n\n    if (!this.props.availableStrategies || !this.props.account) {\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy) {\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig, this.props.account);\n\n        if (migrationEnabled) {\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol = null) => {\n    if (!this.props.account) {\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'availableTokens']);\n    if (protocolsTokens) {\n      await this.asyncForEach(Object.keys(protocolsTokens), async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase()) {\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi) {\n          tokenContract = await this.props.initContract(tokenConfig.token, tokenConfig.address, tokenConfig.abi);\n        }\n        if (tokenContract) {\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token, this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)) {\n            tokenBalances[token] = {\n              tokenConfig,\n              balance: tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  getTokenConversionRateField = (token) => {\n    return this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'conversionRateField']);\n  }\n  convertTrancheTokenBalance = async (tokenBalance, tokenConfig, blockNumber='latest') => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n\n    const conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n    if (!conversionRateField) {\n      return tokenBalance;\n    }\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRateUniswap(tokenConfig,blockNumber);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance, token, tokenConfig, isRisk = false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)) {\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig, isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  getAvgAPYStats = async (address, isRisk, startTimestamp = null, endTimestamp = null) => {\n    const apiResults = await this.getTokenApiData(address, isRisk, startTimestamp, endTimestamp, true, 7200);\n    if (apiResults && apiResults.length) {\n      const apr = apiResults.reduce((sum, r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate, 18);\n        return sum.plus(idleRate);\n      }, this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n  getTokenConversionRateUniswap = async (tokenConfig, blockNumber='latest') => {\n\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : tokenConfig.token;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig, blockNumber);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return conversionRate;\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig, isRisk, conversionRateField = null, count = 0) => {\n\n    if (!conversionRateField) {\n      conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n      if (!conversionRateField) {\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, null, 'desc', 1);\n    if (tokenData && tokenData.length) {\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()) {\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField], 18);\n        if (!this.BNify(conversionRate).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : tokenConfig;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n    }\n\n    if (count < 3) {\n      return await this.getTokenConversionRate(tokenConfig, isRisk, conversionRateField, count + 1);\n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config),\n      this.getTokenAllocation(tokenConfig, false, false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation) {\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach(protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)) {\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length > 0 ? tokenData[0].protocolsData.find(p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase())) : null;\n          if (protocolInfo) {\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)) {\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig) {\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()) {\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)) {\n      tokenScore = await this.getTokenScoreApi(tokenConfig, isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'scores']);\n\n    if (!apiInfo.endpoint[networkId]) {\n      return this.BNify(0);\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config);\n\n    if (scores && scores.length > 0) {\n      let tokenData = scores.find(s => s.address.toLowerCase() === tokenConfig.address.toLowerCase());\n      if (tokenData) {\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)) {\n          // Set cached data\n          return this.setCachedData(cachedDataKey, tokenScore);\n          // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now() / 1000);\n          const startTimestamp = parseInt(timestamp) - (60 * 60 * 24);\n          tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, null, true, null, 'DESC');\n\n          const filteredTokenData = tokenData.filter(d => (this.BNify(d.idleScore).gt(0)));\n          if (filteredTokenData.length) {\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig, tokenAllocation = false, addGovTokens = true, showIdleAPR = false) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle) {\n      return tokenAprs;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${networkId}_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    // console.log('getTokenAprs-1',tokenConfig.idle.token,networkId,cachedDataKey,cachedData);\n\n    if (cachedData && (cachedData.avgApr && this.BNify(cachedData.avgApr).gt(0)) && (cachedData.avgApy && this.BNify(cachedData.avgApy).gt(0))) {\n      return {\n        avgApr: this.BNify(cachedData.avgApr),\n        avgApy: this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCall(tokenConfig.idle.token, 'getAvgAPR');\n    if (tokenAprs.avgApr) {\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr, 18);\n    }\n\n    // console.log('getTokenAprs-2',tokenConfig.idle.token,networkId,this.getContractByName(tokenConfig.idle.token)._address,tokenAprs);\n\n    if (tokenAprs.avgApr) {\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = showIdleAPR || this.getGlobalConfig(['govTokens', 'IDLE', 'showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens', 'IDLE', 'enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR) {\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token, tokenConfig);\n        if (idleAPR) {\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs-3',tokenConfig.idle.token,networkId,tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()) {\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()) {\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value, decimals = 3, maxPrecision = 5, minPrecision = 0) => {\n\n    const isNegative = parseFloat(value) < 0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\", \"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1, maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value >= 1000) {\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2, decimals) : null;\n      newValue = parseInt(newValue).toString() + (decimalPart ? '.' + decimalPart : '');\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue >= 1 && (newValue.length - 1) > maxPrecision) {\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length - 1) < minPrecision) {\n      const difference = minPrecision - (newValue.length - 1);\n      const append = this.BNify(value).abs().toString().replace('.', '').substr((newValue.length - 1), difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative) {\n      newValue = '-' + newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance, label, decimals, maxLen, highlightedDecimals) {\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.', '').length;\n    if (numLen > maxLen) {\n      decimals = Math.max(0, decimals - (numLen - maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance % 1).toPrecision(decimals).substr(2, decimals);;\n    decPart = (decPart + (\"0\".repeat(decimals))).substr(0, decimals);\n\n    if (highlightedDecimals) {\n      const highlightedDec = decPart.substr(0, highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? (<>{highlightedIntPart}<small style={{ fontSize: '70%' }}>{decPart}</small> <Text.span fontSize={[1, 2]}>{label}</Text.span></>) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? (<>{intPart}<small>.{decPart}</small>{label !== '%' ? ' ' : null}{label ? <Text.span fontSize={[1, 2]}>{label}</Text.span> : null}</>) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                return (\n                  <ImageButton\n                    caption={token}\n                    imageSrc={imageSrc}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.buyText ? this.props.buyText : (this.props.showInline && this.props.buyToken ? ( Object.keys(this.state.availableMethods).length>0 ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `Ops... you don't have any ${this.props.buyToken} in your wallet.` ) : `How do you prefer to buy ${this.state.selectedToken}?`)\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  width={1}\n                  maxWidth={this.props.showInline ? '31em' : 'initial'}\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={imageSrc} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver: false\n  }\n\n  setMouseOver(mouseOver) {\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p: 0,\n      border: 1,\n      boxShadow: 1,\n      borderRadius: 2,\n      borderColor: null,\n      position: 'relative',\n      minHeight: 'initial',\n      backgroundColor: 'cardBg'\n    };\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length) {\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    if (isActive || (isInteractive && this.state.mouseOver)) {\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]) {\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length > 0 &&\n          <Flex\n            mt={[3, 4]}\n            ml={[3, 4]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            {...this.props.titleParentProps}\n          >\n            <Heading.h4\n              fontWeight={4}\n              fontSize={[2, 3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Heading.h4>\n            {\n              this.props.description && this.props.description.length > 0 &&\n              <Tooltip\n                placement={'top'}\n                message={this.props.description}\n              >\n                <Icon\n                  ml={2}\n                  name={\"Info\"}\n                  size={'1em'}\n                  color={'cellTitle'}\n                />\n              </Tooltip>\n            }\n\n          </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        const CustomComponent = fieldInfo.fieldComponent;\n\n                        let fieldProps = fieldInfo.props;\n\n                        // Merge with funcProps\n                        if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                          fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                        }\n\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            {\n                              CustomComponent ? (\n                                <CustomComponent\n                                  {...this.props}\n                                  {...fieldProps}\n                                />\n                              ) : (\n                                <FieldComponent\n                                  {...this.props}\n                                  fieldInfo={fieldInfo}\n                                  colProps={colInfo.props}\n                                  parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                />\n                              )\n                            }\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport { Flex, Link, Icon, Text } from \"rimble-ui\";\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {\n    page:1,\n    rowsPerPage:5,\n    totalPages:null,\n    processedRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.processRows();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const rowsChanged = JSON.stringify(prevProps.rows) !== JSON.stringify(this.props.rows);\n\n    if (rowsChanged){\n      this.setState({\n        page:1,\n      },()=>{\n        this.processRows();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processRows();\n    }\n  }\n\n  processRows = (page=null) => {\n    page = page ? page : this.state.page;\n\n    const totalRows = this.props.rows.length;\n    const totalPages = Math.ceil(totalRows/this.state.rowsPerPage);\n    \n    let processedRows = [];\n    if (this.props.paginationEnabled){\n      this.props.rows.forEach((row, i) => {\n        if (i>=((page-1)*this.state.rowsPerPage) && i<((page-1)*this.state.rowsPerPage)+this.state.rowsPerPage) {\n          processedRows.push(row);\n        }\n      });\n    } else {\n      processedRows = this.props.rows;\n    }\n\n    this.setState({\n      totalPages,\n      processedRows\n    });\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processRows(page);\n    this.setState({\n      page\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.state.processedRows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n        {\n          this.props.paginationEnabled && (\n            <Flex\n              height={'50px'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n              id={'transactions-list-pagination'}\n            >\n              <Flex mr={3}>\n                <Link mr={1} onClick={ e => this.prevPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowLeft'}\n                    size={'2em'}\n                    color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n                <Link onClick={ e => this.nextPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowRight'}\n                    size={'2em'}\n                    color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n              </Flex>\n              <Flex alignItems={'center'}>\n                <Text \n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                >\n                  Page {this.state.page} of {this.state.totalPages}\n                </Text>\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n\n      const txSucceeded = tx && tx.status === 'success';\n\n      // Send Google Analytics event\n      if (tx){\n        const eventData = {\n          eventLabel: tx.status,\n          eventCategory: `CurveDeposit`,\n          eventValue: inputValue.toFixed(),\n          eventAction: this.props.tokenConfig.token,\n        };\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    let params = null;\n\n    // Check contract approved without permit\n    let contractName = this.props.contractInfo.name;\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n      contractName = params.contractName || this.props.contractInfo.name;\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    \n    const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n    return contractApproved;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const approveEnabled = this.props.approveEnabled !== false;\n\n    if (this.props.contractInfo){\n      await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    }\n    // console.log('initContract',this.props.contractInfo);\n\n    const contractApproved = await this.checkContractApproved();\n\n    this.setState({\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.label || this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport { Flex, Text, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const stakingEnabled = this.state.userHasAvailableFunds && stakingRewards.length>0;\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        maxWidth={['100%','45em']}\n      >\n        {\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            borderBottom={`1px solid ${trancheDetails.color.hex}`}\n          > \n            <Flex\n              flexDirection={'row'}\n            >\n              <Image\n                mr={2}\n                src={trancheDetails.image}\n                size={this.props.isMobile ? '1.6em' : '1.8em'}\n              />\n              <Text\n                fontWeight={4}\n                fontSize={[3,4]}\n                color={'copyColor'}\n              >\n                {trancheDetails.name}\n              </Text>\n            </Flex>\n            <Flex\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              {\n                this.props.tokenConfig.experimental && (\n                  <Flex\n                    px={2}\n                    py={1}\n                    borderRadius={2}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                    backgroundColor={'#8500ff'}\n                  >\n                    <Text\n                      fontSize={1}\n                      fontWeight={3}\n                      color={'white'}\n                    >\n                      Experimental\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Auto-Farming\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Staking Rewards\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                APY\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApy',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              {\n                stakingRewards.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Text\n                      fontSize={1}\n                      fontWeight={2}\n                      lineHeight={'1'}\n                      color={'cellText'}\n                    >\n                      +\n                    </Text>\n                    <TrancheField\n                      {...this.props}\n                      fieldInfo={{\n                        name:'trancheIDLELastHarvest',\n                        props:{\n                          decimals:4,\n                          fontSize:1,\n                          fontWeight:2,\n                          lineHeight:'1',\n                          color:'cellText'\n                        }\n                      }}\n                      token={this.props.selectedToken}\n                      tranche={this.props.selectedTranche}\n                      tokenConfig={this.props.tokenConfig}\n                      protocol={this.props.selectedProtocol}\n                      trancheConfig={this.props.trancheConfig}\n                    />\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n          {\n            //(this.functionsUtil.BNify(this.state.stakedBalance).gt(0) || this.functionsUtil.BNify(this.state.trancheBalance).gt(0)) && (\n            this.props.showSelectButton && (\n              <Flex\n                py={2}\n                style={{\n                  flexBasis:'0',\n                  flex:'1 1 0px',\n                  flexWrap:'wrap',\n                  borderBottom:`1px solid ${this.props.theme.colors.divider}`\n                }}\n                alignItems={'flex-start'}\n                justifyContent={'flex-start'}\n              >\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Deposited\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheDeposited',\n                      props:{\n                        decimals:4,\n                        fontWeight:3,\n                        fontSize:[2,3],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Staked\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:4,\n                        fontWeight:3,\n                        fontSize:[2,3],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Limit Cap\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheLimit',\n                      props:{\n                        decimals:4,\n                        fontWeight:3,\n                        fontSize:[2,3],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n              </Flex>\n            )\n          }\n          {\n            this.props.showSelectButton ? (\n                <Button\n                  mt={3}\n                  width={1}\n                  contrastColor={'cardBg'}\n                  icon={trancheDetails.icon}\n                  mainColor={trancheDetails.color.hex}\n                  onClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </Button>\n            ) : this.state.balanceProp && this.state.tokenConfig ? (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <Flex\n                  mt={3}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Deposit'}\n                    iconColor={'deposit'}\n                    icon={'ArrowDownward'}\n                    iconBgColor={'#ced6ff'}\n                    isActive={ this.state.selectedAction === 'deposit' }\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  {\n                    this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) ? (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isActive={ this.state.selectedAction === 'unstake' }\n                        handleClick={ e => this.setSelectedAction('unstake') }\n                      />\n                    ) : (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        isDisabled={ !stakingEnabled }\n                        isActive={ this.state.selectedAction === 'stake' }\n                        handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('stake') : null }\n                      />\n                    )\n                  }\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Withdraw'}\n                    icon={'ArrowUpward'}\n                    iconColor={'redeem'}\n                    iconBgColor={'#ceeff6'}\n                    isDisabled={ !this.state.userHasAvailableFunds }\n                    isActive={ this.state.selectedAction === 'withdraw' }\n                    handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('withdraw') : null }\n                  />\n                </Flex>\n                {\n                  this.state.infoText && (\n                    <IconBox\n                      cardProps={{\n                        p:2,\n                        mt:3,\n                        width:1,\n                      }}\n                      isActive={true}\n                      isInteractive={false}\n                      iconProps={{\n                        size:'1.2em',\n                        color:'flashColor'\n                      }}\n                      textProps={{\n                        fontWeight:500,\n                        color:'flashColor',\n                        textAlign:'center',\n                        fontSize:['13px','15px']\n                      }}\n                      icon={'LightbulbOutline'}\n                      text={this.state.infoText}\n                    />\n                  )\n                }\n                <Flex\n                  mt={2}\n                >\n                  <SendTxWithBalance\n                    error={null}\n                    {...this.props}\n                    buttonProps={{\n                      width:[1,0.45]\n                    }}\n                    permitEnabled={false}\n                    tokenConfig={this.state.tokenConfig}\n                    tokenBalance={this.state.balanceProp}\n                    contractInfo={this.state.contractInfo}\n                    checkLimit={this.checkLimit.bind(this)}\n                    approveEnabled={this.state.approveEnabled}\n                    buttonDisabled={this.state.buttonDisabled}\n                    callback={this.transactionSucceeded.bind(this)}\n                    approveDescription={this.state.approveDescription}\n                    changeInputCallback={this.changeInputCallback.bind(this)}\n                    contractApproved={this.contractApprovedCallback.bind(this)}\n                    getTransactionParams={this.getTransactionParams.bind(this)}\n                    action={this.functionsUtil.capitalize(this.state.selectedAction)}\n                  >\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <BuyModal\n                        {...this.props}\n                        showInline={true}\n                        availableMethods={[]}\n                        buyToken={this.props.selectedToken}\n                      />\n                    </Flex>\n                  </SendTxWithBalance>\n                </Flex>\n              </Flex>\n            ) : !this.props.account ? (\n              <ConnectBox\n                {...this.props}\n              />\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TrancheHarvests extends Component {\n\n  state = {\n    rows:[]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    let rows = [];\n    const distributions = await this.functionsUtil.getTrancheStakingRewardsDistributions(this.props.tokenConfig,this.props.trancheConfig);\n\n    await this.functionsUtil.asyncForEach(Object.keys(distributions), async (token) => {\n      const txs = distributions[token];\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n      await this.functionsUtil.asyncForEach(txs, async (tx) => {\n        const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token}.svg`;\n        const blockInfo = await this.functionsUtil.getBlockInfo(tx.blockNumber);\n        const timeStamp = blockInfo.timestamp*1000;\n        const date = this.functionsUtil.strToMoment(timeStamp).format('YYYY/MM/DD HH:mm');\n        const amount = this.functionsUtil.fixTokenDecimals(tx.returnValues.amount||tx.returnValues.value,tokenConfig.decimals);\n        // console.log(token,date,amount.toString());\n        rows.push({\n          date,\n          token,\n          timeStamp,\n          tokenIcon,\n          hash:tx.transactionHash,\n          amount:this.functionsUtil.formatMoney(amount.toString(),8),\n          shortHash:this.functionsUtil.shortenHash(tx.transactionHash,10,6)\n        });\n      });\n    });\n\n    rows = rows.sort((a,b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    return this.setState({rows});\n  }\n\n  render() {\n    return this.state.rows.length>0 ? (\n      <Flex\n        mb={[0,4]}\n        width={1}\n        flexDirection={'column'}\n        id={'funds-overview-container'}\n      >\n        <Title my={[3,4]}>Staking Rewards Distribution</Title>\n        <CustomList\n          rows={this.state.rows}\n          paginationEnabled={true}\n          handleClick={ props => this.functionsUtil.openWindow(this.functionsUtil.getEtherscanTransactionUrl(props.row.hash)) }\n          cols={[\n            {\n              mobile:false,\n              title:'HASH',\n              props:{\n                width:[0.25,0.25]\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['shortHash'],\n                }\n              ]\n            },\n            {\n              title:'DATE',\n              props:{\n                width:[0.35,0.25],\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['date'],\n                }\n              ]\n            },\n            {\n              title:'TOKEN',\n              props:{\n                width:[0.35,0.25]\n              },\n              fields:[\n                {\n                  type:'image',\n                  props:{\n                    mr:2,\n                    size:this.props.isMobile ? '1.2em' : '1.8em'\n                  },\n                  path:['tokenIcon']\n                },\n                {\n                  type:'text',\n                  path:['token'],\n                }\n              ]\n            },\n            {\n              title:'AMOUNT',\n              props:{\n                width:[0.30,0.25],\n                justifyContent:['center','flex-start']\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['amount'],\n                  props:{\n                    decimals: this.props.isMobile ? 4 : 8\n                  }\n                },\n              ]\n            }\n          ]}\n          {...this.props}\n        />\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default TrancheHarvests;\n","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport { Flex, Text, Image, Box, Icon } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\n// import StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    actionLabel:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakeEnabled:true,\n    stakedBalance:null,\n    unstakeEnabled:true,\n    trancheBalance:null,\n    stakingEnabled:true,\n    approveEnabled:null,\n    buttonDisabled:false,\n    selectedTranche:null,\n    availableTranches:null,\n    approveDescription:null,\n    selectedAction:'deposit',\n    selectedTrancheOption:null,\n    selectedStakeAction:'stake',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const selectedStakeActionChanged = prevState.selectedStakeAction !== this.state.selectedStakeAction;\n    if (selectedActionChanged || selectedStakeActionChanged){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    const availableTranches = Object.values(this.functionsUtil.getGlobalConfig(['tranches'])).map( trancheInfo => ({\n      value:trancheInfo.type,\n      icon:trancheInfo.image,\n      label:trancheInfo.name,\n      tranche:trancheInfo.type,\n      trancheConfig:this.props.tokenConfig[trancheInfo.type]\n    }));\n\n    const selectedTrancheOption = availableTranches.find( trancheInfo => trancheInfo.value === this.props.selectedTranche );\n    const selectedTranche = selectedTrancheOption.value;\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    let stakingEnabled = stakingRewards.length>0;\n    const stakeEnabled = stakingEnabled && userHasAvailableFunds;\n    const unstakeEnabled = stakedBalance && this.functionsUtil.BNify(stakedBalance).gt(0);\n\n    if (!stakingEnabled && unstakeEnabled){\n      stakingEnabled = true;\n    }\n\n    let selectedStakeAction = 'stake';\n    if (!stakeEnabled && unstakeEnabled){\n      selectedStakeAction = 'unstake';\n    }\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      stakeEnabled,\n      tranchePrice,\n      stakedBalance,\n      stakingEnabled,\n      trancheBalance,\n      unstakeEnabled,\n      selectedTranche,\n      availableTranches,\n      selectedStakeAction,\n      selectedTrancheOption,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    let actionLabel = this.state.selectedAction;\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        actionLabel = this.state.selectedStakeAction;\n        switch (this.state.selectedStakeAction){\n          case 'stake':\n            approveEnabled = true;\n            tokenConfig = this.props.trancheConfig;\n            balanceProp = this.state.trancheBalance;\n            contractInfo = this.props.trancheConfig.CDORewards;\n          break;\n          case 'unstake':\n            approveEnabled = false;\n            tokenConfig = this.props.trancheConfig;\n            contractInfo = this.props.trancheConfig.CDORewards;\n            balanceProp = this.state.stakedBalance;\n            if (!this.state.canUnstake){\n              buttonDisabled = true;\n              infoText = trancheDetails.description.cantUnstake;\n            }\n          break;\n          default:\n          break;\n        }\n        if (this.state.stakingEnabled){\n          infoText = trancheDetails.description[this.state.selectedStakeAction];\n        } else {\n          infoText = null;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = tokenConfig ? `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.` : null;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      actionLabel,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      if (this.state.selectedAction === 'stake'){\n        methodName = this.props.trancheConfig.functions[this.state.selectedStakeAction];\n      }\n\n      methodParams = [amount];\n    }\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    if (trancheLimit.gt(0)){\n      const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n      if (poolSize.plus(amount).gt(trancheLimit)){\n        this.setState({\n          activeModal:'limit'\n        })\n        return false;\n      }\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        if (this.state.selectedAction === 'deposit' || this.state.selectedStakeAction === 'stake'){\n          this.setState({\n            activeModal:'share'\n          });\n        }\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setStakeAction(selectedStakeAction){\n    this.setState({\n      selectedStakeAction\n    });\n  }\n\n  selectTranche(trancheType){\n    // console.log('selectTranche',trancheType);\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',trancheType]);\n    if (trancheDetails){\n      this.props.selectTrancheType(trancheDetails.route);\n    }\n  }\n\n  render() {\n\n    const isStake = this.state.selectedAction === 'stake';\n    const isDeposit = this.state.selectedAction === 'deposit';\n    const isWithdraw = this.state.selectedAction === 'withdraw';\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n\n    const CustomOptionValue = props => {\n      const selectedOption = props.options.find( option => option.value === props.value );\n      if (!selectedOption){\n        return null;\n      }\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={selectedOption.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.options.find( option => option.value === props.selectProps.value.value );\n      // console.log('CustomValueContainer',props.selectProps.options,props.selectProps.value,selectProps);\n      if (!selectProps){\n        return null;\n      }\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <Image\n              mr={2}\n              src={selectProps.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {selectProps.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTranches ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tranches...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n              maxWidth={['100%','42em']}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Tranche:\n                </Text>\n                <GenericSelector\n                  {...this.props}\n                  name={'tranches'}\n                  isSearchable={false}\n                  CustomOptionValue={CustomOptionValue}\n                  options={this.state.availableTranches}\n                  onChange={this.selectTranche.bind(this)}\n                  CustomValueContainer={CustomValueContainer}\n                  defaultValue={this.state.selectedTrancheOption}\n                />\n              </Box>\n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Tranche details:\n                </Text>\n                <DashboardCard\n                  cardProps={{\n                    py:1,\n                    px:3,\n                    mb:2\n                  }}\n                  isActive={false}\n                >\n                  <Flex\n                    mt={1}\n                    mb={1}\n                    width={1}\n                    style={{\n                      flexBasis:'0',\n                      flex:'1 1 0px',\n                      flexWrap:'wrap'\n                    }}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Protocol\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Token\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Pool Size\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tranchePool',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Auto-Farming\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'autoFarming',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Staking Rewards\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'stakingRewards',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        APY\n                      </Text>\n                      <Flex\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheApy',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        {\n                          stakingRewards.length>0 && (\n                            <Flex\n                              width={1}\n                              flexDirection={'row'}\n                              alignItems={'flex-start'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={2}\n                                lineHeight={'1'}\n                                color={'cellText'}\n                              >\n                                +\n                              </Text>\n                              <TrancheField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'trancheIDLELastHarvest',\n                                  props:{\n                                    decimals:4,\n                                    fontSize:1,\n                                    fontWeight:2,\n                                    lineHeight:'1',\n                                    color:'cellText'\n                                  }\n                                }}\n                                token={this.props.selectedToken}\n                                tranche={this.props.selectedTranche}\n                                tokenConfig={this.props.tokenConfig}\n                                protocol={this.props.selectedProtocol}\n                                trancheConfig={this.props.trancheConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Action:\n                </Text>\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={['column','row']}\n                  justifyContent={'space-between'}\n                >\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isDeposit ? 2 : 0\n                    }}\n                    caption={'Deposit'}\n                    width={[1,'32%']}\n                    imageSrc={'images/deposit.png'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isDeposit}\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isStake ? 2 : 0,\n                      disabled:!this.state.stakingEnabled\n                    }}\n                    width={[1,'32%']}\n                    caption={'Stake / Unstake'}\n                    imageSrc={'images/mint.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isStake}\n                    handleClick={ e => this.setSelectedAction('stake') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isWithdraw ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isWithdraw}\n                    handleClick={ e => this.setSelectedAction('withdraw') }\n                  />\n                </Flex>\n              </Box>\n              {\n                isStake && this.state.stakingEnabled && (\n                  <Box\n                    mb={2}\n                    width={1}\n                  >\n                    <Text mb={1}>\n                      Choose stake action:\n                    </Text>\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        handleClick={ e => this.setStakeAction('stake') }\n                        isActive={ this.state.selectedStakeAction === 'stake' }\n                      />\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isDisabled={ !this.state.unstakeEnabled }\n                        isActive={ this.state.selectedStakeAction === 'unstake' }\n                        handleClick={ e => this.state.unstakeEnabled ? this.setStakeAction('unstake') : null }\n                      />\n                    </Flex>\n                  </Box>\n                )\n              }\n              {\n                this.state.infoText && this.props.account && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:3,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.2em',\n                      color:'flashColor'\n                    }}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    icon={'LightbulbOutline'}\n                    text={this.state.infoText}\n                  />\n                )\n              }\n              <Flex\n                width={1}\n                alignItems={'stretch'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  isStake && !this.state.stakingEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        mt: 3\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'DoNotDisturb'}\n                        />\n                        <Text\n                          mt={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Staking is not enabled for this Tranche.\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      buttonProps={{\n                        width:[1,0.45]\n                      }}\n                      permitEnabled={false}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      checkLimit={this.checkLimit.bind(this)}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      contractApproved={this.contractApprovedCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.functionsUtil.capitalize(this.state.actionLabel)}\n                    >\n                      {\n                        isDeposit ? (\n                          <Flex\n                            width={1}\n                            alignItems={'stretch'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <BuyModal\n                              {...this.props}\n                              showInline={true}\n                              availableMethods={[]}\n                              buyToken={this.props.selectedToken}\n                            />\n                          </Flex>\n                        ) : isStake ? (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any <strong>{this.state.tokenConfig.label}</strong> token to {this.state.selectedStakeAction}.\n                              </Text>\n                            </Flex>\n                          </DashboardCard>\n                        ) : isWithdraw && (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.selectedToken} to withdraw.<br />If you have staked your <strong>{this.state.tokenConfig.label}</strong> tokens please unstake them to be able to withdraw your {this.props.selectedToken}.\n                            </Text>\n                            </Flex>\n                          </DashboardCard>\n                        )\n                      }\n                    </SendTxWithBalance>\n                  )\n                }\n              </Flex>\n              <LimitReachedModal\n                {...this.props}\n                limit={trancheLimit}\n                closeModal={this.resetModal}\n                isOpen={this.state.activeModal === 'limit'}\n              />\n              <ShareModal\n                confettiEnabled={true}\n                icon={`images/medal.svg`}\n                title={`Congratulations!`}\n                account={this.props.account}\n                closeModal={this.resetModal}\n                tokenName={this.props.selectedToken}\n                isOpen={this.state.activeModal === 'share'}\n                text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n                tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    const tokensData = {};\n    let tokensBalance = {};\n    let lastTxTimestamp = null;\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(filteredTxs,async (tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n\n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const tranche = tx.tranche;\n          const protocol = tx.protocol;\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n          if (!tranchePrice.isNaN() && !trancheTokens.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              tranche,\n              protocol,\n              timeStamp,\n              tokenAmount,\n              tranchePrice,\n              trancheTokens\n            });\n          }\n\n          // Get updated tranches prices\n          await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n            if (tokensBalance[token].length){\n              const tokenBalanceConfig = tokensBalance[token][0];\n              const tokenConfig = this.props.availableTranches[tokenBalanceConfig.protocol.toLowerCase()][token];\n              const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n              const [\n                tokenConversionRate,\n                tranchePriceAA,\n                tranchePriceBB\n              ] = await Promise.all([\n                conversionRateField ? this.functionsUtil.getTokenConversionRateUniswap(tokenConfig, tx.blockNumber) : null,\n                this.functionsUtil.genericContractCallCached(tokenConfig.CDO.name, 'virtualPrice', [tokenConfig.AA.address], {}, tx.blockNumber),\n                this.functionsUtil.genericContractCallCached(tokenConfig.CDO.name, 'virtualPrice', [tokenConfig.BB.address], {}, tx.blockNumber)\n              ]);\n              if (!tokensData[token]){\n                tokensData[token] = [];\n              }\n\n              const tokenDataAA = {\n                timeStamp,\n                tranche:'AA',\n                tranchePrice:this.functionsUtil.BNify(tranchePriceAA)\n              };\n              const tokenDataBB = {\n                timeStamp,\n                tranche:'BB',\n                tranchePrice:this.functionsUtil.BNify(tranchePriceBB)\n              };\n              if (conversionRateField){\n                tokenDataAA[conversionRateField] = tokenConversionRate;\n                tokenDataBB[conversionRateField] = tokenConversionRate;\n              }\n\n              if (timeStamp>lastTxTimestamp){\n                lastTxTimestamp = timeStamp;\n              }\n              // console.log(token,tokenConfig.CDO.name,tokenBalanceConfig.protocol,tokenBalanceConfig.tranche,tx.blockNumber,tranchePrice,tokenDataAA);\n\n              tokensData[token].push(tokenDataAA);\n              tokensData[token].push(tokenDataBB);\n\n              tokensData[token] = tokensData[token].sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1));\n            }\n          });\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    let lastTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 00:00:00','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n\n    // Collect tranche prices and conversion rates for the current timestamp\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      if (tokensBalance[token].length){\n        const tokenBalanceConfig = tokensBalance[token][0];\n        const tokenConfig = this.props.availableTranches[tokenBalanceConfig.protocol.toLowerCase()][token];\n        const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n        const [\n          tokenConversionRate,\n          tranchePriceAA,\n          tranchePriceBB\n        ] = await Promise.all([\n          conversionRateField ? this.functionsUtil.getTokenConversionRateUniswap(tokenConfig) : null,\n          this.functionsUtil.genericContractCallCached(tokenConfig.CDO.name, 'virtualPrice', [tokenConfig.AA.address]),\n          this.functionsUtil.genericContractCallCached(tokenConfig.CDO.name, 'virtualPrice', [tokenConfig.BB.address])\n        ]);\n        if (!tokensData[token]){\n          tokensData[token] = [];\n        }\n\n        const tokenDataAA = {\n          tranche:'AA',\n          timeStamp:lastTimestamp,\n          tranchePrice:this.functionsUtil.BNify(tranchePriceAA)\n        };\n        const tokenDataBB = {\n          tranche:'BB',\n          timeStamp:lastTimestamp,\n          tranchePrice:this.functionsUtil.BNify(tranchePriceBB)\n        };\n        if (conversionRateField){\n          tokenDataAA[conversionRateField] = tokenConversionRate;\n          tokenDataBB[conversionRateField] = tokenConversionRate;\n        }\n\n        tokensData[token].push(tokenDataAA);\n        tokensData[token].push(tokenDataBB);\n\n        tokensData[token] = tokensData[token].sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1));\n      }\n    });\n\n    // console.log('tokensData',tokensData);\n    // console.log('transactions',transactions);\n    // console.log('tokensBalance',tokensBalance);\n\n    const tranches = this.functionsUtil.getGlobalConfig(['tranches']);\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n\n      const foundBalances = {};\n      const tokensBalances = {};\n\n      // Shift timestamp to end of the day\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      timeStamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n      \n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach( token => {\n\n        if (!prevBalances[token]){\n          prevBalances[token] = {};\n        }\n        if (!foundBalances[token]){\n          foundBalances[token] = {};\n        }\n        if (!tokensBalances[token]){\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = {};\n        }\n\n        Object.keys(tranches).forEach( tranche => {\n\n          // Skip tranche if no balance\n          const filteredTrancheBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche));\n          if (!filteredTrancheBalances || !filteredTrancheBalances.length) {\n            return;\n          }\n\n          let lastTokenData = null;\n          const lastTokenDataUnfiltered = tokensData[token] ? Object.values(tokensData[token].filter( tx => tx.tranche===tranche )).pop() : null;\n          let filteredTokenData = tokensData[token] ? tokensData[token].filter(tx => (tx.tranche===tranche && tx.timeStamp>=prevTimestamp && tx.timeStamp<=timeStamp)) : null;\n          if (filteredTokenData && filteredTokenData.length){\n            lastTokenData = filteredTokenData.pop();\n          } else {\n            lastTokenData = lastTokenDataUnfiltered;\n            if (lastTokenData && lastTokenData.timeStamp>timeStamp){\n              lastTokenData = null;\n            }\n          }\n\n          if (!trancheTokenBalance[token][tranche]){\n            trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n          }\n\n          if (!prevBalances[token][tranche]){\n            prevBalances[token][tranche] = null;\n          }\n\n          if (!foundBalances[token][tranche]){\n            foundBalances[token][tranche] = null;\n          }\n\n          const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'decimals']);\n          let filteredBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche && tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n          \n          if (!filteredBalances.length){\n            if (prevBalances && prevBalances[token] && prevBalances[token][tranche]){\n              filteredBalances = prevBalances[token][tranche];\n              const lastFilteredTx = Object.values(filteredBalances).pop();\n              const currentBalance = parseFloat(lastFilteredTx.balance);\n\n              // Take tranchePrice from API and calculate new balance\n              if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n                const trancheTokens = trancheTokenBalance[token][tranche];\n                const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n                let newBalance = trancheTokens.times(tranchePrice);\n\n                // Set new balance and tranchePrice\n                lastFilteredTx.balance = newBalance;\n                lastFilteredTx.tranchePrice = tranchePrice;\n                filteredBalances = [lastFilteredTx];\n\n                // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),token,trancheTokens.toFixed(5),tranchePrice.toFixed(5),newBalance.toFixed(5),filteredBalances);\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tranchePrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),timeStamp,token,tranche,lastTokenData,(lastTokenData ? this.functionsUtil.strToMoment(lastTokenData.timeStamp*1000).format('DD/MM/YYYY HH:mm:ss') : null),(lastTokenData ? lastTokenData.tranchePrice.toFixed(5) : null ));\n            filteredBalances.forEach(tx => {\n              switch (tx.action){\n                case 'Deposit':\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].plus(tx.trancheTokens);\n                break;\n                default:\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].minus(tx.trancheTokens);\n                  if (trancheTokenBalance[token][tranche].lt(0)){\n                    trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n                  }\n                break;\n              }\n            });\n          }\n\n          const lastTx = Object.values(filteredBalances).pop();\n          let lastTxBalance = trancheTokenBalance[token][tranche].times(lastTx.tranchePrice);\n          if (lastTxBalance.gt(0)){\n            // Convert token balance to USD\n            const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n            if (!this.props.chartToken && conversionRateField){\n              const tokenUsdConversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n              if (tokenUsdConversionRate && this.functionsUtil.BNify(tokenUsdConversionRate).gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n              \n            aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n            tokensBalances[token] = tokensBalances[token].plus(lastTxBalance);\n\n            // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),token,tranche,trancheTokenBalance[token][tranche].toFixed(5),lastTx.tranchePrice.toFixed(5),lastTxBalance.toFixed(5));\n          }\n\n          foundBalances[token][tranche] = filteredBalances;\n        });\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n    const colWidth = stakingEnabled ? 1/6 : 1/5;\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            {\n              stakingEnabled && (\n                <Flex\n                  mb={[2,0]}\n                  width={[1,colWidth]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'flex-start'}\n                >\n                  <Title\n                    mb={2}\n                    fontSize={[3,4]}\n                    component={Heading.h3}\n                  >\n                    Staked Amount\n                  </Title>\n                  <TrancheField\n                    {...this.props}\n                    addTokenName={false}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:7,\n                        fontWeight:300,\n                        maxPrecision:8,\n                        fontSize:['1.8em','1.9em'],\n                        color:this.props.theme.colors.counter,\n                        flexProps:{\n                          justifyContent:'center'\n                        }\n                      }\n                    }}\n                  />\n                </Flex>\n              )\n            }\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import Title from '../Title/Title';\nimport { Button, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      stakingRewards,\n      trancheBalance,\n      rewardTokensInfo,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',rewardToken.toUpperCase()]);\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.lastAmount : null;\n      const tokenAmount = !this.functionsUtil.BNify(stakingRewards[rewardToken]).isNaN() ? this.functionsUtil.BNify(stakingRewards[rewardToken]) : this.functionsUtil.BNify(0);\n      if (trancheBalanceInfo && distributionSpeed){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+` ${rewardToken} (last harvest)` : this.functionsUtil.BNify(0).toFixed(8)\n      });\n    });\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:Button,\n                      componentProps:{\n                        style:{\n                          width:'100%'\n                        },\n                        value:'Claim',\n                        borderRadius:4,\n                        mainColor:'redeem',\n                        size:this.props.isMobile ? 'small' : 'medium'\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      methodName:'claim',\n                      callback:this.claimCallback.bind(this),\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport TrancheHarvests from '../TrancheHarvests/TrancheHarvests';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TrancheDepositRedeem from '../TrancheDepositRedeem/TrancheDepositRedeem';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    userHasFunds:false,\n    stakingEnabled:false,\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const trancheTypeChanged = prevProps.trancheType !== this.props.trancheType;\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged || tokenConfigChanged || trancheTypeChanged){\n      this.loadData();\n    }\n  }\n\n  loadData(){\n    const componentLoaded = true;\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n    const userHasFunds = this.props.portfolio && this.props.portfolio.tranchesBalance.find( balanceInfo => balanceInfo.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && balanceInfo.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || balanceInfo.tranche.toLowerCase() === this.props.trancheType.toLowerCase()) ) ? true : false;\n\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n\n    // console.log('loadData',this.props.tokenConfig,this.props.trancheType,this.props.tokenConfig[this.props.trancheType].CDORewards,stakingRewards,stakingRewardsEnabled,stakingEnabled);\n\n    this.setState({\n      transactions,\n      userHasFunds,\n      stakingEnabled,\n      componentLoaded\n    });\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,(1/filteredTranchesTypes.length)-0.02]}\n                  >\n                    {\n                      this.props.trancheType ? (\n                        <TrancheDepositRedeem\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      ) : (\n                        <TrancheDetails\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      )\n                    }\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <Flex\n              width={1}\n              mb={[0,4]}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          this.state.componentLoaded && this.state.stakingEnabled && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.props.trancheType && (\n            <TrancheHarvests\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n          )\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              width={1}\n              mb={[3,4]}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              const tranche = this.props.trancheType || null;\n              return Object.keys(protocolConfig).map( token => (\n                <TableRow\n                  {...this.props}\n                  token={token}\n                  tranche={tranche}\n                  protocol={protocol}\n                  rowId={`tranche-col-${protocol}`}\n                  tokenConfig={protocolConfig[token]}\n                  cardId={`tranche-card-${protocol}`}\n                  key={`tranche-${protocol}-${token}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                />\n              ))\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","import React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheField from \"../TrancheField/TrancheField\";\nimport { Box, Flex, Icon, Text, Image } from \"rimble-ui\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass Base extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const strategyInfo = this.functionsUtil.getGlobalConfig([\n      \"strategies\",\n      \"tranches\"\n    ]);\n\n    const tokenConfig =\n      this.props.tokenConfig ||\n      this.props.availableTranches[strategyInfo.protocol][strategyInfo.token];\n\n    return (\n      <Box\n        my={[3, 0]}\n        boxShadow={1}\n        borderRadius={2}\n        width={[1, 0.49]}\n      >\n        <Flex\n          p={0}\n          mx={0}\n          border={\"0\"}\n          height={\"100%\"}\n          borderRadius={2}\n          overflow={\"hidden\"}\n          flexDirection={\"column\"}\n          backgroundColor={\"cardBg\"}\n          borderColor={\"transparent\"}\n          justifyContent={[\"center\",trancheDetails.type === \"AA\" ? \"left\" : \"right\"]}\n        >\n          <Box\n            width={1}\n            borderBottom={`1px solid ${this.props.theme.colors.divider2}`}\n          >\n            <Flex\n              pb={2}\n              mx={2}\n              my={3}\n              flexDirection={\"column\"}\n            >\n              <Flex mt={3} alignItems={\"center\"}>\n                <Image\n                  ml={3}\n                  mr={1}\n                  alt={trancheDetails.name}\n                  src={trancheDetails.image}\n                  size={this.props.isMobile ? \"2em\" : \"2.4em\"}\n                />\n                <Flex mx={1}>\n                  <Text\n                    ml={[2, 0]}\n                    fontWeight={4}\n                    fontSize={[4, 5]}\n                    lineHeight={1}\n                  >\n                    {trancheDetails.name}\n                  </Text>\n                </Flex>\n              </Flex>\n              <Box\n                ml={5}\n                mr={3}\n                mt={3}\n                alignItems={\"flex-start\"}\n                flexDirection={\"column\"}\n              >\n                <Flex\n                  mr={1}\n                  flexDirection={\"row\"}\n                  alignItems={\"baseline\"}\n                >\n                  <TrancheField\n                    fieldInfo={{\n                      showTooltip: false,\n                      name: `${trancheDetails.baseName}Apy`,\n                      props: {\n                        decimals: 2,\n                        fontWeight: 4,\n                        lineHeight: \"1\",\n                        fontSize: [3, 4],\n                        textAlign: \"center\",\n                        flexProps: {\n                          justifyItems: \"flex-end\"\n                        },\n                        color: this.props.trancheDetails.color.hex\n                      }\n                    }}\n                    {...this.props}\n                    tokenConfig={tokenConfig}\n                    token={strategyInfo.token}\n                    tranche={strategyInfo.tranche}\n                    protocol={strategyInfo.protocol}\n                  />\n                  <Text\n                    my={1}\n                    ml={[2, 3]}\n                    fontSize={1}\n                    lineHeight={\"1\"}\n                    textAlign={\"left\"}\n                    color={\"cellText\"}\n                  >\n                    Current APY (variable)\n                  </Text>\n                </Flex>\n                <Text\n                  mt={3}\n                  fontWeight={2}\n                  fontSize={[1, 2]}\n                  textAlign={\"left\"}\n                  lineHeight={\"1.5\"}\n                  color={\"copyColor\"}\n                >\n                  {trancheDetails.description.long}\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n          <Flex\n            height={\"100%\"}\n            bg={\"cardBgContrast\"}\n            flexDirection={'column'}\n            justifyContent={'space-between'}\n          >\n            <Box\n              mt={3}\n              my={3}\n              pl={2}\n              width={1}\n            >\n              {trancheDetails.features.map((feature, index) => (\n                <Flex\n                  mb={2}\n                  my={1}\n                  px={2}\n                  mt={[2, 1]}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    ml={3}\n                    name={\"Done\"}\n                    color={\"tick\"}\n                    size={this.props.isMobile ? \"1.6em\" : \"1.8em\"}\n                  />\n                  <Text ml={[2, 1]} fontSize={[1, 2]} fontWeight={\"500\"}>\n                    {feature}\n                  </Text>\n                </Flex>\n              ))}\n            </Box>\n            <Flex\n              width={1}\n              height={\"auto\"}\n              alignItems={\"flex-end\"}\n              justifyContent={\"center\"}\n            >\n              <RoundButton\n                buttonProps={{\n                  my: 3,\n                  width: 0.85,\n                  fontSize: 2,\n                  contrastColor: \"white\",\n                  mainColor: trancheDetails.color.hex\n                }}\n                handleClick={e =>\n                  this.props.selectTrancheType(trancheDetails.route)\n                }\n              >\n                {this.props.tokenConfig\n                  ? `Go to ${trancheDetails.name}`\n                  : `Enter the ${trancheDetails.name}`}\n              </RoundButton>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from \"react\";\nimport { Link, Flex, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass TrancheFlash extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const flashData = this.functionsUtil.getGlobalConfig([\"tranchflash\"]);\n    return (\n      <Flex\n        width={1}\n        mx={4}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent={\"center\"}\n      >\n        <Flex mx={2} my={[2, 4]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex justifyContent={\"left\"} my={3} width={[1, 0.7]}>\n            <Text\n              bold={\"true\"}\n              fontWeight={4}\n              lineHeight={1}\n              color={\"white\"}\n              fontSize={[5, 6]}\n              textAlign={\"left\"}\n            >\n              {flashData.subtitle}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            width={1}\n            mb={[2, 3]}\n            justifyContent={\"left\"}\n          >\n            <Text\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n            >\n              {flashData.desc}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            mb={2}\n            width={1}\n            flexDirection={\"column\"}\n          >\n            {\n              flashData.questions.map( (question,index) => (\n                <Flex\n                  my={2}\n                  key={`question_${index}`}\n                  alignItems={\"flex-start\"}\n                >\n                  <Link\n                    fontSize={2}\n                    fontWeight={2}\n                    opacity={\"50%\"}\n                    color={\"white\"}\n                    textAlign={\"left\"}\n                    onClick={e =>\n                      this.props.openTooltipModal(question.desc, question.msg)\n                    }\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={\"flex-start\"}\n                    >\n                      <Image\n                        mr={2}\n                        src={flashData.helpcircle}\n                      />\n                      {question.desc}\n                    </Flex>\n                  </Link>\n                </Flex>\n              ))\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          mt={6}\n          width={0.2}\n          hidden={this.props.isMobile ? 1 : 0}\n          alignItems={\"flex-start\"}\n        >\n          <Image hidden={this.props.isMobile ? 1 : 0} src={flashData.arrows} />\n        </Flex>\n        <Flex ml={2} my={[3, 5]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"AA\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.seniorinfo\n              }}\n            ></Text>\n          </Flex>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              ml={[0, 4]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"BB\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.juniorinfo\n              }}\n            ></Text>\n          </Flex>\n        </Flex>\n        {/*<Flex width={0.3}>\n          <Text>ABC</Text>\n        </Flex>*/}\n      </Flex>\n    );\n  }\n}\nexport default TrancheFlash;\n","import Title from \"../Title/Title\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport styles from \"./TrancheWelcome.module.scss\";\nimport TrancheBox from \"../TrancheBox/TrancheBox\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheFlash from \"../TrancheFlash/TrancheFlash\";\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\n\nclass TrancheWelcome extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig([\"tranches\"]);\n    return (\n      <Flex\n        width={1}\n        alignItems={\"center\"}\n        flexDirection={'column'}\n        justifyContent={\"center\"}\n      >\n        <AssetsUnderManagement\n          {...this.props}\n          flexProps={{\n            mb:[3,0]\n          }}\n          loaderAlign={'flex-end'}\n          subtitle={'Total Value Locked on Tranches'}\n          aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n        />\n        <Flex\n          mb={3}\n          width={1}\n          maxWidth={8}\n          alignItems={\"center\"}\n          flexDirection={\"column\"}\n          justifyContent={\"center\"}\n        >\n          {!this.props.tokenConfig ? (\n            <>\n              <Title fontSize={[5, 6]}>Perpetual Yield Tranches</Title>\n              <Flex\n                mt={[2,3]}\n                border={1}\n                borderRadius={2}\n                borderColor={\"transparent\"}\n                backgroundColor={\"newblue\"}\n                className={[\n                  styles.trancheFlash,\n                  this.props.isMobile ? styles.mobile : null\n                ]}\n              >\n                <TrancheFlash {...this.props}></TrancheFlash>\n              </Flex>\n            </>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3, 4]}\n              color={\"copyColor\"}\n              textAlign={\"center\"}\n            >\n              Select your preferred Tranche\n            </Title>\n          )}\n          <Flex my={3} mx={0} justifyContent={\"center\"}>\n            <Flex\n              width={1}\n              flexDirection={[\"column\", \"row\"]}\n              justifyContent={\"space-between\"}\n            >\n              {Object.keys(tranchesDetails).map((trancheType, index) => (\n                <TrancheBox\n                  {...this.props}\n                  key={`tranche_${index}`}\n                  tokenConfig={this.props.tokenConfig}\n                  trancheDetails={tranchesDetails[trancheType]}\n                />\n              ))}\n            </Flex>\n          </Flex>\n          <Flex\n            mt={3}\n            width={1}\n            px={[0,5]}\n            justifyContent={\"center\"}\n          >\n            <Text\n              fontSize={[0,1]}\n              color={'statValue'}\n              textAlign={\"center\"}\n            >\n              If you're still unsure in which Tranche to pick, reach out to us on our <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['forumURL'])}>Forum</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['discordURL'])}>Discord</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['telegramURL'])}>Telegram</ExtLink> or <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['twitterURL'])}>Twitter</ExtLink>.<br />The team and the community would be happy to help!\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheWelcome;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat ? this.props.tooltipFormat : (v => v),\n      sliceLabel: this.props.sliceLabel,// ? this.props.sliceLabel : (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        {\n          itemWidth: this.props.legendItemWidth || 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: this.props.theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.valueHover || this.state.selectedSlice.value}\n                      {...this.state.selectedSlice.valueHoverProps}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    // const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterStart = portfolio.totalBalance;\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip, Image } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    transactions:[],\n    tokenConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    this.loadPortfolio().then( () => {\n      const componentLoaded = true;\n      const trancheRoute = this.props.urlParams.param1;\n      const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n      const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n      if (trancheDetails !== undefined){\n        const trancheType = trancheDetails.type;\n        const useTrancheType = !this.state.userHasFunds;\n        const selectedToken = this.props.urlParams.param3;\n        const selectedProtocol = this.props.urlParams.param2;\n        const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null) : null;\n\n        if (this.state.userHasFunds && !tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        this.setState({\n          trancheType,\n          tokenConfig,\n          trancheRoute,\n          selectedToken,\n          trancheDetails,\n          useTrancheType,\n          selectedProtocol\n        });\n      } else {\n        const selectedToken = this.props.urlParams.param2;\n        const selectedProtocol = this.props.urlParams.param1;\n        const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n        if (tokenConfig){\n          this.setState({\n            tokenConfig,\n            selectedToken,\n            selectedProtocol\n          });\n        }\n      }\n\n      this.setState({\n        componentLoaded\n      });\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n\n    if (portfolio){\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenPercentage = tranchesTokens[token].div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          valueHoverProps:{\n            unit:'$',\n            unitPos:'left',\n            unitProps:{\n              mr:2,\n              fontWeight:4,\n              fontSize:[3,4]\n            }\n          },\n          valueHover:balanceValue,\n          value:Math.round(tokenPercentage),\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig.icon || `images/tokens/${token}.svg`,\n        };\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      // console.log('loadPortfolio - userHasFunds',portfolio,userHasFunds);\n\n      this.setState({\n        portfolio,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        portfolioDonutData,\n        allocationChartData\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedToken}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedToken){\n      breadcrumbPath.push(this.state.selectedToken);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={2}\n                      src={this.state.trancheDetails.image}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Title\n                    mb={3}\n                  >\n                    Perpetual Yield Tranches\n                  </Title>\n                </Box>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    legendItemWidth={120}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            tooltipFormat={v => v+'%'}\n                            defaultLabel={'Total Funds'}\n                            sliceLabel={d => {\n                              if (parseFloat(d.value)>=5){\n                                return d.value+'%';\n                              } else {\n                                return null;\n                              }\n                            }}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                mb={[3,4]}\n                id={\"migrate-assets\"}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,4]}\n                    fontWeight={[3,4]}\n                  >\n                    Available Tranches\n                  </Heading.h4>\n                </Flex>\n                <TranchesList\n                  enabledProtocols={[]}\n                  trancheType={this.state.trancheType}\n                  availableTranches={this.props.availableTranches}\n                  handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                  cols={[\n                    {\n                      title:'PROTOCOL', \n                      props:{\n                        width:[0.23, this.state.useTrancheType ? 0.15 : 0.14]\n                      },\n                      fields:[\n                        {\n                          name:'protocolIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          name:'protocolName'\n                        },\n                        {\n                          name:'experimentalBadge',\n                          props:{\n                            ml:1,\n                            height:'1.5em'\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:'TOKEN',\n                      props:{\n                        width:[0.15, this.state.useTrancheType ? 0.14 : 0.13],\n                      },\n                      fields:[\n                        {\n                          name:'tokenIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          mobile:false,\n                          name:'tokenName'\n                        }\n                      ]\n                    },\n                    \n                    /*\n                    {\n                      title:'TYPE',\n                      props:{\n                        width:[0.29,0.13],\n                      },\n                      fields:[\n                        {\n                          name:'trancheTypeIcon',\n                          props:{\n                            flexProps:{\n                              mr:2\n                            },\n                            size:'1.4em'\n                          }\n                        },\n                        {\n                          name:'trancheType'\n                        }\n                      ],\n                      visible:this.state.useTrancheType\n                    },\n                    */\n                    {\n                      title:'POOL',\n                      props:{\n                        width:[0.25, this.state.useTrancheType ? 0.1 : 0.09],\n                      },\n                      fields:[\n                        {\n                          name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolNoLabel` : 'pool',\n                          props:{\n                            decimals:2\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.29,this.state.useTrancheType ? 0.09 : 0.12],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'seniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.29,this.state.useTrancheType ? 0.09 : 0.12],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'juniorApy',\n                          props:{\n                            flexProps:{\n                              mr:3\n                            }\n                          },\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      mobile:false,\n                      title:'APR RATIO',\n                      props:{\n                        width:[0.15, this.state.useTrancheType ? 0.12 : 0.10],\n                      },\n                      fields:[\n                        {\n                          name:'trancheAPRSplitRatio',\n                          props:{\n                            flexProps:{\n                              mr:2\n                            },\n                            height:['1.4em','2em']\n                          }\n                        },\n                        \n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'AUTO-FARMING',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.14 : 0.14],\n                      },\n                      fields:[\n                        {\n                          name:'autoFarming'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'STAKING REWARDS',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                      },\n                      fields:[\n                        {\n                          name:'stakingRewards'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:true,\n                      title:'TOKENS',\n                      props:{\n                        width:[0.16,0.17],\n                      },\n                      fields:[\n                        {\n                          name:'govTokens'\n                        }\n                      ]\n                    },\n                    {\n                      title:'',\n                      mobile:false,\n                      props:{\n                        width:[0.29, 0.15],\n                      },\n                      parentProps:{\n                        width:1\n                      },\n                      fields:[\n                        {\n                          name:'button',\n                          label: 'Deposit',\n                          props:{\n                            width:1,\n                            fontSize:3,\n                            fontWeight:3,\n                            height:'45px',\n                            borderRadius:4,\n                            boxShadow:null,\n                            mainColor:'deposit',\n                            size: this.props.isMobile ? 'small' : 'medium',\n                            handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                          }\n                        }\n                      ]\n                    }\n                  ]}\n                  {...this.props}\n                />\n              </Flex>\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    programEnded:false,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    programEndDate:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },0) : null;\n\n    const programEndDate = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programEndDate\n    });\n\n    const programEnded = programEndTime && programEndTime*1000<=Date.now();\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      programEnded,\n      totalRewards,\n      programEndDate,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = {\n          address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n        };\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = {\n      address:this.functionsUtil.getContractByName('DAI')._address\n    };\n    const rewardTokenConfig = {\n      address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n    };\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                isStake && this.state.programEnded ? (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      mt:1\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        name={'Warning'}\n                        color={'cellText'}\n                        size={this.props.isMobile ? '1.8em' : '2.3em'}\n                      />\n                      <Text\n                        mt={1}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        The {this.props.selectedToken} staking program ended on {this.state.programEndDate}.\n                      </Text>\n                    </Flex>\n                  </DashboardCard>\n                ) : (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const cardProps = {\n      p:3,\n      mb:2,\n      width:'49%',\n      ...this.props.cardProps\n    };\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        title={this.props.title}\n        titleProps={{\n          fontSize:1,\n          fontWeight:3,\n        }}\n        titleParentProps={{\n          mt:0,\n          ml:0\n        }}\n        description={this.props.description}\n      >\n        {\n          this.props.value ? (\n            <Text\n              mt={1}\n              fontSize={[2,3]}\n              color={'statValue'}\n              {...this.props.textProps}\n            >\n              {this.props.value}\n            </Text>\n          ) : (this.props.children || null)\n        }\n      </DashboardCard>\n    );\n  }\n}\n\nexport default Base;\n","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    maxTime:126144000,// 4 * 365 * 86400  # 4 years\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n\n    let minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    minDate = this.functionsUtil.strToMoment(minDate.format('YYYY-MM-DD'),'YYYY-MM-DD');\n\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodInput+' '+this.functionsUtil.strToMoment().format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss');\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  async getMaxStakeTimestamp(){\n    const blockInfo = await this.functionsUtil.getBlockInfo();\n    let timestamp = parseInt(Date.now()/1000);\n    if (blockInfo){\n      timestamp = blockInfo.timestamp;\n    }\n    timestamp += this.state.maxTime;\n    return timestamp;\n  }\n\n  async calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n          const maxDate = this.functionsUtil.strToMoment(maxStakeTimestamp*1000);\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    let _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}}) : []\n    ]);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    if (claimEvents){\n      await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n        if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n          const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n          if (blockInfo){\n            const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n            totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n            claimedRewards.push({\n              amount:claimedAmount,\n              hash:e.transactionHash,\n              tokenName:this.props.contractInfo.rewardToken,\n              date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n            });\n          }\n        }\n      });\n    }\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0].value : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1].value : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2].value : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents ? depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0)) : this.functionsUtil.BNify(0);\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  async changeLockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // Check if lockPeriodTimestamp > maxStakeTimestamp\n      const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n      if (lockPeriodTimestamp>maxStakeTimestamp){\n        lockPeriodTimestamp = maxStakeTimestamp;\n      }\n\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      },() => {\n        this.checkButtonDisabled()\n      });\n    }\n  }\n\n  async selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // Check if lockPeriodTimestamp > maxStakeTimestamp\n    const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n    if (lockPeriodTimestamp>maxStakeTimestamp){\n      lockPeriodTimestamp = maxStakeTimestamp;\n    }\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const statsLoaded = false;\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      statsLoaded,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDateTimestamp = await this.getMaxStakeTimestamp();\n    const maxDate = this.functionsUtil.strToMoment(maxDateTimestamp*1000).format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCardSmall\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCardSmall\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Box\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.45 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.4 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.15 : 0.3}\n                              >\n                                { this.props.isMobile ? '' : 'Hash' }\n                              </Text>\n                            </Flex>\n                            <Box\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              overflow={['visible','scroll']}\n                              maxHeight={['initial','500px']}\n                            >\n                              {\n                                this.state.distributedRewards.map( (reward,index) => (\n                                  <Flex\n                                    width={1}\n                                    py={[2,1]}\n                                    flexDirection={'row'}\n                                    key={`rewards_${index}`}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.45 : 0.4}\n                                    >\n                                      {reward.date}\n                                    </Text>\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.4 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      {reward.amount.toFixed(4)} {reward.tokenName}\n                                    </Text>\n                                    <Flex\n                                      width={this.props.isMobile ? 0.15 : 0.13}\n                                      justifyContent={this.props.isMobile ? 'flex-end' : 'flex-start'}\n                                    >\n                                      <ExtLink\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          {\n                                            !this.props.isMobile && (\n                                              <Text\n                                                fontSize={2}\n                                                fontWeight={2}\n                                                color={'link'}\n                                              >\n                                                {this.functionsUtil.shortenHash(reward.hash)}\n                                              </Text>\n                                            )\n                                          }\n                                          <Icon\n                                            ml={1}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                            size={this.props.isMobile ? '1.4em' : '1.2em'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    </Flex>\n                                  </Flex>\n                                ))\n                              }\n                            </Box>\n                          </Box>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changeLockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          color:'hsl('+tokenColorHsl+')',\n          value:Math.round(tokenPercentage),\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken.toUpperCase(),'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass PolygonBridgeTransactions extends Component {\n\n  state = {\n    loaded:false,\n    bridgeEnabled:false,\n    polygonTransactions:null,\n    polygonTransactionsAvailableTokens:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (!this.props.account){\n      return false;\n    }\n\n    let polygonTransactionsAvailableTokens = null;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const bridgeEnabled = polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id);\n\n    if (!bridgeEnabled){\n      return this.setState({\n        loaded:true,\n        bridgeEnabled\n      });\n    }\n\n    const polygonTransactions = await this.functionsUtil.getPolygonBridgeTxs(this.props.account);\n\n    // console.log('polygonTransactions',this.props.account,this.props.web3,polygonTransactions);\n\n    if (polygonTransactions && polygonTransactions.length>0){\n      polygonTransactionsAvailableTokens = polygonTransactions.map( (tx) => {\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge','props','availableTokens',tx.tokenSymbol]);\n        let actionIcon = null;\n        switch (tx.action){\n          default:\n          case 'Deposit':\n            actionIcon = 'ArrowDownward';\n          break;\n          case 'Withdraw':\n            actionIcon = 'ArrowUpward';\n          break;\n          case 'Exit':\n            actionIcon = 'Undo';\n          break;\n        }\n        const depositInfo = {\n          actionIcon,\n          amount:tx.value,\n          token:tx.tokenSymbol,\n          action:tx.action.toUpperCase(),\n          bridgeType:tx.bridgeType.toUpperCase(),\n          status:tx.included ? 'Completed' : 'pending',\n          hash:this.functionsUtil.shortenHash(tx.hash),\n          statusIcon:tx.included ? 'Done' : 'Timelapse',\n          actionIconProps:{\n            color:this.props.theme.colors.transactions.action[tx.action.toLowerCase()],\n            bgColor:this.props.theme.colors.transactions.actionBg[tx.action.toLowerCase()]\n          },\n          url:this.functionsUtil.getEtherscanTransactionUrl(tx.hash,tx.networkId),\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('DD MMM, YYYY'),\n          statusIconProps:{\n            color:tx.included ? this.props.theme.colors.transactions.status.completed : this.props.theme.colors.transactions.status.pending\n          },\n          tokenIcon:tokenConfig.icon || this.functionsUtil.getGlobalConfig(['stats','tokens',tx.tokenSymbol.toUpperCase(),'icon']) || `images/tokens/${tx.tokenSymbol}.svg`\n        };\n        return depositInfo;\n      });\n    }\n\n    // console.log('PolygonBridgeTransactions',polygonTransactions,polygonTransactionsAvailableTokens);\n\n    this.setState({\n      loaded:true,\n      bridgeEnabled,\n      polygonTransactions,\n      polygonTransactionsAvailableTokens\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded || !this.state.bridgeEnabled){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0 ? (\n            <CustomList\n              paginationEnabled={true}\n              handleClick={(props) => this.functionsUtil.openWindow(props.row.url)}\n              cols={[\n                {\n                  title:'HASH',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.18],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'bgIcon',\n                      path:['actionIcon'],\n                    },\n                    {\n                      type:'text',\n                      path:['hash'],\n                      props:{\n                        ml:[0,2]\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  props:{\n                    width:[0.25,0.14],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['action'],\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['date'],\n                    },\n                  ]\n                },\n                {\n                  title:'BRIDGE',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['bridgeType'],\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      mobile:false,\n                      path:['statusIcon'],\n                      props:{\n                        mr:2,\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.25, 0.15],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['amount'],\n                      props:{\n                        decimals: 4\n                      }\n                    },\n                    {\n                      name:'tokenName',\n                      props:{\n                        ml:2\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.25,0.13]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      path:['tokenIcon'],\n                      props:{\n                        mr:2,\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                    }\n                  ]\n                },\n              ]}\n              {...this.props}\n              rows={this.state.polygonTransactionsAvailableTokens}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default PolygonBridgeTransactions;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport PolygonBridgeTransactions from '../PolygonBridgeTransactions/PolygonBridgeTransactions';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    portfolioLoading:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week',\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      this.setStateSafe({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return await this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n    // const currentNetwork = this.functionsUtil.getRequiredNetwork();\n\n    if (this.state.portfolioLoaded || this.state.portfolioLoading){\n      return false;\n    }\n\n    await this.setStateSafe({\n      portfolioLoading:true\n    });\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load and process Etherscan Txs\n      this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n\n      // Load data\n      const [\n        batchedDeposits,\n        portfolio,\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n      newState.depositedTokens = [];\n      newState.tokensToMigrate = [];\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        // let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        // let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            // tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            // this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          // if (!tokenScore.isNaN() && tokenScore.gt(0)){\n          //   avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n          //   totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          // }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n        //   avgScore = avgScore.div(totalBalanceWithScore);\n        // }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        // newState.avgScore = avgScore;\n        newState.tokensToMigrate = portfolio.tokensToMigrate;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.portfolioLoaded = true;\n      newState.portfolioLoading = false;\n      \n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        portfolioLoading:false,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title']);\n    const toolsToShow = ['addFunds','nexusMutual','tokenSwap'].filter( toolName => {\n      const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n      return toolConfig.enabled && (!toolConfig.availableNetworks.length || toolConfig.availableNetworks.includes(parseInt(currentNetwork.id)));\n    })\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {strategyName} strategy\n        </Title>\n        {\n          /*\n          currentNetwork.id === 137 ? (\n            <Flex\n              width={1}\n              minHeight={'45vh'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  width:[1,0.5],\n                }}\n              >\n                <Flex\n                  aligItems={'center'}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'AccessTime'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Hang on, please!<br />The {strategyName} strategy has not yet been activated in Polygon.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,1/2]\n                    }}\n                    handleClick={e => this.props.goToSection(`stake`)}\n                  >\n                    Go to Staking\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          ) :\n          */\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    mt={1}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    {\n                                      /*\n                                      <Flex\n                                        width={0.45}\n                                        alignItems={'center'}\n                                        justifyContent={'flex-end'}\n                                      >\n                                        <Text\n                                          fontSize={1}\n                                          fontWeight={3}\n                                          fontFamily={this.props.theme.fonts.counter}\n                                          color={this.props.theme.colors.transactions.status.completed}\n                                        >\n                                          +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                        </Text>\n                                      </Flex>\n                                      <Text\n                                        mx={1}\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >|</Text>\n                                      */\n                                    }\n                                    <TotalEarningsCounter\n                                      {...this.props}\n                                      unit={'+$'}\n                                      decimals={4}\n                                      counterStyle={{\n                                        fontSize:14,\n                                        fontWeight:600,\n                                        color:this.props.theme.colors.transactions.status.completed\n                                      }}\n                                      portfolio={this.state.portfolio}\n                                    />\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: '<small>+</small>'+this.state.portfolio.totalEarningsPerc.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Profit\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','totalProfitPerc'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && toolsToShow.length>=2 && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                              width={[1,1/toolsToShow.length]}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                nexusMutualConfig.enabled && nexusMutualConfig.availableNetworks.includes(currentNetwork.id) && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.26,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                showLoader:false,\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'OLD APY',\n                            props:{\n                              width:[0.26,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'oldApy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            props:{\n                              width:[0.21,0.11],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.13],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.15],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:true,\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            props:{\n                              width:[0.21, 0.13],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'FARMING',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.22,0.16],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(this.functionsUtil.getGovTokensFarming())}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id) && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                    id={'polygon-transactions'}\n                  >\n                    <PolygonBridgeTransactions\n                      {...this.props}\n                      title={'Polygon Bridge Transactions'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass PolygonBridge extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    txsToExit:[],\n    infoBox:null,\n    polygonTxs:[],\n    inputValue:null,\n    dataLoaded:false,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    availableTokens:null,\n    availableNetworks:[],\n    approveEnabled:false,\n    contractApproved:false,\n    defaultTransaction:null,\n    approveDescription:null,\n    selectedTransaction:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  async loadPolygonTxs(){\n    const polygonTxs = await this.functionsUtil.getPolygonBridgeTxs();\n    this.setState({\n      polygonTxs,\n      dataLoaded:true\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const rootTokenConfig = tokenConfig.rootToken;\n      const childTokenConfig = tokenConfig.childToken;\n\n      // Init contracts\n      await Promise.all([\n        rootTokenConfig ? this.props.initContract(rootTokenConfig.name,rootTokenConfig.address,rootTokenConfig.abi) : null,\n        childTokenConfig ? this.props.initContract(childTokenConfig.name,childTokenConfig.address,childTokenConfig.abi) : null\n      ]);\n\n      this.setState({\n        tokenConfig\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.updateData();\n      }\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n  }\n\n  getTransactionParams(amount){\n    let value = null;\n    let methodName = null;\n    let methodParams = [];\n    let contractName = null;\n    amount = this.functionsUtil.toBN(amount);\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        switch (this.state.selectedToken){\n          case 'WETH':\n            methodName = 'depositEtherFor';\n            contractName = 'RootChainManager';\n            value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            methodParams = [this.props.account];\n          break;\n          default:\n            const depositData = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            switch (bridgeType){\n              case 'plasma':\n                contractName = 'DepositManager';\n                methodName = 'depositERC20ForUser';\n                methodParams = [this.state.tokenConfig.rootToken.address,this.props.account,depositData];\n              break;\n              default:\n              case 'pos':\n                methodName = 'depositFor';\n                contractName = 'RootChainManager';\n                methodParams = [this.props.account,this.state.tokenConfig.rootToken.address,depositData];\n              break;\n            }\n          break;\n        }\n      break;\n      case 'Withdraw':\n        methodName = 'withdraw';\n        methodParams = [amount];\n        contractName = this.state.tokenConfig.childToken.name;\n        if (this.state.tokenConfig.sendValue){\n          value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',{\n    //   value,\n    //   methodName,\n    //   methodParams,\n    //   contractName\n    // });\n\n    return {\n      value,\n      methodName,\n      methodParams,\n      contractName\n    };\n  }\n\n  exitCallback(){\n\n  }\n\n  async getExitTransactionParams(){\n    const txHash = this.state.selectedTransaction;\n    const exitCalldata = await this.props.maticPOSClient.exitERC20(txHash, { from:this.props.account, encodeAbi: true })\n    if (exitCalldata && exitCalldata.data){\n      return exitCalldata.data;\n    }\n    return null;\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async selectTransaction(selectedTransaction){\n    this.setState({\n      selectedTransaction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    /*\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        const depositedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      break;\n      case 'Withdraw':\n        const withdrawnTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (tx.txReceipt && tx.txReceipt.events && tx.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(tx.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n      break;\n      default:\n      break;\n    }\n    */\n    const transactionSucceeded = tx;\n    this.setState({\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(){\n    const newState = {};\n    const isETH = this.state.selectedToken==='WETH';\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        newState.steps = [];\n        newState.permitEnabled = false;\n        newState.availableNetworks = [1,5];\n        newState.approveEnabled = !isETH;\n        newState.approveDescription = `Approve the contract to deposit your ${this.state.selectedToken}`;\n        newState.contractInfo = bridgeType === 'pos' ? this.props.toolProps.contracts.ERC20Predicate : this.props.toolProps.contracts.DepositManager;\n        newState.balanceProp = isETH ? await this.functionsUtil.getETHBalance(this.props.account) : await this.functionsUtil.getTokenBalance(this.state.tokenConfig.rootToken.name,this.props.account);\n        if (this.state.transactionSucceeded){\n          let depositedTokensLog = null;\n          let depositedTokensEvent = null;\n          if (!isETH){\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          } else {\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          }\n          const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : ( depositedTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensEvent.raw.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully deposited <strong>${depositedTokens.toFixed(4)} ${this.state.selectedToken}</strong> in the Polygon chain. Please wait ~7-8 minutes for your balance to be accounted in the Polygon chain.`\n          }\n        } else {\n          newState.infoBox = {\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n            text:`Please note that deposit of funds takes ~7-8 minutes to be accounted in the Polygon chain.`\n          }\n        }\n        // console.log('updateData',newState);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.availableNetworks = [137,80001];\n        newState.contractInfo = this.state.tokenConfig.childToken;\n        newState.balanceProp = await this.functionsUtil.getTokenBalance(this.state.tokenConfig.childToken.name,this.props.account);\n\n        const currentNetwork = this.functionsUtil.getRequiredNetwork();\n        const maticNetwork = currentNetwork.name;\n        const mainNetworkId = this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetwork.id]);\n        const mainNetworkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',mainNetworkId,'name']);\n        newState.steps = [\n          {\n            icon:'LooksOne',\n            completed:false,\n            description:`Withdraw ${this.state.selectedToken} from ${maticNetwork} network`\n          },\n          {\n            icon:'LooksTwo',\n            completed:false,\n            description:`Wait for the checkpoint to be submitted`\n          },\n          {\n            icon:'Looks3',\n            completed:false,\n            description:`Exit ${this.state.selectedToken} from ${mainNetworkName} network`\n          },\n        ];\n        if (this.state.transactionSucceeded){\n          const withdrawnTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events && this.state.transactionSucceeded.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(this.state.transactionSucceeded.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : ( withdrawnTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensEvent.raw.data,16),this.state.tokenConfig.decimals)  : this.functionsUtil.BNify(0)));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully withdrawn <strong>${withdrawnTokens.toFixed(4)} ${this.state.selectedToken}</strong> from the Polygon chain. Please wait up to 2-3 hours to be able to complete the withdrawal.`\n          }\n        } else {\n          let text = '';\n          switch (bridgeType){\n            case 'plasma':\n              text = `Please note that withdraw of funds takes ~7 days in Plasma.`;\n            break;\n            default:\n            case 'pos':\n              text = `Please note that withdraw of funds takes ~45 mins to 1 hour in PoS.`;\n            break;\n          }\n          newState.infoBox = {\n            text,\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          }\n        }\n      break;\n      case 'Exit':\n        newState.availableNetworks = [1,5];\n        newState.txsToExit = this.state.polygonTxs.filter( tx => tx.included && tx.action === 'Withdraw' && !tx.exited && tx.tokenSymbol === this.state.selectedToken ).map( tx => {\n          const label = this.functionsUtil.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm')+' - '+tx.value.toFixed(6)+' '+tx.token;\n          return {\n            label,\n            data:tx,\n            value:tx.hash\n          }\n        });\n\n        newState.defaultTransaction = newState.txsToExit.length>0 ? newState.txsToExit[0] : null;\n        newState.selectedTransaction = newState.defaultTransaction ? newState.defaultTransaction.data.hash : null;\n      break;\n      default:\n      break;\n    }\n\n    if (!newState.balanceProp){\n      newState.balanceProp = this.functionsUtil.BNify(0);\n    }\n\n    // console.log('updateData',newState);\n\n    this.setState(newState);\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          label:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const paramIsToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2];\n    const selectedToken = paramIsToken ? this.props.urlParams.param2 : (this.props.selectedToken || this.state.selectedToken || availableTokens[0].value);\n    const selectedOption = availableTokens.find( t => t.value === selectedToken );\n    const defaultAction = !paramIsToken ? (currentNetwork.provider === 'infura' ? 'Deposit' : 'Withdraw') : 'Deposit';\n    const selectedAction = this.props.action || this.state.action || defaultAction;\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n\n    // console.log('loadData',this.props.urlParams);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    },() => {\n      this.loadPolygonTxs();\n    });\n  }\n\n  async exitSelectedTransaction(){\n\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const fullWidth = !!this.props.fullWidth;\n    const isExit = this.state.selectedAction === 'Exit';\n    const isDeposit = this.state.selectedAction === 'Deposit';\n    const isWithdraw = this.state.selectedAction === 'Withdraw';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const currentNetworkId = currentNetwork.id;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    width={[1,fullWidth ? 1 : '33em']}\n                  >\n                    {\n                      !this.props.selectedToken && (\n                        <Box\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Select Token:\n                          </Text>\n                          <AssetSelector\n                            id={'tokens'}\n                            {...this.props}\n                            showBalance={false}\n                            isSearchable={false}\n                            onChange={this.selectToken.bind(this)}\n                            selectedToken={this.state.selectedToken}\n                            availableTokens={this.props.toolProps.availableTokens}\n                          />\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          {\n                            !this.props.action && (\n                              <Box\n                                width={1}\n                              >\n                                <Text\n                                  mb={2}\n                                >\n                                  Choose the action:\n                                </Text>\n                                <Flex\n                                  mb={3}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'space-between'}\n                                >\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Deposit'}\n                                    iconColor={'deposit'}\n                                    icon={'ArrowDownward'}\n                                    iconBgColor={'#ced6ff'}\n                                    handleClick={ e => this.setAction('Deposit') }\n                                    isActive={ this.state.selectedAction === 'Deposit' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Withdraw'}\n                                    iconColor={'redeem'}\n                                    icon={'ArrowUpward'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Withdraw') }\n                                    isActive={ this.state.selectedAction === 'Withdraw' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Exit'}\n                                    icon={'SwapHoriz'}\n                                    iconColor={'redeem'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Exit') }\n                                    isActive={ this.state.selectedAction === 'Exit' }\n                                  />\n                                </Flex>\n                              </Box>\n                            )\n                          }\n                          {\n                            !this.state.availableNetworks.includes(currentNetworkId) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mb:3,\n                                  width:1\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    The <strong>{this.functionsUtil.capitalize(currentNetwork.name)} network</strong> is not supported for this function, please switch to <strong>{this.functionsUtil.getGlobalConfig(['network','availableNetworks',this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]),'name'])} network</strong>.\n                                  </Text>\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,1/2],\n                                      fontSize:[1,2]\n                                    }}\n                                    handleClick={e => this.props.setRequiredNetwork(this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]))}\n                                  >\n                                    Switch Network\n                                  </RoundButton>\n                                </Flex>\n                              </DashboardCard>\n                            ) : (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo) ? (\n                              <Box\n                                mt={1}\n                                width={1}\n                                mb={[4,3]}\n                              >\n                                {\n                                  (isDeposit || isWithdraw) ? (\n                                    <SendTxWithBalance\n                                      {...this.props}\n                                      error={this.state.error}\n                                      steps={this.state.steps}\n                                      infoBox={this.state.infoBox}\n                                      action={this.state.selectedAction}\n                                      tokenConfig={this.state.tokenConfig}\n                                      tokenBalance={this.state.balanceProp}\n                                      contractInfo={this.state.contractInfo}\n                                      permitEnabled={this.state.permitEnabled}\n                                      approveEnabled={this.state.approveEnabled}\n                                      callback={this.transactionSucceeded.bind(this)}\n                                      approveDescription={this.state.approveDescription}\n                                      contractApproved={this.contractApproved.bind(this)}\n                                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                      changeInputCallback={this.changeInputCallback.bind(this)}\n                                      getTransactionParams={this.getTransactionParams.bind(this)}\n                                    >\n                                      {\n                                        isDeposit ? (\n                                          <Flex\n                                            width={1}\n                                            alignItems={'stretch'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <BuyModal\n                                              {...this.props}\n                                              showInline={true}\n                                              availableMethods={[]}\n                                              buyToken={this.state.selectedToken}\n                                            />\n                                          </Flex>\n                                          // `You don't have any ${this.state.selectedToken} in your wallet.`\n                                        ) : isWithdraw && (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                name={'MoneyOff'}\n                                                color={'cellText'}\n                                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You don't have any {this.state.selectedToken} to withdraw.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </SendTxWithBalance>\n                                  ) : isExit && (\n                                    <Box\n                                      width={1}\n                                    >\n                                      {\n                                        !this.state.dataLoaded ? (\n                                          <Flex\n                                            mt={4}\n                                            flexDirection={'column'}\n                                          >\n                                            <FlexLoader\n                                              flexProps={{\n                                                flexDirection:'row'\n                                              }}\n                                              loaderProps={{\n                                                size:'30px'\n                                              }}\n                                              textProps={{\n                                                ml:2\n                                              }}\n                                              text={'Loading transactions...'}\n                                            />\n                                          </Flex>\n                                        ) : this.state.txsToExit.length ? (\n                                          <Box\n                                            width={1}\n                                          >\n                                            <Text mb={1}>\n                                              Select Transaction:\n                                            </Text>\n                                            <GenericSelector\n                                              {...this.props}\n                                              isSearchable={false}\n                                              name={'transactions'}\n                                              options={this.state.txsToExit}\n                                              onChange={this.selectTransaction.bind(this)}\n                                              defaultValue={this.state.defaultTransaction}\n                                            />\n                                            {\n                                              this.state.selectedTransaction && (\n                                                <ExecuteTransaction\n                                                  action={'Exit'}\n                                                  Component={RoundButton}\n                                                  parentProps={{\n                                                    mt:3,\n                                                    alignItems:'center',\n                                                    justifyContent:'center'\n                                                  }}\n                                                  componentProps={{\n                                                    buttonProps:{\n                                                      value:'Exit',\n                                                      width:[1,1/3],\n                                                      size:'medium',\n                                                      mainColor:'redeem'\n                                                    },\n                                                    value:'Exit Transaction',\n                                                  }}\n                                                  params={[]}\n                                                  methodName={'exit'}\n                                                  sendRawTransaction={true}\n                                                  contractName={'RootChainManager'}\n                                                  callback={this.exitCallback.bind(this)}\n                                                  getTransactionParamsAsync={this.getExitTransactionParams.bind(this)}\n                                                  {...this.props}\n                                                >\n                                                  <Flex\n                                                    flexDirection={'row'}\n                                                    alignItems={'center'}\n                                                    justifyContent={'center'}\n                                                  >\n                                                    <Icon\n                                                      mr={1}\n                                                      name={'Done'}\n                                                      size={'1.4em'}\n                                                      color={this.props.theme.colors.transactions.status.completed}\n                                                    />\n                                                    <Text\n                                                      fontWeight={500}\n                                                      fontSize={'15px'}\n                                                      color={'copyColor'}\n                                                      textAlign={'center'}\n                                                    >\n                                                      Transaction successfully exited!\n                                                    </Text>\n                                                  </Flex>\n                                                </ExecuteTransaction>\n                                              )\n                                            }\n                                          </Box>\n                                        ) : (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3,\n                                              width:1\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                size={'1.8em'}\n                                                name={'Warning'}\n                                                color={'cellText'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You cannot exit any transaction yet.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </Box>\n                                  )\n                                }\n                              </Box>\n                            ) : (\n                              <Flex\n                                mt={3}\n                                mb={3}\n                                width={1}\n                              >\n                                <FlexLoader\n                                  flexProps={{\n                                    flexDirection:'row'\n                                  }}\n                                  loaderProps={{\n                                    size:'30px'\n                                  }}\n                                  textProps={{\n                                    ml:2\n                                  }}\n                                  text={'Loading info...'}\n                                />\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PolygonBridge;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from \"../Staking/Staking\";\nimport DAI from '../abis/tokens/DAI.json';\nimport IDLE from '../contracts/IDLE.json';\nimport Tranches from '../Tranches/Tranches';\nimport USDC from '../abis/tokens/USDC.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from \"../abis/curve/CurvePool.json\";\nimport NexusMutual from \"../NexusMutual/NexusMutual\";\nimport CoverMint from \"../abis/cover/CoverMint.json\";\nimport LockedIDLE from \"../contracts/LockedIDLE.json\";\nimport LpStakingAbi from \"../contracts/LpStaking.json\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TokenWrapper from \"../TokenWrapper/TokenWrapper\";\nimport PriceOracle from \"../contracts/PriceOracle.json\";\nimport FeeTreasury from \"../contracts/FeeTreasury.json\";\nimport IdleTokenV2 from \"../contracts/IdleTokenV2.json\";\nimport StrategyPage from \"../StrategyPage/StrategyPage\";\nimport BuyModal from \"../utilities/components/BuyModal\";\nimport IdleTokenV3 from \"../contracts/IdleTokenV3.json\";\nimport IdleTokenV4 from \"../contracts/IdleTokenV4.json\";\nimport BatchDeposit from \"../BatchDeposit/BatchDeposit\";\nimport ChildERC20 from '../abis/polygon/ChildERC20.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport PolygonBridge from '../PolygonBridge/PolygonBridge';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport ERC20Predicate from '../abis/polygon/ERC20Predicate.json';\nimport EtherPredicate from '../abis/polygon/EtherPredicate.json';\nimport DepositManager from '../abis/polygon/DepositManager.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport RootChainManager from '../abis/polygon/RootChainManager.json';\nimport SushiV2Router02 from \"../abis/sushiswap/SushiV2Router02.json\";\nimport IdleBatchConverter from \"../contracts/IdleBatchConverter.json\";\nimport UniswapV2Router02 from \"../abis/uniswap/UniswapV2Router02.json\";\nimport ChildChainManager from '../abis/polygon/ChildChainManager.json';\nimport IdleDepositForwarder from \"../contracts/IdleDepositForwarder.json\";\nimport ProtocolDataProvider from '../abis/aave/ProtocolDataProvider.json';\nimport SushiLiquidityPool from \"../abis/sushiswap/SushiLiquidityPool.json\";\nimport NexusMutualIncidents from \"../abis/nexus/NexusMutualIncidents.json\";\nimport StakingFeeDistributor from \"../contracts/StakingFeeDistributor.json\";\nimport NexusMutualDistributor from \"../abis/nexus/NexusMutualDistributor.json\";\nimport BalancerExchangeProxy from \"../abis/balancer/BalancerExchangeProxy.json\";\nimport IdleConverterPersonalSignV4 from \"../contracts/IdleConverterPersonalSignV4.json\";\nimport MinimalInitializableProxyFactory from \"../contracts/MinimalInitializableProxyFactory.json\";\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: \"Idle\",\n  version: \"v6.1\",\n  baseToken: \"ETH\",\n  baseURL: \"https://idle.finance\",\n  forumURL: \"https://gov.idle.finance\",\n  telegramURL: \"https://t.me/idlefinance\",\n  discordURL: \"https://discord.gg/mpySAJp\",\n  twitterURL: \"https://twitter.com/idlefinance\",\n  theme: {\n    darkModeEnabled: true\n  },\n  environments: {\n    live: {\n      requiredNetwork: 1,\n      url: \"https://idle.finance\"\n    },\n    beta: {\n      requiredNetwork: 1,\n      url: \"https://beta.idle.finance\"\n    },\n    polygon: {\n      requiredNetwork: 137,\n      url: \"https://polygon.idle.finance\"\n    }\n  },\n  betaURL: \"https://beta.idle.finance\",\n  countries: {\n    USA: \"United States of America\",\n    GBR: \"United Kingdom\",\n    AUS: \"Australia\",\n    BRA: \"Brazil\",\n    CHN: \"China\",\n    CAN: \"Canada\",\n    EUR: \"Europe\",\n    HKG: \"Hong Kong\",\n    IND: \"India\",\n    MEX: \"Mexico\",\n    RUS: \"Russia\",\n    ZAF: \"South Africa\",\n    KOR: \"South Korea\"\n  },\n  logs: {\n    // Enable logs levels\n    errorsEnabled: false,\n    messagesEnabled: false\n  },\n  connectors: {\n    // Connectors props\n    metamask: {\n      enabled: true,\n      subcaption: \"Browser extension\"\n    },\n    opera: {\n      enabled: true,\n      subcaption: \"Opera injected wallet\"\n    },\n    dapper: {\n      enabled: true,\n      icon: \"dapper.png\",\n      subcaption: \"Browser extension\"\n    },\n    coinbase: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      subcaption: \"Connect with Coinbase wallet\"\n    },\n    trustwallet: {\n      enabled: true,\n      subcaption: \"Connect with Trust Wallet\"\n    },\n    walletconnect: {\n      enabled: true,\n      iconModal: \"walletconnect.png\",\n      subcaption: \"Connect with QR code\"\n    },\n    walletlink: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      name: \"Coinbase Wallet\",\n      subcaption: \"Connect with QR code\"\n    },\n    gnosis: {\n      enabled: true,\n      // icon:'coinbase.png',\n      name: \"Gnosis Safe App\",\n      subcaption: \"Connect with Gnosis Safe App\"\n    },\n    fortmatic: {\n      enabled: true,\n      subcaption: \"Login with phone-number\"\n    },\n    portis: {\n      enabled: true,\n      subcaption: \"Login with e-mail\"\n    },\n    authereum: {\n      enabled: true,\n      subcaption: \"Cross-device wallet\"\n    },\n    torus: {\n      enabled: true,\n      icon: \"torus.png\",\n      subcaption: \"One-Click login for Web 3.0\"\n    },\n    trezor: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledger: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledgerlive: {\n      enabled: true,\n      subcaption: \"Ledger Live Browser\"\n    },\n    custom: {\n      enabled: true,\n      subcaption: \"Custom address\"\n    }\n  },\n  newsletterSubscription: {\n    endpoint: \"https://dev.lapisgroup.it/idle/newsletter.php\"\n  },\n  messages: {\n    scoreShort: \"Protocol Risk Score\",\n    apyShort: \"Annual Percentage Yield\",\n    totalProfitPerc: \"Total percentage profit generated on your balance\",\n    tokenPrice: \"The token price is calculated using Uniswap spot prices.\",\n    cheapRedeem: \"Amount of unlent funds available for low gas fees redeem\",\n    curveBonusSlippage: \"Slippage or bonus depending on if the coin is low or high in the Curve Pool\",\n    distributionSpeed: \"The distribution indicates the amount of tokens distributed for the entire pool.\",\n    directMint: \"Pay an additional gas fee to rebalance the pool and help all users gain an additional APR\",\n    performanceFee: \"This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE\",\n    userDistributionSpeed: \"The distribution indicates the amount of tokens distributed for your account based on your current pool share.\",\n    govTokenApr: \"Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.\",\n    govTokenRedeemableBalance: \"The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.\",\n    riskScoreShort: \"It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.\",\n    redeemSkipGov: \"This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool\",\n    batchDepositExecutionSchedule: \"Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.\",\n    riskAdjustedDisabledMessageDeposit: `The Risk Adjusted strategy is no longer available.<br />Please consider to deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to have a similar risk profile.`,\n    apyLong: \"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.\",\n    riskScore: `It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions: `<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`,\n    yieldFarming: 'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\" class=\"link\">Read more here</a>.',\n    riskAdjustedDisabledMessageRedeem: `The Risk Adjusted strategy is no longer available, please redeem your funds from this strategy. You can deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to maintain a similar risk profile and receive an incentive. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://gov.idle.finance/t/risk-adjusted-removal-for-tranches-migration/673\" class=\"link\">Read more here</a>.`,\n  },\n  analytics: {\n    google: {\n      events: {\n        enabled: true, // Enable Google Analytics events\n        debugEnabled: false, // Enable sending for test environments\n        addPostfixForTestnet: true // Append testnet to eventCategory\n      },\n      pageView: {\n        enabled: true\n      }\n    }\n  },\n  modals: {\n    // Enable modals\n    first_deposit_referral: false, // Referral share modal\n    first_deposit_share: true, // First deposit share modal\n    migrate: {\n      enabled: true,\n      availableNetworks: [1]\n    },\n    welcome: {\n      // Welcome modal\n      enabled: true,\n      frequency: 604800 // One week\n    }\n  },\n  dashboard: {\n    baseRoute: \"/dashboard\",\n    theme: {\n      mode: \"light\",\n      darkModeEnabled: true\n    }\n  },\n  governance: {\n    test: false,\n    enabled: true,\n    startBlock: 11333729,\n    availableNetworks: [1],\n    baseRoute: '/governance',\n    props: {\n      tokenName: 'IDLE',\n      availableContracts: {\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals: {\n      12: {\n        description: 'Details in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>'\n      },\n      7: {\n        description: `Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>`\n      }\n    },\n    contracts: {\n      delegates: \"IDLE\",\n      governance: \"GovernorAlpha\"\n    }\n  },\n  curve: {\n    enabled: false,\n    params: {\n      n_coins: 3,\n      label: \"Curve\",\n      route: \"/dashboard/curve\",\n      image: \"images/protocols/curve.svg\",\n      imageInactive: \"images/protocols/curve-off.svg\"\n    },\n    rates: {\n      path: [\"apy\", \"day\", \"idle\"],\n      endpoint: \"https://www.curve.fi/raw-stats/apys.json\"\n    },\n\n    poolContract: {\n      decimals: 18,\n      abi: CurvePool,\n      name: \"idleDAI+idleUSDC+idleUSDT\",\n      token: \"idleDAI+idleUSDC+idleUSDT\",\n      address: \"0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05\"\n    },\n    depositContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\"\n    },\n    gaugeContract: {\n      abi: LiquidityGaugeV2,\n      name: \"LiquidityGaugeV2\",\n      address: \"0xd69ac8d9D25e99446171B5D0B3E4234dAd294890\"\n    },\n    zapContract: {\n      abi: CurveZap,\n      name: \"idleCurveZap\",\n      address: \"0x456974df1042ba7a46fd49512a8778ac3b840a21\"\n    },\n    migrationContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\",\n      functions: [\n        {\n          label: \"Deposit\",\n          name: \"add_liquidity\"\n        }\n      ]\n    },\n    availableTokens: {\n      idleDAIYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"DAI\",\n        token: \"idleDAIYield\",\n        address: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 0\n        }\n      },\n      idleUSDCYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDC\",\n        token: \"idleUSDCYield\",\n        address: \"0x5274891bEC421B39D23760c04A6755eCB444797C\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 1\n        }\n      },\n      idleUSDTYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDT\",\n        token: \"idleUSDTYield\",\n        address: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 2\n        }\n      }\n    }\n  },\n  permit: {\n    DAI: {\n      version: 1,\n      EIPVersion: null,\n      nonceMethod: \"nonces\",\n      name: \"Dai Stablecoin\",\n      type: [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" }\n      ]\n    },\n    USDC: {\n      version: 2,\n      name: \"USD Coin\",\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    },\n    SLP: {\n      version: 1,\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      name: \"SushiSwap LP Token\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    }\n  },\n  govTokens: {\n    IDLE: {\n      abi: IDLE,\n      decimals: 18,\n      token: \"IDLE\",\n      enabled: true,\n      showAUM: false, // Include IDLE balance in AUM\n      showAPR: false, // Include IDLE Apr\n      protocol: \"idle\",\n      showPrice: false, // Show price in Yield Farming section\n      showBalance: false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode: false,\n      availableNetworks: [1, 137],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\", // Multiply distribution per block\n      color: \"hsl(162, 100%, 41%)\",\n      icon: \"images/tokens/IDLE.svg\",\n      addresses: {\n        1: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\",\n        137: \"0xc25351811983818c9fe6d8c580531819c8ade90f\"\n      },\n      address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // MAIN\n      disabledTokens: {\n        1: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"],\n        137: [\"idleDAIYield\", \"idleUSDCYield\", \"idleWETHYield\"],\n      }\n    },\n    COMP: {\n      abi: COMP,\n      decimals: 18,\n      token: \"COMP\",\n      enabled: true,\n      showAUM: true, // Include IDLE balance in AUM\n      showAPR: true, // Include COMP Apr\n      showPrice: true,\n      showBalance: true, // Include COMP balance in Portfolio Donut\n      disabledTokens: [],\n      protocol: \"compound\",\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      color: \"hsl(162, 100%, 41%)\",\n      address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE: {\n      abi: aToken,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      showPrice: true,\n      token: 'stkAAVE',\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      address: '0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens: {\n        1: [\"idleTUSDYield\", \"idleSUSDYield\", \"idleFEIYield\"]\n      }\n    },\n    WMATIC: {\n      abi: ERC20,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      token: 'WMATIC',\n      showPrice: true,\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      disabledTokens: [],\n      aprTooltipMode: false,\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      availableNetworks: [137, 80001],\n      // address:'0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', // Mumbai\n      address: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', // Polygon\n      addressForPrice: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0' // Mainnet\n    }\n  },\n  contracts: {\n    137: {\n      ProtocolDataProvider: {\n        abi: ProtocolDataProvider,\n        address: '0x7551b5D2763519d4e37e8B81929D336De671d46d'\n      },\n      ChildChainManager: {\n        abi: ChildChainManager,\n        // address:'0x2e5e27d50EFa501D90Ad3638ff8441a0C0C0d75e' // Mumbai\n        address: '0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa' // Matic\n      },\n      UniswapRouter: {\n        networkId: 1,\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506'\n      },\n    },\n    1: {\n      DepositManager: {\n        abi: DepositManager,\n        address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n      },\n      RootChainManager: {\n        abi: RootChainManager,\n        // address:'0xBbD7cBFA79faee899Eaf900F13C9065bF03B1A74' // Goerli\n        address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n      },\n      ProxyFactory: {\n        abi: MinimalInitializableProxyFactory,\n        address: \"0x91baced76e3e327ba7850ef82a7a8251f6e43fb8\"\n      },\n      LockedIDLE: {\n        abi: LockedIDLE,\n        address: '0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n      },\n      FeeTreasury: {\n        abi: FeeTreasury,\n        address: '0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n      },\n      PriceOracle: {\n        abi: PriceOracle,\n        address: '0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n        // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n      },\n      Timelock: {\n        abi: Timelock,\n        address: '0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n        // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n      },\n      EcosystemFund: {\n        abi: EcosystemFund,\n        address: '0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n        // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n      },\n      VesterFactory: {\n        abi: VesterFactory,\n        address: '0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n        // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n      },\n      IdleController: {\n        abi: IdleController,\n        address: '0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n        // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n      },\n      EarlyRewards: {\n        abi: EarlyRewards,\n        address: '0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n      },\n      GovernorAlpha: {\n        abi: GovernorAlpha,\n        address: '0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n        // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n      },\n      Comptroller: {\n        abi: Comptroller,\n        address: '0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n        // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n      },\n      UniswapRouter: {\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      BalancerExchangeProxy: {\n        abi: BalancerExchangeProxy,\n        address: '0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n      }\n    }\n  },\n  tokens: {\n    DAI: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    },\n    USDC: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    }\n  },\n  tranchflash: {\n    name: \"perpetual yield tranches\",\n    subtitle: \"Make yield your own.\",\n    desc: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\",\n    arrows: \"images/idlearrows.svg\",\n    juniorinfo:\n      \"<b>Junior Tranches</b><br>Higher risk, leveraged for variable rate rewards\",\n    seniorinfo:\n      \"<b>Senior Tranches</b><br>Lower risk, built-in coverage for variable rate rewards\",\n    helpcircle: \"images/help-circle.svg\",\n    questions: [\n      {\n        desc: \"How it Works?\",\n        msg: \"This product aggregates user deposits into underlying markets and allocates the accrued yield on the sum between two different risk profile subsets. You get to choose the strategy according to your risk tolerance. Users are able to deposit funds into either the Junior or Senior Tranches in exchange for a token indicating their claim on their principal and whatever yield is allocated for them. These aggregated holdings are then deposited into the specified originating lending market, in this current version Idle Best-Yield strategy.\"\n      },\n      {\n        desc: \"What happens in a case of a default?\",\n        msg: \"In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).\"\n      }\n    ]\n  },\n  tranches: {\n    AA: {\n      color: {\n        hex: \"#337de5\",\n        rgb: [51, 125, 229],\n        hsl: [\"215\", \"77%\", \"55%\"]\n      },\n      type: \"AA\",\n      route: \"senior\",\n      icon: \"Security\",\n      image: \"images/SeniorTranche.svg\",\n      bubble: \"images/SeniorBubble.svg\",\n      baseName: \"senior\",\n      name: \"Senior Tranche\",\n      features: [\n        \"Covered by Junior tranches funds\",\n        \"Minimized risk exposure\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds' coverage given by Junior Tranches\",\n        deposit: \"By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.\",\n      }\n    },\n    BB: {\n      color: {\n        hex: \"#FAB325\",\n        rgb: [250, 179, 37],\n        hsl: [\"40\", \"95%\", \"56%\"]\n      },\n      type: \"BB\",\n      route: \"junior\",\n      icon: \"TrendingUp\",\n      image: \"images/JuniorTranche.svg\",\n      bubble: \"images/JuniorBubble.svg\",\n      baseName: \"junior\",\n      name: \"Junior Tranche\",\n      features: [\n        \"Leverage yield using Senior tranches funds\",\n        \"Higher risk exposure by protecting senior tranches\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches\",\n        deposit: \"By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.\",\n      }\n    }\n  },\n  extraicons: {\n    best: {\n      icon: \"images/sidebar/best-on.svg\",\n      iconDark: \"images/sidebar/best-on-dark.svg\",\n      iconInactive: \"images/sidebar/best-off.svg\",\n      iconInactiveDark: \"images/sidebar/best-off-dark.svg\",\n    },\n    tranches: {\n      icon: \"images/sidebar/tranches-on.svg\",\n      iconDark: \"images/sidebar/tranches-on-dark.svg\",\n      iconInactive: \"images/strategies/tranches-off.svg\",\n      iconInactiveDark: \"images/strategies/tranches-off-dark.svg\"\n    },\n    risk: {\n      icon: \"images/sidebar/risk-on.svg\",\n      iconDark: \"images/sidebar/risk-on-dark.svg\",\n      iconInactive: \"images/sidebar/risk-off.svg\",\n      iconInactiveDark: \"images/sidebar/risk-off-dark.svg\"\n    },\n    stats: {\n      icon: \"images/sidebar/stats-on.svg\",\n      iconDark: \"images/sidebar/stats-on-dark.svg\",\n      iconInactive: \"images/sidebar/stats-off.svg\",\n      iconInactiveDark: \"images/sidebar/stats-off-dark.svg\"\n    },\n    tools: {\n      icon: \"images/sidebar/tools-on.svg\",\n      iconDark: \"images/sidebar/tools-on-dark.svg\",\n      iconInactive: \"images/sidebar/tools-off.svg\",\n      iconInactiveDark: \"images/sidebar/tools-off-dark.svg\"\n    },\n    forum: {\n      icon: \"images/sidebar/forum-on.svg\",\n      iconDark: \"images/sidebar/forum-on-dark.svg\",\n      iconInactive: \"images/sidebar/forum-off.svg\",\n      iconInactiveDark: \"images/sidebar/forum-off-dark.svg\"\n    },\n    stake: {\n      icon: \"images/sidebar/stake-on.svg\",\n      iconDark: \"images/sidebar/stake-on-dark.svg\",\n      iconInactive: \"images/sidebar/stake-off.svg\",\n      iconInactiveDark: \"images/sidebar/stake-off-dark.svg\"\n    },\n    leaderboard: {\n      icon: \"images/sidebar/leaderboard-on.svg\",\n      iconDark: \"images/sidebar/leaderboard-on-dark.svg\",\n      iconInactive: \"images/sidebar/leaderboard-off.svg\",\n      iconInactiveDark: \"images/sidebar/leaderboard-off-dark.svg\"\n    }, overview: {\n      icon: \"images/sidebar/overview-on.svg\",\n      iconDark: \"images/sidebar/overview-on-dark.svg\",\n      iconInactive: \"images/sidebar/overview-off.svg\",\n      iconInactiveDark: \"images/sidebar/overview-off-dark.svg\"\n    }, proposals: {\n      icon: \"images/sidebar/proposals-on.svg\",\n      iconDark: \"images/sidebar/proposals-on-dark.svg\",\n      iconInactive: \"images/sidebar/proposals-off.svg\",\n      iconInactiveDark: \"images/sidebar/proposals-off-dark.svg\"\n    }, delegate: {\n      icon: \"images/sidebar/delegate-on.svg\",\n      iconDark: \"images/sidebar/delegate-on-dark.svg\",\n      iconInactive: \"images/sidebar/delegate-off.svg\",\n      iconInactiveDark: \"images/sidebar/delegate-off-dark.svg\"\n    },\n  },\n  landingStrategies: {\n    tranches: {\n      networkId: 1,\n      token: \"FEI\",\n      visible: true,\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      strategy: 'tranches',\n      component: Tranches,\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      title: \"Perpetual Tranches\",\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      networkId: 1,\n      token: \"DAI\",\n      visible: true,\n      strategy: 'best',\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    polygon: {\n      token: \"DAI\",\n      visible: true,\n      networkId: 137,\n      enabledEnvs: [],\n      strategy: 'best',\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-on.svg\",\n      iconInactiveDark: \"images/strategies/best-on.svg\",\n      desc: \"Maximize your returns on Polygon across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    }\n  },\n  strategies: {\n    tranches: {\n      token: \"DAI\",\n      visible: true,\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      component: Tranches,\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      availableNetworks: [1, 137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    risk: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#2196F3\",\n      type: \"strategy\",\n      comingSoon: false,\n      titlePostfix: null,\n      addGovTokens: true,\n      iconName: \"Security\",\n      availableNetworks: [1],\n      title: \"Risk-Adjusted\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(211,67%,47%)\",\n      icon: \"images/strategies/risk-on.svg\",\n      iconInactive: \"images/strategies/risk-off.svg\",\n      iconInactiveDark: \"images/strategies/risk-white.svg\",\n      desc: \"Optimize your risk exposure across DeFi protocols\",\n      descLong: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.\",\n      descShort: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.\"\n    }\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats: {\n    enabled: true, // Enable endpoint\n    availableNetworks: [1, 137],\n    rates: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/rates/\",\n        137: \"https://api-polygon.idle.finance/rates/\"\n      }\n    },\n    tvls: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/tvls/\",\n        137: \"https://api-polygon.idle.finance/tvls/\"\n      }\n    },\n    aprs: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/aprs/\",\n        137: \"https://api-polygon.idle.finance/aprs/\"\n      }\n    },\n    substack: {\n      TTL: 1800,\n      endpoint: {\n        1: \"https://api.idle.finance/substack/\",\n        137: \"https://api-polygon.idle.finance/substack/\"\n      }\n    },\n    scores: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/scores/\"\n      }\n    },\n    config: {\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions: {\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3: {\n        label: \"Idle V3\",\n        additionalProtocols: [],\n        endTimestamp: 1597237542,\n        startTimestamp: 1589801874,\n        showPerformanceTooltip: false,\n        strategiesParams: {\n          risk: {\n            endTimestamp: 1597233922\n          }\n        },\n        enabledStrategies: [\"best\", \"risk\"],\n        enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"]\n      },\n      v4: {\n        label: \"Idle V4\",\n        endTimestamp: null,\n        startTimestamp: 1597442400, // 1598220000\n        enabledStrategies: [\"best\", \"risk\"],\n        showPerformanceTooltip: true,\n        strategiesParams: {\n          risk: {\n            startTimestamp: 1599183170\n          }\n        },\n        enabledTokens: ['DAI', 'USDC', 'USDT', 'TUSD', 'SUSD', 'WBTC', 'WETH', 'RAI', 'FEI'],\n        additionalProtocols: [\n          {\n            decimals: 16,\n            protocol: \"compound\",\n            name: \"compoundWithCOMP\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\"]\n          },\n          {\n            decimals: 18,\n            protocol: \"aavev2\",\n            name: \"aavev2WithStkAAVE\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\", \"RAI\"]\n          }\n        ]\n      }\n    },\n    tokens: {\n      DAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          rgb: [250, 184, 51],\n          hex: '#F7B24A',\n          hsl: ['40', '95%', '59%']\n        },\n        chart: {\n          labelTextColorModifiers: ['darker', 2]\n        },\n        startTimestamp: '2020-02-11',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip: 'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      ETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      STETH: {\n        decimals: 18,\n        enabled: true,\n        label: 'stETH',\n        color: {\n          hex: '#00a3ff',\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        },\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      CVX: {\n        decimals: 18,\n        enabled: true,\n        label: 'CVX',\n        color: {\n          hex: '#3a3a3a',\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        },\n        address: '0x4e3fbd56cd56c3e72c1403e103b45db9da5b9d2b'\n      },\n      CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'CRV',\n        color: {\n          hex: '#3466a3',\n          rgb: [52, 102, 163],\n          hsl: ['213', '52%', '42%']\n        },\n        address: '0xD533a949740bb3306d119CC777fa900bA034cd52'\n      },\n      FRAX3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'FRAX3CRV',\n        icon: \"images/tokens/FRAX3CRV.png\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B'\n      },\n      MIM3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MIM3CRV',\n        color: {\n          hex: '#231b46',\n          rgb: [35, 27, 70],\n          hsl: ['251', '44%', '19%']\n        },\n        address: '0x5a6A4D54456819380173272A5E8E9B9904BdF41B'\n      },\n      MATIC: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#8247E5',\n          rgb: [130, 71, 229],\n          hsl: ['262, 75%, 59%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      USD: {\n        enabled: true,\n        color: {\n          hex: \"#85bb65\",\n          rgb: [133, 187, 101],\n          hsl: [\"98\", \"39%\", \"56%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        address: null,\n        startTimestamp: \"2020-02-04\"\n      },\n      USDC: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USDT: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#22a079\",\n          rgb: [34, 160, 121],\n          hsl: [\"161\", \"65%\", \"38%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      TUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"0340a1\",\n          rgb: [3, 64, 161],\n          hsl: [\"217\", \"96%\", \"32%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\"\n      },\n      SUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#1e1a31\",\n          rgb: [30, 26, 49],\n          hsl: [\"250\", \"31%\", \"15%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x57ab1ec28d129707052df4df418d58a2d46d5f51\"\n      },\n      WBTC: {\n        decimals: 8,\n        enabled: true,\n        color: {\n          hex: \"#eb9444\",\n          rgb: [235, 148, 68],\n          hsl: [\"29\", \"81%\", \"59%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"wbtcDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      WETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#ee1f79\",\n          rgb: [238, 31, 121],\n          hsl: [\"334\", \"86%\", \"53%\"]\n        },\n        startTimestamp: \"2021-02-16\",\n        conversionRateField: \"wethDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      COMP: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#00d395\",\n          rgb: [0, 211, 149],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\"\n      },\n      stkAAVE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        startTimestamp: \"2021-04-30\",\n        conversionRateField: \"aaveDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\"\n      },\n      IDLE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#0d55bb\",\n          rgb: [13, 85, 187],\n          hsl: [\"215\", \"87%\", \"39%\"]\n        },\n        startTimestamp: \"2020-11-10\",\n        conversionRateField: \"idleDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n      },\n      RAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#378879\",\n          rgb: [55, 136, 121],\n          hsl: [\"169\", \"42%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-11-16\",\n        icon: \"images/tokens/RAI.png\",\n        conversionRateField: \"raiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x03ab458634910aad20ef5f1c8ee96f1d6ac54919\"\n      },\n      FEI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#229b6e',\n          rgb: [34, 155, 110],\n          hsl: ['158', '64%', '37%']\n        },\n        disabledCharts: ['score'],\n        startTimestamp: '2021-09-24',\n        conversionRateField: 'feiDAIPrice',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      WMATIC: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#2891f8',\n          rgb: [40, 145, 248],\n          hsl: ['210', '94%', '56%']\n        },\n        startTimestamp: '2021-05-25',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0',\n      },\n      'idleDAI+idleUSDC+idleUSDT': {\n        decimals: 18,\n        enabled: false,\n        name: 'Curve.fi',\n        color: {\n          hex: '#ff0000',\n          rgb: [255, 0, 0],\n          hsl: ['0', '100%', '50%']\n        },\n        startTimestamp: \"2020-06-15\"\n      }\n    },\n    protocols: {\n      compound: {\n        legend: true,\n        enabled: true,\n        label: \"Compound\",\n        color: {\n          rgb: [0, 209, 146],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        }\n      },\n      aavev2WithStkAAVE: {\n        enabled: true,\n        label: \"Aave V2 + stkAAVE\",\n        startTimestamp: \"2021-05-08 14:30:00\",\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        rateField: [\"rate\", \"aaveAdditionalAPR\"]\n      },\n      compoundWithCOMP: {\n        enabled: true,\n        label: \"Compound + COMP\",\n        color: {\n          rgb: [0, 153, 107],\n          hsl: [\"162\", \"100%\", \"30%\"]\n        },\n        rateField: [\"rate\", \"compoundAdditionalAPR\"]\n      },\n      fulcrum: {\n        legend: false,\n        enabled: false,\n        label: \"Fulcrum\",\n        color: {\n          rgb: [2, 138, 192],\n          hsl: [\"197\", \"98%\", \"38%\"]\n        }\n      },\n      dsr: {\n        label: \"DSR\",\n        enabled: false,\n        icon: \"CHAI.png\",\n        color: {\n          rgb: [222, 52, 67],\n          hsl: [\"355\", \"72%\", \"54%\"]\n        }\n      },\n      dydx: {\n        legend: true,\n        label: \"DyDx\",\n        enabled: true,\n        color: {\n          rgb: [87, 87, 90],\n          hsl: [\"240\", \"2%\", \"35%\"]\n        }\n      },\n      iearn: {\n        label: \"Yearn\",\n        enabled: true\n      },\n      aave: {\n        label: \"Aave V1\",\n        legend: false,\n        enabled: false,\n        color: {\n          rgb: [230, 131, 206],\n          hsl: [\"315\", \"66%\", \"71%\"]\n        }\n      },\n      aavev2: {\n        legend: true,\n        enabled: true,\n        icon: \"aave.svg\",\n        label: \"Aave V2\",\n        color: {\n          rgb: [151, 79, 141],\n          hsl: [\"308\", \"31%\", \"45%\"]\n        }\n      },\n      cream: {\n        legend: true,\n        enabled: true,\n        label: \"Cream\",\n        icon: \"cream.svg\",\n        color: {\n          rgb: [105, 226, 220],\n          hsl: [\"177\", \"68%\", \"65%\"]\n        }\n      },\n      lido: {\n        legend: false,\n        enabled: true,\n        label: \"Lido\",\n        icon: \"lido.png\",\n        color: {\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        }\n      },\n      convex: {\n        legend: false,\n        enabled: true,\n        label: \"Convex\",\n        color: {\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        }\n      },\n      fuse: {\n        legend: true,\n        enabled: true,\n        label: \"Fuse\",\n        icon: \"fuse.png\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: [\"0\", \"0%\", \"0%\"]\n        }\n      },\n      curve: {\n        label: \"\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      },\n      idle: {\n        label: \"Idle\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      }\n    }\n  },\n  contract: {\n    methods: {\n      refreshIdleSpeed: {\n        enabled: true,\n        availableNetworks: [1]\n      },\n      redeem: {\n        skipRebalance: true,\n        metaTransactionsEnabled: false\n      },\n      deposit: {\n        skipMint: true,\n        minAmountForMint: 100000,\n        erc20ForwarderEnabled: true,\n        skipMintCheckboxEnabled: true,\n        metaTransactionsEnabled: false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract: {\n          forwarder: {\n            enabled: true,\n            abi: erc20Forwarder,\n            name: \"erc20Forwarder\",\n            function: \"emitMessage\",\n            address: \"0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda\" // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens: {\n            DAI: {\n              enabled: true,\n              permitType: \"DAI_Permit\",\n              abi: IdleDepositForwarder,\n              function: \"permitAndDeposit\", // foo\n              name: \"IdleDepositForwarderDAI\",\n              address: \"0xDe3c769cCD1878372864375e9f89956806B86daA\" // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC: {\n              enabled: true,\n              abi: IdleDepositForwarder,\n              permitType: \"EIP2612_Permit\",\n              name: \"IdleDepositForwarderUSDC\",\n              function: \"permitEIP2612AndDeposit\", // 'foo'\n              address: \"0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761\" // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            }\n          }\n        },\n        proxyContract: {\n          enabled: false,\n          abi: IdleProxyMinter,\n          name: \"IdleProxyMinter\",\n          function: \"mintIdleTokensProxy\",\n          address: \"0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a\"\n        }\n      },\n      migrate: {\n        skipRebalance: true,\n        minAmountForRebalance: 10000,\n        minAmountForRebalanceMetaTx: 10000\n      },\n      redeemGovTokens: {\n        enabled: true\n      },\n      redeemSkipGov: {\n        enabled: true,\n        disabledTokens: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"]\n      },\n      rebalance: {\n        enabled: true,\n        abi: IdleRebalancerV3\n      }\n    }\n  },\n  network: { // Network configurations\n    availableNetworks: {\n      1: {\n        version: 'v1',\n        name: 'Ethereum',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        network: 'mainnet',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Mainnet',\n      },\n      42: {\n        name: 'Kovan',\n        color: '#9064ff',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Kovan',\n      },\n      3: {\n        name: 'Ropsten',\n        color: '#ff4a8d',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Ropsten',\n      },\n      4: {\n        name: 'Rinkeby',\n        color: '#f6c343',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Rinkeby',\n      },\n      137: {\n        version: 'v1',\n        name: 'Polygon',\n        color: '#8247E5',\n        network: 'mainnet',\n        baseToken: 'MATIC',\n        explorer: 'polygon',\n        provider: 'polygon',\n        chainName: 'Matic(Polygon) Mainnet',\n      },\n      5: {\n        name: 'Görli',\n        color: '#3099f2',\n        baseToken: 'ETH',\n        version: 'mumbai',\n        network: 'testnet',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Görli',\n      },\n      1337: {\n        name: 'Hardhat',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Mainnet',\n      },\n      80001: {\n        name: 'Mumbai',\n        color: '#4474f1',\n        version: 'mumbai',\n        network: 'testnet',\n        baseToken: 'MATIC',\n        explorer: 'polygon',\n        provider: 'polygon',\n        chainName: 'Matic Testnet Mumbai',\n      }\n    },\n    isForked: false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork: 1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear: 2371428,\n    secondsPerYear: 31536000,\n    requiredConfirmations: 1,\n    enabledNetworks: [1, 137],\n    firstBlockNumber: 8119247,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers: {\n      infura: {\n        key: env.REACT_APP_INFURA_KEY,\n        rpc: {\n          5: 'https://goerli.infura.io/v3/',\n          42: 'https://kovan.infura.io/v3/',\n          1: 'https://mainnet.infura.io/v3/',\n          1337: 'https://mainnet.infura.io/v3/',\n          137: 'https://mainnet.infura.io/v3/',\n          80001: 'https://goerli.infura.io/v3/'\n        }\n      },\n      polygon: {\n        enabled: true,\n        // key:env.REACT_APP_POLYGON_KEY,\n        key: env.REACT_APP_INFURA_KEY,\n        baseUrl: {\n          137: 'https://polygonscan.com',\n          80001: 'https://explorer-mumbai.maticvigil.com'\n        },\n        networkPairs: {\n          1: 137,\n          137: 1,\n          5: 80001,\n          80001: 5\n        },\n        publicRpc: {\n          137: 'https://polygon-rpc.com'\n        },\n        rpc: {\n          // 1:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 5:'https://rpc-mumbai.maticvigil.com/v1/',\n          // 137:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 80001:'https://rpc-mumbai.maticvigil.com/v1/'\n\n          1: 'https://polygon-mainnet.infura.io/v3/',\n          5: 'https://polygon-mainnet.infura.io/v3/',\n          137: 'https://polygon-mainnet.infura.io/v3/',\n          80001: 'https://polygon-mainnet.infura.io/v3/'\n\n          // 1:'https://matic-mainnet.chainstacklabs.com/',\n          // 137:'https://matic-mainnet.chainstacklabs.com/',\n          // 5:'https://matic-mumbai.chainstacklabs.com/',\n          // 80001:'https://matic-mumbai.chainstacklabs.com/' \n        }\n      },\n      nexus: {\n        endpoints: {\n          1: \"https://api.nexusmutual.io/v1/\",\n          42: \"https://api.staging.nexusmutual.io/v1/\"\n        }\n      },\n      ens: {\n        enabled: true,\n        supportedNetworks: [1]\n      },\n      covalent: {\n        enabled: true,\n        key: env.REACT_APP_COVALENT_KEY,\n        endpoints: {\n          137: 'https://api.covalenthq.com/v1/137/',\n          80001: 'https://api.covalenthq.com/v1/80001/'\n        }\n      },\n      etherscan: {\n        enabled: true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints: {\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          5: 'https://api-goerli.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl: {\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          5: 'https://goerli.etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      snapshot: {\n        whitelist: [\n          \"0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa\",\n          \"0xf12ce5807e3d3128B876aa1Cec0632D63547E22E\"\n        ],\n        endpoints: {\n          proposals: \"https://hub.snapshot.org/graphql\"\n        },\n        urls: {\n          proposals: \"https://signal.idle.finance/#/idlefinance.eth/proposal/\"\n        },\n        queries: {\n          proposals: `query Proposals {\n            proposals (\n            first: 20,\n            skip: 0,\n            where: {\n            space_in: [\"idlefinance.eth\"]\n            },\n            orderBy: \"created\",\n            orderDirection: desc\n            ) {\n            id\n            ipfs\n            strategies{\n              params\n            }\n            title\n            body\n            choices\n            start\n            end\n            snapshot\n            state\n            author\n            space {\n            id\n            name\n            }\n            }\n            }`,\n          proposalsActive: `query Proposals {\n              proposals (\n              first: 20,\n              skip: 0,\n              where: {\n              space_in: [\"idlefinance.eth\"],\n              state:\"active\"\n              },\n              orderBy: \"created\",\n              orderDirection: desc\n              ) {\n              id\n              ipfs\n              strategies{\n                params\n              }\n              title\n              body\n              choices\n              start\n              end\n              snapshot\n              state\n              author\n              space {\n              id\n              name\n              }\n              }\n              }`\n        }\n      },\n      biconomy: {\n        enabled: true,\n        enableLogin: false,\n        supportedNetworks: [1, 42],\n        disabledWallets: [\"authereum\"],\n        endpoints: {\n          limits: \"https://api.biconomy.io/api/v1/dapp/checkLimits\"\n        },\n        params: {\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: \"36572ec9-ae5c-4c4a-9530-f3ae7c7ac829\"\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID: {\n        enabled: false,\n        supportedNetworks: [1],\n        getNetwork: (networkId, availableNetworks) => {\n          let networkName = null;\n          switch (networkId) {\n            case 1:\n              networkName = \"mainnet\";\n              break;\n            default:\n              networkName = availableNetworks[networkId]\n                ? availableNetworks[networkId].toLowerCase()\n                : \"mainnet\";\n              break;\n          }\n          return networkName;\n        },\n        params: {\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: \"mainnet\"\n        }\n      }\n    }\n  },\n  events: {\n    DAI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    },\n    FEI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    }\n  },\n  notifications: [\n    {\n      enabled: false,\n      end: 1612282726374,\n      start: 1611677841027,\n      date: \"Jan 26, 2021 16:18 UTC\",\n      title: \"Cover Protocol Available\",\n      hash: \"/dashboard/tools/cover-protocol\",\n      image: \"/images/protocols/cover-logo.svg\",\n      text: \"Protect your portfolio with Cover Protocol\"\n    }\n  ],\n  tools: {\n    stake: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      route: \"staking\",\n      subComponent: Staking,\n      availableNetworks: [1],\n      desc: \"Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          IDLE: {\n            component: IdleStaking,\n            contract: {\n              abi: stkIDLE,\n              decimals: 18,\n              name: \"stkIDLE\",\n              fromBlock: 12561464,\n              rewardToken: \"IDLE\",\n              address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n            },\n            feeDistributor: {\n              fromBlock: 12649361,\n              abi: StakingFeeDistributor,\n              name: \"StakingFeeDistributor\",\n              address: \"0xbabb82456c013fd7e3f25857e0729de8207f80e2\" // Mainnet\n            },\n            abi: IDLE,\n            name: \"IDLE\",\n            token: \"IDLE\",\n            decimals: 18,\n            enabled: true,\n            label: \"IDLE Token\",\n            icon: \"images/tokens/IDLE.svg\",\n            address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // Mainnet\n            poolLink:\n              \"https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n          },\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 120,\n              rewardToken: \"IDLE\",\n              address: \"0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d\" // Mainnet\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/ETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0xa7f11e026a0af768d285360a855f2bded3047530\", // Mainnet\n            poolLink:\n              \"https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530\"\n          }\n        }\n      }\n    },\n    stakePolygon: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      subComponent: Staking,\n      availableNetworks: [137],\n      route: \"staking-polygon\",\n      desc: \"Stake your Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 60,\n              rewardToken: \"IDLE\",\n              address: \"0x59CDF902b6A964CD5dB04d28f12b774bFB876Be9\" // Polygon\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/WETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\", // Polygon\n            poolLink: \"https://analytics-polygon.sushi.com/pairs/0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\"\n          }\n        }\n      }\n    },\n    nexusMutual: {\n      enabled: true,\n      icon: \"Security\",\n      route: \"coverage\",\n      label: \"Coverage\",\n      availableNetworks: [1],\n      desc: \"Buy Nexus Mutual coverage without KYC for your deposits\",\n      subComponent: NexusMutual,\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleDAIYield\",\n            token: \"idleDAIYield\", // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000011\",\n            realAddress: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\", // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleUSDTYield\",\n            token: \"idleUSDTYield\", // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000012\",\n            realAddress: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          }\n        }\n      },\n      directProps: {\n        // startBlock:25858186, // Kovan\n        startBlock: 12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo: {\n          abi: NexusMutualDistributor,\n          name: \"NexusMutualDistributor\",\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address: \"0xf2b36f823eae36e53a5408d8bd452748b24fbf76\" // Mainnet\n        },\n        incidentsInfo: {\n          abi: NexusMutualIncidents,\n          name: \"NexusMutualIncidents\",\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address: \"0x8ceba69a8e96a4ce71aa65859dbdb180b489a719\" // Mainnet\n        }\n      }\n    },\n    b2bVesting: {\n      enabled: true,\n      visible: true,\n      icon: \"CloudUpload\",\n      label: \"B2B Vesting\",\n      availableNetworks: [1],\n      route: \"b2b-vesting-contract\",\n      subComponent: DeployB2BVesting,\n      desc: 'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props: {\n        contracts: {\n          vesterImplementation: {\n            abi: B2BVester,\n            address: \"0x3024656ae91d7bf724f613c314bc56030ba2344c\"\n          }\n        }\n      }\n    },\n    polygonBridge: {\n      enabled: true,\n      route: 'polygon-bridge',\n      availableNetworks: [1, 137],\n      subComponent: PolygonBridge,\n      image: 'images/protocols/polygon.svg',\n      label: 'Ethereum ⇔ Polygon Bridge',\n      desc: 'Transfer your tokens from Ethereum to Polygon and vice versa with Plasma and PoS Bridge.',\n      props: {\n        contracts: {\n          ERC20Predicate: {\n            abi: ERC20Predicate,\n            name: 'ERC20Predicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf' // Mainnet\n          },\n          EtherPredicate: {\n            abi: EtherPredicate,\n            name: 'EtherPredicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30' // Mainnet\n          },\n          DepositManager: {\n            abi: DepositManager,\n            name: 'DepositManager',\n            address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n          },\n          RootChainManager: {\n            name: 'RootChainManager',\n            address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n          },\n          StateSender: {\n            name: 'StateSender',\n            address: '0x28e4F3a7f651294B9564800b2D01f35189A5bFbE'\n          }\n        },\n        availableTokens: {\n          /*\n          DERC20:{\n            decimals:18,\n            enabled:true,\n            name:'DERC20',\n            token:'DERC20',\n            rootToken:{\n              name:'DERC20',\n              abi:DummyERC20,\n              address:'0x655F2166b0709cd575202630952D71E2bB0d61Af' // Goerli\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'DummyERC20',\n              address:'0xfe4F5145f6e09952a5ba9e956ED0C25e3Fa4c7F1' // Mumbai\n            }\n          },\n          */\n          MATIC: {\n            name: 'MATIC',\n            token: 'MATIC',\n            decimals: 18,\n            enabled: true,\n            sendValue: true,\n            bridgeType: 'plasma',\n            rootToken: {\n              abi: ERC20,\n              name: 'MATIC',\n              address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childMATIC',\n              address: '0x0000000000000000000000000000000000001010' // Matic\n            }\n          },\n          WETH: {\n            name: 'WETH',\n            token: 'ETH',\n            decimals: 18,\n            enabled: true,\n            bridgeType: 'pos',\n            childToken: {\n              abi: ChildERC20,\n              name: 'maticWETH',\n              address: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          /*\n          WETH:{\n            name:'WETH',\n            token:'WETH',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'WETH',\n              address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          */\n          DAI: {\n            name: 'DAI',\n            token: 'DAI',\n            decimals: 18,\n            enabled: true,\n            sendValue: false,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: DAI,\n              name: 'DAI',\n              // address:'0x6311344B50D2077BF9804d376EA4C2cEDcB75C1f', // Goerli\n              address: '0x6b175474e89094c44da98b954eedeac495271d0f', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childDAI',\n              // address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F', // Mumbai\n              address: '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063' // Matic\n            }\n          },\n          USDC: {\n            decimals: 6,\n            name: 'USDC',\n            token: 'USDC',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: USDC,\n              name: 'USDC',\n              // address:'0x98339D8C260052B7ad81c28c16C0b98420f2B46a' // Goerli\n              address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              // address:'0x6D4dd09982853F08d9966aC3cA4Eb5885F16f2b2' // Mubai\n              address: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174' // Matic\n            }\n          },\n          IDLE: {\n            decimals: 18,\n            name: 'IDLE',\n            token: 'IDLE',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: IDLE,\n              name: 'IDLE',\n              address: '0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              address: '0xc25351811983818c9fe6d8c580531819c8ade90f' // Matic\n            }\n          },\n          /*\n          AAVE:{\n            decimals:18,\n            name:'AAVE',\n            token:'AAVE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'AAVE',\n              address:'0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childAAVE',\n              address:'0xD6DF932A45C0f255f85145f286eA0b292B21C90B' // Matic\n            }\n          }\n          */\n        }\n      }\n    },\n    ethWrapper: {\n      enabled: true,\n      label: 'ETH Wrapper',\n      route: 'eth-wrapper',\n      availableNetworks: [1, 42],\n      subComponent: TokenWrapper,\n      image: 'images/tokens/WETH.svg',\n      desc: 'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props: {\n        startContract: {\n          name: 'ETH',\n          token: 'ETH',\n          decimals: 18,\n          wrapMethod: 'deposit',\n        },\n        destContract: {\n          abi: WETH,\n          name: 'WETH',\n          decimals: 18,\n          token: 'WETH',\n          unwrapMethod: 'withdraw',\n          address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol: {\n      enabled: false,\n      availableNetworks: [1],\n      label: 'Cover Protocol',\n      route: 'cover-protocol',\n      subComponent: CoverProtocol,\n      image: 'images/protocols/cover-logo.svg',\n      desc: 'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl: 'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props: {\n        contract: {\n          decimals: 18,\n          abi: CoverMint,\n          name: 'CoverMint',\n          address: '0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages: [\n          {\n            collateral: \"DAI\",\n            expirationTimestamp: 1714470400,\n            tokens: {\n              Claim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                address: \"0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                  address: \"0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c\"\n                }\n              },\n              NoClaim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                address: \"0x53df0bfa014b7522299c129c5a7b318f02adb469\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                  address: \"0xce0e9e7a1163badb7ee79cfe96b5148e178cab73\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    batchDeposit: {\n      enabled: true,\n      icon: \"Storage\",\n      claimEnabled: true,\n      depositEnabled: true,\n      availableNetworks: [1],\n      route: \"batch-deposit\",\n      label: \"Batch Deposit\",\n      subComponent: BatchDeposit,\n      desc: \"Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintDAI\",\n              address: \"0x633fb4d38B24dC890b11Db2AE2B248D13F996A79\", // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  usePermit: true,\n                  label: \"Deposit\",\n                  permitName: \"permitAndDeposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 6,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintUSDC\",\n              address: \"0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B\", // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  label: \"Deposit\",\n                  usePermit: true,\n                  permitName: \"permitEIP2612AndDepositUnlimited\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    batchMigration: {\n      enabled: true,\n      claimEnabled: true,\n      icon: \"FileDownload\",\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-migration\",\n      label: \"Batch Migration\",\n      subComponent: BatchMigration,\n      desc: \"Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            name: \"idleDAIYieldV3\",\n            token: \"idleDAIYieldV3\",\n            address: \"0x78751b12da02728f467a44eac40f5cbc16bd7934\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAI\",\n              address: \"0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCYieldV3\",\n            token: \"idleUSDCYieldV3\",\n            address: \"0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDC\",\n              address: \"0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTYieldV3\",\n            token: \"idleUSDTYieldV3\",\n            address: \"0x63D27B3DA94A9E871222CB0A32232674B02D2f2D\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDT\",\n              address: \"0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleSUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"SUSD\",\n            name: \"idleSUSDYieldV3\",\n            token: \"idleSUSDYieldV3\",\n            address: \"0xe79e177d2a5c7085027d7c64c8f271c81430fc9b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterSUSD\",\n              address: \"0xE2eE519399a49f1A2004a25DA61e82867A69b9b1\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleTUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"TUSD\",\n            name: \"idleTUSDYieldV3\",\n            token: \"idleTUSDYieldV3\",\n            address: \"0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterTUSD\",\n              address: \"0x174a273f0ea28e55b6dd13259aa43d262b863a86\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleWBTCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"WBTC\",\n            name: \"idleWBTCYieldV3\",\n            token: \"idleWBTCYieldV3\",\n            address: \"0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterWBTC\",\n              address: \"0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleDAISafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"DAI\",\n            name: \"idleDAISafeV3\",\n            token: \"idleDAISafeV3\",\n            address: \"0x1846bdfDB6A0f5c473dEc610144513bd071999fB\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAISafe\",\n              address: \"0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCSafeV3\",\n            token: \"idleUSDCSafeV3\",\n            address: \"0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDCSafe\",\n              address: \"0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTSafeV3\",\n            token: \"idleUSDTSafeV3\",\n            address: \"0x42740698959761baf1b06baa51efbd88cb1d862b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDTSafe\",\n              address: \"0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    tokenMigration: {\n      enabled: true,\n      icon: \"SwapHoriz\",\n      route: \"convert\",\n      availableNetworks: [1],\n      label: \"Token Migration\",\n      desc: \"Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle\",\n      subComponent: TokenMigration,\n      props: {\n        migrationContract: {\n          name: \"IdleConverterV4\",\n          abi: IdleConverterPersonalSignV4,\n          address: \"0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743\",\n          oldAddresses: [],\n          functions: [\n            {\n              label: \"Migrate\",\n              name: \"migrateFromToIdle\"\n            }\n          ]\n        },\n        availableStrategies: [\"best\", \"risk\"],\n        availableTokens: {\n          idleDAIv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            baseToken: \"DAI\",\n            abi: IdleTokenV2,\n            token: \"idleDAIOld\",\n            icon: \"images/tokens/idleDAI.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0x10eC0D497824e342bCB0EDcE00959142aAa766dD\"\n          },\n          cDAI: {\n            decimals: 8,\n            enabled: true,\n            token: \"cDAI\",\n            baseToken: \"DAI\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\"\n          },\n          iDAI: {\n            decimals: 18,\n            enabled: false,\n            token: \"iDAI\",\n            baseToken: \"DAI\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x493c57c4763932315a328269e1adad09653b9081\"\n          },\n          aDAI: {\n            decimals: 18,\n            enabled: true,\n            token: \"aDAI\",\n            protocol: \"aave\",\n            baseToken: \"DAI\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\"\n          },\n          yDAIv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv3\",\n            abi: yDAIv3.abi,\n            baseToken: \"DAI\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xC2cB1040220768554cf699b0d863A3cd4324ce32\"\n          },\n          yDAIv2: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv2\",\n            baseToken: \"DAI\",\n            abi: yDAIv3.abi,\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\"\n          },\n          idleUSDCv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            abi: IdleTokenV2,\n            baseToken: \"USDC\",\n            token: \"idleUSDCOld\",\n            icon: \"images/tokens/idleUSDC.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0xeB66ACc3d011056B00ea521F8203580C2E5d3991\"\n          },\n          cUSDC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x39aa39c021dfbae8fac545936693ac917d5e7563\"\n          },\n          iUSDC: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\"\n          },\n          aUSDC: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDC\",\n            protocol: \"aave\",\n            baseToken: \"USDC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\"\n          },\n          yUSDCv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv3\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x26EA744E5B887E5205727f55dFBE8685e3b21951\"\n          },\n          yUSDCv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv2\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\"\n          },\n          cUSDT: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\"\n          },\n          iUSDT: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x8326645f3aa6de6420102fdb7da9e3a91855045b\"\n          },\n          aUSDT: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDT\",\n            protocol: \"aave\",\n            baseToken: \"USDT\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\"\n          },\n          yUSDTv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv3\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\"\n          },\n          yUSDTv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv2\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\"\n          },\n          idleSUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"SUSD\",\n            token: \"idleSUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleSUSDYield.svg\",\n            address: \"0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5\"\n          },\n          aSUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aSUSD\",\n            protocol: \"aave\",\n            baseToken: \"SUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x625aE63000f46200499120B906716420bd059240\"\n          },\n          ySUSDv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"ySUSDv3\",\n            abi: ySUSDv3,\n            baseToken: \"SUSD\",\n            protocol: \"iearn\",\n            availableStrategies: [\"best\"],\n            icon: \"images/tokens/ySUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xf61718057901f84c4eec4339ef8f0d86d2b45600\"\n          },\n          idleTUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"TUSD\",\n            token: \"idleTUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleTUSDYield.svg\",\n            address: \"0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6\"\n          },\n          aTUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aTUSD\",\n            protocol: \"aave\",\n            baseToken: \"TUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x4DA9b813057D04BAef4e5800E36083717b4a0341\"\n          },\n          yTUSDv3: {\n            decimals: 18,\n            enabled: true,\n            abi: yTUSDv3,\n            token: \"yTUSDv3\",\n            baseToken: \"TUSD\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yTUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x73a052500105205d34daf004eab301916da8190f\"\n          },\n          cWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\"\n          },\n          iWBTC: {\n            decimals: 8,\n            enabled: false,\n            token: \"iWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\"\n          },\n          aWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"aWBTC\",\n            protocol: \"aave\",\n            baseToken: \"WBTC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\"\n          }\n        }\n      }\n    },\n    addFunds: {\n      enabled: true,\n      route: 'add-funds',\n      label: 'Add Funds',\n      availableNetworks: [1],\n      icon: 'AddCircleOutline',\n      desc: 'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent: BuyModal,\n      directProps: {\n        showInline: true,\n        showAllTokens: true\n      }\n    },\n    tokenSwap: {\n      enabled: true,\n      icon: \"Sync\",\n      route: \"token-swap\",\n      label: \"Token Swap\",\n      availableNetworks: [1],\n      desc: \"Easily swap your tokens using Kyber Swap widget\",\n      subComponent: TokenSwap,\n      props: {\n        availableTokens: {\n          ETH: { token: \"ETH\" },\n          DAI: { token: \"DAI\" },\n          SUSD: { token: \"SUSD\" },\n          TUSD: { token: \"TUSD\" },\n          USDC: { token: \"USDC\" },\n          USDS: { token: \"USDS\" },\n          USDT: { token: \"USDT\" },\n          WBTC: { token: \"WBTC\" },\n          WETH: { token: \"WETH\" },\n          BUSD: { token: \"BUSD\" },\n          EURS: { token: \"EURS\" },\n          \"2KEY\": { token: \"2KEY\" },\n          ABT: { token: \"ABT\" },\n          ABYSS: { token: \"ABYSS\" },\n          AMPL: { token: \"AMPL\" },\n          ANT: { token: \"ANT\" },\n          BAM: { token: \"BAM\" },\n          BAND: { token: \"BAND\" },\n          BAT: { token: \"BAT\" },\n          BLZ: { token: \"BLZ\" },\n          BNT: { token: \"BNT\" },\n          BQX: { token: \"BQX\" },\n          BTU: { token: \"BTU\" },\n          CDT: { token: \"CDT\" },\n          CVC: { token: \"CVC\" },\n          DAT: { token: \"DAT\" },\n          DGX: { token: \"DGX\" },\n          EKG: { token: \"EKG\" },\n          ELF: { token: \"ELF\" },\n          ENJ: { token: \"ENJ\" },\n          EQUAD: { token: \"EQUAD\" },\n          FXC: { token: \"FXC\" },\n          GDC: { token: \"GDC\" },\n          GEN: { token: \"GEN\" },\n          GHT: { token: \"GHT\" },\n          GNO: { token: \"GNO\" },\n          IOST: { token: \"IOST\" },\n          KEY: { token: \"KEY\" },\n          KNC: { token: \"KNC\" },\n          LEND: { token: \"LEND\" },\n          LINK: { token: \"LINK\" },\n          LOOM: { token: \"LOOM\" },\n          LRC: { token: \"LRC\" },\n          MANA: { token: \"MANA\" },\n          MCO: { token: \"MCO\" },\n          MET: { token: \"MET\" },\n          MFG: { token: \"MFG\" },\n          MKR: { token: \"MKR\" },\n          MLN: { token: \"MLN\" },\n          MTL: { token: \"MTL\" },\n          MYB: { token: \"MYB\" },\n          NEXXO: { token: \"NEXXO\" },\n          NPXS: { token: \"NPXS\" },\n          OGN: { token: \"OGN\" },\n          OMG: { token: \"OMG\" },\n          OST: { token: \"OST\" },\n          PAX: { token: \"PAX\" },\n          PBTC: { token: \"PBTC\" },\n          PLR: { token: \"PLR\" },\n          PNK: { token: \"PNK\" },\n          POLY: { token: \"POLY\" },\n          POWR: { token: \"POWR\" },\n          PT: { token: \"PT\" },\n          QKC: { token: \"QKC\" },\n          QNT: { token: \"QNT\" },\n          RAE: { token: \"RAE\" },\n          REN: { token: \"REN\" },\n          REP: { token: \"REP\" },\n          REQ: { token: \"REQ\" },\n          RLC: { token: \"RLC\" },\n          RSR: { token: \"RSR\" },\n          RSV: { token: \"RSV\" },\n          SAN: { token: \"SAN\" },\n          SNT: { token: \"SNT\" },\n          SNX: { token: \"SNX\" },\n          SPIKE: { token: \"SPIKE\" },\n          SPN: { token: \"SPN\" },\n          TKN: { token: \"TKN\" },\n          TKX: { token: \"TKX\" },\n          TRYB: { token: \"TRYB\" },\n          UBT: { token: \"UBT\" },\n          UPP: { token: \"UPP\" },\n          ZRX: { token: \"ZRX\" }\n        }\n      },\n      directProps: {}\n    }\n  },\n  insurance: {\n    nexusMutual: {\n      label: \"Nexus Mutual\",\n      image: \"images/protocols/nexus-mutual.png\",\n      imageDark: \"images/protocols/nexus-mutual-white.png\"\n    },\n    coverProtocol: {\n      label: \"Cover Protocol\",\n      image: \"images/protocols/cover-logo.svg\",\n      imageDark: \"images/protocols/cover-logo.svg\"\n    }\n  },\n  payments: {\n    // Payment methods & providers\n    methods: {\n      bank: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/bank.png\",\n          caption: \"Bank Account\"\n        }\n      },\n      card: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/debit-card.png\",\n          caption: \"Credit Card\"\n        }\n      },\n      wallet: {\n        defaultProvider: \"zeroExInstant\",\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/ethereum-wallet.svg\",\n          caption: \"Ethereum Wallet\",\n          imageProps: {\n            padding: [\"0\", \"5px\"]\n          }\n        }\n      }\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: \"images/payments/wyre.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.75% fee ~\",\n        supportedMethods: [\"card\"],\n        supportedCountries: [\"USA\", \"GBR\", \"AUS\", \"BRA\", \"CHN\", \"MEX\", \"EUR\"],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        remoteResources: {},\n        env: \"prod\",\n        envParams: {\n          test: {\n            accountId: \"AC_Q2Y4AARC3TP\"\n          },\n          prod: {\n            accountId: \"AC_PQQBX33XVEQ\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n                break;\n              case \"card\":\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = \"https://pay.sendwyre.com/purchase\";\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken,\n            referrerAccountId,\n            redirectUrl: globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const wyreWidget = document.getElementById(\"wyre-widget\");\n          if (!wyreWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById(\"wyreWidget_style\")) {\n              const wyreStyle = document.createElement(\"style\");\n              wyreStyle.id = \"wyreWidget_style\";\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        }\n      },\n      ramp: {\n        enabled: true,\n        imageSrc: \"images/payments/ramp.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods: [\"bank\", \"card\"],\n        badge: {\n          text: \"NO ID REQUIRED\",\n          color: \"#fff\",\n          bgColor: \"#0cade4\"\n        },\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CAN\",\n          \"EUR\",\n          \"HKG\",\n          \"IND\",\n          \"MEX\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        getInfo: props => {\n          const info = {};\n          switch (props.selectedMethod) {\n            case \"bank\":\n              info.supportedCountries = [\"GBR\", \"EUR\"];\n              info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n            case \"card\":\n              info.supportedCountries = [\n                \"USA\",\n                \"GBR\",\n                \"AUS\",\n                \"BRA\",\n                \"CAN\",\n                \"EUR\",\n                \"HKG\",\n                \"IND\",\n                \"MEX\",\n                \"RUS\",\n                \"ZAF\",\n                \"KOR\"\n              ];\n              info.subcaption = `~ 2.90% fee ~`;\n              break;\n            default:\n              break;\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          return {\n            hostAppName: \"Idle\",\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? \"mobile\" : \"desktop\",\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset\n                ? props.tokenConfig.ramp.swapAsset\n                : props.selectedToken\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on(\"*\", async event => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type) {\n                case \"PURCHASE_SUCCESSFUL\":\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil\n                    .BNify(tokenAmount.toString())\n                    .div(\n                      functionsUtil.BNify(\n                        Math.pow(10, parseInt(tokenDecimals)).toString()\n                      )\n                    )\n                    .toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: \"light\",\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\"\n                  });\n\n                  break;\n                default:\n                  break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled: true,\n        imageSrc: \"images/payments/transak.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods: [\"bank\", \"card\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"EUR\",\n          \"IND\"\n        ],\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"],\n        remoteResources: { \"https://global.transak.com/v1/widget.js\": {} },\n        env: \"prod\",\n        badge: {\n          text: \"INSTANT\",\n          bgColor: \"#0069ee\"\n        },\n        envParams: {\n          test: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_TEST,\n            url: \"https://global.transak.com\"\n          },\n          prod: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_PROD,\n            url: \"https://global.transak.com\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === \"bank\" ? \"1.5%\" : \"4.5%\";\n\n          if (props.selectedCountry && props.selectedCountry.value) {\n            switch (props.selectedCountry.value.toUpperCase()) {\n              case \"GBR\":\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n                break;\n              case \"IND\":\n                fee = \"1.0%\";\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n                break;\n              case \"EUR\":\n                if (selectedMethod === \"bank\") {\n                  info.badge = {\n                    text: \"SEPA\",\n                    color: \"#f7cb05 \",\n                    bgColor: \"#10288a\"\n                  };\n                } else {\n                  info.badge = {\n                    text: \"INSTANT\",\n                    bgColor: \"#0069ee\"\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams =\n            globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value) {\n            switch (buyParams.selectedCountry.value.toUpperCase()) {\n              case \"IND\":\n                fiatCurrency = \"INR\";\n                break;\n              case \"GBR\":\n                fiatCurrency = \"GBP\";\n                break;\n              case \"EUR\":\n                fiatCurrency = \"EUR\";\n                break;\n              case \"USA\":\n                fiatCurrency = \"USD\";\n                break;\n              default:\n                fiatCurrency = \"GBP\";\n                break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken\n            ? buyParams.selectedToken.toLowerCase()\n            : props.tokenConfig.transak &&\n              props.tokenConfig.transak.currencyCode\n              ? props.tokenConfig.transak.currencyCode\n              : props.selectedToken;\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width: \"100%\",\n            height: \"100%\"\n            // email,\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          if (window.transakGlobal) {\n            const transakWidget = document.getElementById(\"transak-widget\");\n            if (!transakWidget) {\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById(\"transakWidget_style\")) {\n                const transakStyle = document.createElement(\"style\");\n                transakStyle.id = \"transakWidget_style\";\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, \"transak-widget-container\");\n          }\n        }\n      },\n      moonpay: {\n        enabled: true,\n        imageSrc: \"images/payments/moonpay.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 4.5% fee ~\",\n        supportedMethods: [\"card\", \"bank\"],\n        supportedCountries: [\n          \"GBR\",\n          \"EUR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"CAN\",\n          \"HKG\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        env: \"prod\",\n        envParams: {\n          test: {\n            url: \"https://buy-staging.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod: {\n            url: \"https://buy.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                if (props.selectedCountry && props.selectedCountry.value) {\n                  switch (props.selectedCountry.value.toUpperCase()) {\n                    case \"EUR\":\n                      info.badge = {\n                        text: \"SEPA\",\n                        color: \"#f7cb05 \",\n                        bgColor: \"#10288a\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                      break;\n                    case \"GBR\":\n                      info.badge = {\n                        text: \"GBP\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                      break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                      break;\n                  }\n                }\n                break;\n              case \"card\":\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams =\n            globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken\n              ? buyParams.selectedToken.toLowerCase()\n              : props.tokenConfig.moonpay &&\n                props.tokenConfig.moonpay.currencyCode\n                ? props.tokenConfig.moonpay.currencyCode\n                : props.selectedToken.toLowerCase(),\n            walletAddress: props.account,\n            baseCurrencyCode: \"USD\",\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            bank: {\n              GBR: \"gbp_bank_transfer\",\n              EUR: \"sepa_bank_transfer\"\n            },\n            card: \"credit_debit_card\"\n          };\n\n          const selectedCountry =\n            buyParams.selectedCountry && buyParams.selectedCountry.value\n              ? buyParams.selectedCountry.value.toUpperCase()\n              : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod) {\n            switch (buyParams.selectedMethod) {\n              case \"bank\":\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod][\"EUR\"];\n                switch (selectedCountry) {\n                  case \"GBR\":\n                  case \"EUR\":\n                    params.enabledPaymentMethods =\n                      methods[buyParams.selectedMethod][selectedCountry];\n                    break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(\n                      methods[buyParams.selectedMethod]\n                    ).join(\",\");\n                    break;\n                }\n                break;\n              case \"card\":\n              default:\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod];\n                break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry) {\n            case \"GBR\":\n              params.baseCurrencyCode = \"GBP\";\n              break;\n            case \"EUR\":\n              params.baseCurrencyCode = \"EUR\";\n              break;\n            default:\n              params.baseCurrencyCode = \"USD\";\n              break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (\n              !document.cookie.match(\n                /^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/\n              )\n            ) {\n              document.cookie =\n                \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const moonpayWidget = document.getElementById(\"moonpay-widget\");\n          if (!moonpayWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById(\"moonpayWidget_style\")) {\n              const moonpayStyle = document.createElement(\"style\");\n              moonpayStyle.id = \"moonpayWidget_style\";\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: \"images/payments/zeroexinstant.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        remoteResources: { \"https://instant.0x.org/v3/instant.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onSuccess,\n          onClose\n        ) => {\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context\n            ? window.RimbleWeb3_context.connectorName\n            : null;\n\n          if (!tokenParams.zeroExInstant) {\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider:\n              connectorName &&\n                connectorName !== \"Injected\" &&\n                window.RimbleWeb3_context.connector[connectorName.toLowerCase()]\n                ? window.RimbleWeb3_context.connector[\n                  window.RimbleWeb3_context.connectorName.toLowerCase()\n                ].provider\n                : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount) => {\n          if (window.zeroExInstant && initParams) {\n            if (amount) {\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: \"images/payments/kyber.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Swap with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\n          \"WETH\",\n          \"USDC\",\n          \"DAI\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"RAI\",\n          \"FEI\"\n        ],\n        web3Subscription: {\n          // Data for web3 subscription\n          enabled: true,\n          contractAddress: \"0x818e6fecd516ecc3849daf6845e3ec868087b755\",\n          decodeLogsData: [\n            {\n              internalType: \"address\",\n              name: \"_startAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"address\",\n              name: \"_tokenAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_startAmount\",\n              type: \"uint256\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_tokenAmount\",\n              type: \"uint256\"\n            }\n          ]\n        },\n        remoteResources: {\n          \"https://widget.kyber.network/v0.7.5/widget.css\": {},\n          \"https://widget.kyber.network/v0.7.5/widget.js\": {\n            parentElement: document.body,\n            precall: (props, globalConfigs, providerInfo) => {\n              // Remove previous elements\n              const buttons = document.querySelectorAll(\".kyber-widget-button\");\n              for (let i = 0; i < buttons.length; i++) {\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll(\".script_kyberSwap\");\n              for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId\n                ? props.buttonId\n                : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)) {\n                const a = document.createElement(\"a\");\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props, globalConfigs);\n                a.target = \"_blank\";\n                a.rel = \"nofollow noopener noreferrer\";\n                a.className = \"kyber-widget-button theme-ocean theme-supported\";\n                a.title = \"Swap with Kyber\";\n                a.style = \"display:none;\";\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props, globalConfigs, buyParams = null) => {\n          const baseToken = props.baseToken ? props.baseToken : \"ETH\";\n          const params = {\n            lang: \"en\",\n            type: \"swap\",\n            mode: \"iframe\",\n            theme: \"theme-ocean\",\n            paramForwarding: true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens: `${baseToken}_${props.selectedToken}`,\n            title: `Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair: `${baseToken}_${props.selectedToken}`,\n            commissionId: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n            network:\n              globalConfigs.network.requiredNetwork === 1 ? \"mainnet\" : \"test\"\n          };\n\n          const url = \"https://widget.kyber.network/v0.7.5/\";\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props) => {\n          const buttonId = props.buttonId\n            ? props.buttonId\n            : `kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a) {\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: \"images/payments/airswap.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: {\n          \"https://cdn.airswap.io/airswap-instant-widget.js\": {}\n        },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            env: \"production\",\n            mode: \"buy\",\n            token: props.tokenConfig.address,\n            baseToken: \"ETH\",\n            onComplete: onComplete ? onComplete : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.AirSwapInstant) {\n            if (amount) {\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: \"images/payments/totle.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: { \"https://widget.totle.com/latest/dist.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.TotleWidget) {\n            const nodeId = \"totle-widget\";\n            if (!document.getElementById(nodeId)) {\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(\n              initParams,\n              document.getElementById(nodeId)\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  // Goerli\n  5:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  80001:{ // Mumbai-Testnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      /*\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      */\n    },\n    risk:{\n      \n    }\n  },\n  137:{ // Matic Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x8a999F5A3546F8243205b2c0eCb0627cC10003ab',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crDAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x4eCEDdF62277eD78623f9A94995c680f8fd6C00e',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x27F8D03b3a2196956ED754baDc28D73be8830A6e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x1ee6470CD75D5686d0b2b90C0305Fa46fb0C89A1',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:16,\n            name:'cream',\n            enabled:true,\n            token:'crUSDC',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x73CF8c5D14Aa0EbC89f18272A568319F5BAB6cBD',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amUSDC',\n            address:'0x1a13F4Ca1d028320A707D99520AbFefca3998b7F',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xfdA25D931258Df948ffecb66b5518299Df6527C4',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crWETH',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x7ef18d0a9C3Fb1A716FF6c3ED0Edf52a2427F716',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            token:'aWETH',\n            name:'aavev2',\n            address:'0x28424507fefb6f7f8E9D3860F56504E4e5f5f390',\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  // Ethereum\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        token: 'USDC',\n        decimals: 6,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        ramp: {\n          swapAsset: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols: [\n          {\n            decimals: 16,\n            enabled: true,\n            token: 'cUSDC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk: {\n\n    }\n  },\n  1337: {\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crRAI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  },\n  1: { // Mainnet\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.8,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            defiScore: 8.8,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.9,\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          /*\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            token:'crRAI',\n            enabled:false,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          */\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aRAI',\n            enabled: true,\n            name: 'aavev2',\n            functions: {\n            },\n            address: '0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aFEI',\n            enabled: true,\n            functions: {},\n            name: 'aavev2',\n            address: '0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","var map = {\n\t\"./mainnet/v1/index.json\": 1877,\n\t\"./testnet/mumbai/index.json\": 1878\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4441;","var map = {\n\t\"./mainnet/v1/artifacts/fx-portal/FxChild.json\": 4443,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC1155ChildTunnel.json\": 4444,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC1155RootTunnel.json\": 4445,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildToken.json\": 4446,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildTunnel.json\": 4447,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootToken.json\": 4448,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootTunnel.json\": 4449,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC721ChildTunnel.json\": 4450,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC721RootTunnel.json\": 4451,\n\t\"./mainnet/v1/artifacts/fx-portal/FxRoot.json\": 4452,\n\t\"./mainnet/v1/artifacts/genesis/BorValidatorSet.json\": 4453,\n\t\"./mainnet/v1/artifacts/genesis/IStateReceiver.json\": 4454,\n\t\"./mainnet/v1/artifacts/genesis/Migrations.json\": 4455,\n\t\"./mainnet/v1/artifacts/genesis/StateReceiver.json\": 4456,\n\t\"./mainnet/v1/artifacts/genesis/System.json\": 4457,\n\t\"./mainnet/v1/artifacts/genesis/TestBorValidatorSet.json\": 4458,\n\t\"./mainnet/v1/artifacts/genesis/TestCommitState.json\": 4459,\n\t\"./mainnet/v1/artifacts/genesis/TestStateReceiver.json\": 4460,\n\t\"./mainnet/v1/artifacts/genesis/TestSystem.json\": 4461,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorSet.json\": 4462,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorVerifier.json\": 4463,\n\t\"./mainnet/v1/artifacts/plasma/BaseERC20.json\": 4464,\n\t\"./mainnet/v1/artifacts/plasma/ChainIdMixin.json\": 4465,\n\t\"./mainnet/v1/artifacts/plasma/ChildChain.json\": 4466,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20.json\": 4467,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20Proxified.json\": 4468,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721.json\": 4469,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Mintable.json\": 4470,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Proxified.json\": 4471,\n\t\"./mainnet/v1/artifacts/plasma/ChildToken.json\": 4472,\n\t\"./mainnet/v1/artifacts/plasma/ChildTokenProxy.json\": 4473,\n\t\"./mainnet/v1/artifacts/plasma/Common.json\": 4474,\n\t\"./mainnet/v1/artifacts/plasma/ContractReceiver.json\": 4475,\n\t\"./mainnet/v1/artifacts/plasma/ContractWitRevertingFallback.json\": 4476,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithFallback.json\": 4477,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithoutFallback.json\": 4478,\n\t\"./mainnet/v1/artifacts/plasma/DelegateProxy.json\": 4479,\n\t\"./mainnet/v1/artifacts/plasma/DepositManager.json\": 4480,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerHeader.json\": 4481,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerProxy.json\": 4482,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerStorage.json\": 4483,\n\t\"./mainnet/v1/artifacts/plasma/DrainStakeManager.json\": 4484,\n\t\"./mainnet/v1/artifacts/plasma/Drainable.json\": 4485,\n\t\"./mainnet/v1/artifacts/plasma/ECVerify.json\": 4486,\n\t\"./mainnet/v1/artifacts/plasma/ERC165.json\": 4487,\n\t\"./mainnet/v1/artifacts/plasma/ERC20.json\": 4488,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Detailed.json\": 4489,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Mintable.json\": 4490,\n\t\"./mainnet/v1/artifacts/plasma/ERC20NonTransferable.json\": 4491,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Predicate.json\": 4492,\n\t\"./mainnet/v1/artifacts/plasma/ERC20PredicateBurnOnly.json\": 4493,\n\t\"./mainnet/v1/artifacts/plasma/ERC721.json\": 4494,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Enumerable.json\": 4495,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Full.json\": 4496,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Metadata.json\": 4497,\n\t\"./mainnet/v1/artifacts/plasma/ERC721MetadataMintable.json\": 4498,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Mintable.json\": 4499,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PlasmaMintable.json\": 4500,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Predicate.json\": 4501,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PredicateBurnOnly.json\": 4502,\n\t\"./mainnet/v1/artifacts/plasma/ERCProxy.json\": 4503,\n\t\"./mainnet/v1/artifacts/plasma/ExitNFT.json\": 4504,\n\t\"./mainnet/v1/artifacts/plasma/FallbackManager.json\": 4505,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafe.json\": 4506,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafeProxy.json\": 4507,\n\t\"./mainnet/v1/artifacts/plasma/Governable.json\": 4508,\n\t\"./mainnet/v1/artifacts/plasma/Governance.json\": 4509,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockable.json\": 4510,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockableTest.json\": 4511,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceProxy.json\": 4512,\n\t\"./mainnet/v1/artifacts/plasma/IDepositManager.json\": 4513,\n\t\"./mainnet/v1/artifacts/plasma/IERC165.json\": 4514,\n\t\"./mainnet/v1/artifacts/plasma/IERC20.json\": 4515,\n\t\"./mainnet/v1/artifacts/plasma/IERC721.json\": 4516,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Enumerable.json\": 4517,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Metadata.json\": 4518,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Receiver.json\": 4519,\n\t\"./mainnet/v1/artifacts/plasma/IErcPredicate.json\": 4520,\n\t\"./mainnet/v1/artifacts/plasma/IGovernance.json\": 4521,\n\t\"./mainnet/v1/artifacts/plasma/IParentToken.json\": 4522,\n\t\"./mainnet/v1/artifacts/plasma/IPredicate.json\": 4523,\n\t\"./mainnet/v1/artifacts/plasma/IRootChain.json\": 4524,\n\t\"./mainnet/v1/artifacts/plasma/ISignatureValidator.json\": 4525,\n\t\"./mainnet/v1/artifacts/plasma/ISlashingManager.json\": 4526,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManager.json\": 4527,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManagerLocal.json\": 4528,\n\t\"./mainnet/v1/artifacts/plasma/IValidatorShare.json\": 4529,\n\t\"./mainnet/v1/artifacts/plasma/IWithdrawManager.json\": 4530,\n\t\"./mainnet/v1/artifacts/plasma/LibEIP712Domain.json\": 4531,\n\t\"./mainnet/v1/artifacts/plasma/LibTokenTransferOrder.json\": 4532,\n\t\"./mainnet/v1/artifacts/plasma/Lockable.json\": 4533,\n\t\"./mainnet/v1/artifacts/plasma/MRC20.json\": 4534,\n\t\"./mainnet/v1/artifacts/plasma/Marketplace.json\": 4535,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicate.json\": 4536,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicateTest.json\": 4537,\n\t\"./mainnet/v1/artifacts/plasma/MarketplaceToken.json\": 4538,\n\t\"./mainnet/v1/artifacts/plasma/MasterCopy.json\": 4539,\n\t\"./mainnet/v1/artifacts/plasma/MaticWETH.json\": 4540,\n\t\"./mainnet/v1/artifacts/plasma/Merkle.json\": 4541,\n\t\"./mainnet/v1/artifacts/plasma/Migrations.json\": 4542,\n\t\"./mainnet/v1/artifacts/plasma/MintableERC721Predicate.json\": 4543,\n\t\"./mainnet/v1/artifacts/plasma/MinterRole.json\": 4544,\n\t\"./mainnet/v1/artifacts/plasma/Module.json\": 4545,\n\t\"./mainnet/v1/artifacts/plasma/ModuleManager.json\": 4546,\n\t\"./mainnet/v1/artifacts/plasma/Ownable.json\": 4547,\n\t\"./mainnet/v1/artifacts/plasma/OwnableLockable.json\": 4548,\n\t\"./mainnet/v1/artifacts/plasma/OwnerManager.json\": 4549,\n\t\"./mainnet/v1/artifacts/plasma/ParentTokenMock.json\": 4550,\n\t\"./mainnet/v1/artifacts/plasma/PredicateUtils.json\": 4551,\n\t\"./mainnet/v1/artifacts/plasma/PriorityQueue.json\": 4552,\n\t\"./mainnet/v1/artifacts/plasma/Proxy.json\": 4553,\n\t\"./mainnet/v1/artifacts/plasma/ProxyStorage.json\": 4554,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImpl.json\": 4555,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 4556,\n\t\"./mainnet/v1/artifacts/plasma/Registry.json\": 4557,\n\t\"./mainnet/v1/artifacts/plasma/RootChain.json\": 4558,\n\t\"./mainnet/v1/artifacts/plasma/RootChainHeader.json\": 4559,\n\t\"./mainnet/v1/artifacts/plasma/RootChainProxy.json\": 4560,\n\t\"./mainnet/v1/artifacts/plasma/RootChainStorage.json\": 4561,\n\t\"./mainnet/v1/artifacts/plasma/RootChainable.json\": 4562,\n\t\"./mainnet/v1/artifacts/plasma/RootERC721.json\": 4563,\n\t\"./mainnet/v1/artifacts/plasma/SlashingManager.json\": 4564,\n\t\"./mainnet/v1/artifacts/plasma/StakeManager.json\": 4565,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerProxy.json\": 4566,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerStorage.json\": 4567,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTest.json\": 4568,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTestable.json\": 4569,\n\t\"./mainnet/v1/artifacts/plasma/StakingInfo.json\": 4570,\n\t\"./mainnet/v1/artifacts/plasma/StakingNFT.json\": 4571,\n\t\"./mainnet/v1/artifacts/plasma/StateReceiver.json\": 4572,\n\t\"./mainnet/v1/artifacts/plasma/StateSender.json\": 4573,\n\t\"./mainnet/v1/artifacts/plasma/StateSyncerVerifier.json\": 4574,\n\t\"./mainnet/v1/artifacts/plasma/TestMRC20.json\": 4575,\n\t\"./mainnet/v1/artifacts/plasma/TestToken.json\": 4576,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigPredicate.json\": 4577,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigUtils.json\": 4578,\n\t\"./mainnet/v1/artifacts/plasma/UpgradableProxy.json\": 4579,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShare.json\": 4580,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareFactory.json\": 4581,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareProxy.json\": 4582,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareTest.json\": 4583,\n\t\"./mainnet/v1/artifacts/plasma/WETH.json\": 4584,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManager.json\": 4585,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerHeader.json\": 4586,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerProxy.json\": 4587,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerStorage.json\": 4588,\n\t\"./mainnet/v1/artifacts/pos/AccessControl.json\": 4589,\n\t\"./mainnet/v1/artifacts/pos/AccessControlMixin.json\": 4590,\n\t\"./mainnet/v1/artifacts/pos/ChainConstants.json\": 4591,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManager.json\": 4592,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManagerProxy.json\": 4593,\n\t\"./mainnet/v1/artifacts/pos/ChildERC1155.json\": 4594,\n\t\"./mainnet/v1/artifacts/pos/ChildERC20.json\": 4595,\n\t\"./mainnet/v1/artifacts/pos/ChildERC721.json\": 4596,\n\t\"./mainnet/v1/artifacts/pos/ChildMintableERC721.json\": 4597,\n\t\"./mainnet/v1/artifacts/pos/ChildTunnel.json\": 4598,\n\t\"./mainnet/v1/artifacts/pos/DummyERC1155.json\": 4599,\n\t\"./mainnet/v1/artifacts/pos/DummyERC20.json\": 4600,\n\t\"./mainnet/v1/artifacts/pos/DummyERC721.json\": 4601,\n\t\"./mainnet/v1/artifacts/pos/DummyMintableERC721.json\": 4602,\n\t\"./mainnet/v1/artifacts/pos/DummyStateSender.json\": 4603,\n\t\"./mainnet/v1/artifacts/pos/EIP712Base.json\": 4604,\n\t\"./mainnet/v1/artifacts/pos/ERC1155.json\": 4605,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Predicate.json\": 4606,\n\t\"./mainnet/v1/artifacts/pos/ERC1155PredicateProxy.json\": 4607,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Receiver.json\": 4608,\n\t\"./mainnet/v1/artifacts/pos/ERC165.json\": 4609,\n\t\"./mainnet/v1/artifacts/pos/ERC20.json\": 4610,\n\t\"./mainnet/v1/artifacts/pos/ERC20Predicate.json\": 4611,\n\t\"./mainnet/v1/artifacts/pos/ERC20PredicateProxy.json\": 4612,\n\t\"./mainnet/v1/artifacts/pos/ERC721.json\": 4613,\n\t\"./mainnet/v1/artifacts/pos/ERC721Predicate.json\": 4614,\n\t\"./mainnet/v1/artifacts/pos/ERC721PredicateProxy.json\": 4615,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicate.json\": 4616,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicateProxy.json\": 4617,\n\t\"./mainnet/v1/artifacts/pos/ICheckpointManager.json\": 4618,\n\t\"./mainnet/v1/artifacts/pos/IChildChainManager.json\": 4619,\n\t\"./mainnet/v1/artifacts/pos/IChildToken.json\": 4620,\n\t\"./mainnet/v1/artifacts/pos/IERC1155.json\": 4621,\n\t\"./mainnet/v1/artifacts/pos/IERC1155MetadataURI.json\": 4622,\n\t\"./mainnet/v1/artifacts/pos/IERC1155Receiver.json\": 4623,\n\t\"./mainnet/v1/artifacts/pos/IERC165.json\": 4624,\n\t\"./mainnet/v1/artifacts/pos/IERC20.json\": 4625,\n\t\"./mainnet/v1/artifacts/pos/IERC721.json\": 4626,\n\t\"./mainnet/v1/artifacts/pos/IERC721Enumerable.json\": 4627,\n\t\"./mainnet/v1/artifacts/pos/IERC721Metadata.json\": 4628,\n\t\"./mainnet/v1/artifacts/pos/IERC721Receiver.json\": 4629,\n\t\"./mainnet/v1/artifacts/pos/IERCProxy.json\": 4630,\n\t\"./mainnet/v1/artifacts/pos/IMintableERC721.json\": 4631,\n\t\"./mainnet/v1/artifacts/pos/IRootChainManager.json\": 4632,\n\t\"./mainnet/v1/artifacts/pos/IStateSender.json\": 4633,\n\t\"./mainnet/v1/artifacts/pos/ITokenPredicate.json\": 4634,\n\t\"./mainnet/v1/artifacts/pos/MaticWETH.json\": 4635,\n\t\"./mainnet/v1/artifacts/pos/Merkle.json\": 4636,\n\t\"./mainnet/v1/artifacts/pos/MerklePatriciaTest.json\": 4637,\n\t\"./mainnet/v1/artifacts/pos/Migrations.json\": 4638,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155Predicate.json\": 4639,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155PredicateProxy.json\": 4640,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20Predicate.json\": 4641,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20PredicateProxy.json\": 4642,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721Predicate.json\": 4643,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721PredicateProxy.json\": 4644,\n\t\"./mainnet/v1/artifacts/pos/MockCheckpointManager.json\": 4645,\n\t\"./mainnet/v1/artifacts/pos/NativeMetaTransaction.json\": 4646,\n\t\"./mainnet/v1/artifacts/pos/NetworkAgnostic.json\": 4647,\n\t\"./mainnet/v1/artifacts/pos/Proxy.json\": 4648,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImpl.json\": 4649,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 4650,\n\t\"./mainnet/v1/artifacts/pos/RootChainManager.json\": 4651,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerProxy.json\": 4652,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerStorage.json\": 4653,\n\t\"./mainnet/v1/artifacts/pos/RootTunnel.json\": 4654,\n\t\"./mainnet/v1/artifacts/pos/UpgradableProxy.json\": 4655,\n\t\"./mainnet/v1/index.json\": 1877,\n\t\"./networks.json\": 1876,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxChild.json\": 4656,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC1155ChildTunnel.json\": 4657,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC1155RootTunnel.json\": 4658,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildToken.json\": 4659,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildTunnel.json\": 4660,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootToken.json\": 4661,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootTunnel.json\": 4662,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC721ChildTunnel.json\": 4663,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC721RootTunnel.json\": 4664,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxRoot.json\": 4665,\n\t\"./testnet/mumbai/artifacts/genesis/BorValidatorSet.json\": 4666,\n\t\"./testnet/mumbai/artifacts/genesis/IStateReceiver.json\": 4667,\n\t\"./testnet/mumbai/artifacts/genesis/Migrations.json\": 4668,\n\t\"./testnet/mumbai/artifacts/genesis/StateReceiver.json\": 4669,\n\t\"./testnet/mumbai/artifacts/genesis/System.json\": 4670,\n\t\"./testnet/mumbai/artifacts/genesis/TestBorValidatorSet.json\": 4671,\n\t\"./testnet/mumbai/artifacts/genesis/TestCommitState.json\": 4672,\n\t\"./testnet/mumbai/artifacts/genesis/TestStateReceiver.json\": 4673,\n\t\"./testnet/mumbai/artifacts/genesis/TestSystem.json\": 4674,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorSet.json\": 4675,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorVerifier.json\": 4676,\n\t\"./testnet/mumbai/artifacts/plasma/BaseERC20.json\": 4677,\n\t\"./testnet/mumbai/artifacts/plasma/ChainIdMixin.json\": 4678,\n\t\"./testnet/mumbai/artifacts/plasma/ChildChain.json\": 4679,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20.json\": 4680,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20Proxified.json\": 4681,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721.json\": 4682,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Mintable.json\": 4683,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Proxified.json\": 4684,\n\t\"./testnet/mumbai/artifacts/plasma/ChildToken.json\": 4685,\n\t\"./testnet/mumbai/artifacts/plasma/ChildTokenProxy.json\": 4686,\n\t\"./testnet/mumbai/artifacts/plasma/Common.json\": 4687,\n\t\"./testnet/mumbai/artifacts/plasma/ContractReceiver.json\": 4688,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWitRevertingFallback.json\": 4689,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithFallback.json\": 4690,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithoutFallback.json\": 4691,\n\t\"./testnet/mumbai/artifacts/plasma/DelegateProxy.json\": 4692,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManager.json\": 4693,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerHeader.json\": 4694,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerProxy.json\": 4695,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerStorage.json\": 4696,\n\t\"./testnet/mumbai/artifacts/plasma/DrainStakeManager.json\": 4697,\n\t\"./testnet/mumbai/artifacts/plasma/Drainable.json\": 4698,\n\t\"./testnet/mumbai/artifacts/plasma/ECVerify.json\": 4699,\n\t\"./testnet/mumbai/artifacts/plasma/ERC165.json\": 4700,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20.json\": 4701,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Detailed.json\": 4702,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Mintable.json\": 4703,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20NonTransferable.json\": 4704,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Predicate.json\": 4705,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20PredicateBurnOnly.json\": 4706,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721.json\": 4707,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Enumerable.json\": 4708,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Full.json\": 4709,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Metadata.json\": 4710,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721MetadataMintable.json\": 4711,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Mintable.json\": 4712,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PlasmaMintable.json\": 4713,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Predicate.json\": 4714,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PredicateBurnOnly.json\": 4715,\n\t\"./testnet/mumbai/artifacts/plasma/ERCProxy.json\": 4716,\n\t\"./testnet/mumbai/artifacts/plasma/ExitNFT.json\": 4717,\n\t\"./testnet/mumbai/artifacts/plasma/FallbackManager.json\": 4718,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafe.json\": 4719,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafeProxy.json\": 4720,\n\t\"./testnet/mumbai/artifacts/plasma/Governable.json\": 4721,\n\t\"./testnet/mumbai/artifacts/plasma/Governance.json\": 4722,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockable.json\": 4723,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockableTest.json\": 4724,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceProxy.json\": 4725,\n\t\"./testnet/mumbai/artifacts/plasma/IDepositManager.json\": 4726,\n\t\"./testnet/mumbai/artifacts/plasma/IERC165.json\": 4727,\n\t\"./testnet/mumbai/artifacts/plasma/IERC20.json\": 4728,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721.json\": 4729,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Enumerable.json\": 4730,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Metadata.json\": 4731,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Receiver.json\": 4732,\n\t\"./testnet/mumbai/artifacts/plasma/IErcPredicate.json\": 4733,\n\t\"./testnet/mumbai/artifacts/plasma/IGovernance.json\": 4734,\n\t\"./testnet/mumbai/artifacts/plasma/IParentToken.json\": 4735,\n\t\"./testnet/mumbai/artifacts/plasma/IPredicate.json\": 4736,\n\t\"./testnet/mumbai/artifacts/plasma/IRootChain.json\": 4737,\n\t\"./testnet/mumbai/artifacts/plasma/ISignatureValidator.json\": 4738,\n\t\"./testnet/mumbai/artifacts/plasma/ISlashingManager.json\": 4739,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManager.json\": 4740,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManagerLocal.json\": 4741,\n\t\"./testnet/mumbai/artifacts/plasma/IValidatorShare.json\": 4742,\n\t\"./testnet/mumbai/artifacts/plasma/IWithdrawManager.json\": 4743,\n\t\"./testnet/mumbai/artifacts/plasma/LibEIP712Domain.json\": 4744,\n\t\"./testnet/mumbai/artifacts/plasma/LibTokenTransferOrder.json\": 4745,\n\t\"./testnet/mumbai/artifacts/plasma/Lockable.json\": 4746,\n\t\"./testnet/mumbai/artifacts/plasma/MRC20.json\": 4747,\n\t\"./testnet/mumbai/artifacts/plasma/Marketplace.json\": 4748,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicate.json\": 4749,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicateTest.json\": 4750,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplaceToken.json\": 4751,\n\t\"./testnet/mumbai/artifacts/plasma/MasterCopy.json\": 4752,\n\t\"./testnet/mumbai/artifacts/plasma/MaticWETH.json\": 4753,\n\t\"./testnet/mumbai/artifacts/plasma/Merkle.json\": 4754,\n\t\"./testnet/mumbai/artifacts/plasma/Migrations.json\": 4755,\n\t\"./testnet/mumbai/artifacts/plasma/MintableERC721Predicate.json\": 4756,\n\t\"./testnet/mumbai/artifacts/plasma/MinterRole.json\": 4757,\n\t\"./testnet/mumbai/artifacts/plasma/Module.json\": 4758,\n\t\"./testnet/mumbai/artifacts/plasma/ModuleManager.json\": 4759,\n\t\"./testnet/mumbai/artifacts/plasma/Ownable.json\": 4760,\n\t\"./testnet/mumbai/artifacts/plasma/OwnableLockable.json\": 4761,\n\t\"./testnet/mumbai/artifacts/plasma/OwnerManager.json\": 4762,\n\t\"./testnet/mumbai/artifacts/plasma/ParentTokenMock.json\": 4763,\n\t\"./testnet/mumbai/artifacts/plasma/PredicateUtils.json\": 4764,\n\t\"./testnet/mumbai/artifacts/plasma/PriorityQueue.json\": 4765,\n\t\"./testnet/mumbai/artifacts/plasma/Proxy.json\": 4766,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyStorage.json\": 4767,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImpl.json\": 4768,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 4769,\n\t\"./testnet/mumbai/artifacts/plasma/Registry.json\": 4770,\n\t\"./testnet/mumbai/artifacts/plasma/RootChain.json\": 4771,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainHeader.json\": 4772,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainProxy.json\": 4773,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainStorage.json\": 4774,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainable.json\": 4775,\n\t\"./testnet/mumbai/artifacts/plasma/RootERC721.json\": 4776,\n\t\"./testnet/mumbai/artifacts/plasma/SlashingManager.json\": 4777,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManager.json\": 4778,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerProxy.json\": 4779,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerStorage.json\": 4780,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTest.json\": 4781,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTestable.json\": 4782,\n\t\"./testnet/mumbai/artifacts/plasma/StakingInfo.json\": 4783,\n\t\"./testnet/mumbai/artifacts/plasma/StakingNFT.json\": 4784,\n\t\"./testnet/mumbai/artifacts/plasma/StateReceiver.json\": 4785,\n\t\"./testnet/mumbai/artifacts/plasma/StateSender.json\": 4786,\n\t\"./testnet/mumbai/artifacts/plasma/StateSyncerVerifier.json\": 4787,\n\t\"./testnet/mumbai/artifacts/plasma/TestMRC20.json\": 4788,\n\t\"./testnet/mumbai/artifacts/plasma/TestToken.json\": 4789,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigPredicate.json\": 4790,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigUtils.json\": 4791,\n\t\"./testnet/mumbai/artifacts/plasma/UpgradableProxy.json\": 4792,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShare.json\": 4793,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareFactory.json\": 4794,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareProxy.json\": 4795,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareTest.json\": 4796,\n\t\"./testnet/mumbai/artifacts/plasma/WETH.json\": 4797,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManager.json\": 4798,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerHeader.json\": 4799,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerProxy.json\": 4800,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerStorage.json\": 4801,\n\t\"./testnet/mumbai/artifacts/pos/AccessControl.json\": 4802,\n\t\"./testnet/mumbai/artifacts/pos/AccessControlMixin.json\": 4803,\n\t\"./testnet/mumbai/artifacts/pos/ChainConstants.json\": 4804,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManager.json\": 4805,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManagerProxy.json\": 4806,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC1155.json\": 4807,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC20.json\": 4808,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC721.json\": 4809,\n\t\"./testnet/mumbai/artifacts/pos/ChildMintableERC721.json\": 4810,\n\t\"./testnet/mumbai/artifacts/pos/ChildTunnel.json\": 4811,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC1155.json\": 4812,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC20.json\": 4813,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC721.json\": 4814,\n\t\"./testnet/mumbai/artifacts/pos/DummyMintableERC721.json\": 4815,\n\t\"./testnet/mumbai/artifacts/pos/DummyStateSender.json\": 4816,\n\t\"./testnet/mumbai/artifacts/pos/EIP712Base.json\": 4817,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155.json\": 4818,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Predicate.json\": 4819,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155PredicateProxy.json\": 4820,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Receiver.json\": 4821,\n\t\"./testnet/mumbai/artifacts/pos/ERC165.json\": 4822,\n\t\"./testnet/mumbai/artifacts/pos/ERC20.json\": 4823,\n\t\"./testnet/mumbai/artifacts/pos/ERC20Predicate.json\": 4824,\n\t\"./testnet/mumbai/artifacts/pos/ERC20PredicateProxy.json\": 4825,\n\t\"./testnet/mumbai/artifacts/pos/ERC721.json\": 4826,\n\t\"./testnet/mumbai/artifacts/pos/ERC721Predicate.json\": 4827,\n\t\"./testnet/mumbai/artifacts/pos/ERC721PredicateProxy.json\": 4828,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicate.json\": 4829,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicateProxy.json\": 4830,\n\t\"./testnet/mumbai/artifacts/pos/ICheckpointManager.json\": 4831,\n\t\"./testnet/mumbai/artifacts/pos/IChildChainManager.json\": 4832,\n\t\"./testnet/mumbai/artifacts/pos/IChildToken.json\": 4833,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155.json\": 4834,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155MetadataURI.json\": 4835,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155Receiver.json\": 4836,\n\t\"./testnet/mumbai/artifacts/pos/IERC165.json\": 4837,\n\t\"./testnet/mumbai/artifacts/pos/IERC20.json\": 4838,\n\t\"./testnet/mumbai/artifacts/pos/IERC721.json\": 4839,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Enumerable.json\": 4840,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Metadata.json\": 4841,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Receiver.json\": 4842,\n\t\"./testnet/mumbai/artifacts/pos/IERCProxy.json\": 4843,\n\t\"./testnet/mumbai/artifacts/pos/IMintableERC721.json\": 4844,\n\t\"./testnet/mumbai/artifacts/pos/IRootChainManager.json\": 4845,\n\t\"./testnet/mumbai/artifacts/pos/IStateSender.json\": 4846,\n\t\"./testnet/mumbai/artifacts/pos/ITokenPredicate.json\": 4847,\n\t\"./testnet/mumbai/artifacts/pos/MaticWETH.json\": 4848,\n\t\"./testnet/mumbai/artifacts/pos/Merkle.json\": 4849,\n\t\"./testnet/mumbai/artifacts/pos/MerklePatriciaTest.json\": 4850,\n\t\"./testnet/mumbai/artifacts/pos/Migrations.json\": 4851,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155Predicate.json\": 4852,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155PredicateProxy.json\": 4853,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20Predicate.json\": 4854,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20PredicateProxy.json\": 4855,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721Predicate.json\": 4856,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721PredicateProxy.json\": 4857,\n\t\"./testnet/mumbai/artifacts/pos/MockCheckpointManager.json\": 4858,\n\t\"./testnet/mumbai/artifacts/pos/NativeMetaTransaction.json\": 4859,\n\t\"./testnet/mumbai/artifacts/pos/NetworkAgnostic.json\": 4860,\n\t\"./testnet/mumbai/artifacts/pos/Proxy.json\": 4861,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImpl.json\": 4862,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 4863,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManager.json\": 4864,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerProxy.json\": 4865,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerStorage.json\": 4866,\n\t\"./testnet/mumbai/artifacts/pos/RootTunnel.json\": 4867,\n\t\"./testnet/mumbai/artifacts/pos/UpgradableProxy.json\": 4868,\n\t\"./testnet/mumbai/index.json\": 1878\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4442;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034', '1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    tick: \"#00b84a\",\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#C6CBD2\",\n    border: \"#546278\",\n    newblue: \"#2B65D9\",\n    alert: '#ff9900',\n    arrowActive: '#d8d8d8',\n    arrowInactive: '#4f4f4f',\n    selectBgFocused: '#1e3657',\n    selectBg: '#162e4d',\n    backButtonBg: '#162e4d',\n    lineChartStroke: '#a4aec6',\n    wrongNetworkBannerBg: '#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg: '#162e4d',\n    menuBg: '#162e4d',\n    menuHover: '#1e3657',\n    flashColor: '#bac5ff',\n    cardBgHover: '#1e3657',\n    cardBorder: '#0d2034',\n    pageActive: '#d8d8d8',\n    pageInactive: '#4f4f4f',\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#1e3657\",\n    menuRightBorder: '#0d2034',\n    cardHoverShadow: '0px 0px 0px 1px rgb(45 74 114)',\n    transactions: {\n      action: {\n        send: '#10a0dd',\n        swap: '#3d53c0',\n        exit: '#10a0dd',\n        boost: '#ffff00',\n        redeem: '#10a0dd',\n        swapout: '#10a0dd',\n        deposit: '#3d53c0',\n        curvein: '#10a0dd',\n        receive: '#3d53c0',\n        migrate: '#3d53c0',\n        default: '#4f4f4f',\n        curveout: '#3d53c0',\n        withdraw: '#10a0dd',\n        curvedepositin: '#10a0dd',\n        curvedepositout: '#3d53c0'\n      },\n      actionBg: {\n        send: '#ceeff6',\n        swap: '#ced6ff',\n        exit: '#ceeff6',\n        boost: '#ff7979',\n        redeem: '#ceeff6',\n        swapout: '#ceeff6',\n        deposit: '#ced6ff',\n        curvein: '#ceeff6',\n        default: '#dadada',\n        receive: '#ced6ff',\n        migrate: '#ced6ff',\n        withdraw: '#ceeff6',\n        curveout: '#ced6ff',\n        curvedepositin: '#ceeff6',\n        curvedepositout: '#ced6ff'\n      },\n      status: {\n        completed: '#00b84a',\n        pending: '#a5a5a5',\n        failed: '#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura.rpc).forEach((networkId,index) => {\n  networkId = parseInt(networkId);\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura.rpc[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: supportedNetworkURLs[defaultNetwork]\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              The network you are currently connected{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                ({this.props.network.current.name})\n              </Text.span>{\" \"}\n              is not supported - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isSupportedNetwork === false && this.props.web3 &&\n          <WrongNetworkBanner\n            network={this.props.network}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      // await this.props.context.setFirstValidConnector(['Infura']);\n      // this.props.context.setConnector('Infura');\n      this.props.context.unsetConnector();\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport MaticJs from '@maticnetwork/maticjs';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\n// import detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  currentWeb3: {},\n  web3Polygon: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  web3Providers: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  maticPlasmaClient :{},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  contractsNetworks: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n    isSupportedNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        this.handleNetworkChanged(networkId);\n        // window.location.reload();\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n    window.initAccount = this.initAccount;\n  }\n\n  handleNetworkChanged = async (networkId=null) => {\n    this.functionsUtil.removeStoredItem('cachedRequests');\n    this.functionsUtil.removeStoredItem('cachedRequests_polygon');\n    this.functionsUtil.removeStoredItem('transactions');\n    await this.props.clearCachedData(async () => {\n      // console.log(networkId,this.state.network);\n      // const network = await this.checkNetwork();\n      // if (network.isCorrectNetwork){\n      //   window.location.reload();\n      // }\n\n      if (this.state.network.required && networkId && parseInt(networkId) === parseInt(this.state.network.required.id)){\n        window.location.reload();\n      } else {\n        this.setState({\n          web3:null,\n          contracts:[],\n          biconomy:null,\n          permitClient:null,\n          contractsNetworks:{},\n          networkInitialized:false,\n          erc20ForwarderClient:null,\n          contractsInitialized:false\n        },() => {\n          this.checkNetwork();\n        });\n      }\n    });\n  }\n\n  componentDidMount = async () => {\n    // this.initSimpleID();\n    // this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe);\n      if (isGnosisSafe){\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    // console.log('gnosisSafeLoaded',this.state.gnosisSafeLoaded,this.props.connectors.gnosis.safeLoaded,gnosisSafeLoaded);\n    if (gnosisSafeLoaded){\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if ((prevProps.connectorName !== this.props.connectorName && this.props.connectorName) || (this.props.context.active && prevProps.context.active !== this.props.context.active)){\n      // console.log('initWeb3_1',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active);\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          // console.log('initWeb3_2',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active);\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect'){\n        // console.log('initWeb3_3',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n        this.initWeb3();\n      }\n    } else if ((this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      // console.log('initWeb3_4',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n      this.initWeb3();\n    }\n\n    const currentNetworkChanged = this.state.networkInitialized && prevState.network.current.id !== this.state.network.current.id;\n    if (currentNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.initWeb3();\n    }\n\n    const requiredNetworkChanged = prevState.network.required.id !== this.state.network.required.id;\n    if (requiredNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.setState({\n        contracts:[],\n        contractsNetworks:{},\n        contractsInitialized:false\n      }, () => {\n        this.props.setNetwork(this.state.network);\n        this.initWeb3();\n      });\n    }\n\n    const availableStrategiesChanged = (!prevProps.availableStrategies && this.props.availableStrategies) || (prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies)));\n    // console.log('availableStrategiesChanged',this.props.availableStrategies,availableStrategiesChanged);\n    if (availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    const contextAccountChanged = prevProps.context.account !== this.props.context.account;\n    const accountDisconnected = prevProps.connectorName !== this.props.connectorName && this.props.connectorName === 'Infura';\n    if (contextAccountChanged){\n      // console.log('contextAccountChanged',prevProps.context.account,this.props.context.account,contextAccountChanged);\n    }\n\n    if (accountDisconnected){\n      // console.log('accountDisconnected',prevProps.connectorName,this.props.connectorName,accountDisconnected);\n    }\n\n    if (customAddressChanged || contextAccountChanged || accountDisconnected){\n      this.initAccount();\n    }\n\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n\n    // Reset tokenDecimals if token is changed\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    const selectedNetworkChanged = prevProps.config.requiredNetwork !== this.props.config.requiredNetwork;\n    if (selectedNetworkChanged){\n      // console.log('selectedNetworkChanged',JSON.stringify(prevProps.config.requiredNetwork),this.props.config.requiredNetwork);\n      this.handleNetworkChanged();\n    }\n  }\n\n  initCurrentWeb3 = async () => {\n\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    // const metamaskProvider = await detectEthereumProvider();\n    // if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n    //   window.ethereum = metamaskProvider;\n    // }\n    if (!this.state.networkInitialized){\n      return false;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.required.id;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - START',networkId,walletProvider);\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.functionsUtil.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.functionsUtil.getGlobalConfig(['network','providers',provider,'rpc',networkId])+web3RpcKey;\n\n    const useWeb3Provider = this.state.networkInitialized && this.state.network.isCorrectNetwork;\n    const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n    \n\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n    const web3Providers = Object.keys(availableNetworks).filter( netId => enabledNetworks.includes(parseInt(netId)) ).reduce( (acc,netId) => {\n      const networkConfig = availableNetworks[netId];\n      const providerConfig = this.functionsUtil.getGlobalConfig(['network','providers',networkConfig.provider]);\n      const providerRpc = providerConfig.rpc[netId]+providerConfig.key;\n      acc[netId] = new Web3(new Web3.providers.HttpProvider(providerRpc));\n      return acc;\n    },{});\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n    let currentWeb3 = context.library;\n    let web3 = useWeb3Provider ? context.library : null;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // if (connectorName !== 'Infura' && connectorName !== 'Injected' && !context.library){\n    //   connectorName = 'Infura';\n    //   this.props.setConnector('Infura',null);\n    //   if (web3 && typeof web3.currentProvider.disable === 'function'){\n    //     web3.currentProvider.disable();\n    //   } else if (context.connector && typeof context.connector.disable === 'function'){\n    //     context.connector.disable();\n    //   }\n    // }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      currentWeb3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // console.log('context',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = web3Rpc;\n    let web3Provider = null;\n\n    // console.log('initWeb3-PRE',connectorName,currentWeb3,web3,context);\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = web3InfuraRpc;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = web3InfuraRpc;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider && useWeb3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = web3Providers[networkId];\n    }\n\n    // console.log('initWeb3',connectorName,currentWeb3,web3,context,web3Provider/*,web3Provider===context.library.currentProvider*/);\n\n    let web3Polygon = null;\n    let maticPOSClient = null;\n    let maticPlasmaClient = null;\n\n    // const infuraConfig = globalConfigs.network.providers.infura;\n    const polygonConfig = globalConfigs.network.providers.polygon;\n\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      web3Polygon = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n\n      const maticProvider = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      const parentProvider = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n      // console.log('maticProvider',web3PolygonRpc);\n      // console.log('parentProvider',web3InfuraRpc);\n\n      const maticPOSClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPOSClient = new MaticJs.MaticPOSClient(maticPOSClientConfig);\n\n      // console.log('maticPOSClientConfig',networkConfig,maticPOSClientConfig);\n\n      const maticPlasmaClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPlasmaClient = new MaticJs(maticPlasmaClientConfig);\n    }\n\n    window.web3Polygon = web3Polygon;\n    window.maticPOSClient = maticPOSClient;\n    window.maticPlasmaClient = maticPlasmaClient;\n\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    } else {\n      currentWeb3 = web3Providers[networkId];\n    }\n\n    this.setState({\n      web3Infura,\n      currentWeb3,\n      web3Polygon,\n      web3Providers,\n      maticPOSClient,\n      maticPlasmaClient\n    },() => {\n      // this.checkNetwork();\n    });\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - web3Callback');\n\n      // console.log('web3Callback',context);\n\n      // After setting the web3 provider, check network\n      try {\n        // if (!this.state.networkInitialized){\n        //   await this.checkNetwork();\n        // }\n\n        if (this.state.network.isSupportedNetwork){\n\n          // if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          // }\n\n          if (context.active && context.connectorName===connectorName && context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      const biconomyWeb3Provider = web3Provider ? web3Provider : new Web3.providers.HttpProvider(web3Host);\n      if (this.state.biconomy === null || this.state.biconomy.currentProvider !== biconomyWeb3Provider ){\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              web3Providers,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    // console.log(`initContract: ${name} - addr: ${address}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  initContractWithoutSet = (name, address, abi, networkId=null) => {\n    // Reset networkId is equal to injected\n    if (networkId && parseInt(networkId) === parseInt(this.state.network.required.id) && this.state.network.isCorrectNetwork){\n      networkId = null;\n    }\n    const web3Provider = networkId && this.state.web3Providers[networkId] ? this.state.web3Providers[networkId] : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    // if (name==='ERC20Predicate'){\n    //   console.log('createContract',this.state.network,web3Provider);\n    // }\n\n    if (!web3Provider){\n      return null;\n    }\n\n    if (!abi){\n      abi = [];\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      const contractInfo = {name, contract};\n\n      this.setState(prevState => {\n        // Remove old contract\n        const contracts = prevState.contracts.filter( c => c.name !== contractInfo.name );\n        // Insert updated contract\n        contracts.push(contractInfo);\n        return {\n          contracts\n        };\n      });\n\n      return contractInfo;\n    } catch (error) {\n      console.error(\"Could not create contract.\",name,address,abi,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      return this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      },()=>{\n        this.getAccountBalance();\n      });\n    } else if (this.props.connectorName === 'Infura' || !this.props.connectorName){\n      return this.setState({\n        account:null,\n        accountInizialized:true\n      });\n    }\n\n    try {\n\n      if (this.props.context.active && this.props.context.connectorName===this.props.connectorName && this.props.context.account){\n        account = this.props.context.account;\n      }\n\n      if (!account){\n        // const wallets = await Promise.race([\n        //     this.state.web3.eth.getAccounts(),\n        //     new Promise((resolve) => setTimeout(resolve, 300))\n        // ]);\n        const wallets = await this.state.web3.eth.getAccounts();\n\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      // console.log('initAccount',account,this.props.context.account);\n\n      if (!account){\n        account = this.props.context.account;\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // Request account access if needed\n      if (account){\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          account:null,\n          accountInizialized: true,\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      // console.log('getAccountBalance',parseFloat(accountBalance));\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    if (!this.state.web3 || !this.props.availableStrategies){\n      return false;\n    }\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initializeContracts - START',this.state.network.required.id,this.props.availableStrategies,this.props.availableStrategiesNetworks);\n\n    const contracts = [];\n    const contractsNetworks = {};\n    const requiredNetworkId = parseInt(this.state.network.required.id);\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n\n    if (this.props.availableStrategiesNetworks){\n      Object.keys(this.props.availableStrategiesNetworks).forEach( networkId => {\n        contractsNetworks[networkId] = [];\n        const strategies = this.props.availableStrategiesNetworks[networkId];\n        Object.keys(strategies).forEach( strategy => {\n          const availableTokens = this.props.availableStrategiesNetworks[networkId][strategy];\n          Object.keys(availableTokens).forEach( token => {\n            const tokenConfig = availableTokens[token];\n\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi, networkId));\n\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi, networkId));\n\n            tokenConfig.protocols.forEach(async (p,i) => {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              contractsNetworks[networkId].push(this.initContractWithoutSet(p.token, p.address, p.abi, networkId));\n            });\n          })\n        });\n      });\n    }\n\n    // console.log('initializeContracts',this.state.network,this.state.web3,contracts,this.props.availableStrategies);\n\n    const contractsToInitialize = this.functionsUtil.getGlobalConfig(['contracts',requiredNetworkId]);\n    if (contractsToInitialize){\n      Object.keys(contractsToInitialize).forEach( contractName => {\n        const contractInfo = contractsToInitialize[contractName];\n        if (contractInfo.address !== null && contractInfo.abi !== null){\n          const networkId = contractInfo.networkId ? parseInt(contractInfo.networkId) : requiredNetworkId;\n          // console.log('initializeContracts, init contract', requiredNetworkId, contractName, contractInfo.address);\n          contracts.push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n          contractsNetworks[requiredNetworkId].push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n        }\n      });\n    }\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    if (govTokens){\n      Object.keys(govTokens).forEach( token => {\n        const govTokenConfig = govTokens[token];\n        if (!govTokenConfig.enabled){\n          return;\n        }\n        availableNetworks.forEach( networkId => {\n          // Initialize govToken contracts\n          const contractAddress = govTokenConfig.addresses && govTokenConfig.addresses[networkId] ? govTokenConfig.addresses[networkId] : govTokenConfig.address;\n          this.functionsUtil.customLog('initializeContracts, init contract', token, contractAddress);\n          if (parseInt(networkId) === parseInt(requiredNetworkId)){\n            contracts.push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi));\n          }\n          contractsNetworks[networkId].push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi, networkId));\n        });\n      });\n    }\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const availableTokens = this.props.availableStrategies[strategy];\n        Object.keys(availableTokens).forEach( token => {\n          const tokenConfig = availableTokens[token];\n\n          this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n          contracts.push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi));\n\n          // Initialize idleTokens contracts\n          this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n          contracts.push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi));\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n            contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              contracts.push(this.initContractWithoutSet(oldContract.name, oldContract.address, oldContract.abi));\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              contracts.push(this.initContractWithoutSet(migrationContract.name, migrationContract.address, migrationContract.abi));\n            }\n          }\n        })\n      });\n    }\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['strategies','tranches']);\n    if (this.props.availableTranches){\n      Object.keys(this.props.availableTranches).forEach( protocol => {\n        const tokens = this.props.availableTranches[protocol];\n        Object.keys(tokens).forEach( token => {\n          const tokenConfig = tokens[token];\n          if (!tranchesConfig.availableNetworks || tranchesConfig.availableNetworks.includes(requiredNetworkId)){\n            if (tokenConfig.abi){\n              contracts.push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi));\n            }\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi));\n          }\n\n          if (tokenConfig.abi){\n            contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi,1));\n          }\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi,1));\n        });\n      });\n    }\n\n    const newContracts = Object.assign([],this.state.contracts);\n    contracts.forEach( contractInfo => {\n      if (contractInfo){\n        const contractFound = newContracts.find( c => c.name===contractInfo.name );\n        if (!contractFound){\n          newContracts.push(contractInfo);\n        } else {\n          const contractIndex = newContracts.indexOf(contractFound);\n          newContracts[contractIndex] = contractInfo;\n        }\n      }\n    });\n\n    // console.log('initializeContracts',newContracts);\n\n    const newState = {\n      contractsNetworks,\n      contracts:newContracts,\n      contractsInitialized:true\n    };\n\n    return this.setState(newState);\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n     const networkId = typeof this.props.config !== \"undefined\" && typeof this.props.config.requiredNetwork !== \"undefined\" ? this.props.config.requiredNetwork : globalConfigs.network.requiredNetwork;\n     const networkName = networkId && globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId].name : 'unknown';\n     return {\n       id: networkId,\n       name: networkName\n     };\n   }\n\n   getCurrentNetwork = async (networkId=null) => {\n     const currentWeb3 = this.functionsUtil.getCurrentWeb3();\n\n     networkId = parseInt(networkId) || await currentWeb3.eth.net.getId();\n     const networkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId,'name']) || await currentWeb3.eth.net.getNetworkType();\n\n     return {\n       id:networkId,\n       name:networkName\n     }\n   }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  checkNetwork = async (networkId=null) => {\n    const network = {...this.state.network};\n\n    network.required = this.getRequiredNetwork();\n    network.current = await this.getCurrentNetwork(networkId);\n\n    const networkInitialized = !!network.current.id;\n    network.isCorrectNetwork = !networkInitialized || network.current.id === network.required.id;\n    network.isSupportedNetwork = !network.current.id || globalConfigs.network.enabledNetworks.includes(network.current.id);\n\n    const currentNetworkChanged = network.current.id && network.current.id !== this.state.network.current.id;\n    const requiredNetworkChanged = network.required.id && network.required.id !== this.state.network.required.id;\n\n    if (!this.state.network.current.id || currentNetworkChanged || requiredNetworkChanged || !this.state.networkInitialized){\n      this.setState({\n        network,\n        networkInitialized\n      });\n    }\n\n    return network;\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    web3Providers:{},\n    CrispClient: null,\n    currentWeb3: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    contractsNetworks: {},\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    maticPlasmaClient:null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    networkInitialized:false,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n          currentSection={this.props.currentSection}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n// import NetworkIndicator from \"../../NetworkIndicator/NetworkIndicator\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n          <Flex\n            width={[0.5,8/12]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={\"flex-end\"}\n          >\n            <Flex\n              pr={[3,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile && (\n                  <>\n                    <Link\n                      mx={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n                )\n              }\n            </Flex>\n            {\n              /*\n              <Flex\n                ml={4}\n              >\n                <NetworkIndicator\n                  {...this.props}\n                />\n              </Flex>\n              */\n            }\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      limit:0,\n      token:'DAI',\n      decimals:18,\n      protocol:'idle',\n      blockNumber:13054628,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleDAIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI AA',\n        blockNumber:13054628,\n        name:'AA_idleDAIYield',\n        token:'AA_idleDAIYield',\n        address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:false,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI BB',\n        blockNumber:13054628,\n        name:'BB_idleDAIYield',\n        token:'BB_idleDAIYield',\n        address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n      }\n    },\n    FEI:{\n      limit:0,\n      token:'FEI',\n      decimals:18,\n      protocol:'idle',\n      blockNumber:13575397,\n      address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleFEIYield',\n        address:'0x77648a2661687ef3b05214d824503f6717311596'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleFEIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_AA',\n          address:'0x8fcD21253AaA7E228531291cC6f644d13B3cF0Ba',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleFEI AA',\n        blockNumber:13575397,\n        name:'AA_idleFEIYield',\n        token:'AA_idleFEIYield',\n        address:'0x9cE3a740Df498646939BcBb213A66BBFa1440af6'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        label:'idleFEI BB',\n        blockNumber:13575397,\n        name:'BB_idleFEIYield',\n        token:'BB_idleFEIYield',\n        address:'0x2490D810BF6429264397Ba721A488b0C439aA745'\n      }\n    }\n  },\n  lido:{\n    stETH:{\n      limit:0,\n      abi:ERC20,\n      decimals:18,\n      token:'stETH',\n      protocol:'lido',\n      blockNumber:13776954,\n      address:'0xae7ab96520de3a18e5e111b5eaab095312d7fe84',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_lido_stETH',\n        address:'0x34dcd573c5de4672c8248cd12a99f875ca112ad8'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_lido_stETH'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_lido_stETH_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13776954,\n        name:'AA_lido_stETH',\n        token:'AA_lido_stETH',\n        label:'lido stETH AA',\n        address:'0x2688fc68c4eac90d9e5e1b94776cf14eade8d877'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_lido_stETH_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13776954,\n        name:'BB_lido_stETH',\n        token:'BB_lido_stETH',\n        label:'lido stETH BB',\n        address:'0x3a52fa30c33caf05faee0f9c5dfe5fd5fe8b3978'\n      }\n    }\n  },\n  convex:{\n    FRAX3CRV:{\n      abi:ERC20,\n      decimals:18,\n      limit:1000000,\n      token:'FRAX3CRV',\n      protocol:'convex',\n      experimental:true,\n      blockNumber:13812864,\n      autoFarming:['CVX','CRV'],\n      address:'0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_frax3crv',\n        address:'0x4ccaf1392a17203edab55a1f2af3079a8ac513e7'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_frax3crv'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_frax3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13812864,\n        name:'AA_convex_frax3crv',\n        token:'AA_convex_frax3crv',\n        label:'convex frax3crv AA',\n        address:'0x15794da4dcf34e674c18bbfaf4a67ff6189690f5'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_frax3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13812864,\n        name:'BB_convex_frax3crv',\n        token:'BB_convex_frax3crv',\n        label:'convex frax3crv BB',\n        address:'0x18cf59480d8c16856701f66028444546b7041307'\n      }\n    },\n    MIM3CRV:{\n      abi:ERC20,\n      decimals:18,\n      limit:1000000,\n      token:'MIM3CRV',\n      protocol:'convex',\n      experimental:true,\n      blockNumber:13848124,\n      autoFarming:['CVX','CRV'],\n      address:'0x5a6A4D54456819380173272A5E8E9B9904BdF41B',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_mim3crv',\n        address:'0x151e89e117728ac6c93aae94c621358b0ebd1866'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_mim3crv'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_mim3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13848124,\n        name:'AA_convex_mim3crv',\n        token:'AA_convex_mim3crv',\n        label:'convex mim3crv AA',\n        address:'0xFC96989b3Df087C96C806318436B16e44c697102'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_mim3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13848124,\n        name:'BB_convex_mim3crv',\n        token:'BB_convex_mim3crv',\n        label:'convex mim3crv BB',\n        address:'0x5346217536852CD30A5266647ccBB6f73449Cbd1'\n      }\n    }\n  }\n};\nexport default availableTranches;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from \"jquery\";\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from \"./connectors\";\nimport Web3Provider from \"web3-react\";\nimport { Web3Consumer } from \"web3-react\";\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from \"../FlexLoader/FlexLoader\";\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from \"../configs/globalConfigs\";\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from \"../configs/availableTokens\";\nimport availableTranches from \"../configs/availableTranches\";\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from \"rimble-ui\";\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import(\"../Dashboard/Dashboard\"));\nconst Governance = React.lazy(() => import(\"../Governance/Governance\"));\n\nclass App extends Component {\n  state = {\n    network: null,\n    cachedData: {},\n    buyToken: null,\n    currentEnv: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode: 'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme: theme,\n    currentSection: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    config:globalConfigs.network,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n    availableStrategiesNetworks: null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n    // window.functionsUtil = this.functionsUtil;\n  }\n\n  closeToastMessage = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps: null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps: props\n    });\n  }\n\n  processCustomParam = (props, prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback = null, clear_all = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    const requiredNetworkId = this.state.network.required.id;\n\n    const cachedData = { ...this.state.cachedData };\n    Object.keys(cachedData[requiredNetworkId]).forEach(key => {\n      const data = cachedData[requiredNetworkId][key];\n      if (data.expirationDate !== null) {\n        delete cachedData[requiredNetworkId][key];\n      }\n    });\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    if (storedCachedData && storedCachedData[requiredNetworkId]){\n      Object.keys(storedCachedData[requiredNetworkId]).forEach( key => {\n        const storedData = storedCachedData[requiredNetworkId][key];\n        if (storedData.expirationDate !== null){\n          delete storedCachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    this.functionsUtil.setLocalStorage('cachedData', storedCachedData, true);\n\n    await this.setState({\n      cachedData\n    }, () => {\n      if (typeof callback === 'function') {\n        callback();\n      }\n    });\n\n    return true;\n  }\n\n  setCachedData = (key, data, TTL = null, useLocalStorage = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    key = key.toLowerCase();\n    const currentTime = parseInt(Date.now() / 1000);\n    const requiredNetworkId = this.state.network.required.id;\n    const cachedKeyFound = this.state.cachedData[requiredNetworkId] ? this.state.cachedData[requiredNetworkId][key] : null;\n\n    const update_key = !cachedKeyFound || ((cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate >= currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key) {\n      const expirationDate = TTL ? currentTime + (TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage) {\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData) {\n          storedCachedData = {};\n          storedCachedData[requiredNetworkId] = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [requiredNetworkId]:{\n            ...storedCachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        };\n        \n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [requiredNetworkId]:{\n            ...prevState.cachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        }\n      }), () => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)) {\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress) {\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw: false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({ ...state, selectedTab: tabIndex }));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const availableStrategiesNetworks = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : this.state.config.requiredNetwork;\n\n    // console.log('loadAvailableTokens_1',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens).filter( networkId => this.functionsUtil.getGlobalConfig(['network','enabledNetworks']).includes(parseInt(networkId)) ).forEach (networkId => {\n      availableStrategiesNetworks[networkId] = {};\n      Object.keys(availableTokens[networkId]).forEach((strategy) => {\n\n        availableStrategiesNetworks[networkId][strategy] = Object.keys(availableTokens[networkId][strategy]).reduce((enabledTokens, token) => {\n          const tokenConfig = availableTokens[networkId][strategy][token];\n          const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n          if (tokenConfig.enabled && envEnabled) {\n            enabledTokens[token] = tokenConfig;\n          }\n          return enabledTokens;\n        }, {});\n\n        if (parseInt(networkId) === parseInt(requiredNetwork)){\n          availableStrategies[strategy] = availableStrategiesNetworks[networkId][strategy];\n        }\n      });\n    });\n\n    newState.availableStrategies = availableStrategies;\n    newState.availableStrategiesNetworks = availableStrategiesNetworks;\n\n    // console.log('availableStrategiesNetworks',availableStrategiesNetworks);\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]) {\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]) {\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy, selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig: !selectedToken ? null : this.state.tokenConfig,\n      availableTokens: !selectedToken ? null : this.state.availableTokens,\n      selectedToken: !selectedToken ? selectedToken : this.state.selectedToken,\n      selectedStrategy: !selectedStrategy ? selectedStrategy : this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if (this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',selectedStrategy,selectedToken,newState);\n\n    await this.setState(newState, callback);\n  }\n\n  async setRequiredNetwork(requiredNetwork){\n    requiredNetwork = parseInt(requiredNetwork);\n    if (globalConfigs.network.enabledNetworks.includes(requiredNetwork)){\n      this.functionsUtil.setLocalStorage('requiredNetwork',requiredNetwork);\n      // console.log('setRequiredNetwork',requiredNetwork);\n      this.functionsUtil.addEthereumChain(requiredNetwork);\n      return await this.setState(prevState => ({\n        config:{\n          ...prevState.config,\n          requiredNetwork\n        }\n      }));\n    }\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState, callback);\n    } else if (!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig: null\n      }, callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction) {\n      window.console.error = () => { };\n      window.console.warn = () => { };\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage) {\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version', false);\n      if (version !== globalConfigs.version) {\n        // Clear cached data\n        this.clearCachedData(() => {\n          // Reset Localstorage\n          this.functionsUtil.clearStoredData(['walletProvider', 'connectorName', 'themeMode', 'requiredNetwork']);\n          this.functionsUtil.setLocalStorage('version', globalConfigs.version);\n        }, true);\n      }\n\n      console.log(`Client Version: ${globalConfigs.version}`);\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode', false);\n    if (themeMode) {\n      this.setThemeMode(themeMode);\n    }\n\n    const requiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',false);\n    if (requiredNetwork){\n      this.setRequiredNetwork(requiredNetwork);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i = 0; i < iFrames.length; i++) {\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w) {\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCurrentEnvironment();\n    this.loadCustomAddress();\n  }\n\n  async loadCurrentEnvironment() {\n    const currentEnv = this.functionsUtil.getCurrentEnvironment();\n    this.setState({\n      currentEnv\n    }, async () => {\n      // const envRequiredNetwork = this.functionsUtil.getGlobalConfig(['environments',this.state.currentEnv,'requiredNetwork']);\n      // const storedRequiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',null);\n      // if (!storedRequiredNetwork || parseInt(storedRequiredNetwork) !== parseInt(envRequiredNetwork)){\n      //   const requiredNetwork = storedRequiredNetwork || envRequiredNetwork;\n      //   console.log('setRequiredNetwork',requiredNetwork);\n      //   await this.setRequiredNetwork(requiredNetwork);\n      // }\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress() {\n    if (!this.state.customAddress) {\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom') {\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress) {\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged) {\n      if (this.state.currentSection === 'landing') {\n        this.setThemeMode('light', false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode', false) || this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged) {\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage) {\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive) {\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName, walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width: this.state.width,\n      height: this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged) {\n      if (widthChanged) {\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged) {\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken: null,\n      buyModalOpened: false\n    });\n  }\n\n  openBuyModal(e, buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened: true\n    });\n  }\n\n  async logout() {\n    // Reset Custom Address\n    this.setState({\n      customAddress: null\n    });\n    // Clear cached data\n    this.clearCachedData(() => {\n      // Reset Localstorage except some keys\n      this.functionsUtil.clearStoredData(['version', 'themeMode', 'lastLogin', 'cachedData','requiredNetwork']);\n    });\n  }\n\n  setNetwork(network) {\n    this.setState({\n      network,\n      availableStrategies:null\n    });\n  }\n\n  setConnector(connectorName, walletProvider) {\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider) {\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ((connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if (connectorName === 'Injected') {\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider) {\n        case 'Metamask':\n          if (!hasMetamask && hasDapper) {\n            walletProvider = 'Dapper';\n          }\n          break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask) {\n            walletProvider = 'Metamask';\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    }, () => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode, store = true) {\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled) {\n      themeMode = 'light';\n    }\n\n    switch (themeMode) {\n      default:\n      case 'light':\n        selectedTheme = theme;\n        break;\n      case 'dark':\n        selectedTheme = themeDark;\n        break;\n    }\n\n    if (store) {\n      this.functionsUtil.setLocalStorage('themeMode', themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection) {\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance', 'enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize: 4,\n            fontWeight: 2\n          }}\n          loaderProps={{\n            mb: 3,\n            size: '80px',\n            color: 'primary'\n          }}\n          flexProps={{\n            my: 3,\n            flexDirection: 'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer\n              recreateOnNetworkChange={false}\n              recreateOnAccountChange={false}\n            >\n              {context => {\n                //console.log('Web3Consumer render',context);\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    connectors={connectors}\n                    config={this.state.config}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    availableTranches={availableTranches}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    currentSection={this.state.currentSection}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                    availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        web3Infura,\n                        web3Polygon,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        checkNetwork,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        contractsNetworks,\n                        accountBalanceLow,\n                        networkInitialized,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper,\n                        initContractCustomProvider\n                      }) => {\n                        return (\n                          <Box>\n                            <Switch>\n                              <Route\n                                path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                                render={\n                                  (props) => \n                                    <Suspense\n                                      fallback={SuspenseLoader}\n                                    >\n                                      <Dashboard\n                                        {...props}\n                                        web3={web3}\n                                        modals={modals}\n                                        network={network}\n                                        context={context}\n                                        account={account}\n                                        isDashboard={true}\n                                        initWeb3={initWeb3}\n                                        biconomy={biconomy}\n                                        isMobile={isMobile}\n                                        simpleID={simpleID}\n                                        contracts={contracts}\n                                        web3Infura={web3Infura}\n                                        web3Polygon={web3Polygon}\n                                        initAccount={initAccount}\n                                        permitClient={permitClient}\n                                        initSimpleID={initSimpleID}\n                                        initContract={initContract}\n                                        transactions={transactions}\n                                        buyToken={this.state.buyToken}\n                                        logout={this.logout.bind(this)}\n                                        accountBalance={accountBalance}\n                                        themeMode={this.state.themeMode}\n                                        theme={this.state.selectedTheme}\n                                        validateAccount={validateAccount}\n                                        currentEnv={this.state.currentEnv}\n                                        connecting={this.state.connecting}\n                                        cachedData={this.state.cachedData}\n                                        setToken={this.setToken.bind(this)}\n                                        accountValidated={accountValidated}\n                                        getTokenDecimals={getTokenDecimals}\n                                        rejectValidation={rejectValidation}\n                                        tokenConfig={this.state.tokenConfig}\n                                        contractsNetworks={contractsNetworks}\n                                        availableTranches={availableTranches}\n                                        getAccountBalance={getAccountBalance}\n                                        accountBalanceLow={accountBalanceLow}\n                                        accountInizialized={accountInizialized}\n                                        networkInitialized={networkInitialized}\n                                        selectedToken={this.state.selectedToken}\n                                        connectorName={this.state.connectorName}\n                                        setStrategy={this.setStrategy.bind(this)}\n                                        userRejectedConnect={userRejectedConnect}\n                                        accountBalanceToken={accountBalanceToken}\n                                        initializeContracts={initializeContracts}\n                                        walletProvider={this.state.walletProvider}\n                                        buyModalOpened={this.state.buyModalOpened}\n                                        erc20ForwarderClient={erc20ForwarderClient}\n                                        contractsInitialized={contractsInitialized}\n                                        openBuyModal={this.openBuyModal.bind(this)}\n                                        rejectAccountConnect={rejectAccountConnect}\n                                        handleMenuClick={this.selectTab.bind(this)}\n                                        setConnector={this.setConnector.bind(this)}\n                                        setThemeMode={this.setThemeMode.bind(this)}\n                                        availableTokens={this.state.availableTokens}\n                                        closeBuyModal={this.closeBuyModal.bind(this)}\n                                        setCachedData={this.setCachedData.bind(this)}\n                                        selectedStrategy={this.state.selectedStrategy}\n                                        userRejectedValidation={userRejectedValidation}\n                                        clearCachedData={this.clearCachedData.bind(this)}\n                                        setStrategyToken={this.setStrategyToken.bind(this)}\n                                        accountValidationPending={accountValidationPending}\n                                        availableStrategies={this.state.availableStrategies}\n                                        setCurrentSection={this.setCurrentSection.bind(this)}\n                                        connectAndValidateAccount={connectAndValidateAccount}\n                                        contractMethodSendWrapper={contractMethodSendWrapper}\n                                        setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                        initContractCustomProvider={initContractCustomProvider}\n                                        setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                      />\n                                    </Suspense>\n\n                                }\n                              >\n                              </Route>\n                              {\n                                governanceEnabled && (\n                                  <Route\n                                    path=\"/governance/:section?/:item_id?\"\n                                    render={\n                                      (props) =>\n                                        <Suspense\n                                          fallback={SuspenseLoader}\n                                        >\n                                          <Governance\n                                            {...props}\n                                            web3={web3}\n                                            modals={modals}\n                                            network={network}\n                                            context={context}\n                                            account={account}\n                                            initWeb3={initWeb3}\n                                            biconomy={biconomy}\n                                            isMobile={isMobile}\n                                            simpleID={simpleID}\n                                            isGovernance={true}\n                                            contracts={contracts}\n                                            web3Infura={web3Infura}\n                                            web3Polygon={web3Polygon}\n                                            initAccount={initAccount}\n                                            initSimpleID={initSimpleID}\n                                            initContract={initContract}\n                                            checkNetwork={checkNetwork}\n                                            transactions={transactions}\n                                            buyToken={this.state.buyToken}\n                                            logout={this.logout.bind(this)}\n                                            accountBalance={accountBalance}\n                                            themeMode={this.state.themeMode}\n                                            theme={this.state.selectedTheme}\n                                            validateAccount={validateAccount}\n                                            currentEnv={this.state.currentEnv}\n                                            connecting={this.state.connecting}\n                                            cachedData={this.state.cachedData}\n                                            setToken={this.setToken.bind(this)}\n                                            accountValidated={accountValidated}\n                                            getTokenDecimals={getTokenDecimals}\n                                            rejectValidation={rejectValidation}\n                                            tokenConfig={this.state.tokenConfig}\n                                            contractsNetworks={contractsNetworks}\n                                            getAccountBalance={getAccountBalance}\n                                            accountBalanceLow={accountBalanceLow}\n                                            accountInizialized={accountInizialized}\n                                            networkInitialized={networkInitialized}\n                                            selectedToken={this.state.selectedToken}\n                                            connectorName={this.state.connectorName}\n                                            setStrategy={this.setStrategy.bind(this)}\n                                            userRejectedConnect={userRejectedConnect}\n                                            accountBalanceToken={accountBalanceToken}\n                                            initializeContracts={initializeContracts}\n                                            walletProvider={this.state.walletProvider}\n                                            buyModalOpened={this.state.buyModalOpened}\n                                            contractsInitialized={contractsInitialized}\n                                            openBuyModal={this.openBuyModal.bind(this)}\n                                            rejectAccountConnect={rejectAccountConnect}\n                                            handleMenuClick={this.selectTab.bind(this)}\n                                            setConnector={this.setConnector.bind(this)}\n                                            setThemeMode={this.setThemeMode.bind(this)}\n                                            availableTokens={this.state.availableTokens}\n                                            closeBuyModal={this.closeBuyModal.bind(this)}\n                                            setCachedData={this.setCachedData.bind(this)}\n                                            selectedStrategy={this.state.selectedStrategy}\n                                            userRejectedValidation={userRejectedValidation}\n                                            clearCachedData={this.clearCachedData.bind(this)}\n                                            setStrategyToken={this.setStrategyToken.bind(this)}\n                                            accountValidationPending={accountValidationPending}\n                                            availableStrategies={this.state.availableStrategies}\n                                            setCurrentSection={this.setCurrentSection.bind(this)}\n                                            connectAndValidateAccount={connectAndValidateAccount}\n                                            contractMethodSendWrapper={contractMethodSendWrapper}\n                                            setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                            setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                          />\n                                        </Suspense>\n                                    }\n                                  >\n                                  </Route>\n                                )\n                              }\n                              <Route>\n                                <Header\n                                  modals={modals}\n                                  network={network}\n                                  context={context}\n                                  account={account}\n                                  initWeb3={initWeb3}\n                                  isMobile={isMobile}\n                                  contracts={contracts}\n                                  initAccount={initAccount}\n                                  initContract={initContract}\n                                  buyToken={this.state.buyToken}\n                                  accountBalance={accountBalance}\n                                  logout={this.logout.bind(this)}\n                                  validateAccount={validateAccount}\n                                  connecting={this.state.connecting}\n                                  accountValidated={accountValidated}\n                                  getTokenDecimals={getTokenDecimals}\n                                  rejectValidation={rejectValidation}\n                                  setToken={e => { this.setToken(e) }}\n                                  tokenConfig={this.state.tokenConfig}\n                                  contractsNetworks={contractsNetworks}\n                                  getAccountBalance={getAccountBalance}\n                                  accountBalanceLow={accountBalanceLow}\n                                  networkInitialized={networkInitialized}\n                                  selectedToken={this.state.selectedToken}\n                                  connectorName={this.state.connectorName}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountBalanceToken={accountBalanceToken}\n                                  walletProvider={this.state.walletProvider}\n                                  buyModalOpened={this.state.buyModalOpened}\n                                  contractsInitialized={contractsInitialized}\n                                  openBuyModal={this.openBuyModal.bind(this)}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  handleMenuClick={this.selectTab.bind(this)}\n                                  setConnector={this.setConnector.bind(this)}\n                                  availableTokens={this.state.availableTokens}\n                                  closeBuyModal={this.closeBuyModal.bind(this)}\n                                  userRejectedValidation={userRejectedValidation}\n                                  accountValidationPending={accountValidationPending}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                  availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                />\n\n                                {\n                                  this.state.route === \"onboarding\" && (\n                                    <Web3Debugger\n                                      web3={web3}\n                                      account={account}\n                                      accountBalance={accountBalance}\n                                      accountBalanceToken={accountBalanceToken}\n                                      accountBalanceLow={accountBalanceLow}\n                                      initAccount={initAccount}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountValidated={accountValidated}\n                                      accountValidationPending={accountValidationPending}\n                                      rejectValidation={rejectValidation}\n                                      userRejectedValidation={userRejectedValidation}\n                                      validateAccount={validateAccount}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      modals={modals}\n                                      network={network}\n                                      transaction={transaction}\n                                    />\n                                  )\n                                }\n\n                                {\n                                  this.state.route === \"default\" && (\n                                    <Switch>\n                                      <Route exact path=\"/\"\n                                        render={(props) =>\n                                          <Suspense\n                                            fallback={SuspenseLoader}\n                                          >\n                                            <Landing\n                                              {...props}\n                                              web3={web3}\n                                              network={network}\n                                              account={account}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              initContract={initContract}\n                                              innerWidth={this.state.width}\n                                              logout={this.logout.bind(this)}\n                                              innerHeight={this.state.height}\n                                              accountBalance={accountBalance}\n                                              themeMode={this.state.themeMode}\n                                              theme={this.state.selectedTheme}\n                                              setToken={e => {this.setToken(e)}}\n                                              cachedData={this.state.cachedData}\n                                              currentEnv={this.state.currentEnv}\n                                              connecting={this.state.connecting}\n                                              selectedTab={this.state.selectedTab}\n                                              tokenConfig={this.state.tokenConfig}\n                                              accountBalanceLow={accountBalanceLow}\n                                              getAccountBalance={getAccountBalance}\n                                              availableTranches={availableTranches}\n                                              contractsNetworks={contractsNetworks}\n                                              networkInitialized={networkInitialized}\n                                              customAddress={this.state.customAddress}\n                                              selectedToken={this.state.selectedToken}\n                                              accountBalanceToken={accountBalanceToken}\n                                              closeToastMessage={this.closeToastMessage}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              setThemeMode={this.setThemeMode.bind(this)}\n                                              processCustomParam={this.processCustomParam}\n                                              availableTokens={this.state.availableTokens}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              updateSelectedTab={this.selectTab.bind(this)}\n                                              toastMessageProps={this.state.toastMessageProps}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              availableStrategies={this.state.availableStrategies}\n                                              setCurrentSection={this.setCurrentSection.bind(this)}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                              availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                            />\n                                            <CookieConsent\n                                              expires={365}\n                                              buttonText={\"Ok\"}\n                                              location={\"bottom\"}\n                                              acceptOnScroll={true}\n                                              cookieName={\"cookieAccepted\"}\n                                              acceptOnScrollPercentage={5}\n                                              style={{ background: \"rgba(255,255,255,0.95)\", zIndex: '9999999' }}\n                                              buttonStyle={{ display: isMobile ? \"block\" : \"none\", backgroundColor: '#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\" }}\n                                            >\n                                              <Flex flexDirection={'row'} alignItems={['flex-start', 'center']} justifyContent={'flex-start'} maxHeight={['150px', 'initial']} style={isMobile ? { overflowY: 'scroll' } : null}>\n                                                <Image display={['none', 'block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                                <Text pl={[0, 3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                                  This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                                  You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                              </Text>\n                                              </Flex>\n                                            </CookieConsent>\n                                          </Suspense>\n                                        }\n                                      ></Route>\n                                      <Route exact path=\"/terms-of-service\">\n                                        <Tos />\n                                      </Route>\n                                      <Route>\n                                        <PageNotFound />\n                                      </Route>\n                                    </Switch>\n                                  )\n                                }\n                              </Route>\n                            </Switch>\n                            <TransactionToastUtil\n                              transactions={transactions}\n                              themeMode={this.state.themeMode}\n                            />\n                          </Box>\n                        )\n                      }}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens ? this.props.availableTokens[token] : null;\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsUnderManagement extends Component {\n\n  state = {\n    totalAUM:null,\n    totalAUMEndOfYear:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalAUM();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalAUM();\n    }\n  }\n\n  async loadTotalAUM(){\n\n    const allNetworks = this.props.allNetworks || false;\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || (allNetworks && this.state.totalAUM)){\n      return true;\n    }\n\n    if (this.props.totalAUM && this.props.totalAUMEndOfYear){\n      return this.setState({\n        totalAUM:this.props.totalAUM,\n        totalAUMEndOfYear:this.props.totalAUMEndOfYear\n      });\n    }\n\n    const aggregatedStatsMethodParams = this.props.aggregatedStatsMethodParams || [true,allNetworks];\n\n    const {\n      avgAPY,\n      totalAUM\n    } = typeof this.props.aggregatedStatsMethod === 'function' ? await this.props.aggregatedStatsMethod(...aggregatedStatsMethodParams) : await this.functionsUtil.getAggregatedStats(...aggregatedStatsMethodParams);\n\n    let totalAUMEndOfYear = this.functionsUtil.BNify(0);\n    if (!this.functionsUtil.BNify(totalAUM).isNaN() && !this.functionsUtil.BNify(avgAPY).isNaN()){\n      totalAUMEndOfYear = totalAUM.plus(totalAUM.times(avgAPY.div(100)));\n    }\n\n    return this.setState({\n      totalAUM,\n      totalAUMEndOfYear\n    });\n  }\n\n  render() {\n    return this.state.totalAUM ? (\n      <Box\n        width={1}\n        {...this.props.flexProps}\n      >\n        <CountUp\n          delay={0}\n          decimals={4}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          duration={31536000}\n          start={parseFloat(this.state.totalAUM)}\n          end={parseFloat(this.state.totalAUMEndOfYear)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,4) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              style={ this.props.counterStyle ? this.props.counterStyle : {\n                display:'block',\n                color:'dark-gray',\n                whiteSpace:'nowrap',\n                fontFamily:this.props.theme.fonts.counter,\n                fontWeight:this.props.theme.fontWeights[5],\n                textAlign: this.props.isMobile ? 'center' : 'right',\n                fontSize: this.props.isMobile ? '1.6em' : this.props.theme.fontSizes[6]\n              }}\n              ref={countUpRef}\n            />\n          )}\n        </CountUp>\n        {\n          (typeof this.props.subtitle === 'undefined' || this.props.subtitle) && (\n            <Title\n              fontWeight={3}\n              fontSize={[2,2]}\n              color={'cellTitle'}\n              textAlign={['center','right']}\n              {...this.props.subtitleProps}\n            >\n              <Text.span fontWeight={'inherit'} color={'inherit'} fontSize={'inherit'}>{this.props.subtitle || 'Assets Under Management'}</Text.span>\n            </Title>\n          )\n        }\n      </Box>\n    ) : (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={this.props.loaderAlign || 'center'}\n      >\n        <Loader\n          size={\"30px\"}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsUnderManagement;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://idlelabs.notion.site/Idle-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","// import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\n// import SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import GenericChart from '../GenericChart/GenericChart';\n// import CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport { Image, Text, Loader, Button, Flex, Icon, Tooltip } from \"rimble-ui\";\n// import VariationNumber from '../VariationNumber/VariationNumber';\n// import AllocationChart from '../AllocationChart/AllocationChart';\n// import CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n    // console.log('componentDidMount',this.props.protocol,this.props.token,this.props.tranche);\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractsInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        const protocolConfig = this.functionsUtil.getGlobalConfig(['stats', 'protocols', this.props.protocol]);\n        const protocolIcon = protocolConfig && protocolConfig.icon ? protocolConfig.icon : `${this.props.protocol}.svg`;\n        output = (\n          <Image src={`images/protocols/${protocolIcon}`} {...fieldProps} />\n        );\n      break;\n      case 'experimentalBadge':\n        output = null;\n        if (this.props.tokenConfig.experimental){\n          output = (\n            <Tooltip\n              placement={'top'}\n              message={`This pool is experimental, use at your own risk.`}\n            >\n              <Image src={`images/experimental.png`} {...fieldProps} />\n            </Tooltip>\n          );\n        }\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n        const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.keys(this.state[fieldInfo.name]).map( (govToken,govTokenIndex) => {\n                const govTokenConfig = this.state[fieldInfo.name][govToken];\n                return (\n                  <AssetField\n                    token={govToken}\n                    tokenConfig={govTokenConfig}\n                    key={`asset_${govTokenIndex}`}\n                    fieldInfo={{\n                      name:'iconTooltip',\n                      tooltipProps:{\n                        message:`${govToken}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govToken] ? `: ${this.state.getGovTokensDistributionSpeed[govToken].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                      },\n                      props:{\n                        borderRadius:'50%',\n                        position:'relative',\n                        height:['1.4em','2em'],\n                        ml:govTokenIndex ? '-10px' : 0,\n                        zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                        boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedValue}}></Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Text, Icon, Image, Button, Link, Flex } from \"rimble-ui\";\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'link':\n        CustomComponent = Link;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'bgIcon':\n        CustomComponent = (props) => (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={props.bgColor}\n          >\n            <Icon\n              align={'center'}\n              name={customValue}\n              color={props.color}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontWeight:3,\n      height:'45px',\n      fontSize:[2,3],\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        color={'link'}\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex, Link } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return null;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const tokenConfigStats = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // console.log(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens,output);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n\n              // console.log('apiResultsAprChart',this.props.tokenConfig.token,this.props.tokenConfig.address,this.props.network.required);\n\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              let itemIndex = 0;\n              const totalItems = apiResultsAprChart.length;\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                const itemPos = Math.floor(itemIndex++/totalItems*100);\n                aprChartData[0].data.push({ x, y, itemPos });\n              });\n            }\n\n            if (aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfigStats = this.props.token ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]) : null;\n    const tokenConfig = this.props.tokenConfig || tokenConfigStats;\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? (<Text {...fieldProps}>N/A</Text>) : (this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : (this.functionsUtil.BNify(this.state.score).lte(0) ? (<Text {...fieldProps}>-</Text>) : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'link':\n            CustomComponent = Link;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n\n        // Custom Field Props\n        const customFieldName = Object.values(fieldInfo.path).pop();\n        if (this.props.tokenConfig[`${customFieldName}Props`]){\n          const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n          // Replace props\n          if (customFieldProps && Object.keys(customFieldProps).length){\n            Object.keys(customFieldProps).forEach(p => {\n              fieldProps[p] = customFieldProps[p];\n            });\n          }\n        }\n\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n"],"sourceRoot":""}