{"version":3,"sources":["AssetField/AssetField.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","SmartNumber/SmartNumber.js","PageNotFound/PageNotFound.module.scss","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","AllocationChart/AllocationChart.js","PortfolioEquity/PortfolioEquity.js","ChartCustomTooltip/ChartCustomTooltip.js","ImageButton/ImageButton.js","FlexLoader/FlexLoader.js","ExtLink/ExtLink.js","RoundButton/RoundButton.js","theme.js","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","utilities/components/ModalCard.module.scss","Migrate/Migrate.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","TxProgressBar/TxProgressBar.js","AssetSelector/AssetSelector.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","utilities/components/Header.module.scss","GenericSelector/GenericSelector.js","Title/Title.js","GenericChart/GenericChart.js","DashboardCard/DashboardCard.module.scss","FastBalanceSelector/FastBalanceSelector.js","TokenSwap/TokenSwap.js","NexusMutual/NexusMutual.js","CustomField/CustomField.js","CustomList/CustomList.js","PortfolioDonut/PortfolioDonut.js","TotalEarningsCounter/TotalEarningsCounter.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","IconBox/IconBox.js","SendTxWithBalance/SendTxWithBalance.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","configs/globalConfigs.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","TableRow/TableRow.js","TableHeader/TableHeader.js","Migrate/Migrate.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","DashboardCard/DashboardCard.js","colors.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","utilities/components/BuyModal.js","utilities/components/ModalCard.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js"],"names":["AssetField","state","ready","functionsUtil","componentUnmounted","loadField","_callee","fieldName","isRisk","setState","fieldInfo","fieldProps","decimals","addGovTokens","output","govTokens","getGovTokensDistributionSpeed","tokenPrice","_ref2","oldContractBalanceFormatted","_ref3","redeemableBalanceCurveEnd","redeemableBalanceCurveStart","_ref4","redeemableBalanceEnd","redeemableBalanceStart","_ref5","_ref6","earningsCounter","feePercentage","feesStart","feesEnd","_ref7","_ref8","curveApy","earningsCurveStart","amountLentCurve","earningsCurveEnd","_ref9","_ref10","tokenAPY2","earningsStart","amountLent2","earningsEnd","tokenScore","tokenAPR","oldTokenConfig","tokenAPY","govTokensAprs","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","cachedDataKey","cachedData","startTimestamp","y","i","mDate","x","frequencySeconds","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","path","_args","arguments","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","length","undefined","_this","props","token","tokenConfig","abrupt","selectedStrategy","name","isMobile","t0","loadAssetField","account","sent","setStateSafe","tokenBalance","toString","getTokenGovTokens","showPrice","fee","checkMigration","amountToMigrate","amountLent","idleTokenBalance","earnings","Promise","all","getTokenFees","Object","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","times","getCurveAPY","gt","div","plus","redeemableBalance","getTokenScore","score","poolSize","earningsPercCurveDirection","parseFloat","earningsPercCurve","toFixed","earningsPercDirection","earningsPerc","showAPR","migration","oldContract","assign","idle","protocols","values","oldProtocols","forEach","oldProtocol","foundProtocol","find","p","protocolPos","indexOf","isNaN","oldAPY","tokenAPYNoGov","curveAvgSlippage","showTooltip","getGovTokensAprs","t1","allocationChartRowElement","document","getElementById","parentId","rowId","$allocationChartRowElement","window","jQuery","innerWidth","css","innerHeight","parseInt","Math","min","removeEventListener","bind","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","addEventListener","getGlobalConfig","max","strToMoment","Date","format","subtract","_d","getTime","concat","address","getCachedData","id","color","join","data","add","random","push","getFrequencySeconds","getTokenApiData","d","timestamp","fixTokenDecimals","idleRate","setCachedData","aprChartRowElement","$aprChartRowElement","Line","pointSize","lineWidth","useMesh","axisLeft","animate","curve","axisBottom","enableArea","areaOpacity","enableGridX","enableGridY","pointBorderWidth","enableSlices","isInteractive","colors","defs","linearGradientDef","offset","fill","match","margin","top","right","bottom","left","chartProps","keys","PerformanceChartRowElement","$PerformanceChartRowElement","clone","map","idlePrice","minus","blocknumber","pointLabelYOffset","getArrayPath","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","stop","this","setProps","FunctionsUtil","loadUtils","newState","callback","prevProps","prevState","tokenChanged","accountChanged","mobileChanged","themeModeChanged","themeMode","fieldChanged","contractInitialized","contractsInitialized","transactionsChanged","transactions","filter","tx","status","_this2","oldState","_this3","loader","showLoader","react__WEBPACK_IMPORTED_MODULE_12___default","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_19__","size","fontWeight","fontSize","flexProps","justifyContent","funcProps","maxPrecision","minPrecision","icon1","icon","placement","message","tooltipProps","src","icon2","strategyIcon","strategy","strategyName","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","number","react_countup__WEBPACK_IMPORTED_MODULE_11___default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","abbreviateNumber","_ref11","countUpRef","style","ref","_ref12","_ref13","_ref14","_ref15","width","alignItems","flexDirection","govTokenConfig","govTokenIndex","key","distributionFrequency","borderRadius","position","height","ml","zIndex","boxShadow","showDirection","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_17__","direction","earningsCurve","governanceTokenName","idleTokenConfig","idleDistribution","userDistributionSpeed","distributionSpeed","iconProps","govToken","tooltipMode","value","buttonLabel","label","onClick","handleClick","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","type","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_18__","loaderProps","loaderText","selectedToken","inline","CustomComponent","customValue","BNify","SmartNumber","Icon","customFieldName","pop","customFieldProps","Text","formattedValue","_isBigNumber","Component","ChartCustomTooltipRow","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","mb","pr","flexBasis","flex","mr","backgroundColor","textAlign","textTransform","whiteSpace","dangerouslySetInnerHTML","__html","formattedNumber","formatMoney","precision","showUnit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unit","unitProps","module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","ShortHash","shortenHash","hash","shortHash","txStart","substr","txEnd","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","display","React","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","buttonProps","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","TransactionListFilters","maxWidth","minWidth","maxHeight","isOpened","activeFilters","assets","actions","setFilter","objectSpread","defineProperty","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","DashboardCard","cardProps","py","px","transition","cursor","overflow","mt","borderTop","theme","divider","filters","filterCategory","filterValues","TableCellHeader","pb","toUpperCase","filterValue","filterLabel","isChecked","my","checked","radioBtn","onChange","e","mainColor","v","filterName","hoverColor","TransactionsList","page","prevTxs","txsPerPage","loading","totalTxs","totalPages","deposit","redeem","send","receive","migrate","swap","swapout","withdraw","completed","pending","failed","renderedTxs","processedTxs","lastBlockNumber","processTxs","availableActions","action","toLowerCase","txsIndexes","includes","sort","b","timeStamp","ceil","availableTokens","date","getTxAction","parsedValue","tokenAmount","amount","momentDate","preventDefault","loadTxs","JSON","stringify","enabledTokens","count","firstBlockNumber","enabledActions","getEtherscanTxs","etherscanTxs","hashKey","lastTx","blockNumber","_this4","hasActiveFilters","m","FlexLoader","minHeight","textProps","text","pt","src_TransactionListFilters_TransactionListFilters","TableHeader","cols","index","txHash","txHashKey","TableRow","rowProps","transaction","open","cardId","fieldComponent","TransactionField","prevPage","nextPage","h3","fontFamily","AllocationChart","chartData","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","loadData","getTokenAllocation","padAngle","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","onMouseEnter","onMouseLeave","tooltipFormat","sliceLabel","radialLabel","tooltip","container","background","cardBg","labels","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","protocolInfo","protocolName","protocolAddr","protocolAllocationPercParsed","globalConfigs","stats","hsl","capitalize","protocolIcon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","componentDidMount","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","mark","_callee3","filteredTxs","_context3","lt","balance","idleTokens","_x3","apply","currentDate","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","tokensData","_callee4","_context4","_x4","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","filteredTokenData","tokenDecimals","filteredBalances","lastFilteredTx","newBalance","lastTxBalance","tokenUsdConversionRate","conversionRateField","chartToken","conversionRate","isSameOrAfter","isAfter","formattedDate","_loop","aggregatedBalances","balances","itemIndex","item","itemPos","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","xScale","yScale","stacked","xFormat","yFormat","legend","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","tickRotation","pointLabel","areaBaselineValue","pointColor","axis","ticks","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","point","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","parentIdHeight","ChartCustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","xFormatted","children","ImageButton","image","imageSrc","imageProps","iconName","caption","isActive","contrastColor","buttonStyle","Fragment","badge","bgColor","captionPos","subcaption","split","lineHeight","ExtLink","react__WEBPACK_IMPORTED_MODULE_6___default","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","target","rel","RoundButton","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","fontSizes","fontWeights","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","disabled","primary","blue","base","gradient-bg","primary-light","light","primary-dark","dark","bgBlue","dark-blue","skyBlue","lightBlue","copyColor","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","menuBg","menuHover","flashColor","menuRightBorder","cardHoverShadow","cardBgHover","cardBorder","boost","curvein","default","curveout","curvedepositin","curvedepositout","actionBg","blacks","whites","zIndices","messageStyle","shade","tint","success","green","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","bg","input","button","TxProgressBar","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","initProgressBar","getTransaction","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","customLog","web3","eth","err","_x","_x2","getBlockTime","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txProgressBarData","_context7","localStorage","getItem","parse","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","href","cancelTransaction","cancelTextColor","cancelTextHoverColor","AssetSelector","options","defaultValue","CustomOptionValue","CustomValueContainer","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","showCustomField","showBalance","selectProps","innerProps","loadComponents","selectedTokenChanged","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","isSearchable","changeToken","hashChanged","textOverflow","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","align","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_12__","border","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","tokenSymbol","gradientButton","empty","select","selectDark","GenericSelector","optionsChanged","defaultValueChanged","componentsChanged","ControlComponent","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","CustomInputContainer","searchInput","searchInputHidden","CustomOption","selectedValue","o","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","Title","HeadingComponent","component","Heading","h1","GenericChart","handleWindowSizeChange","chartContainer","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","defaultOpacity","hidden","interactive","rainbow","FastBalanceSelector","onMouseDown","replaceArrayProps","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","baseToken","regenerator_default","selectDestToken","getGlobalConfigs","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","enabled","remoteResources","url","j","scriptID","script","remoteResourceParams","precall","readyState","onreadystatechange","onload","async","parentElement","appendChild","head","stylesheetId","loadTokens","toolProps","asyncToGenerator","getContractByName","abi","initContract","fromTokenChanged","destTokenChanged","loadKyberWidget","NexusMutual","step","steps","1","2","3","amountValue","periodValue","quoteResponse","changeAmount","changePeriod","makeRequest","stepIndex","textDecoration","activeColor","changeSelectedToken","required","placeholder","getQuote","CustomField","componentHasChildren","fieldType","fieldPath","row","Image","Button","CustomList","rows","rowIndex","PortfolioDonut","totalFunds","parentWidth","selectedTokenConfig","loadPortfolio","portfolio","getTokenBalance","getIdleTokenPrice","convertTokenBalance","getGovTokensUserBalances","govTokensUserBalances","govTokenBalance","tokenPercentage","tokenColorHsl","round","radialLabelsLinkOffset","itemWidth","itemHeight","translateY","symbolSize","anchor","itemTextColor","symbolShape","effects","on","convertToken","TotalEarningsCounter","loadTotalEarnings","availableStrategies","counterStyle","getAccountPortfolio","depositedTokens","avgAPY","totalEarnings","totalAmountLent","tokenAprs","tokenEarnings","tokenWeight","amountLentToken","getTokenAprs","getAmountLent","slicedToArray","avgApy","totalBalance","build_default","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","90","2 Years","5 Years","loadEarnings","amountLents","aggregatedEarnings","earningsYear","avgBuyPrice","idleTokenPrice","earningsPercStep","possibleSteps","maxPossibleStep","getAvgBuyPrice","avgApr","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","gte","pl","src_TotalEarningsCounter_TotalEarningsCounter","estimationLabel","DashboardIconButton","iconColor","StrategyPage","tokensToMigrate","aggregatedValues","activeCoverages","remainingTokens","batchedDeposits","portfolioLoaded","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","portfolioEquityQuickSelection","getActiveCoverages","getBatchedDeposits","getTokensToMigrate","c","statusColors","statusIcon","statusColor","portfolioCoverage","statusIconProps","reduce","batchInfo","deposited","batchDeposits","redeemable","batchRedeems","avgScore","getGovTokensUserTotalBalance","govTokensTotalBalance","govTokensUserBalance","govTokensTotalBalanceTooltip","apyLong","riskScore","yieldFarming","batchDepositConfig","coverProtocolConfig","titleProps","src_PortfolioDonut_PortfolioDonut","aligItems","setPortfolioEquityQuickSelection","AssetsList","fields","mobile","parentProps","goToSection","route","borderBottom","h4","desc","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","src_CustomList_CustomList","fileClaimUrl","openWindow","src_EarningsEstimation_EarningsEstimation","textSize","BatchDeposit","canClaim","batchTotals","canDeposit","execute","claim","usePermit","lastExecution","permitEnabled","hasDeposited","permitSigned","showPermitBox","currBatchIndex","batchCompleted","claimSucceeded","executeSucceeded","migrationEnabled","migrationSucceeded","batchDepositEnabled","migrationContractApproved","setAction","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","urlParams","param2","selectToken","executeSucceededChanged","contractApprovedChanged","callbackExecute","txSucceeded","eventData","getTransactionError","callbackReceiptExecute","transactionHash","contractMethodSendWrapper","migrationContract","migrationContractInfo","getBatchedDepositExecutions","genericContractCall","checkTokenApproved","batchExecutions","functions","functionInfo","nonceMethod","permitContract","methods","batchIndex","batchTotal","batchRedeem","batchDeposit","batchDepositInfo","depositEnabled","availableStrategiesKeys","strategyConfig","selectStrategy","obj","baseTokenConfig","strategyAvailableTokens","migrateFunction","setStrategyToken","_this5","batchId","callbackClaim","_this6","eventValue","callbackReceiptClaim","_this7","contractApproved","canExecuteBatch","strategyDefaultValue","s","openTooltipModal","connectAndValidateAccount","isDisabled","togglePermitEnabled","Migrate","showActions","getTokenPrice","isMigrationTool","showBalanceSelector","migrationIcon","migrationParams","toMigrate","callbackPermit","callbackApprove","migrationText","utc","IconBox","SendTxWithBalance","inputValue","buttonDisabled","fastBalanceSelector","changeInputValue","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","lte","approve","callbackReceiptApprove","checkContractApproved","enableERC20","contractInfo","executeTx","_amount","params","callbackReceipt","methodName","methodParams","contractName","normalizeTokenAmount","getTransactionParams","approveCallback","tokenBalanceChanged","contractChanged","tokenConfigChanged","changeInputCallback","infoBox","src_IconBox_IconBox","link","description","balanceSelectorInfo","approveDescription","CoverProtocol","swapInfo","selectedAction","successMessage","defaultCoverage","selectedCoverage","transactionSucceeded","collateral","selectedActionChanged","inputValueChanged","swapInfoChanged","updateData","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","pow","expirationTimestamp","integerValue","balancerTokenConfig","tokens","dashboardUrl","fixedAmount","mintedClaimLog","txReceipt","logs","log","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","apy","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","contract","isClaim","now","apyPrice","currTime","coverages","expirationDate","selectCoverage","coverage","isMint","isBuyClaim","isBuyNoClaim","txAction","src_SendTxWithBalance_SendTxWithBalance","BuyModal","showInline","availableMethods","buyToken","TokenMigration","changeFromToken","convertTool","tokenInfo","destTokenConfig","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","env","process","appName","version","baseURL","forumURL","darkModeEnabled","countries","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","errorsEnabled","messagesEnabled","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","fortmatic","portis","authereum","torus","trezor","ledger","newsletterSubscription","endpoint","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","batchDepositExecutionSchedule","curveInstructions","analytics","google","events","debugEnabled","addPostfixForTestnet","modals","first_deposit_referral","first_deposit_share","welcome","frequency","dashboard","baseRoute","governance","test","startBlock","tokenName","availableContracts","IDLE","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","contracts","delegates","n_coins","imageInactive","rates","poolContract","CurvePool","depositContract","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","coinIndex","idleUSDCYield","idleUSDTYield","permit","DAI","EIPVersion","USDC","showAUM","protocol","aprTooltipMode","COMP","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","UniswapRouter","UniswapV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","assetData","affiliateInfo","feeRecipient","strategies","best","comingSoon","titlePostfix","govTokensEnabled","chartColor","iconInactive","iconInactiveDark","descLong","descShort","risk","new","TTL","scores","versions","v3","additionalProtocols","endTimestamp","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","rgb","hex","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","idleDAI+idleUSDC+idleUSDT","compound","compoundWithCOMP","rateField","fulcrum","dsr","dydx","iearn","aave","0xfc1e690f61efd961294b3e1ce3313fbd8aa4f85d","9599092","9599138","9599263","9599267","9599295","9599299","9599307","9599315","9599579","9599866","9600156","9600433","9600704","9600982","9601051","9601073","9601077","9601345","9601619","9601891","9602144","9602429","9602724","9602993","9603272","9603536","9603826","9603840","9604038","9604182","9604457","9604701","9604979","9605247","9605505","9605793","9606073","9606368","9606639","9606896","9607147","9607406","9607722","9608130","9608395","9608656","9608959","9609544","9609811","9610073","9610341","9610601","9610871","9611120","9611386","9611665","9611949","9612210","9612487","9612758","9613012","9613276","9613542","9613824","9614069","9614327","9614596","9614864","9615111","9615394","9615679","9615958","9616245","9616531","9616803","9617053","9617326","0x9ba00d6856a4edf4665bca2c2309936572473b7e","9598633","9598646","9598684","9598823","9598869","9598915","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","skipMintCheckboxEnabled","proxyContract","IdleProxyMinter","function","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","network","availableNetworks","4","42","1337","isForked","requiredNetwork","blocksPerYear","requiredConfirmations","accountBalanceMinimum","providers","infura","etherscan","endpoints","snapshot","proposals","urls","biconomy","enableLogin","supportedNetworks","disabledWallets","limits","debug","apiKey","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","apiId","terminal","REACT_APP_TERMINAL_KEY","projectId","REACT_APP_TERMINAL_PROJECT_ID","source","web3Version","Web3Versions","one","simpleID","getNetwork","networkId","networkName","appOrigin","location","origin","appId","renderNotifications","notifications","tools","coverProtocol","subComponent","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","permitName","batchMigration","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","oldAddresses","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","directProps","showAllTokens","insurance","ETH","ens","tokenSwap","USDS","WETH","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","payments","bank","defaultProvider","showDefaultOnly","card","wallet","wyre","supportedMethods","supportedCountries","supportedTokens","envParams","accountId","prod","getInfo","selectedMethod","buyParams","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","innerHTML","body","wyreStyle","ramp","hostAppName","userAddress","hostApiKey","REACT_APP_RAMP_KEY","variant","hostLogoUrl","swapAsset","RampInstantSDK","event","getAccountBalance","getTokenDecimals","payload","purchase","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","selectedCountry","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","onSuccess","onClose","tokenParams","connectorName","RimbleWeb3_context","chainId","provider","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","contractAddress","decodeLogsData","internalType","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","mode","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","IdleGovToken","classCallCheck","getBalance","claimRewards","getPriorVotes","priorVotes","_args3","refreshIdleSpeed","getUnclaimedTokens","rewards","getAPR","IDLETokenConfig","APR","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","getDistribution","getUniswapConversionRate","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","totalSpeed","_args10","_context10","_callee9","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","idleGovToken","trimEth","toBN","utils","BN","toEth","wei","fromWei","toWei","BNify_obj","BigNumber","String","_len","Array","_key","moment","customLogError","_console","_len2","_key2","console","normalizeSimpleIDNotification","replace","str","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","t","animateScroll","val","depositProxyContractInfo","migrationContractAddr","migrationContractOldAddrs","batchMigrationContractAddr","isMigrationTx","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","orderedTokensBalance","_args2","getCurveAvgSlippage","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","getCurveAvgBuyPrice","_args4","prevAvgBuyPrice","_args5","idleTokensBalance","getDepositTimestamp","deposits","depositTimestamp","getAmountDeposited","userAvgPrice","amountDeposited","_args8","getEtherscanBaseTxs","endBlockNumber","firstIdleBlockNumber","etherscanInfo","results","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","_args9","REACT_APP_ETHERSCAN_KEY","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","toConsumableArray","saveEtherscanTxs","filterCurveTxs","txsToStore","cachedRequest","saveCachedRequest","allAvailableTokens","_args11","processStoredTxs","_callee13","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args13","_context13","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenDecimal","tokenValue","newValue","iTxs","withdrawnValue","processEtherscanTransactions","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_callee18","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args18","_context18","baseTokenAddress","_callee17","minedTxs","_context17","_ref19","_callee16","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context16","getCurveTokenPrice","_ref20","_callee14","_context14","getTransactionReceipt","_x10","_x11","topics","baseTokensConfig","t2","_ref21","_callee15","_context15","_x12","_x13","_x9","_ref22","_callee24","txsToProcess","_args24","_context24","_ref23","_callee23","_context23","_ref24","_callee22","isStoredTx","allowedMethods","pendingStatus","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context22","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","method","created","_ref25","_callee19","_context19","_x18","_x19","_ref26","_callee20","_context20","_x20","_x21","raw","_ref27","_callee21","_context21","_x22","_x23","decodeLog","_token","_x16","_x17","_x15","_x14","alias","cachedRequests","_ref28","_callee25","error_callback","config","_args25","_context25","catch","_x24","_ref29","_callee26","return_data","_args26","_context26","_x25","code","errorCode","array","prop","shift","configs","checkUrlOrigin","_ref30","_callee28","googleEventsInfo","originOk","currentNetwork","_args28","_context28","ga","_ref31","_callee27","_context27","hitCallback","hitCallbackFail","_x27","_x28","_x26","createContract","_ref32","_callee29","_context29","Contract","_x29","_x30","_x31","getWalletProvider","simpleIDPassUserInfo","userInfo","email","initSimpleID","passUserInfo","getEtherscanTransactionUrl","tx_address","getEtherscanAddressUrl","decimalCount","thousands","abs","negativeSign","Number","getSnapshotProposals","_callee32","activeOnly","validProposals","_args32","_context32","msg","_ref34","_callee31","checkedStrategies","_context31","metadata","_ref35","_callee30","_context30","symbol","_x33","_x32","_ref36","_callee33","forceStartTimestamp","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args33","_context33","_x34","_ref37","_callee34","_context34","_x35","aprs","allocations","aprWeighted","allocation","apr","quantity","hour","day","week","getProtocolInfoByAddress","addr","ROUND_FLOOR","normalizeTokenDecimals","normalizedTokenDecimals","exchangeRate","checkContractPaused","_callee35","contractPaused","_args35","_context35","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref39","_callee38","rebalancer","idleRebalancerInstance","allocationsPromises","availableTokensPromises","protocolIndex","nextAllocations","newTotalAllocation","newProtocolsAllocations","shouldRebalance","_context38","allocationPromise","_ref40","_callee36","_context36","lastAmounts","call","_x37","_x38","availableTokenPromise","_ref41","_callee37","_context37","_x39","_x40","accumulator","availableTokenInfo","nextAllocation","protocolAllocation","protocolAllocationPerc","newProtocolAllocation","_x36","_ref42","_callee39","oldContractBalance","oldContractTokenDecimals","oldContractName","_context39","getContractBalance","_x41","_x42","_ref43","_callee40","signedParameters","callback_receipt","_contract$methods","_context40","getGasPrice","once","confirmationNumber","receipt","_x43","_x44","_x45","_x46","_x47","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref44","_callee41","biconomyInfo","res","_context41","headers","x-api-key","_x48","sendTxWithPermit","_ref45","_callee42","_contract$methods2","messageToSign","_this$getSignaturePar","_context42","encodeABI","_address","personal","sign","_x49","_x50","_x51","_x52","_x53","_x54","sendBiconomyTxWithPersonalSign","_ref46","_callee43","_this$getSignaturePar2","_context43","getNonce","_x55","_x56","_x57","_x58","signPermitEIP2612","_ref47","_callee44","erc20Name","owner","spender","deadline","domain","domainData","_context44","getChainId","verifyingContract","types","EIP712Domain","Permit","primaryType","currentProvider","jsonrpc","substring","_x59","_x60","_x61","_x62","_x63","_x64","_x65","_x66","signPermit","_ref48","_callee45","baseContractName","holder","spenderContractName","expiry","callback_permit","baseContract","spenderContract","permitConfig","_args45","_context45","net","getId","allowed","response","permitParams","methodAbi","_jsonInterface","f","useNonce","inputs","unshift","_x67","_x68","_x69","_x70","_x71","_x72","_x73","_x74","_x75","sendSignedTx","_ref49","_callee46","MetaTransaction","dataToSign","_context46","_x76","_x77","_x78","_x79","_x80","_ref50","_callee47","contractAddr","walletAddr","allowance","_context47","getAllowance","_x81","_x82","_x83","_ref51","_callee48","_context48","_x84","_x85","_x86","txData","disableERC20","toTwosComplement","_ref52","_callee49","field","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref53","_ref54","curveAvgBuyPrice","curveTokenBalance","_ref55","_ref56","amountLentCurve1","redeemableBalanceCurve","_ref57","_ref58","earningPerYear","_ref59","_ref60","amountLent1","redeemableBalance1","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref61","_ref62","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref63","_ref64","tokenAPY1","_earningPerYear","_govTokenConfig2","_ref65","_ref66","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","_ref67","_ref68","amountLentCurve2","redeemableBalanceCurve1","_ref69","_ref70","redeemableBalance2","_args49","_context49","getCurveTokenBalance","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getIdleGovToken","t3","getCompDistribution","t4","getCompAvgApr","t5","t6","t7","getUserTokenFees","t8","t9","getGovTokenUserBalance","_x87","_x88","_x89","_x90","getIdleTokenSupply","_ref71","_callee50","idleTokenSupply","_args50","_context50","_x91","_ref72","_callee51","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args51","_context51","_x92","clearCachedData","useLocalStorage","_ref73","_callee52","_ref74","_ref75","idleTokensTotalSupply","userShare","_context52","_x93","_x94","_callee54","_args54","_context54","_ref77","_callee53","coverageTokens","protocolImage","_context53","_x95","_ref78","_callee55","etherscanEndpoint","_context55","_x96","_callee57","filter_by_status","_args57","_context57","_ref80","_callee56","_ref81","_ref82","_context56","_x97","_ref83","_callee58","fixDecimals","_ref84","_ref85","_args58","_context58","_x98","_x99","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","attr","isValidJSON","checkAddress","_ref86","_callee59","_args59","_context59","_x100","_x101","getProtocolBalance","_ref87","_callee60","_context60","_x102","_x103","getAprs","_ref88","_callee61","_context61","_x104","genericIdleCall","_ref89","_callee62","callParams","_args62","_context62","_x105","estimateGas","_ref90","_callee63","_contract$methods3","_args63","_context63","_x106","_x107","getTxDecodedLogs","_ref91","_callee65","logAddr","decodeLogs","internalTransfers","_context65","_ref92","_callee64","_context64","_x112","_x113","_x108","_x109","_x110","_x111","getBlockNumber","_callee66","_context66","getContractPastEvents","_ref94","_callee67","_args67","_context67","getPastEvents","_x114","_x115","_ref95","_callee68","_contract$methods4","_args68","_context68","_x116","_x117","_ref96","_callee69","_args69","_context69","_x118","_x119","apr2apy","getUnlentBalance","_ref97","_callee70","unlentBalance","_context70","_x120","_ref98","_callee71","_args71","_context71","_x121","_ref99","_callee73","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_args73","_context73","totalAllocationConverted","totalAllocationWithUnlentConverted","_ref100","_callee72","_ref101","_ref102","protocolBalance","_context72","_x123","_x124","getGovTokensBalances","total","getTokenConversionRate","_x122","getUniswapConversionRate_path","_ref103","_callee74","unires","_context74","_x125","_ref104","_callee75","tokenConfigFrom","tokenConfigDest","_context75","_x126","_x127","getCurveDepositedTokens","_ref105","_callee76","idleTokensBalances","remainingCurveTokens","_args76","_context76","_x128","getCurveUnevenTokenAmounts","_ref106","_callee77","amounts","max_burn_amount","unevenAmounts","_context77","getCurveDepositContract","_x129","_x130","_callee78","curveRatesInfo","_context78","strategyTokens","getCurveAPYContract","_callee79","blocksForPrevTokenPrice","_ref109","_ref110","prevTokenPrice","blocksMultiplier","curveAPR","_context79","getCurveTokenSupply","_callee80","_context80","getCurvePoolContract","_callee81","_args81","_context81","_callee82","_args82","_context82","_ref114","_callee83","_ref115","_ref116","_context83","_x131","_callee84","depositContractInfo","_context84","getCurveZapContract","_callee85","zapContractInfo","_context85","_callee86","poolContractInfo","_context86","getCurveSwapContract","_callee87","_context87","getCurveIdleTokensAmounts","_callee89","max_slippage","curveTokenSupply","curveTokenShare","_args89","_context89","_ref122","_callee88","curveIdleTokens","_context88","_x132","getCurveTokensAmounts","_callee91","useCoinIndex","_args91","_context91","_ref124","_callee90","_ref125","_ref126","totalTokenSupply","_context90","_x133","getCurveAmounts","_ref127","_callee93","_args93","_context93","_ref128","_callee92","_context92","_x136","_x134","_x135","getCurveTokenAmount","_ref129","_callee94","_args94","_context94","_x137","getCurveSlippage","_ref130","_callee95","uneven_amounts","_ref131","_ref132","virtualPrice","Sv","_args95","_context95","_x138","_x139","getCompAPR","_ref133","_callee96","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args96","_context96","_x140","_x141","getCompSpeed","_ref134","_callee97","cTokenAddress","compSpeed","_context97","_x142","_ref135","_callee98","annualize","cTokenInfo","compoundAllocationPerc","_ref136","_ref137","cTokenTotalSupply","compoundPoolShare","_args98","_context98","_x143","_callee100","_args100","_context100","_ref139","_callee99","_ref140","_ref141","_context99","_x144","_callee102","_args102","_context102","_ref143","_callee101","_ref144","_ref145","compApr","_context101","_x145","getTokensCsv","_callee105","csv","_context105","prototype","sum","pv","cv","avg","_ref147","_callee104","_context104","_ref148","_callee103","header","aprAvg","scoreAvg","lastRow","_context103","protocolsData","p1","p2","rate","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","_x147","_x146","_callee107","_args107","_context107","_ref150","_callee106","compTokenBalance","_context106","_x148","speed","getGovTokensUserDistributionSpeed","_ref151","_callee109","govTokensUserDistribution","_args109","_context109","_ref152","_callee108","_context108","_x150","_x149","_ref153","_callee111","govTokensDistribution","_args111","_context111","_ref154","_callee110","govSpeed","_context110","_x152","_x151","_ref155","_callee113","_args113","_context113","_ref156","_callee112","_ref157","_ref158","compoundInfo","_context112","_x155","_x153","_x154","_callee115","_args115","_context115","_ref160","_callee114","tokenConversionRate","fromTokenConfig","_context114","_x156","getGovTokenConfigByAddress","_callee116","checkShowBalance","govTokensEarnings","_args116","_context116","acc","govTokenAmount","_callee119","govTokenConfigForced","_args119","_context119","_ref163","_callee118","govTokensAmounts","_context118","_ref164","_callee117","govTokenAddress","_context117","_x158","_x159","_x157","_callee120","_args120","_context120","_callee121","_ref167","_ref168","gain","fees","_args121","_context121","_ref169","_callee122","_args122","_context122","_x160","getTotalTVL","_callee123","tokensTVL","_context123","getTokensTVL","totalTVL","tokenTVL","_callee127","_context127","_ref172","_callee126","_context126","_ref173","_callee125","oldTokenTVL","idleTokenName","_ref174","_ref175","totalSupply","_ref179","_ref180","oldTokenPrice","oldTotalSupply","_context125","_ref176","_callee124","_ref177","_ref178","govTokenConversionRate","govTokenBalanceConverted","_context124","_x163","_x162","_x161","getAggregatedStats","_callee131","avgAPR","totalAUM","_args131","_context131","_ref182","_callee130","_context130","_ref183","_callee129","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context129","_ref184","_callee128","_ref185","_ref186","tokenBalanceConverted","_context128","_x166","_x165","_x164","getTokenApy","_ref187","_callee132","_context132","_x167","_callee135","_args135","_context135","_ref189","_callee134","_context134","_ref190","_callee133","_ref191","_context133","_x169","_x168","getProtocolsTokensBalances","_callee137","tokenBalances","minTokenBalance","protocolsTokens","_args137","_context137","_ref193","_callee136","tokenContract","_context136","_x170","_ref194","_callee138","_args138","_context138","_x171","_x172","_x173","_ref195","_callee139","_args139","_context139","_x174","_x175","_ref196","_callee140","_ref197","_ref198","_context140","protocolScore","getTokenScoreApi","_x176","_x177","_ref199","_callee141","_context141","_x178","_x179","_ref200","_callee143","Aprs","addresses","protocolsApys","idleGovTokenShowAPR","idleAPR","_args143","_context143","_ref201","_callee142","addrIndex","protocolApr","protocolApy","_context142","_x181","_x182","_x180","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","Tos","h2","listStyle","Footer","theme_dark","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","current","NetworkUtil","isCorrectNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","isOpen","ModalCard","closeFunc","closeModal","Body","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","Header","subtitle","subtitle2","Web3ConnectionButtons","context","useWeb3Context","active","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","connectorInfo","walletIcon","flexWrap","ConnectionModal","currentSection","showTxFees","closeRemainingTime","newToEthereumChoice","showInstructions","toggleShowTxFees","setStoredSection","componentDidUpdate","resetModal","closeCountdown","setWalletChoice","choice","setCurrentSection","renderModalContent","TOSacceptance","react_router_dom","showConnectionButtons","newToEthereum","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","accountBalance","initWeb3","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","testTransaction","createTransaction","addTransaction","updateTransaction","errorMessage","isWalletConnectClosedModalError","availableStrategiesChanged","customAddress","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","terminalInfo","TerminalHttpProviderParams","terminalSourceType","terminalHttpProvider","web3Callback","originalWeb3","biconomyWeb3Provider","detectEthereumProvider","autoRefreshOnNetworkChange","Web3","HttpProvider","library","SourceType","customHttpProvider","TerminalHttpProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","_args7","$crisp","notificationId","content","Sentry","increaseAmount","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkName","getNetworkType","contractMethod","gasLimit","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","confirmationCount","call_callback","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","constant","outputs","payable","stateMutability","anonymous","indexed","ERC20","govTokensDisabled","defiPrime","IdleTokenV4","cToken","yToken","iToken","aToken","CHAI","skipMintForDeposit","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","then","Dashboard","Governance","App","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","prevParams","customParam","setCustomAddress","cachedKeyFound","storedCachedData","widthChanged","heightChanged","tabIndex","loadAvailableTokens","warn","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","strategyChanged","self","parent","hasMetamask","store","themeDark","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","RimbleWeb3","needsPreflight","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","registration","unregister","FieldComponent","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","colInfo","colIndex","visible","fieldIndex","colProps","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","tokenApproved","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","useMetaTx","_skipRebalance","_migrationContract$me","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","biconomyChanged","usePermitChanged","actionChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","mouseOver","isVisible","isRainbow","onMouseOut","setMouseOver","onMouseOver","titleParentProps","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","VariationNumber","IconDirection","iconSize","iconPos","loading-dots","loading-dots--dot","dot-keyframes","selectedProvider","availableProviders","renderPaymentMethod","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","goBack","componentWillMount","getProviderInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","providerSupportToken","defaultPaymentProvider","selectProvider","ethAvailable","tokenAvailable","selectMethod","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","countryCode","loadAvailableMethods","InnerComponent","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","methodInfo","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","noOptionsMessage","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","iconHeight","subtitleProps","BackButton","currYear","getFullYear","columnWidth","react__WEBPACK_IMPORTED_MODULE_9___default","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle"],"mappings":"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","file":"static/js/main.b4b34c71.chunk.js","sourcesContent":["import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          const [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPerc:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            curve:'monotoneX',\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            enableSlices:false,\n            isInteractive:false,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        // console.log('score',this.state.score);\n        output = this.state.score !== undefined && this.state.score !== null ? (\n          <SmartNumber {...fieldProps} decimals={1} number={this.state.score} />\n        ) : loader\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            const customFieldName = Object.values(fieldInfo.path).pop();\n            if (this.props.tokenConfig[`${customFieldName}Props`]){\n              const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n              // Replace props\n              if (customFieldProps && Object.keys(customFieldProps).length){\n                Object.keys(customFieldProps).forEach(p => {\n                  fieldProps[p] = customFieldProps[p];\n                });\n              }\n            }\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React from \"react\";\nimport { Text } from \"rimble-ui\";\n\nclass ShortHash extends React.Component {\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  };\n  render() {\n    const shortHash = this.shortenHash(this.props.hash);\n\n    return <Text display={'inline'} {...this.props}>{shortHash}</Text>;\n  }\n}\n\nexport default ShortHash;\n","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.status = tx.status ? tx.status : 'Completed';\n      tx.action = action;\n      tx.momentDate = momentDate;\n      tx.amount = amount;\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(`https://etherscan.io/tx/${txHash}`) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    // console.log('AllocationChart',this.props.token,totalAllocation,protocolsAllocations,protocolsAllocationsPerc);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.label.toLowerCase()] && globalConfigs.stats.protocols[this.state.selectedSlice.label.toLowerCase()].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.label.toLowerCase()].icon : `${this.state.selectedSlice.label.toLowerCase()}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null;\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || momentDate.isSameOrAfter(startDate)){\n        \n        if (momentDate.isAfter(new Date(),'day')){\n          momentDate = this.functionsUtil.strToMoment(new Date());\n        }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            typeof point.data.balances === 'object' && Object.keys(point.data.balances).length &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? '#f7f8ff' : 'cardBg'}\n          contrastColor={this.props.isActive ? '#f7f8ff' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #eee','1px solid #b6c2ff'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    arrowActive:'#4f4f4f',\n    arrowInactive:'#d8d8d8',\n    selectBgFocused:'#fbfbfb',\n    selectBg:'#ffffff',\n    backButtonBg:'#ffffff',\n    lineChartStroke:'#dbdbdb',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    menuBg:'#fff',\n    menuHover:'#f3f6ff',\n    cardBg:'#fff',\n    flashColor:'#3f4e9a',\n    menuRightBorder:'#eee',\n    cardHoverShadow:'0px 0px 0px 1px rgba(0, 54, 255, 0.3)',\n    cardBgHover:'#f7f8ff',\n    cardBorder:'#eee',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Migrate_input__FS2vB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      this.functionsUtil.customLog('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              href={`https://etherscan.io/tx/${this.props.hash}`}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\nimport ShortHash from \"../utilities/components/ShortHash\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let bgColor = theme.colors.transactions.actionBg.default;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${transaction.tokenSymbol.toUpperCase()}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol}</Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\"};","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'legend'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport { Flex, Box, Text, Input, Link, Progress } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    steps:{\n      1:'Get Quote',\n      2:'Enable NXS',\n      3:'Buy Cover'\n    },\n    loading:false,\n    amountValue:'',\n    periodValue:'',\n    quoteResponse:null,\n    selectedToken:'DAI'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async changeSelectedToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      amountValue\n    });\n  }\n\n  changePeriod = (e) => {\n\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      periodValue\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    let quoteResponse = await this.functionsUtil.makeRequest(`https://api.nexusmutual.io/getQuote/${this.state.amountValue}/${this.state.selectedToken}/${this.state.periodValue}/0x78751B12Da02728F467A44eAc40F5cbc16Bd7934/M1`);\n\n    const newState = {\n      loading:false\n    };\n\n    if (quoteResponse){\n      newState.quoteResponse = quoteResponse.data;\n    }\n\n    this.setState({\n      quoteResponse\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Flex\n            mb={1}\n            width={1}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n          >\n            {\n              Object.keys(this.state.steps).map( stepIndex => (\n                <Link\n                  style={{\n                    flexBasis:'0',\n                    flex:'1 1 0px',\n                    textDecoration:'none',\n                    cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                  }}\n                  fontSize={2}\n                  textAlign={'center'}\n                  key={`step_${stepIndex}`}\n                  color={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  hoverColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  activeColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                >\n                  {this.state.steps[stepIndex]}\n                </Link>\n              ) )\n            }\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Progress\n              style={{\n                width:'100%',\n                height:'15px'\n              }}\n              value={(1/Object.keys(this.state.steps).length)*this.state.step}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}>\n              Select asset:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              selectedToken={this.state.selectedToken}\n              onChange={this.changeSelectedToken.bind(this)}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How much do you want to cover?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.amountValue}\n              onChange={this.changeAmount.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n              placeholder={`Insert ${this.state.selectedToken.toUpperCase()} amount`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              For how many days?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.periodValue}\n              placeholder={'Insert days of coverage'}\n              onChange={this.changePeriod.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n            />\n          </Box>\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <ButtonLoader\n              buttonProps={{\n                my:2,\n                mx:[0, 2],\n                size:'medium',\n                borderRadius:4,\n                mainColor:'blue',\n                disabled:(!this.state.amountValue || !this.state.selectedToken || !this.state.periodValue)\n              }}\n              buttonText={'GET QUOTE'}\n              isLoading={this.state.loading}\n              handleClick={ e => this.getQuote(e) }\n            />\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport { Text, Icon, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.props.rows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsTextColor:'#333',\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.functionsUtil.BNify(0);\n    let totalEarnings = this.functionsUtil.BNify(0);\n    let totalAmountLent = this.functionsUtil.BNify(0);\n\n    await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        tokenAprs,\n        amountLent,\n        tokenEarnings\n      ] = await Promise.all([\n        this.functionsUtil.getTokenAprs(tokenConfig),\n        this.functionsUtil.getAmountLent([token],this.props.account),\n        this.functionsUtil.loadAssetField('earnings',token,tokenConfig,this.props.account,false),\n      ]);\n\n      const tokenAPY = this.functionsUtil.BNify(tokenAprs.avgApy);\n      const tokenWeight = portfolio.tokensBalance[token].tokenBalance.div(portfolio.totalBalance);\n      const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent[token],token,tokenConfig,isRisk);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n    });\n\n    const earningsStart = totalEarnings;\n    const earningsEnd = totalAmountLent.times(avgAPY.div(100));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n    const maxPrecision = this.props.maxPrecision || 10;\n    const minPrecision = this.props.minPrecision || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let tokensEarnings = {};\n    let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n    const amountLents = await this.functionsUtil.getAmountLent(this.props.enabledTokens,this.props.account);\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(Object.keys(amountLents),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountLents[token],token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n      estimationStepsPerc = Math.max(estimationStepsPerc,maxPossibleStep);\n\n      // console.log(token,amountLent.toFixed(5),earnings.toFixed(5),earningsYear.toFixed(5),tokenConfig,tokenAprs,tokenAPR.toFixed(5),tokenAPY.toFixed(5),earningsPercStep,maxPossibleStep,estimationStepsPerc);\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const orderedTokensEarnings = {};\n    Object.keys(amountLents).forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    // console.log(estimationStepsOptions,estimationStepsDefaultOption)\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={`images/tokens/${token}.svg`} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport CustomList from '../CustomList/CustomList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    activeCoverages:null,\n    depositedTokens:null,\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    /*\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (themeModeChanged){\n      this.loadPortfolio();\n    }\n    */\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load data\n      const [\n        activeCoverages,\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio\n      ] = await Promise.all([\n        // Load active coverages\n        this.functionsUtil.getActiveCoverages(this.props.account),\n        // Load claimable batches\n        this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.activeCoverages = activeCoverages && activeCoverages.length>0 ? activeCoverages.map( c => {\n        const statusColors = this.props.theme.colors.transactions.status;\n        const statusIcon = c.status === 'Expired' ? 'Error' : 'VerifiedUser';\n        const statusColor = c.status === 'Expired' ? statusColors.failed : statusColors.completed;\n        const portfolioCoverage = portfolio.totalBalance.gt(0) ? c.balance.div(portfolio.totalBalance).times(100).toFixed(2)+'%' : 'N/A';\n        const statusIconProps = {\n          color:statusColor\n        };\n        return Object.assign(c,{\n          statusIcon,\n          statusIconProps,\n          portfolioCoverage\n        });\n      }) : null;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountLent([token],this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent[token],token,tokenConfig,isRisk);\n\n          const tokenAPY = this.functionsUtil.BNify(tokenAprs.avgApy);\n          const tokenWeight = portfolio.tokensBalance[token].tokenBalance.div(portfolio.totalBalance);\n\n          if (tokenAPY){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (tokenScore){\n            avgScore = avgScore.plus(tokenScore.times(tokenWeight));\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const coverProtocolConfig = this.functionsUtil.getGlobalConfig(['tools','coverProtocol']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy\n        </Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,4],\n                            mb:[2,0]\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,4],\n                            mb:[2,0]\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalEarningsCounter\n                                    {...this.props} \n                                    portfolio={this.state.portfolio}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Earnings\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total earnings does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,4],\n                            mb:[2,0]\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgScore ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgScore.toFixed(2) }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg Risk Score\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.33]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.66]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                /*\n                !this.state.activeCoverages && coverProtocolConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    mt={[3,4]}\n                    alignItems={'center'}\n                    id={'no-active-cover'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:[3,4],\n                        width:[1,'auto'],\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Image\n                          mb={2}\n                          height={['1.8em','2.2em']}\n                          src={coverProtocolConfig.image}\n                        />\n                        <Text\n                          mb={1}\n                          fontSize={[2,4]}\n                          fontWeight={500}\n                          textAlign={'center'}\n                        >\n                          You don't have an active coverage\n                        </Text>\n                        <Text\n                          mb={2}\n                          color={'blue'}\n                          fontSize={[1,2]}\n                          fontWeight={500}\n                          hoverColor={'blue'}\n                          textAlign={'center'}\n                        >\n                          Cover Protocol provides coverage against Smart-Contract attacks\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:1,\n                            width:'auto',\n                            minHeight:'40px',\n                            mainColor:'redeem',\n                            size:this.props.isMobile ? 'small' : 'medium'\n                          }}\n                          handleClick={ e => this.props.goToSection(`tools/${coverProtocolConfig.route}`) }\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              color={'white'}\n                              fontSize={[1,2]}\n                              fontWeight={500}\n                            >\n                              Get Covered\n                            </Text>\n                            <Icon\n                              ml={1}\n                              size={'1.3em'}\n                              name={'KeyboardArrowRight'}\n                            />\n                          </Flex>\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                )\n                */\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.props.account && coverProtocolConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','coverProtocol','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens)}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.activeCoverages && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Coverages</Title>\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <CustomList\n                        rows={this.state.activeCoverages}\n                        handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n                        cols={[\n                          {\n                            title:'PROTOCOL',\n                            props:{\n                              width:[0.42,0.17]\n                            },\n                            fields:[\n                              {\n                                type:'image',\n                                path:['protocolImage'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['protocolName'],\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            props:{\n                              width:[0.34, 0.15],\n                            },\n                            fields:[\n                              {\n                                type:'number',\n                                path:['balance'],\n                                props:{\n                                  decimals: 4,\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['token'],\n                                props:{\n                                  ml:[1,2],\n                                  style:{\n                                    textTransform:'uppercase'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EXPIRATION DATE',\n                            props:{\n                              width:0.23,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['expirationDate'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'COVERAGE',\n                            props:{\n                              width:0.15,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['portfolioCoverage'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.24,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                type:'button',\n                                name:'custom',\n                                label:'File Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.row.status==='Expired')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchDeposit`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                {\n                  /*\n                  <IconBox\n                    cardProps={{\n                      mt:3\n                    }}\n                    text={'You will start earning gov tokens after the batch is executed'}\n                  />\n                  */\n                }\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                        color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                      {\n                        /*\n                        <Tooltip\n                          placement={'top'}\n                          message={`Batches are executed twice a week`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.1em'}\n                            color={'cellTitle'}\n                            name={'InfoOutline'}\n                          />\n                        </Tooltip>\n                        */\n                      }\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.1em'}\n                            color={'cellTitle'}\n                            name={'InfoOutline'}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                                {\n                                  /*\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                    <Text.span\n                                      fontWeight={500}\n                                      display={'block'}\n                                      color={'copyColor'}\n                                      textAlign={'center'}\n                                    >\n                                      Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedToken}\n                                    </Text.span>\n                                  */\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={2}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (accountChanged || tokenBalanceChanged || contractChanged || tokenConfigChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n    \n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.setState((prevState) => ({\n      inputValue,\n      fastBalanceSelector\n    }));\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n    this.setState({\n      inputValue\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n    const params = await this.props.getTransactionParams(_amount);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    if (params){\n      const {\n        methodName,\n        methodParams\n      } = params;\n      const contractName = this.props.contractInfo.name;\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, null, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(){\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    return null;\n  }\n\n  async loadData(){\n    const contractApproved = await this.checkContractApproved();\n    this.setState({\n      contractApproved\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.tokenBalance && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              {\n                !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        web3={this.props.web3}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3,\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.props.approveDescription}\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      waitText={`Deposit estimated in`}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing deposit request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          this.props.tokenBalance && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.props.tokenBalance.toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2],\n                            disabled:this.state.buttonDisabled\n                          }}\n                          handleClick={this.executeTx.bind(this)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.blue}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.blue}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.blue}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.blue}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.blue}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                              buttonStyle={{\n                                boxShadow:isMint ? '0px 0px 0px 1px rgba(0,54,255,0.3)' : null\n                              }}\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                              buttonStyle={{\n                                boxShadow:isBuyClaim ? '0px 0px 0px 1px rgba(0,54,255,0.3)' : null\n                              }}\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                              buttonStyle={{\n                                boxShadow:isBuyNoClaim ? '0px 0px 0px 1px rgba(0,54,255,0.3)' : null\n                              }}\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import IDLE from '../contracts/IDLE.json';\nimport COMP from '../abis/compound/COMP.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport CoverMint from '../abis/cover/CoverMint.json';\nimport LockedIDLE from '../contracts/LockedIDLE.json';\nimport { Web3Versions } from '@terminal-packages/sdk';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport BatchDeposit from '../BatchDeposit/BatchDeposit';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport BalancerExchangeProxy from '../abis/balancer/BalancerExchangeProxy.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.5',\n  baseToken: 'ETH',\n  baseURL: 'https://idle.finance',\n  forumURL:'https://gov.idle.finance',\n  theme:{\n    darkModeEnabled:false\n  },\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    performanceFee:'This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    riskScoreShort:'It\\'s a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.',\n    batchDepositExecutionSchedule:'Batches are executed twice a week, usually on sunday and wednesday. The time of each execution will vary depending on the gas price of the Ethereum network.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        debugEnabled:false, // Enable sending for test environments\n        addPostfixForTestnet:true // Append testnet to eventCategory\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    themeMode:'light',\n    baseRoute:'/dashboard',\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:3,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','idle'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'idleDAI+idleUSDC+idleUSDT',\n      token:'idleDAI+idleUSDC+idleUSDT',\n      address:'0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7'\n    },\n    gaugeContract:{\n      abi:LiquidityGaugeV2,\n      name:'LiquidityGaugeV2',\n      address:'0xd69ac8d9D25e99446171B5D0B3E4234dAd294890'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:2\n        },\n      },\n    }\n  },\n  permit:{\n    DAI:{\n      version:1,\n      EIPVersion:null,\n      nonceMethod:'nonces',\n      name:'Dai Stablecoin',\n      type:[\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" },\n      ]\n    },\n    USDC:{\n      version:2,\n      name:'USD Coin',\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      showBalance:false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode:false,\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in Portfolio Donut\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    }\n  },\n  contracts:{\n    LockedIDLE:{\n      abi:LockedIDLE,\n      address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n    },\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n    BalancerExchangeProxy:{\n      abi:BalancerExchangeProxy,\n      address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n    }\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  strategies:{\n    best:{\n      token:'DAI',\n      color:'#f32121',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      iconInactiveDark:'images/strategies/best-white.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      iconInactiveDark:'images/strategies/risk-white.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#002868',\n          rgb:[0, 40, 104],\n          hsl:['217', '100%', '20%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      compoundWithCOMP:{\n        rateField:['rate','compoundAdditionalAPR'],\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        }\n      },\n      fulcrum:{\n        legend:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        label:'DyDx',\n        legend:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'Yearn'\n      },\n      aave:{\n        label:'Aave',\n        legend:true,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        },\n        data:{\n          '0xfc1e690f61efd961294b3e1ce3313fbd8aa4f85d':{},\n          '0x9ba00d6856a4edf4665bca2c2309936572473b7e':{\"9598633\":\"1000000\",\"9598646\":\"1000001\",\"9598684\":\"1000002\",\"9598823\":\"1000003\",\"9598869\":\"1000004\",\"9598915\":\"1000005\",\"9599092\":\"1000008\",\"9599138\":\"1000009\",\"9599263\":\"1000011\",\"9599267\":\"1000011\",\"9599295\":\"1000012\",\"9599299\":\"1000012\",\"9599307\":\"1000012\",\"9599315\":\"1000012\",\"9599579\":\"1000017\",\"9599866\":\"1000022\",\"9600156\":\"1000026\",\"9600433\":\"1000031\",\"9600704\":\"1000036\",\"9600982\":\"1000042\",\"9601051\":\"1000044\",\"9601073\":\"1000045\",\"9601077\":\"1000045\",\"9601345\":\"1000053\",\"9601619\":\"1000058\",\"9601891\":\"1000063\",\"9602144\":\"1000068\",\"9602429\":\"1000073\",\"9602724\":\"1000078\",\"9602993\":\"1000083\",\"9603272\":\"1000088\",\"9603536\":\"1000093\",\"9603826\":\"1000098\",\"9603840\":\"1000098\",\"9604038\":\"1000102\",\"9604182\":\"1000104\",\"9604457\":\"1000109\",\"9604701\":\"1000114\",\"9604979\":\"1000119\",\"9605247\":\"1000124\",\"9605505\":\"1000129\",\"9605793\":\"1000134\",\"9606073\":\"1000139\",\"9606368\":\"1000144\",\"9606639\":\"1000149\",\"9606896\":\"1000153\",\"9607147\":\"1000158\",\"9607406\":\"1000163\",\"9607722\":\"1000168\",\"9608130\":\"1000175\",\"9608395\":\"1000180\",\"9608656\":\"1000185\",\"9608959\":\"1000190\",\"9609544\":\"1000260\",\"9609811\":\"1000293\",\"9610073\":\"1000314\",\"9610341\":\"1000331\",\"9610601\":\"1000332\",\"9610871\":\"1000333\",\"9611120\":\"1000335\",\"9611386\":\"1000336\",\"9611665\":\"1000337\",\"9611949\":\"1000339\",\"9612210\":\"1000340\",\"9612487\":\"1000341\",\"9612758\":\"1000343\",\"9613012\":\"1000344\",\"9613276\":\"1000346\",\"9613542\":\"1000347\",\"9613824\":\"1000349\",\"9614069\":\"1000351\",\"9614327\":\"1000353\",\"9614596\":\"1000355\",\"9614864\":\"1000356\",\"9615111\":\"1000358\",\"9615394\":\"1000360\",\"9615679\":\"1000361\",\"9615958\":\"1000363\",\"9616245\":\"1000365\",\"9616531\":\"1000367\",\"9616803\":\"1000369\",\"9617053\":\"1000371\",\"9617326\":\"1000373\"}\n        }\n      },\n      curve:{\n        label:'',\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:5000,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan',\n      1337:'Hardhat'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        1: 'https://mainnet.infura.io/v3/',\n        42: 'https://kovan.infura.io/v3/'\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        }\n      },\n      snapshot:{\n        endpoints:{\n          proposals:'https://hub.snapshot.page/api/idlefinance.eth/proposals'\n        },\n        urls:{\n          proposals:'https://signal.idle.finance/#/idlefinance.eth/proposal/'\n        }\n      },\n      biconomy:{\n        enabled:false,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY,\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829'\n        }\n      },\n      terminal:{\n        enabled:false,\n        supportedNetworks:[1,42],\n        params:{\n          apiKey: env.REACT_APP_TERMINAL_KEY,\n          projectId: env.REACT_APP_TERMINAL_PROJECT_ID,\n          source: null,\n          web3Version: Web3Versions.one\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  notifications:[\n    {\n      enabled:false,\n      end:1612282726374,\n      start:1611677841027,\n      date:'Jan 26, 2021 16:18 UTC',\n      title:'Cover Protocol Available',\n      hash:'/dashboard/tools/cover-protocol',\n      image:'/images/protocols/cover-logo.svg',\n      text:'Protect your portfolio with Cover Protocol',\n    }\n  ],\n  tools:{\n    coverProtocol:{\n      enabled:false,\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral:'DAI',\n            expirationTimestamp:1614470400,\n            tokens:{\n              Claim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                address:'0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                  address:'0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c',\n                }\n              },\n              NoClaim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                address:'0x53df0bfa014b7522299c129c5a7b318f02adb469',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                  address:'0xce0e9e7a1163badb7ee79cfe96b5148e178cab73',\n                }\n              }\n            }\n          },\n        ],\n      }\n    },\n    batchDeposit:{\n      enabled:true,\n      icon:'Storage',\n      claimEnabled:true,\n      depositEnabled:true,\n      route:'batch-deposit',\n      label:'Batch Deposit',\n      subComponent:BatchDeposit,\n      desc:'Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            strategy:'best',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAI',\n              address:'0x633fb4d38B24dC890b11Db2AE2B248D13F996A79', // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  usePermit:true,\n                  label:'Deposit',\n                  permitName:'permitAndDeposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:6,\n            strategy:'best',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDC',\n              address:'0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B', // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                  permitName:'permitEIP2612AndDepositUnlimited'\n                },\n              ]\n            },\n          },\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    insurance:{\n      enabled:false,\n      icon:'Security',\n      route:'nexus-mutual',\n      label:'Nexus Mutual',\n      desc:'Buy tokens with Bank account or Credit card',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n        }\n      },\n      directProps:{\n        ens:'idlefinancev3.nexusmutual.eth',\n        address:'0x78751B12Da02728F467A44eAc40F5cbc16Bd7934'\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens using Kyber Swap widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank','card'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedTokens:['ETH','DAI','USDC'],\n        supportedCountries:['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'],\n        getInfo: (props) => {\n          const info = {};\n            switch (props.selectedMethod){\n              case 'bank':\n                info.supportedCountries = ['GBR','EUR'];\n                info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n              case 'card':\n                info.supportedCountries = ['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'];\n                info.subcaption = `~ 2.90% fee ~`;\n              break;\n              default:\n              break;\n            }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI','USDT','TUSD','SUSD','WBTC'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n                      \n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str.substr(0,1).toUpperCase()+str.substr(1);\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      totalBalance:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let depositTimestamp = null;\n      deposits[selectedToken] = depositTimestamp;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!depositTimestamp){\n                depositTimestamp = tx.timeStamp;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            depositTimestamp = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = depositTimestamp;\n    });\n\n    return deposits;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return amountDeposited;\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase()){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = () => {\n    return this.getStoredItem('walletProvider',false,null);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (tx_address) => {\n    return tx_address ? 'https://etherscan.io/tx/'+tx_address : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    return address ? 'https://etherscan.io/address/'+address : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    if (proposals){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(tokenName,blockNumber,p.address,this.BNify(tokenBalance).toFixed());\n                if (tokenBalance && this.BNify(tokenBalance).gt(0)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              checkedStrategies = true;\n            }\n          });\n\n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    let output = await this.makeRequest(endpoint);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName ? contractName : this.props.selectedToken;\n    return await this.genericContractCall(contractName,'decimals');\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCall(contractName, 'paused', [], {}).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n\n    if (!globalConfigs.contract.methods.rebalance.enabled || !tokenConfig){\n      return false;\n    }\n\n    const rebalancer = await this.genericContractCall(tokenConfig.idle.token, 'rebalancer');\n\n    if (!rebalancer){\n      return false;\n    }\n\n    const idleRebalancerInstance = await this.createContract('idleRebalancerInstance',rebalancer,globalConfigs.contract.methods.rebalance.abi);\n\n\n    if (!idleRebalancerInstance || !idleRebalancerInstance.contract){\n      return false;\n    }\n\n    // Take next protocols allocations\n    const allocationsPromises = [];\n    const availableTokensPromises = [];\n\n    for (let protocolIndex=0;protocolIndex<tokenConfig.protocols.length;protocolIndex++){\n      const allocationPromise = new Promise( async (resolve, reject) => {\n        try{\n          const allocation = await idleRebalancerInstance.contract.methods.lastAmounts(protocolIndex).call();\n          resolve({\n            allocation,\n            protocolIndex\n          });\n        } catch (error){\n          resolve(null);\n        }\n      });\n      allocationsPromises.push(allocationPromise);\n\n      const availableTokenPromise = new Promise( async (resolve, reject) => {\n        try {\n          const protocolAddr = await this.genericContractCall(tokenConfig.idle.token, 'allAvailableTokens', [protocolIndex]);\n          resolve({\n            protocolAddr,\n            protocolIndex\n          });\n        } catch (error){\n          resolve(null);\n        }\n      });\n      availableTokensPromises.push(availableTokenPromise);\n    }\n\n    let nextAllocations = null;\n    let allAvailableTokens = null;\n\n    try{\n      nextAllocations = await Promise.all(allocationsPromises);\n      allAvailableTokens = await Promise.all(availableTokensPromises);\n    } catch (error){\n      \n    }\n\n    nextAllocations = nextAllocations && nextAllocations.length ? nextAllocations.filter(v => (v !== null)) : null;\n    allAvailableTokens = allAvailableTokens && allAvailableTokens.length ? allAvailableTokens.filter(v => (v !== null)) : null;\n\n    if ((!allAvailableTokens || !allAvailableTokens.length) || (!nextAllocations || !nextAllocations.length)){\n      return false;\n    }\n\n    // Merge nextAllocations and allAvailableTokens\n    let newTotalAllocation = this.BNify(0);\n    const newProtocolsAllocations = allAvailableTokens.reduce((accumulator,availableTokenInfo) => {\n      if (availableTokenInfo.protocolAddr){\n        const nextAllocation = nextAllocations.find(v => { return v.protocolIndex === availableTokenInfo.protocolIndex; });\n        if (nextAllocation){\n          const allocation = this.BNify(nextAllocation.allocation);\n          accumulator[availableTokenInfo.protocolAddr.toLowerCase()] = allocation;\n          newTotalAllocation = newTotalAllocation.plus(allocation);\n        }\n      }\n      return accumulator;\n    },{});\n\n    // Check if newAllocations differs from currentAllocations\n    let shouldRebalance = false;\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    const protocolsAllocationsPerc = tokenAllocation ? tokenAllocation.protocolsAllocationsPerc : null;\n\n    if (typeof protocolsAllocationsPerc === 'object'){\n      Object.keys(protocolsAllocationsPerc).forEach((protocolAddr) => {\n\n        // Get current protocol allocation percentage\n        const protocolAllocation = protocolsAllocationsPerc[protocolAddr];\n        const protocolAllocationPerc = parseFloat(protocolAllocation).toFixed(3);\n        \n        // Calculate new protocol allocation percentage\n        const newProtocolAllocation = newProtocolsAllocations[protocolAddr.toLowerCase()] ? newProtocolsAllocations[protocolAddr.toLowerCase()] : this.BNify(0);\n        const newProtocolAllocationPerc = newProtocolAllocation ? parseFloat(newProtocolAllocation.div(newTotalAllocation)).toFixed(3) : this.BNify(0);\n\n        // this.customLog(protocolAddr,protocolAllocation.toString(),newProtocolAllocation.toString(),newTotalAllocation.toString(),protocolAllocationPerc,newProtocolAllocationPerc);\n\n        if (protocolAllocationPerc !== newProtocolAllocationPerc){\n          shouldRebalance = true;\n        }\n      });\n    }\n\n    return shouldRebalance;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, nonce, expiry, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        const value = this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    this.props.web3.currentProvider.send({\n      from: holder,\n      jsonrpc: '2.0',\n      params: [holder, data],\n      method: 'eth_signTypedData_v4',\n      id: Date.now().toString().substring(9),\n    }, (error, response) => {\n      if (error || (response && response.error)) {\n        return callback(null,error);\n      } else if (response && response.result) {\n        if (typeof callback_permit === 'function'){\n          callback_permit();\n        }\n        const signedParameters = this.getSignatureParameters_v4(response.result);\n        const { r, s, v } = signedParameters;\n        const permitParams = [expiry, v, r, s];\n\n        const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n        const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n        if (!isNaN(parseInt(nonce)) && useNonce){\n          permitParams.unshift(nonce);\n        }\n        const params = methodParams.concat(permitParams);\n        this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n      }\n    });\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const value = this.props.web3.utils.toWei('0','ether');\n    const allowance = await this.getAllowance(contractName,contractAddr,walletAddr);\n    return allowance && this.BNify(allowance).gt(this.BNify(value.toString()));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // this.customLog('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toString() : null,tokenApys.avgApy ? tokenApys.avgApy.toString() : null);\n\n        if (tokenApys && tokenApys.avgApy !== null){\n          output = tokenApys.avgApy;\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        }\n      break;\n      case 'avgAPY':\n        const [daysFirstDeposit,earningsPerc] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        // output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        const amountLents = account ? await this.getAmountLent([token],account) : false;\n        if (amountLents && amountLents[token]){\n          output = amountLents[token];\n        }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.genericContractCall(tokenConfig.idle.token, 'tokenPrice');\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        let redeemableBalanceEnd = null;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        // this.customLog('redeemableBalanceCounter',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd));\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n\n            let redeemableBalance = tokenBalance;\n\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n\n            output = redeemableBalance;\n\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.genericContractCall(idleToken,'totalSupply',[],{},blockNumber);\n    if (idleTokenSupply){\n      idleTokenSupply = this.BNify(idleTokenSupply);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCall(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 5 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    if (cachedData && cachedData.data && (!cachedData.expirationDate || cachedData.expirationDate>=parseInt(Date.now()/1000))){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.genericContractCall(tokenConfig.idle.token,'totalSupply')\n    ]);\n\n    let userShare = this.BNify(0);\n    if (idleTokensBalance && idleTokensTotalSupply){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const fileClaimUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            collateral,\n            protocolName,\n            fileClaimUrl,\n            protocolImage,\n            expirationDate\n          });\n        }\n      });\n    }\n\n    return activeCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address !== null ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address]);\n  }\n  getAprs = async (contractName) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    return await this.genericContractCall(contractName, 'getAPRs');\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      this.customLog(`genericContractCall - ${contractName} - ${methodName} : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(12))).pow(12).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsBalances:{},\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.genericContractCall(contractName,protocolInfo.functions.exchangeRate.name,protocolInfo.functions.exchangeRate.params) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    tokenAllocation.totalAllocationConverted = await this.convertTokenBalance(tokenAllocation.totalAllocation,tokenConfig.token,tokenConfig);\n    tokenAllocation.totalAllocationWithUnlentConverted = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,tokenConfig.token,tokenConfig);\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getUniswapConversionRate_path = async (path) => {\n    const one = this.normalizeTokenDecimals(18);\n    const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n    return unires;\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2';\n      const one = this.normalizeTokenDecimals(18);\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),[tokenConfigFrom.address, WETHAddr, tokenConfigDest.address]]);\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.genericContractCall(curvePoolContract.name,'totalSupply');\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCall(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCall('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.genericContractCall(cTokenInfo.token,'totalSupply'),\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.genericContractCall(cTokenInfo.token,'balanceOf',[tokenConfig.idle.address]);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = compDistribution.div(1e18).times(this.BNify(blocksPerYear));\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency) => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      switch (frequency){\n        case 'day':\n          const blocksPerDay = blocksPerYear.div(365.242199);\n          speed = speed.times(blocksPerDay);\n        break;\n        case 'week':\n          const blocksPerWeek = blocksPerYear.div(52.1429);\n          speed = speed.times(blocksPerWeek);\n        break;\n        case 'month':\n          const blocksPerMonth = blocksPerYear.div(12);\n          speed = speed.times(blocksPerMonth);\n        break;\n        case 'year':\n          speed = speed.times(blocksPerYear);\n        break;\n        default:\n        break;\n      }\n      return speed;\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      let govSpeed = null;\n      switch (govToken){\n        case 'COMP':\n          const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n          if (cTokenInfo){\n            govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const compoundInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (compoundInfo){\n                  if (tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n          } catch (error) {\n            \n          }\n        }\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return govTokensBalances;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(availableTokens)}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.genericContractCall(idleTokenConfig.token,'getGovTokensAmounts',[account]);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.genericContractCall(idleTokenConfig.token,'govTokens',[govTokenIndex]);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCall(tokenConfig.idle.token, 'fee');\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(tokenConfig)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',totalAllocation.toFixed(5));\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4',govToken,tokenBalanceConverted.toFixed(5));\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      // console.log('CACHED -',count,cachedDataKey,this.BNify(cachedData).toFixed());\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    // console.log('TOKEN DATA - ',tokenConfig.address,isRisk,tokenData);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          // console.log('NOT CACHED -',count,cachedDataKey,this.BNify(conversionRate).toFixed());\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenData && tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001) && tokenData.length>0){\n          const protocolInfo = tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) );\n          if (protocolInfo){\n            const protocolScore = this.BNify(protocolInfo.defiScore);\n            if (!protocolScore.isNaN()){\n              tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n              // this.customLog(protocolAddr,tokenAllocation.protocolsAllocationsPerc[protocolAddr].toFixed(6),protocolScore.toFixed(6),tokenScore.toFixed(6));\n            }\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let tokenData = await this.makeCachedRequest(endpoint,apiInfo.TTL,true);\n\n    if (tokenData){\n      let tokenScore = this.BNify(tokenData[0].idleScore);\n      if (tokenScore && tokenScore.gt(0)){\n        // Set cached data\n        return this.setCachedData(cachedDataKey,tokenScore);\n      // Take latest historical valid score\n      } else {\n        const timestamp = parseInt(Date.now()/1000);\n        const startTimestamp = parseInt(timestamp)-(60*60*24);\n        tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n        const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n        if (filteredTokenData.length){\n          tokenScore = this.BNify(filteredTokenData[0].idleScore);\n          if (!this.BNify(tokenScore).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      return false;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      return false;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const protocolsAprs = {};\n    const protocolsApys = {};\n    let compAPR = null;\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens && protocolInfo.name === 'compound'){\n          compAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    const tokenAprs = {\n      avgApr: null,\n      avgApy: null\n    };\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.getAvgApr(protocolsApys,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n\n      if (compAPR){\n        tokenAprs.avgApr = tokenAprs.avgApr.plus(compAPR);\n        tokenAprs.avgApy = tokenAprs.avgApy.plus(compAPR);\n      }\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return null;\n  }\n  abbreviateNumber(value,decimals=3,maxPrecision=5,minPrecision=0){\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    // console.log('onActivation',this.provider);\n\n    if (this.provider){\n\n      await this.provider.enable();\n\n      /*\n      // Subscribe to accounts change\n      this.provider.on(\"accountsChanged\", (accounts) => {\n        console.log('accountsChanged',accounts);\n      });\n\n      // Subscribe to chainId change\n      this.provider.on(\"chainChanged\", (chainId) => {\n        console.log('chainChanged',chainId);\n      });\n\n      // Subscribe to networkId change\n      this.provider.on(\"networkChanged\", (networkId) => {\n        console.log('networkChanged',networkId);\n      });\n\n      // Subscribe to session connection/open\n      this.provider.on(\"open\", () => {\n        console.log('open');\n      });\n\n      // Subscribe to session disconnection/close\n      this.provider.on(\"close\", (code, reason) => {\n        console.log('close',code, reason);\n      });\n      */\n\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: [defaultNetwork]\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      backgroundColor: \"white\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  const buttons = basicConnectorsName.map(connectorName => {\n\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                style={{\n                  flex:'0 100%',\n                  justifyContent:'flex-start'\n                }}\n              >\n                <ImageButton\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageSrc={`images/${walletIcon}`}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/browser-wallet.png`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex flexDirection={'row'} flexWrap={'wrap'} justifyContent={'space-between'}>\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Modal,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    currentSection:null,\n    showTxFees: false,\n    closeRemainingTime:null,\n    newToEthereumChoice: null,\n    showInstructions: false\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      newToEthereumChoice:null,\n      showInstructions: false,\n      currentSection:null\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Connect',\n      eventAction: 'select_wallet',\n      eventLabel: walletProvider\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'blue'} style={{textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const newToEthereum = this.state.currentSection === 'new';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons isMobile={this.props.isMobile} connectionCallback={ this.closeModal } setConnector={ this.setConnector } width={1/2} size={ this.props.isMobile ? 'medium' : 'large' } />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton isMobile={this.props.isMobile} imageSrc={'images/email.svg'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}} caption={'Use e-mail'} subcaption={'Powered by Portis'} handleClick={ e => this.setConnector('Portis','Portis') } />\n                    <ImageButton isMobile={this.props.isMobile} imageSrc={'images/mobile.svg'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}} caption={'Use phone number'} subcaption={'Powered by Fortmatic'} handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }/>\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n              <Box mb={3}>\n                <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex mb={[2,3]} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                <ImageButton isMobile={ this.props.isMobile } imageSrc={'images/ethereum-wallet.svg'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'} } caption={`Ethereum wallet`} subcaption={'Choose your favourite'} handleClick={ e => this.setCurrentSection(e,'wallet') } />\n                <ImageButton isMobile={ this.props.isMobile } imageSrc={'images/new-wallet.png'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'} } caption={`New wallet`} subcaption={'Use email / phone'} handleClick={ e => this.setCurrentSection(e,'new') } />\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { (!this.state.currentSection) ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      await this.props.context.setFirstValidConnector(['Infura']);\n      this.props.setConnector('Infura',null);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport Biconomy from \"@biconomy/mexa\";\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\nimport { TerminalHttpProvider, SourceType } from '@terminal-packages/sdk';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.type = \"contract\";\n      transaction.status = status;\n      transaction.params = params;\n      transaction.transactionHash = hash;\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged/* || availableTokensChanged*/ || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    // Suppress console warning\n    if (window.ethereum && window.ethereum.autoRefreshOnNetworkChange) {\n      window.ethereum.autoRefreshOnNetworkChange = false;\n    }\n\n    const context = this.props.context;\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (!context.active || connectorNameChanged) {\n      // Select preferred web3 provider\n      if (connectorName && connectorNameChanged){\n        // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n        setConnectorName = connectorName;\n        await context.setConnector(connectorName);\n        // await context.setFirstValidConnector([connectorName, 'Infura']);\n        return web3;\n      }\n      /*\n      else if (setConnectorName){\n        // Catch WalletConnect unexpected disconnect and fallback to Infura\n        if (connectorName === 'WalletConnect' && connectorName === setConnectorName && last_context && last_context.active && last_context.connectorName==='WalletConnect' && !context.connectorName){\n          this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          this.functionsUtil.removeStoredItem('walletProvider');\n          this.functionsUtil.removeStoredItem('connectorName');\n          this.functionsUtil.setLocalStorage('context',JSON.stringify({active:context.active,connectorName:context.connectorName}));\n          setConnectorName = null;\n          await context.setConnector('Infura');\n          if (context.connector && typeof context.connector.disable === 'function'){\n            await context.connector.disable();\n          }\n        }\n\n        this.functionsUtil.customLog('initWeb3 skip due to setConnectorName ('+setConnectorName+') already set');\n        return web3;\n      }\n      */\n    }\n    /* else if (context.connectorName === \"WalletConnect\") {\n      if (!context.account) {\n\n        // WalletConnect already opened\n        if (document.getElementById('walletconnect-wrapper')){\n          return web3;\n        }\n\n        WalletConnectQRCodeModal.open(\n          context.connector.walletConnector.uri,\n          async () => {\n            document.getElementById('walletconnect-wrapper').remove();\n            this.props.setConnector('Infura',null);\n            await context.setConnector('Infura');\n            setConnectorName = null;\n          }\n        );\n      } else {\n        try {\n          WalletConnectQRCodeModal.close();\n        } catch {}\n      }\n    // Reset web3 if Infura\n    } */\n    /*\n    else if (context.active && (connectorName === 'Infura' || context.connectorName === \"Infura\")){\n      if (typeof web3.currentProvider.disable === 'function'){\n        await web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        await context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n    */\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    const terminalInfo = globalConfigs.network.providers.terminal;\n\n    if (terminalInfo && terminalInfo.enabled && terminalInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const TerminalHttpProviderParams = terminalInfo.params;\n      const terminalSourceType = localStorage && localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : SourceType.Infura;\n      TerminalHttpProviderParams.source = terminalSourceType;\n\n      if (web3Provider){\n        TerminalHttpProviderParams.customHttpProvider = web3Provider;\n      } else if (web3Host){\n        TerminalHttpProviderParams.host = web3Host;\n      }\n\n      const terminalHttpProvider = new TerminalHttpProvider(TerminalHttpProviderParams);\n      web3 = new Web3(terminalHttpProvider);\n    } else {\n      // Injected web3 provider\n      if (web3Provider){\n        web3 = new Web3(web3Provider);\n      // Infura\n      } else if (web3Host) {\n        web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n        if (connectorName !== 'Infura'){\n          this.props.setConnector('Infura',null);\n        }\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.setState({\n              accountInizialized: true,\n              account: this.props.customAddress\n            });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(globalConfigs.network.requiredNetwork) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura\n            };\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // this.functionsUtil.customLog('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n\n    this.functionsUtil.customLog('initAccount',account);\n\n    if (this.props.customAddress){\n\n      // Set custom account\n      this.setState({\n        accountInizialized: true,\n        account: this.props.customAddress\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await this.state.web3.eth.getAccounts();\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        this.setState({\n          accountInizialized: true\n        });\n        return false;\n      }\n\n      // Request account access if needed\n      if (account){\n\n        const walletProvider = localStorage && localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        /*\n        // Unsubscribes to all subscriptions\n        if (this.state.web3SocketProvider && typeof this.state.web3SocketProvider.clearSubscriptions === 'function'){\n          this.functionsUtil.customLog('Clear all web3SocketProvider subscriptions');\n          this.state.web3SocketProvider.clearSubscriptions();\n        }\n\n        const networkName = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork].toLowerCase();\n        const web3SocketProvider = new Web3(new Web3.providers.WebsocketProvider(`wss://${networkName}.infura.io/ws/v3/${INFURA_KEY}`));\n\n        // Subscribe to logs\n        const addressTopic = '0x00000000000000000000000'+account.toLowerCase().replace('x','');\n\n        // Subscribe for payment methods\n        const paymentProviders = Object.keys(globalConfigs.payments.providers).filter((providerName,i) => { const providerInfo = globalConfigs.payments.providers[providerName]; return providerInfo.enabled && providerInfo.web3Subscription && providerInfo.web3Subscription.enabled  })\n        if (paymentProviders && paymentProviders.length){\n          paymentProviders.forEach((providerName,i) => {\n            const providerInfo = globalConfigs.payments.providers[providerName];\n\n            this.functionsUtil.customLog(`Subscribe to ${providerName} logs`);\n\n            // Subscribe for deposit transactions\n            web3SocketProvider.eth.subscribe('logs', {\n                address: [account,providerInfo.web3Subscription.contractAddress],\n                topics: [null,[addressTopic]]\n            }, function(error, result){\n              \n            })\n            .on(\"data\", async (log) => {\n              this.functionsUtil.customLog(providerName,'logs',log);\n\n              if (log){\n                const txHash = log.transactionHash;\n                const subscribedTransactions = this.state.subscribedTransactions;\n                const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n                this.functionsUtil.customLog(providerName,txHash,walletAddressFound);\n\n                if (!subscribedTransactions[txHash] && walletAddressFound.length){\n                  const decodedLogs = web3SocketProvider.eth.abi.decodeLog(providerInfo.web3Subscription.decodeLogsData,log.data,log.topics);\n\n                  this.functionsUtil.customLog(providerName,txHash,decodedLogs);\n\n                  if (decodedLogs && decodedLogs._tokenAmount && decodedLogs._tokenAddress && decodedLogs._tokenAddress.toLowerCase() === this.props.tokenConfig.address.toLowerCase()){\n\n                    const receiptCallback = async (tx,decodedLogs) => {\n                      const tokenDecimals = await this.getTokenDecimals();\n                      const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                      const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                      const isProviderTx = tx.from.toLowerCase() === account.toLowerCase() && tx.to.toLowerCase() === providerInfo.web3Subscription.contractAddress.toLowerCase();\n\n                      if (isProviderTx){\n\n                        // Mined\n                        if (tx.blockNumber && tx.status){\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'success',\n                            message:'Deposit completed',\n                            secondaryMessage:`${providerName} sent you ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n\n                          // Update User Balance\n                          this.getAccountBalance(tokenAmount);\n                        } else {\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'processing',\n                            message:'Deposit pending',\n                            secondaryMessage:`${providerName} is sending ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n                        }\n                      }\n                    }\n\n                    let checkTransactionReceiptTimeoutID = null;\n\n                    const checkTransactionReceipt = (txHash,decodedLogs) => {\n                      if (checkTransactionReceiptTimeoutID){\n                        window.clearTimeout(checkTransactionReceiptTimeoutID);\n                      }\n                      web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                        if (!err){\n                          if (txReceipt){\n                            receiptCallback(txReceipt,decodedLogs);\n                          } else{\n                            checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                          }\n                        }\n                      });\n                    }\n\n                    checkTransactionReceipt(txHash,decodedLogs);\n\n                    subscribedTransactions[txHash] = log;\n                    this.setState({subscribedTransactions});\n                  }\n                }\n              }\n            });\n          })\n        }\n\n        // Subscribe for deposit transactions\n        web3SocketProvider.eth.subscribe('logs', {\n            address: [account,this.props.tokenConfig.address],\n            topics: [null,null,[addressTopic]]\n        }, function(error, result){\n\n        })\n        .on(\"data\", async (log) => {\n          if (log){\n            const txHash = log.transactionHash;\n            const subscribedTransactions = this.state.subscribedTransactions;\n            const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n            if (!subscribedTransactions[txHash] && walletAddressFound.length){\n              const decodedLogs = web3SocketProvider.eth.abi.decodeLog([\n                {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"_tokenAmount\",\n                  \"type\": \"uint256\"\n                },\n              ],log.data,log.topics);\n\n              if (decodedLogs && decodedLogs._tokenAmount){\n\n                const receiptCallback = async (tx,decodedLogs) => {\n                  const tokenDecimals = await this.getTokenDecimals();\n                  const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                  const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                  const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                  const isDepositTokenTx = tx.to.toLowerCase() === this.props.tokenConfig.address.toLowerCase();\n\n                  if (isDepositTokenTx){\n\n                    // Mined\n                    if (tx.blockNumber && tx.status){\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit completed',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} has been deposited`,\n                        variant: \"success\",\n                      });\n\n                      // Update User Balance\n                      this.getAccountBalance(tokenAmount);\n                    } else {\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit pending',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} are on the way`,\n                        variant: \"processing\",\n                      });\n                    }\n                  }\n                }\n\n                let checkTransactionReceiptTimeoutID = null;\n\n                const checkTransactionReceipt = (txHash,decodedLogs) => {\n                  if (checkTransactionReceiptTimeoutID){\n                    window.clearTimeout(checkTransactionReceiptTimeoutID);\n                  }\n                  web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                    if (!err){\n                      if (txReceipt){\n                        receiptCallback(txReceipt,decodedLogs);\n                      } else{\n                        checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                      }\n                    }\n                  });\n                }\n\n                checkTransactionReceipt(txHash,decodedLogs);\n\n                subscribedTransactions[txHash] = log;\n                this.setState({subscribedTransactions});\n              }\n            }\n          }\n        })\n        .on(\"changed\", log => {\n          \n        });\n        */\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = { ...this.state.network };\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = { ...this.state.network };\n    network.isCorrectNetwork = this.state.network.current.id === this.state.network.required.id;\n\n    // To do, check window.web3.currentProvider.networkVersion to see if Metamask is in the requiredNetwork\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1, networkId } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas } : { from: account, gas })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.lastUpdated = Date.now();\n    transaction.status = \"initialized\";\n    transaction.confirmationCount = 0;\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // this.functionsUtil.customLog('updateTransaction',transactions);\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction.transactionHash,transaction.status.toLowerCase());\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n\n    // this.functionsUtil.customLog('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n\n    modals.data.connectionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider value={this.state} {...this.props} />\n        <ConnectionModalUtil\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:true,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:USDC,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:true,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xc11b1268c1a384e55c48c2391d8d480264a3a7f4',\n            token:'cWBTC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:true,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            token:'aWBTC',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    cachedData:{},\n    buyToken: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode:'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme:theme,\n    currentSection:null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    const params = props ? props.match.params : null;\n    const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n  }\n\n  clearCachedData = () => {\n    this.functionsUtil.setLocalStorage('cachedData',{},true);\n    this.setState({\n      cachedData:{}\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now()/1000);\n\n    const update_key = !cachedKeyFound || ( (!cachedKeyFound.expirationDate || cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n        storedCachedData = {\n          ...storedCachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        }\n      }));\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = globalConfigs.network.requiredNetwork;\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = availableTokens[requiredNetwork][strategy];\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && this.state.availableStrategies[selectedStrategy]){\n      newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode',false);\n    if (themeMode){\n      this.setThemeMode(themeMode);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadAvailableTokens();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged){\n      if (this.state.currentSection === 'landing'){\n        this.setThemeMode('light',false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode',false) || this.functionsUtil.getGlobalConfig(['dashboard','themeMode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n\n    if (tokenChanged || strategyChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n      window.parent.closeIframe(window.self);\n    }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      const connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      const walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    this.functionsUtil.clearStoredData();\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    });\n  }\n\n  setThemeMode(themeMode,store=true){\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['theme','darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled){\n      themeMode = 'light';\n    }\n\n    switch (themeMode){\n      default:\n      case 'light':\n        selectedTheme = theme;\n      break;\n      case 'dark':\n        selectedTheme = themeDark;\n      break;\n    }\n\n    if (store){\n      this.functionsUtil.setLocalStorage('themeMode',themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection){\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'80px',\n            color:'blue'\n          }}\n          flexProps={{\n            my:3,\n            flexDirection:'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?\"\n                              render={\n                                (props) => \n                                  <Suspense\n                                    fallback={SuspenseLoader}\n                                  >\n                                    <Dashboard\n                                      {...props}\n                                      web3={web3}\n                                      modals={modals}\n                                      network={network}\n                                      context={context}\n                                      account={account}\n                                      isDashboard={true}\n                                      initWeb3={initWeb3}\n                                      biconomy={biconomy}\n                                      isMobile={isMobile}\n                                      simpleID={simpleID}\n                                      contracts={contracts}\n                                      initAccount={initAccount}\n                                      initSimpleID={initSimpleID}\n                                      initContract={initContract}\n                                      transactions={transactions}\n                                      buyToken={this.state.buyToken}\n                                      logout={this.logout.bind(this)}\n                                      accountBalance={accountBalance}\n                                      themeMode={this.state.themeMode}\n                                      theme={this.state.selectedTheme}\n                                      validateAccount={validateAccount}\n                                      connecting={this.state.connecting}\n                                      cachedData={this.state.cachedData}\n                                      setToken={this.setToken.bind(this)}\n                                      accountValidated={accountValidated}\n                                      getTokenDecimals={getTokenDecimals}\n                                      rejectValidation={rejectValidation}\n                                      tokenConfig={this.state.tokenConfig}\n                                      getAccountBalance={getAccountBalance}\n                                      accountBalanceLow={accountBalanceLow}\n                                      accountInizialized={accountInizialized}\n                                      selectedToken={this.state.selectedToken}\n                                      connectorName={this.state.connectorName}\n                                      setStrategy={this.setStrategy.bind(this)}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountBalanceToken={accountBalanceToken}\n                                      initializeContracts={initializeContracts}\n                                      walletProvider={this.state.walletProvider}\n                                      buyModalOpened={this.state.buyModalOpened}\n                                      contractsInitialized={contractsInitialized}\n                                      openBuyModal={this.openBuyModal.bind(this)}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      handleMenuClick={this.selectTab.bind(this)}\n                                      setConnector={this.setConnector.bind(this)}\n                                      setThemeMode={this.setThemeMode.bind(this)}\n                                      availableTokens={this.state.availableTokens}\n                                      closeBuyModal={this.closeBuyModal.bind(this)}\n                                      setCachedData={this.setCachedData.bind(this)}\n                                      selectedStrategy={this.state.selectedStrategy}\n                                      userRejectedValidation={userRejectedValidation}\n                                      clearCachedData={this.clearCachedData.bind(this)}\n                                      setStrategyToken={this.setStrategyToken.bind(this)}\n                                      accountValidationPending={accountValidationPending}\n                                      availableStrategies={this.state.availableStrategies}\n                                      setCurrentSection={this.setCurrentSection.bind(this)}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      contractMethodSendWrapper={contractMethodSendWrapper}\n                                      setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                    />\n                                  </Suspense>\n\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Governance\n                                          {...props}\n                                          web3={web3}\n                                          modals={modals}\n                                          network={network}\n                                          context={context}\n                                          account={account}\n                                          initWeb3={initWeb3}\n                                          biconomy={biconomy}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          isGovernance={true}\n                                          contracts={contracts}\n                                          initAccount={initAccount}\n                                          initSimpleID={initSimpleID}\n                                          initContract={initContract}\n                                          transactions={transactions}\n                                          buyToken={this.state.buyToken}\n                                          logout={this.logout.bind(this)}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          validateAccount={validateAccount}\n                                          connecting={this.state.connecting}\n                                          cachedData={this.state.cachedData}\n                                          setToken={this.setToken.bind(this)}\n                                          accountValidated={accountValidated}\n                                          getTokenDecimals={getTokenDecimals}\n                                          rejectValidation={rejectValidation}\n                                          tokenConfig={this.state.tokenConfig}\n                                          getAccountBalance={getAccountBalance}\n                                          accountBalanceLow={accountBalanceLow}\n                                          accountInizialized={accountInizialized}\n                                          selectedToken={this.state.selectedToken}\n                                          connectorName={this.state.connectorName}\n                                          setStrategy={this.setStrategy.bind(this)}\n                                          userRejectedConnect={userRejectedConnect}\n                                          accountBalanceToken={accountBalanceToken}\n                                          initializeContracts={initializeContracts}\n                                          walletProvider={this.state.walletProvider}\n                                          buyModalOpened={this.state.buyModalOpened}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          rejectAccountConnect={rejectAccountConnect}\n                                          handleMenuClick={this.selectTab.bind(this)}\n                                          setConnector={this.setConnector.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          availableTokens={this.state.availableTokens}\n                                          closeBuyModal={this.closeBuyModal.bind(this)}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          selectedStrategy={this.state.selectedStrategy}\n                                          userRejectedValidation={userRejectedValidation}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          setStrategyToken={this.setStrategyToken.bind(this)}\n                                          accountValidationPending={accountValidationPending}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          contractMethodSendWrapper={contractMethodSendWrapper}\n                                          setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        />\n                                      </Suspense>\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          cachedData={this.state.cachedData}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </Suspense>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil\n                            transactions={transactions}\n                            themeMode={this.state.themeMode}\n                          />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={ fieldInfo.style ? fieldInfo.style : {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            <FieldComponent\n                              {...this.props}\n                              fieldInfo={fieldInfo}\n                              colProps={colInfo.props}\n                              parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            />\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.props.tokenConfig.name,'nonceMethod']);\n          if (this.props.usePermit && permitContract){\n            const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n            const nonce = nonceMethod ? await permitContract.methods[nonceMethod](this.props.account).call() : null;\n            this.functionsUtil.signPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, nonce, expiry, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            web3={this.props.web3}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              className={styles.input}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          web3={this.props.web3}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      availableMethods[method] = globalConfigs.payments.methods[method];\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n                  if (!availableProviders || !availableProviders.length){\n                    return false;\n                  }\n\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink pb={[3,2]} href={'https://developers.idle.finance'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Developers</ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Terms of Service</Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink pb={[3,2]} href={'https://www.iubenda.com/privacy-policy/61211749'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Privacy Policy</ExtLink>\n                <ExtLink pb={[3,2]} href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Cookie Policy</ExtLink>\n                <ExtLink pb={[3,2]} href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Brand Assets</ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Overview</Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Proposals</Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Leaderboard</Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Forum</Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>info@idle.finance</Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n"],"sourceRoot":""}