{"version":3,"sources":["CardIconButton/CardIconButton.js","SmartNumber/SmartNumber.js","TrancheWelcome/TrancheWelcome.module.scss","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","RoundIconButton/RoundIconButton.js","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","IconBox/IconBox.js","AllocationChart/AllocationChart.js","Faquestion/Faquestion.js","PortfolioEquity/PortfolioEquity.js","GenericSelector/GenericSelector.js","ExecuteTransaction/ExecuteTransaction.js","AssetSelector/AssetSelector.js","TxProgressBar/TxProgressBar.js","theme.js","GenericChart/GenericChart.js","TableCellHeader/TableCellHeader.module.scss","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","utilities/components/Header.module.scss","TooltipText/TooltipText.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.js","ConnectBox/ConnectBox.js","TableRow/TableRow.js","DashboardCard/DashboardCard.module.scss","utilities/components/BuyModal.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","configs/availableTranches.js","SendTxWithBalance/SendTxWithBalance.js","Gauges/Gauges.js","Staking/Staking.js","GenericFaqs/GenericFaqs.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","TrancheDepositRedeem/TrancheDepositRedeem.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TrancheBox/TrancheBox.js","TrancheFlash/TrancheFlash.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","StatsCardSmall/StatsCardSmall.js","IdleStakingDisapprove/IdleStakingDisapprove.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","PolygonBridgeTransactions/PolygonBridgeTransactions.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","PolygonBridge/PolygonBridge.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","utilities/components/ModalCard.js","colors.js","AssetsUnderManagement/AssetsUnderManagement.js","TranchesList/TranchesList.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","FlexLoader/FlexLoader.js","TrancheField/TrancheField.js","ExtLink/ExtLink.js","RoundButton/RoundButton.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","CustomTooltip/CustomTooltip.js","CustomTooltip/CustomTooltipRow.js","ChartCustomTooltip/ChartCustomTooltip.js","CustomList/CustomList.js","Title/Title.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","CustomField/CustomField.js","AssetField/AssetField.js","ImageButton/ImageButton.js"],"names":["CardIconButton","cardProps","Object","assign","py","width","px","this","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","isInteractive","isActive","isDisabled","handleClick","backgroundColor","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","mx","margin","my","alignItems","flexDirection","justifyContent","align","image","iconBgColor","mr","isSidebar","p","borderRadius","theme","colors","transactions","actionBg","redeem","src","height","isMobile","imageProps","useIconOnly","name","icon","size","color","iconColor","iconProps","fontWeight","fontSize","textProps","text","Component","SmartNumber","functionsUtil","setProps","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","keys","length","forEach","showUnit","unit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unitProps","module","exports","trancheFlash","mobile","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","showPathMobile","id","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","buttonProps","border","iconSize","iconName","ml","hoverColor","onClick","path","map","index","link","pathLink","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","divider","key","e","goToSection","RoundIconButton","mainColor","disabled","minWidth","react__WEBPACK_IMPORTED_MODULE_6___default","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","ShortHash","state","componentUnmounted","loadData","prevProps","prevState","hash","newState","callback","setState","resolveAddress","shortenHash","getENSName","ensName","setStateSafe","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","display","LoadingSpinner","react_default","index_es","className","styles","ButtonLoader","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","IconBox","isVisible","mt","textAlign","dangerouslySetInnerHTML","__html","children","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","selectedToken","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","data","_this3","onMouseLeave","tooltipFormat","v","sliceLabel","value","radialLabel","tooltip","container","inline","background","cardBg","labels","fontFamily","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","top","right","bottom","left","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","position","zIndex","mb","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","Faquestion","isShowingAnswer","preventDefault","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","isOpened","boxShadow","cursor","h4","question","answer","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","JSON","stringify","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","themeMode","availableTokens","getEtherscanTxs","account","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","tx","token","BNify","action","status","Math","min","parseInt","timeStamp","tokenAmount","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","tokenAddress","_context4","getAvailableTokenAddress","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","toUpperCase","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","itemPos","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","axisBottomIndex","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","tickValues","legendPosition","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","point","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","menuIsOpen","noShadow","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","notInteractive","CustomIndicatorSeparator","CustomMenu","outerColor","selectProps","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","searchInput","dark","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isDashboard","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","ExecuteTransaction","txStatus","processing","txHash","loading","error","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","react__WEBPACK_IMPORTED_MODULE_9___default","parentProps","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_12__","web3","network","progressBarProps","cancelTransaction","bind","endMessage","waitText","execute","componentProps","_ConnectBox_ConnectBox__WEBPACK_IMPORTED_MODULE_10__","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","flex","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","TxProgressBar","txCount","ended","percentage","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","transaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","eth","err","_x","_x2","abrupt","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","getRequiredNetwork","provider","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","currentNetwork","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","span","renderRemainingTime","loadingMessage","sendingMessage","target","rel","href","getEtherscanTransactionUrl","explorer","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","widths","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","tick","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","green","connect","newblue","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider2","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","menuIconActive","cardBgContrast","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","experimental","production","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","completed","pending","failed","blacks","whites","zIndices","messageStyle","shade","tint","success","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","GenericChart","addEventListener","handleWindowSizeChange","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","undefined","loaderText","bg","twitterIcon","radioBtn","button","gradientButton","empty","select","selectDark","input","TooltipText","placement","message","tooltipProps","TransactionField","loadField","hashChanged","accountChanged","output","tokenSymbol","bgColor","fieldProps","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","regenerator_default","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","enabled","idle","getDistribution","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","currentNetworkId","totalSpeed","_args10","_context10","availableStrategies","getRequiredNetworkId","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","includes","getUserPoolShare","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","toBN","n","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","console","getContractByName","networkId","required","contract","contracts","c","current","isCorrectNetwork","contractsNetworks","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","duration","start","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","startLen","endLen","shortHash","txStart","txEnd","switchEthereumChain","chainId","getInjectedWeb3","currentProvider","request","toHex","method","addEthereumChain","networkConfig","chainName","providerConfig","blockExplorerUrl","rpcUrls","publicRpc","rpc","nativeCurrency","baseToken","symbol","blockExplorerUrls","ensConfig","TTL","ens","addressCheck","supportedNetworks","checkAddress","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","portfolio","tranches","avgAPY","totalBalance","totalEarnings","totalAmountLent","totalEarningsPerc","stakingRewards","tranchesBalance","protocol","protocolConfig","_ref4","_ref5","tranche","trancheConfig","trancheTokenBalance","trancheUserInfo","trancheStakedBalance","tranchePrice","tranchePool","tokenBalance","_ref11","tokenBalanceConverted","trancheEarnings","trancheApy","poolShare","amountDeposited","getContractBalance","getTrancheUserInfo","getTrancheStakingRewards","functions","rewards","getTrancheStakedBalance","CDORewards","stakedBalance","toConsumableArray","rewardToken","tokenAmountConverted","loadTrancheFieldRaw","convertTrancheTokenBalance","amountDepositedConverted","trancheInfo","trancheWeight","rewardTokenConfig","rewardTokenConversionRate","getTokenConversionRateUniswap","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args9","tokensToMigrate","totalBalanceConverted","_ref15","_ref16$","migrationEnabled","oldContractBalanceFormatted","tokenKey","checkMigration","strategy","getIdleTokenPrice","_ref19","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getTokenAprs","getAmountDeposited","avgApy","currentWeb3","ethereum","Web3","getCurrentWeb3","requiredNetwork","web3RpcKey","web3Rpc","providers","HttpProvider","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","_args11","prevAvgBuyPrice","getAvgBuyPrice","idleTokensBalance","getFirstDepositTx","_callee13","deposits","_args13","_context13","firstDepositTx","getDashboardSectionUrl","section","env","envUrl","baseUrl","origin","asyncTimeout","ms","getDepositTimestamp","_callee14","firstDepositTxs","_args14","_context14","reduce","acc","getTrancheStakingRewardsDistributions","_ref25","_callee16","stakingDistributions","_context16","_ref26","_callee15","eventFilters","transfers","_context15","CDO","getContractEvents","_x10","_x9","getTrancheHarvests","_ref27","_callee18","_ref28","_ref29","stakingRewardsDistributions","autoFarming","harvestsList","_context18","_ref30","_callee17","_context17","_x13","_x11","_x12","getTrancheLastHarvest","_ref31","_callee19","strategyConfig","idleStrategyAddress","latestHarvestBlock","_ref32","_ref33","blockInfo","totalAmount","_context19","Strategy","genericContractCallCachedTTL","initContract","abi","getBlockInfo","returnValues","_x14","getTrancheRewardTokensInfo","_ref34","_callee21","tokensDistribution","_context21","_ref35","_callee20","firstHarvest","prevBlockInfo","lastBlockInfo","latestHarvest","tokenApr","tokenApy","distributionEnded","lastAmount","tokensPerDay","distributionSpeedUnit","tokensPerYear","tokensPerBlock","tranchePoolSize","tokensPerSecond","lastBlockPoolSize","distributionSpeed","convertedTokensPerYear","govTokenConfig","rewardsRateMethod","periodFinishMethod","periodFinish","_ref36","_ref37","_firstHarvest","_latestHarvest","firstBlock","_ref38","_ref39","poolSize","elapsedBlocks","elapsedSeconds","_context20","_address","rewardsRate","now","genericContractCallCached","apr2apy","apr","apy","total","_x17","_x15","_x16","_ref40","_callee23","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters_deposits","underlyingEventsFilters_redeems","_ref41","_ref42","underlying_redeems","underlying_deposits","trancheToken_redeems","trancheToken_deposits","totalAmountDeposited","underlying_transfers","trancheToken_transfers","blocksInfo","_context23","sort","_ref43","_callee22","trancheTokenTransferEvent","tokenTransferEvent","_ref44","_ref45","tokenConversionRate","_context22","_x21","trancheTokenAmount","hashKey","trancheTokens","_x18","_x19","_x20","getTrancheUserTransactions","_ref46","_callee24","_context24","_x22","_x23","_x24","getTrancheFirstDepositTx","_ref47","_callee25","_context25","_x25","_x26","_x27","getAmountDepositedTranche","_ref48","_callee26","_context26","_x28","_x29","_x30","_ref49","_callee27","_ref50","_ref51","userAvgPrice","_context27","_x31","_x32","getAmountLent","_callee28","amountLents","_args28","_context28","getBaseToken","getCurrentNetwork","getCurrentNetworkId","defaultNetwork","getPolygonBridgeTxs","_callee34","txs","covalentInfo","etherscanInfo","stateSenderConfig","erc20PredicateConfig","etherPredicateConfig","depositManagerConfig","rootChainManagerConfig","polygonNetworkId","covalentApiUrl","polygonAvailableTokens","polygonEndpoint","ethereumNetworkId","etherscanApiUrl","etherscanEndpoint","etherscanTxlistEndpoint","etherscanTxlistInternalEndpoint","_ref54","_ref55","last_state_id","polygonTxs","etherscanTxlist","etherscanTxlistInternal","rootTokensAddresses","childTokensAddresses","depositTxs","exitTxs","depositTxsHashes","depositETHInputRexExp","depositETHTxs","exitETHTxs","_args34","_context34","getCachedData","endpoints","getPolygonCurrentLastStateId","makeCachedRequest","makeEtherscanApiRequest","childToken","rootToken","result","_ref56","_callee29","ethereumTx","txReceipt","stateSenderLog","tx_state_id","_context29","bridgeType","getTxReceipt","web3Infura","log","hexToNumberString","topics","included","_x33","_ref57","_callee30","_context30","_x34","match","_ref58","_callee31","_context31","_x35","_ref59","_callee32","_context32","_x36","items","to_address","_ref60","_callee33","polygonTx","erc20RootToken","_context33","normalizePolygonTx","exited","maticPOSClient","isCheckPointed","erc20","isWithdrawExited","_x37","getPolygonBaseTxs","_callee35","debug","baseTxs","baseEndpoint","cachedRows","lastCachedTx","lastCachedBlockNumber","covalentEndpointLastBlock","latestTxs","latestBlockNumbers","requestCount","requestStatus","dataToCache","_args35","_context35","getCachedRequest","block_height","filterPolygonTxs","tx_hash","saveFetchedTransactions","makeRequest","addKeyToCachedDataWithLocalStorage","getEtherscanBaseTxs","_callee36","firstBlockNumber","endBlockNumber","firstIdleBlockNumber","cachedBlockNumbers","etherscanEndpointLastBlock","_args36","_context36","filterEthereumTxs","_callee37","_args37","_context37","filterCurveTxs","endpoint","txsToStore","cachedRequest","saveCachedRequest","_callee38","resultData","_resultData","allAvailableTokens","_args38","_context38","processStoredTxs","t1","_callee39","contractInstance","_context39","web3Polygon","Contract","constant","inputs","outputs","internalType","payable","stateMutability","methods","lastStateId","call","checkPolygonTransactionIncluded","_ref66","_callee40","_ref67","_ref68","_context40","getTransactionReceipt","_x38","_ref69","_callee41","_args41","_context41","_x39","depositLogEvent","log_events","sender_address","decoded","param","redeemLogEvent","withdrawLogEvent","tokenDecimal","idleToken","block_signed_at","_d","logEvent","raw_log_topics","from_address","gasUsed","gas_spent","gas_price","_ref70","_callee42","processTransactions","idleTokensAddresses","_args42","_context42","mappedTx","_x40","_x41","filterEtherscanTxs","_ref71","_callee43","processTxs","_args43","_context43","_x42","_ref72","_callee44","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args44","_context44","tokenMigrationToolParams","curveTokenConfig","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenValue","newValue","iTxs","withdrawnValue","_x43","addStoredTransaction","txKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref73","_callee49","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args49","_context49","baseTokenConfig","baseTokenAddress","_ref74","_callee48","minedTxs","_context48","_ref75","_callee47","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context47","getCurveTokenPrice","_ref76","_callee45","_context45","_x48","_x49","baseTokensConfig","t2","_ref77","_callee46","_context46","_x50","_x51","_x46","_x47","_x45","_x44","_ref78","_callee55","txsToProcess","_args55","_context55","_ref79","_callee54","_context54","_ref80","_callee53","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context53","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref81","_callee50","_context50","_x56","_x57","_ref82","_callee51","_context51","_x58","_x59","oldContract","events","raw","_ref83","_callee52","_context52","_x60","_x61","decodeLog","_token","_x54","_x55","_x53","_x52","alias","getCustomAddress","setCustomAddress","customAddress","cachedRequests","buildSubgraphQuery","entity","fields","getSubgraphTrancheInfo","_ref84","_callee56","trancheAddress","startTimestamp","endTimestamp","subgraphConfig","currTime","queryParams","subgraphQuery","postData","subgraphData","lastTimestamp","subgraphData_2","_args56","_context56","first","orderBy","orderDirection","where","Tranche","timeStamp_gte","timeStamp_lte","entities","trancheInfos","query","makePostRequest","_x62","getBestTranche","_callee57","trancheType","maxApy","trancheTypes","trancheStrategyConfig","_args57","_context57","timetamp","splice","availableTrancheInfo","tInfo","_ref86","_callee58","error_callback","config","_args58","_context58","post","catch","_x63","_ref87","_callee59","_args59","_context59","_x64","_ref88","_callee60","apiKeyIndex","apiKey","_args60","_context60","_x65","_ref89","_callee61","return_data","_args61","_context61","_x66","makeCachedPostRequest","_ref90","_callee62","_args62","_context62","_x67","code","errorCode","split","getGlobalConfigs","array","prop","shift","configs","getAppUrl","baseURL","getCurrentEnvironment","environments","checkChristmas","checkUrlPolygon","polygonUrl","checkUrlOrigin","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee63","page","googlePageviewInfo","isOrigin","_args63","_context63","ga","_ref92","_callee65","googleEventsInfo","debugEnabled","originOk","_args65","_context65","analytics","google","addPostfixForTestnet","availableNetworks","_ref93","_callee64","_context64","hitCallback","hitCallbackFail","_x69","_x70","_x68","createContract","_ref94","_callee66","_context66","_x71","_x72","_x73","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","defaultUrl","baseurl","getEtherscanAddressUrl","decimalCount","decimal","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee69","activeOnly","whitelist","proposals","validProposals","_args69","_context69","addr","_ref96","_callee68","checkedStrategies","_context68","end","author","snapshot","strategies","_ref97","_callee67","tokenContract","_context67","_x75","_x74","getAprsFromApi","_callee70","endpointInfo","aprs","_args70","_context70","_ref99","_callee71","forceStartTimestamp","frequency","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args71","_context71","_x76","getTokenExchangeRate","_ref100","_callee72","exchangeRateParams","exchangeRate","_context72","_x77","_x78","getTokenDecimals","_ref101","_callee73","_context73","_x79","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee74","idleTokenConfig","feeDistributorConfig","_context74","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee75","contractPaused","_args75","_context75","parse_json","return_default","removeStoredItem","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeItem","setItem","checkRebalance","_ref104","_callee77","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context77","lastAllocationsPromise","_ref105","_callee76","lastAllocations","_context76","_x81","_x82","alloc","_x80","_ref106","_callee78","oldContractBalance","oldContractTokenDecimals","oldContractName","_context78","_x83","_x84","_ref107","_callee79","eventName","startBlock","endBlock","blocksPerCall","lastBlockNumber","calls","toBlock","all_past_events","_args79","_context79","getBlockNumber","getContractPastEvents","fromBlock","_x85","_x86","estimateMethodGasUsage","_ref108","_callee80","methodParams","_contract$methods","functionCall","gasLimit","_ref109","_ref110","_args80","_context80","getGasPrice","estimateGas","_x87","_x88","_ref111","_callee81","userAddress","signedParameters","callback_receipt","_contract$methods2","_context81","on","once","confirmationNumber","receipt","_x89","_x90","_x91","_x92","_x93","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref112","_callee82","biconomyInfo","res","_context82","limits","apiId","headers","x-api-key","_x94","sendTxWithPermit","_ref113","_callee83","_contract$methods3","messageToSign","_this$getSignaturePar","_context83","encodeABI","personal","sign","_x95","_x96","_x97","_x98","_x99","_x100","buildBiconomyErc20ForwarderTx","_ref114","_callee84","permitType","callData","buildParams","_context84","txGas","erc20ForwarderClient","buildTx","_x101","_x102","_x103","_x104","_x105","_ref115","_callee86","_context86","_ref116","_callee85","_context85","_x107","_x108","_x106","sendBiconomyTxWithErc20Forwarder","_ref117","_callee87","req","metaInfo","txResponse","fetchReceiptIntervalId","_context87","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x109","_x110","_x111","_x112","sendBiconomyTxWithPersonalSign","_ref118","_callee88","_this$getSignaturePar2","_context88","getNonce","_x113","_x114","_x115","_x116","signPermitEIP2612","_ref119","_callee89","erc20Name","owner","spender","deadline","domain","permit","domainData","_context89","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x117","_x118","_x119","_x120","_x121","_x122","_x123","_x124","signPermit","_ref120","_callee90","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args90","_context90","net","getId","round","nonceMethod","pow","allowed","response","_x125","_x126","_x127","_ref121","_callee91","permitParams","methodAbi","useNonce","_args91","_context91","_jsonInterface","f","unshift","_x128","_x129","_x130","_x131","_x132","_x133","_x134","sendSignedTx","_ref122","_callee92","MetaTransaction","dataToSign","_context92","_x135","_x136","_x137","_x138","_x139","checkTokenApproved","_ref123","_callee93","contractAddr","walletAddr","_ref124","_ref125","allowance","_context93","getAllowance","gte","_x140","_x141","_x142","_ref126","_callee94","_context94","_x143","_x144","_x145","contractMethodSendWrapperWithValue","txData","send_raw","raw_tx_data","disableERC20","toTwosComplement","enableERC20MaxAllowance","enableERC20","getBestToken","_callee96","highestValue","_args96","_context96","lendRates","aprInfo","tokenAPR","_ref128","_callee95","_context95","_x146","_ref129","_callee97","_args97","_context97","_x147","_x148","calculateGaugeBoost","_ref130","_callee98","gaugeName","veTokenConfig","gaugeConfig","aggcalls","l","voting_balance","voting_total","working_balances","working_supply","L","TOKENLESS_PRODUCTION","lim","old_bal","noboost_lim","noboost_supply","_working_supply","_context98","getTokenTotalSupply","_x149","_x150","_x151","getGaugeRewardsTokens","_ref131","_callee100","rewardTokensRate","rewardTokensBalances","rewardTokens","claimableTokens","rewardContractAddress","multiRewardsContractName","multiRewardsConfig","MultirewardsAbi","tokenIndexes","_args100","_context100","maxRewards","_ref132","_callee99","tokenIndex","rewardTokenAddress","_ref133","_ref134","rewardData","rewardTokenBalance","_context99","getTokenConfigByAddress","rewardRate","_x153","rate","_x152","_ref135","_callee102","_args102","_context102","_ref136","_callee101","tokenGlobalConfig","stakingRewardsContract","_context101","_x156","_x154","_x155","_ref137","_callee103","field","addGovTokens","_args103","_context103","loadTrancheField","_x157","_x158","_x159","_x160","_x161","_x162","_x163","_x164","_ref138","_callee104","formatValue","addTokenName","rewardsTokensInfo","internal_view","stakingRewardsEnabled","stakingEnabled","show_idle_apy","idleGovTokenConfig","_ref139","_ref140","totalSupply","virtualPrice","_ref141","_ref142","gaugeBalance","lastPrice1","staked1","totalStaked","_ref143","_ref144","deposited1","lastPrice","_ref145","_ref146","redeemable1","staked2","_ref147","_ref148","earningsStart","trancheApy2","deposited3","earningsEnd","_ref149","_ref150","trancheFee","earningsCounter","feesEnd","feesStart","_ref151","_ref152","deposited4","redeemable3","_ref153","_ref154","deposited2","redeemable2","tokensApy","trancheApyDecimals","baseApy","curveBaseApy","_ref155","_ref156","_ref157","_ref158","earningsPerc","secondsFromFirstTx","_ref159","_ref160","rewardsTokens","incentiveTokens","_stakingRewards","govTokens","_args104","_context104","AA","BB","curveApyPath","getCurveAPYs","rewardTokenInfo","formattedApy","IDLE","rewardTokenAddr","stakingRewardsTokenConfig","govToken","_x165","_x166","_x167","_x168","_x169","_x170","_x171","loadAssetField","_ref161","_callee105","addCurveApy","showIdleAPR","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref162","_ref163","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref164","_ref165","amountLentCurve1","redeemableBalanceCurve","_ref166","_ref167","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref168","_ref169","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref170","_ref171","tokenPriceFirstDeposit","_ref172","_ref173","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref174","_ref175","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref176","_ref177","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref178","_ref179","amountLentCurve2","redeemableBalanceCurve1","_ref180","_ref181","redeemableBalance2","_args105","_context105","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x172","_x173","_x174","_x175","getIdleTokenSupply","_ref182","_callee106","idleTokenSupply","_args106","_context106","_x176","getIdleTokenPriceWithFee","_ref183","_callee107","_ref184","_ref185","fee","priceWFee","_args107","_context107","eq","_x177","_x178","_ref186","_callee108","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args108","_context108","_x179","clearCachedData","clear_all","parent_key","useLocalStorage","requiredNetworkId","allCachedData","expirationDate","_ref187","_callee109","_ref188","_ref189","idleTokensTotalSupply","userShare","_context109","_x180","_x181","openWindow","open","getActiveCoverages","_callee111","activeCoverages","coverProtocolConfig","nexusMutualConfig","_args111","_context111","coverages","_ref191","_callee110","coverage","coverageTokens","collateral","protocolImage","actionUrl","actionDisabled","_context110","tokens","fileClaimUrl","expirationTimestamp","utc","actionLabel","_x182","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","portfolioCoverage","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref192","_callee113","incidentsInfo","_ref193","_ref194","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context113","directProps","contractInfo","buyer","_ref195","_callee112","cover","coverId","claimSubmittedEvent","_ref196","_ref197","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref198","_ref199","_context112","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x184","_x183","getBatchedDepositExecutions","_ref200","_callee114","_context114","_x185","getBatchedDeposits","_callee116","filter_by_status","batchDepositConfig","batchedDeposits","_args116","_context116","_ref202","_callee115","currBatchIndex","batchIndex","_ref203","_ref204","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context115","_x186","getETHBalance","_ref205","_callee117","fixDecimals","_args117","_context117","_x187","_ref206","_callee118","_ref207","_ref208","_args118","_context118","ERC20","_x188","_x189","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","_ref209","_callee119","_args119","_context119","_x190","_ref210","_callee120","_args120","_context120","_x191","_ref211","_callee121","_args121","_context121","_x192","_x193","getProtocolBalance","_ref212","_callee122","_context122","_x194","_x195","getAprs","_ref213","_callee123","_context123","addresses","_x196","genericIdleCall","_ref214","_callee124","callParams","_args124","_context124","_x197","_ref215","_callee125","_contract$methods4","_args125","_context125","_x198","_x199","_ref216","_callee127","_args127","_context127","_ref217","_callee126","_context126","_x201","_x202","_x200","getTxDecodedLogs","_ref218","_callee129","logAddr","decodeLogs","internalTransfers","_context129","_ref219","_callee128","_context128","_x207","_x208","_x203","_x204","_x205","_x206","blocksToSeconds","blocks","blocksPerSeconds","_callee130","_context130","_callee131","blockInfoToSave","_args131","_context131","getBlock","_ref222","_callee132","_args132","_context132","getPastEvents","_x209","_x210","_ref223","_callee133","_args133","_context133","_x211","_x212","_ref224","_callee134","_args134","_context134","_x213","_x214","cachedContractCall","_ref225","_callee135","_args135","_context135","_x215","_x216","_ref226","_callee136","_contract$methods5","_args136","_context136","_x217","_x218","_ref227","_callee137","async","_args137","_context137","_x219","_x220","getUnlentBalance","_ref228","_callee138","unlentBalance","_context138","_x221","_ref229","_callee139","_args139","_context139","_x222","getLastAllocations","_ref230","_callee141","tokenAllocations","_context141","_ref231","_callee140","_context140","_x224","_x225","_x223","_ref232","_callee142","protocolsAprs","_ref233","_ref234","govTokensBalances","_args142","_context142","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","_x226","getSushiswapPoolTokenPrice","_ref235","_callee143","_ref236","_ref237","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref238","_ref239","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context143","getSushiswapConversionRate","_x227","_ref240","_callee144","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context144","_x228","_x229","_ref241","_callee145","useWETH","unires","_args145","_context145","addressForPrice","_x230","_x231","getCurveDepositedTokens","_ref242","_callee146","idleTokensBalances","remainingCurveTokens","_args146","_context146","_x232","getCurveUnevenTokenAmounts","_ref243","_callee147","amounts","max_burn_amount","unevenAmounts","_context147","getCurveDepositContract","_x233","_x234","_callee148","curveRatesInfo","_args148","_context148","_callee149","_context149","strategyTokens","getCurveAPYContract","_callee150","blocksForPrevTokenPrice","_ref247","_ref248","prevTokenPrice","blocksMultiplier","curveAPR","_context150","getCurveTokenSupply","_callee151","_context151","getCurvePoolContract","_callee152","_args152","_context152","_callee153","_args153","_context153","_ref252","_callee154","_ref253","_ref254","_context154","_x235","_callee155","depositContractInfo","_context155","getCurveZapContract","_callee156","zapContractInfo","_context156","_callee157","poolContractInfo","_context157","getCurveSwapContract","_callee158","migrationContractInfo","_context158","getCurveIdleTokensAmounts","_callee160","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args160","_context160","_ref260","_callee159","coinIndex","curveIdleTokens","_context159","migrationParams","_x236","getCurveTokensAmounts","_callee162","useCoinIndex","_args162","_context162","_ref262","_callee161","_ref263","_ref264","idleTokenPrice","totalTokenSupply","_context161","_x237","getCurveAmounts","_ref265","_callee164","_args164","_context164","_ref266","_callee163","_context163","_x240","_x238","_x239","getCurveTokenAmount","_ref267","_callee165","_args165","_context165","_x241","getCurveSlippage","_ref268","_callee166","uneven_amounts","depositContract","_ref269","_ref270","Sv","_args166","_context166","_x242","_x243","_ref271","_callee167","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","disabledTokens","aaveIncentivesController_address","IAaveIncentivesController_name","_ref272","_ref273","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args167","_context167","IAaveIncentivesController","emissionPerSecond","_x244","_callee169","_args169","_context169","_ref275","_callee168","_ref276","_ref277","_context168","_x245","getWMaticApr","_ref278","_callee170","maticConversionRate","wMaticTokenConfig","wMaticApr","destTokenConfig","wMaticValue","_args170","_context170","_x246","_x247","getStkAaveApr","_ref279","_callee171","aaveConversionRate","stkAaveAPR","stkAaveValue","_args171","_context171","_x248","_x249","getCompAPR","_ref280","_callee172","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args172","_context172","_x250","_x251","getCompSpeed","_ref281","_callee173","cTokenAddress","compSpeed","_context173","_x252","_ref282","_callee174","cTokenInfo","compoundAllocationPerc","_ref283","_ref284","cTokenTotalSupply","compoundPoolShare","_args174","_context174","_x253","_callee176","_args176","_context176","_ref286","_callee175","_ref287","_ref288","_context175","_x254","_callee178","_args178","_context178","_ref290","_callee177","_ref291","_ref292","compApr","_context177","_x255","getTokensCsv","_callee181","csv","_context181","prototype","sum","pv","cv","avg","_ref294","_callee180","_context180","_ref295","_callee179","rates","header","rows","aprAvg","scoreAvg","lastRow","_context179","protocolsData","p1","foundProtocol","p2","idleRate","score","idleScore","row","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x257","_x256","_callee183","convertToken","_args183","_context183","_ref297","_callee182","compTokenBalance","_context182","_x258","getGovTokensFarming","tokenGovTokens","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref298","_callee185","govTokensUserDistribution","_args185","_context185","_ref299","_callee184","_context184","_x260","_x259","getGovTokensDistributionSpeed","_ref300","_callee187","govTokensDistribution","_args187","_context187","_ref301","_callee186","govSpeed","_context186","_x262","_x261","getGovTokensAprs","_ref302","_callee189","govTokensAprs","_args189","_context189","_ref303","_callee188","_ref304","_ref305","_ref306","_ref307","cTokenConfig","_context188","aprTooltipMode","_x265","_x263","_x264","_callee191","_args191","_context191","_ref309","_callee190","govTokenBalance","fromTokenConfig","_context190","_x266","getTokenIcon","tokenConfigStats","tokensConfigs","foundToken","foundTokenConfig","getGovTokenConfigByAddress","_callee192","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args192","_context192","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref311","_callee194","govTokensAmounts","_context194","getGovTokensUserAmounts","_ref312","_callee193","govTokenIndex","govTokenAddress","_context193","getGovTokenAddessByIndex","_x269","_x270","_x267","_x268","_ref313","_callee195","_context195","_x271","_x272","_ref314","_callee196","_context196","_x273","_x274","_callee199","govTokenConfigForced","_args199","_context199","_ref316","_callee198","_context198","_ref317","_callee197","_context197","_x276","_x277","_x275","getTokenFees","_callee200","_args200","_context200","_callee201","_ref320","_ref321","feePercentage","gain","fees","_args201","_context201","_ref322","_callee202","_args202","_context202","_x278","getTotalTVL","_callee203","tokensTVL","_context203","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee207","_context207","_ref325","_callee206","_context206","_ref326","_callee205","oldTokenTVL","idleTokenName","_ref327","_ref328","oldTokenConfig","_ref332","_ref333","oldTokenPrice","oldTotalSupply","_context205","showAUM","_ref329","_callee204","_ref330","_ref331","govTokenConversionRate","govTokenBalanceConverted","_context204","_x281","oldProtocols","oldProtocol","protocolPos","_x280","_x279","getSubstackLatestFeed","_callee208","idleSubstackFeed","latestFeed","_context208","getTrancheAggregatedStats","_callee212","totalAUM","_args212","_context212","_ref336","_callee211","_context211","_ref337","_callee210","_context210","_ref338","_callee209","_ref339","_ref340","_context209","_x284","_x283","_x282","getAggregatedStats","_callee214","allNetworks","networkIds","tvls","_args214","_context214","_ref342","_callee213","_context213","_x285","getAggregatedStats_chain","_callee219","avgAPR","_args219","_context219","availableStrategiesNetworks","_ref344","_callee218","_context218","_ref345","_callee217","_context217","_ref346","_callee216","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context216","_ref347","_callee215","_ref348","_ref349","_context215","_x289","_x288","_x287","_x286","getTokenApy","_ref350","_callee220","_context220","_x290","getTokensToMigrate","_callee223","_args223","_context223","_ref352","_callee222","_context222","_ref353","_callee221","_ref354","_context221","_x292","_x291","getProtocolsTokensBalances","_callee225","tokenBalances","minTokenBalance","protocolsTokens","_args225","_context225","_ref356","_callee224","_context224","_x293","getTokenConversionRateField","_ref357","_callee226","_args226","_context226","_x294","_x295","_ref358","_callee227","_args227","_context227","_x296","_x297","_x298","getAvgAPYStats","_ref359","_callee228","apiResults","_args228","_context228","_x299","_x300","_ref360","_callee229","statsTokenConfig","ToTokenConfig","_args229","_context229","addressForPriceFrom","_x301","_ref361","_callee230","count","_conversionRate","_args230","_context230","_x302","_x303","getTokenScore","_ref362","_callee231","_ref363","_ref364","tokenScore","_context231","protocolScore","getTokenScoreApi","_x304","_x305","_ref365","_callee232","scores","_context232","_x306","_x307","_ref366","_callee233","idleGovTokenShowAPR","idleAPR","_args233","_context233","_x308","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","Fragment","DashboardCard","mouseOver","isRainbow","defaultOpacity","active","hidden","rainbow","interactive","onMouseOut","setMouseOver","onMouseOver","titleParentProps","lineHeight","titleProps","description","ConnectBox","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","connectAndValidateAccount","TableRow","FieldComponent","fieldComponent","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","cardId","rowProps","rowId","cols","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","funcProps","colProps","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","getInitParams","render","closeModal","goBack","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","remoteResources","scriptID","remoteResourceParams","precall","parentElement","head","stylesheetId","methodInfo","loadAvailableMethods","_this4","caption","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","imageSrc","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","buyText","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","placeholder","noOptionsMessage","inputValue","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","closeFunc","Header","Body","Footer","React","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","_contracts_ERC20_json__WEBPACK_IMPORTED_MODULE_0__","_contracts_IdleCDO_json__WEBPACK_IMPORTED_MODULE_1__","_contracts_IdleStrategy_json__WEBPACK_IMPORTED_MODULE_2__","_contracts_IdleCDOTrancheRewards_json__WEBPACK_IMPORTED_MODULE_3__","_contracts_TrancheStakingRewards_json__WEBPACK_IMPORTED_MODULE_4__","DAI","IdleCDO","IdleStrategy","messages","stake","unstake","unstakeWithBalance","IdleCDOTrancheRewards","FEI","lido","stETH","buyInstructions","TrancheStakingRewards","convex","FRAX3CRV","MIM3CRV","steCRV","ALUSD3CRV","3EUR","MUSD3CRV","SendTxWithBalance","permitEnabled","showPermitBox","approveEnabled","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","approveMaxAllowance","executeTx","_amount","_params","checkLimit","eventValue","getPermitTransactionParams","getTransactionParams_async","approveCallback","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","actionChanged","viewOnly","connectorName","infoBox","steps","step","stepIndex","ExtLink","checked","togglePermitEnabled","approveDescription","RoundButton","balanceSelectorInfo","textTransform","Gauges","canVote","claimText","unlockDate","balanceProp","noFundsText","lastUserVote","veTokenBalance","claimSucceded","claimToken","availableGauges","votingPowerUsed","stakeAction","selectedAction","gaugeTotalSupply","distributionRate","gaugeWorkingSupply","veTokenTotalSupply","availableVotingPower","gaugePeriodTimestamp","gaugeWorkingBalances","claimableRewardsTokens","loadEmptyGauges","loadGaugeData","stakeActionChanged","loadTokenData","toolProps","obj","urlParams","param2","veToken","trancheTokenConfig","trancheToken","claimableRewards","loadGauges","veTokenBalanceUsed","nextUnlockTime","WEIGHT_VOTE_DELAY","_this5","gaugeToken","_this6","weight","gaugeWeight","gaugeUserShare","userBoostedDistribution","gaugeDistributionRate","veTokenShare","userBaseDistribution","boostMultiplier","_this7","userDistributionRate","tokenDistributionRate","votingWeight","depositedAmount","withdrawnAmount","_this8","votingPowerPercentage","gaugeAddress","_this9","setSelectedAction","setStakeAction","setClaimToken","Button","transactionSucceeded","src_SendTxWithBalance_SendTxWithBalance","FlexLoader","borderBottom","TranchesList","enabledProtocols","colsProps","Staking","selectedOption","SelectedComponent","component","AssetField","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","q","toggleAnswer","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","componentDidUpdate","ModalCard","iconHeight","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","trancheBalance","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","trancheAPY","trancheDetails","cdoConfig","cantUnstake","cantWithdraw","trancheLimit","otherTrancheType","otherTrancheDetails","showSelectButton","contrastColor","hex","selectTrancheType","flexBasis","TrancheField","components_LimitReachedModal","ShareModal","confettiEnabled","tweet","modalApy","modalAction","lastHarvest","stakeEnabled","unstakeEnabled","trancheBaseApy","selectedTrancheOption","selectedStakeAction","selectedActionChanged","selectedStakeActionChanged","trancheTokenToRedeem","isStake","isDeposit","isWithdraw","option","selectTranche","borderTop","ImageButton","contractApprovedCallback","PortfolioEquityTranches","transactionsList","tokenBalanceConfig","firstTokenTx","firstAATokenTx","firstBBTokenTx","trancheAAInfos","trancheBBInfos","timeStamp_start","conversionRatesTimestamps","blocksTimestamps","conversionRateBlocksCalls","distance","tokenDataAA","tokenDataBB","filteredTrancheBalances","_timeStamp","_loop2","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","colWidth","src_PortfolioEquityTranches_PortfolioEquityTranches","Title","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","transactionsChanged","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","staked","reedemable","tokenIcon","CustomList","claimCallback","TranchePage","userHasFunds","componentLoaded","trancheTypeChanged","balanceInfo","tranchesDetails","filteredTranchesTypes","TrancheDepositRedeem","loadPortfolio","src_TrancheDetails_TrancheDetails","src_FundsOverviewTranche_FundsOverviewTranche","src_StakingRewardsTranche_StakingRewardsTranche","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","Base","contractsInitialized","bestTrancheInfo","alt","showTooltip","baseName","justifyItems","long","features","feature","TrancheFlash","flashData","bold","subtitle","openTooltipModal","msg","helpcircle","arrows","seniorinfo","juniorinfo","TrancheWelcome","AssetsUnderManagement","loaderAlign","aggregatedStatsMethod","src_TrancheFlash_TrancheFlash","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","symbolSize","anchor","direction","symbolShape","translateY","itemTextColor","effects","legendProps","valueHover","valueHoverProps","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","counterStyle","oldState","build_default","delay","separator","useEasing","formattingFn","countUpRef","ref","TotalEarningsCounter","Tranches","trancheRoute","remainingTokens","useTrancheType","depositedTranches","remainingTranches","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","then","param1","param3","availableTranchesChanged","tranchesTokens","tranchesBalances","tranchesConfig","portfolioDonutData","balanceValue","tokenPercentage","trancheName","breadcrumbPath","src_TranchePage_TranchePage","aligItems","pr","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","itemsSpacing","setPortfolioEquityQuickSelection","src_TrancheWelcome_TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","programEnded","rewardMultiplier","accountingData","programEndDate","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","loadStats","StatsCard","isUnstake","isStats","txAction","poolLink","statInfo","setAction","IdleStakingDisapprove","disapproveAllowance","requiredNetworkChanged","accountInizialized","governanceTokenName","stkIdleConfig","stkIdleBalance","idleBalance","idleAllowance","IdleStaking","maxApr","lockPeriods","lockedEnd","maxTime","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","getMaxStakeTimestamp","maxStakeTimestamp","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","maxDateTimestamp","isLock","isClaim","isIncrease","canIncrease","src_IdleStakingDisapprove_IdleStakingDisapprove","StatsCardSmall","maxHeight","reward","setIncreaseAction","changeLockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","selectedUnderlyingChanged","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","fullWidth","PortfolioDonut","totalFunds","parentWidth","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","setEstimationStepsPerc","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","PolygonBridgeTransactions","loaded","bridgeEnabled","polygonTransactions","polygonTransactionsAvailableTokens","maticPOSClientChanged","polygonBridgeConfig","actionIcon","statusIcon","actionIconProps","statusIconProps","paginationEnabled","StrategyPage","portfolioLoading","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","apyLong","yieldFarming","strategyName","toolsToShow","toolName","toolConfig","src_PortfolioDonut_PortfolioDonut","toolIndex","src_DashboardIconButton_DashboardIconButton","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","src_PolygonBridgeTransactions_PolygonBridgeTransactions","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","PolygonBridge","txsToExit","dataLoaded","defaultTransaction","selectedTransaction","selectedTransactionHash","rootTokenConfig","childTokenConfig","encodeParameter","depositData","sendValue","logEventSignature","genericParams","erc20LogEventSignature","exitUtil","buildPayloadForExit","exitCalldata","ERC20Predicate","DepositManager","depositedTokensLog","depositedTokensEvent","EtherPredicate","maticNetwork","mainNetworkId","mainNetworkName","withdrawnTokensEvent","withdrawnTokensLog","withdrawnTokens","Transfer","paramIsToken","defaultAction","loadPolygonTxs","isExit","selectTransaction","exitCallback","getExitTransactionParams","setRequiredNetwork","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","process","appName","forumURL","telegramURL","discordURL","twitterURL","cache","clearAll","darkModeEnabled","live","beta","polygon","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","scoreShort","apyShort","totalProfitPerc","cheapRedeem","aprRatio","gaugeBoost","curveBonusSlippage","directMint","performanceFee","govTokenApr","apyTranches","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","riskAdjustedDisabledMessageDeposit","riskScore","curveInstructions","riskAdjustedDisabledMessageRedeem","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","GovernorBravo","EcosystemFund","IdleController","18","12","7","delegates","v1","v2","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","USDC","SLP","showAPR","showPrice","137","COMP","LDO","stkAAVE","aToken","WMATIC","ProtocolDataProvider","ChildChainManager","UniswapRouter","UniswapV2Router02","SushiswapRouter","SushiV2Router02","RootChainManager","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","BalancerExchangeProxy","GaugeController","GaugeDistributor","GaugeDistributorProxy","zeroExInstant","orderSource","affiliateInfo","feeRecipient","tranchflash","rgb","bubble","extraicons","best","iconDark","iconInactive","iconInactiveDark","gauges","risk","tools","forum","leaderboard","overview","delegate","landingStrategies","enabledEnvs","comingSoon","titlePostfix","govTokensEnabled","chartColor","descShort","descLong","substack","timeout","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","ETH","STETH","CVX","MTA","CRV","MUSD","ANGLE","STECRV","SPELL","MATIC","USD","USDT","TUSD","SUSD","WBTC","WETH","STKAAVE","RAI","disabledCharts","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","mstable","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","42","3","4","5","1337","80001","isForked","requiredConfirmations","enabledNetworks","accountBalanceMinimum","infura","REACT_APP_INFURA_KEY","networkPairs","nexus","covalent","REACT_APP_COVALENT_KEY","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","subgraph","urls","queries","proposalsActive","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","subComponent","stkIDLE","MultiRewards","LiquidityGauge","multiRewards","mUSD","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","stakePolygon","nexusMutual","IdleTokenV4","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","polygonBridge","StateSender","ChildERC20","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","wyre","captionPos","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","payload","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","anonymous","indexed","govTokensDisabled","defiPrime","crToken","cToken","yToken","iToken","CHAI","skipMintForDeposit","fToken","defiScoreDisabled","disabledMessageRedeemKey","disabledMessageDepositKey","Tos","h1","h2","listStyle","theme_dark","exit","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","isSupportedNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","RimbleTransactionContext","createContext","permitClient","web3Providers","accountBalance","initWeb3","maticPlasmaClient","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","handleNetworkChanged","_args2","reload","networkInitialized","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","customAddressChanged","contextAccountChanged","accountDisconnected","gnosisSafeLoaded","setNetwork","initMaticPosClient","polygonConfig","web3PolygonRpc","web3InfuraRpc","maticProvider","parentProvider","maticPOSClientConfig","use","Web3ClientPlugin","POSClient","parent","defaultConfig","child","useWeb3Provider","connectorNameChanged","web3Host","web3Provider","forceCallback","web3Callback","originalWeb3","initWeb3Index","biconomyWeb3Provider","_args7","netId","providerRpc","library","IFrameEthereumProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","_args8","initContractWithoutSet","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","contractsToInitialize","gaugesAvailableNetworks","newContracts","contractFound","contractIndex","_ref20","balanceOf","determineAccountLowBalance","openConnectionModal","_args21","getNetworkType","getNetworkId","currentNetworkChanged","_args23","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args24","confirmationCount","confidenceThreshold","recentEvent","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","logoSrc","logoHeight","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","_args","cachedKeyFound","storedKeyFound","update_stored_key","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","forceChangeChain","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCurrentEnvironment","loadCustomAddress","clearAllCache","checkClientVersion","tokenChanged","strategyChanged","networkChanged","hasMetamask","store","themeDark","_this10","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","recreateOnNetworkChange","recreateOnAccountChange","RimbleWeb3","needsPreflight","initContractCustomProvider","react_router","react","fallback","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","prevPage","nextPage","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","subtitleProps","BackButton","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","totalAUMEndOfYear","loadTotalAUM","aggregatedStatsMethodParams","_this$props","_this$functionsUtil","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","react_countup__WEBPACK_IMPORTED_MODULE_9___default","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_10__","VariationNumber","IconDirection","iconPos","loading-dots","loading-dots--dot","dot-keyframes","fieldName","seniorTrancheName","juniorTrancheName","aprChartData","apiResults_aa","apiResults_bb","totalItems_aa","totalItems_bb","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","aprChartRowElement","$aprChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","lineWidth","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_18__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_19__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","trancheChanged","protocolChanged","fieldChanged","experimentalBadge","limitCap","badgeText","badgeColor","statusBadge","buttonLabel","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_14__","feesCounter","react_countup__WEBPACK_IMPORTED_MODULE_11___default","tooltipMessage","_TooltipText_TooltipText__WEBPACK_IMPORTED_MODULE_15__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_17__","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_13__","formattedValue","_isBigNumber","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","CustomTooltip","xFormatted","CustomTooltipRow","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","rowsPerPage","processedRows","processRows","totalRows","rowIndex","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_8__","CustomField","HeadingComponent","TwitterShareButton","share","escape","customText","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","componentHasChildren","fieldPath","customFieldName","customFieldProps","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_8__","earningsCurveStart","earningsCurveEnd","tokenAPY2","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","apiResultsAprChart","totalItems","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","random","defs","linearGradientDef","offset","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","tooltipMode","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__"],"mappings":"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","file":"static/js/main.fb1979c6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign(\n      {\n        py: 1,\n        width: \"auto\",\n        px: [\"12px\", 3]\n      },\n      this.props.cardProps\n    );\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isInteractive={true}\n        isActive={this.props.isActive}\n        isDisabled={this.props.isDisabled}\n        handleClick={this.props.handleClick}\n        backgroundColor={\"blue\"}\n      >\n        <Flex\n          mx={this.props.margin ? this.props.margin : 0}\n          my={1}\n          alignItems={\"center\"}\n          flexDirection={\"row\"}\n          justifyContent={this.props.align ? this.props.align : \"center\"}\n        >\n          {this.props.image ? this.props.iconBgColor ? (\n              <Flex\n                mr={this.props.isSidebar ? 0 : 2}\n                p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n                borderRadius={\"50%\"}\n                alignItems={\"center\"}\n                justifyContent={\"center\"}\n                backgroundColor={\n                  this.props.iconBgColor\n                    ? this.props.iconBgColor\n                    : this.props.theme.colors.transactions.actionBg.redeem\n                }\n              >\n                <Image\n                  align={\"center\"}\n                  src={this.props.image}\n                  height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                  width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                  {...this.props.imageProps}\n                />\n              </Flex>\n            ) : (\n            <Image\n              align={\"center\"}\n              src={this.props.image}\n              height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              {...this.props.imageProps}\n            />\n          ) : this.props.useIconOnly ? (\n            <Icon\n              align={\"center\"}\n              name={this.props.icon}\n              size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n              {...this.props.iconProps}\n            />\n          ) : (\n            <Flex\n              mr={this.props.isSidebar ? 0 : 2}\n              p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n              borderRadius={\"50%\"}\n              alignItems={\"center\"}\n              justifyContent={\"center\"}\n              backgroundColor={\n                this.props.iconBgColor\n                  ? this.props.iconBgColor\n                  : this.props.theme.colors.transactions.actionBg.redeem\n              }\n            >\n              <Icon\n                align={\"center\"}\n                name={this.props.icon}\n                size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n                {...this.props.iconProps}\n              />\n            </Flex>\n          )}\n          <Text fontWeight={3} fontSize={[1, 3]} {...this.props.textProps}>\n            {this.props.text}\n          </Text>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = this.props.unit && formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trancheFlash\":\"TrancheWelcome_trancheFlash__2aaz5\",\"mobile\":\"TrancheWelcome_mobile__fIBQP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const hashChanged = prevProps.hash !== this.props.hash;\n    if (hashChanged){\n      this.loadData();\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    if (ensName){\n      text = ensName;\n    }\n    this.setStateSafe({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from \"react\";\nimport { Flex, Button } from \"rimble-ui\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner.js\";\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n      <Button onClick={this.props.handleClick} {...this.props.buttonProps}>\n        <Flex\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n        >\n          <Flex width={1} display={this.props.isLoading ? \"flex\" : \"none\"}>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={this.props.isLoading ? \"none\" : \"flex\"}>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n      </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || !tx.action || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          // console.log(selectedToken,this.functionsUtil.strToMoment(tx.timeStamp*1000).format(\"DD-MM-YYYY HH:mm:ss\"),tx.action,tokenAmount.toFixed(5),amountLent.toFixed(5),idleTokens.toFixed(5));\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      const tokenAddress = this.functionsUtil.getAvailableTokenAddress(token,this.props.selectedStrategy);\n      tokensData[token] = await this.functionsUtil.getTokenApiData(tokenAddress,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0){\n              if (timeStamp>firstTxTimestamp && lastTokenData){\n                const idleTokens = idleTokenBalance[token];\n                const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n                let newBalance = idleTokens.times(idlePrice);\n\n                // Set new balance and tokenPrice\n                lastFilteredTx.balance = newBalance;\n                lastFilteredTx.tokenPrice = idlePrice;\n                filteredBalances = [lastFilteredTx];\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tokenPrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        } else {\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    // debugger;\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    let axisBottomIndex = 0;\n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        tickValues:'every day',\n        legendPosition: 'middle',\n        format: (value) => {\n          if (axisBottomIndex++ % daysFrequency === 0){\n            return this.functionsUtil.strToMoment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n          }\n        },\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged) {\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents() {\n\n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p: 2,\n          width: 1,\n          style: { cursor: 'pointer' }\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen) {\n        cardProps.boxShadow = this.props.noShadow ? 0 : 4;\n      }\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n          isInteractive={this.props.notInteractive ? false : true}\n        >\n          <Flex\n            width={1}\n            height={'100%'}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps, {\n        mt: 2,\n        zIndex: 1,\n        boxShadow: null,\n        position: 'absolute',\n        backgroundColor: this.props.outerColor ? this.props.outerColor : \"cardBg\"\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable) {\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput, this.props.themeMode === 'dark' ? styles.dark : null, !props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map(o => o.value).indexOf(selectedValue) === -1 && this.props.defaultValue) {\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value) {\n        return null;\n      }\n\n      // console.log('CustomOption',this.props.customOptionProps);\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{ cursor: 'pointer' }}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={this.props.isDashboard ? 'cardBg' : (props.isFocused ? 'selectBgFocused' : 'selectBg')}\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={v => this.props.onChange(v.value)}\n        components={{\n          Menu: this.state.CustomMenu,\n          Option: this.state.CustomOption,\n          Control: this.state.ControlComponent,\n          Input: this.state.CustomInputContainer,\n          SingleValue: this.state.CustomValueContainer,\n          IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      // console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    // console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,params);\n\n    if (!params || !this.props.contractName){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          !this.props.account ? (\n           <ConnectBox\n             {...this.props}\n           />\n         ) : this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    if (currentNetwork.provider === 'polygon'){\n      return 30;\n    } else {\n      let prediction = null;\n      if (this.state.predictTable){\n        this.state.predictTable.forEach((p,i) => {\n          if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n            prediction = p;\n            return true;\n          }\n        });\n      }\n\n      if (this.state.blockTime && prediction){\n        const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n        const blocksWait = pdValues[0];\n        const blockInterval = this.state.blockTime.block_time;\n        let txMeanSecs = blocksWait * blockInterval;\n        txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n        this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n        return txMeanSecs; // Customized\n      }\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in {this.functionsUtil.capitalize(currentNetwork.explorer)}\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from \"polished\";\n\n// theme.js\nexport default {\n  breakpoints: [\"52em\", \"64em\"],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.4\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: [\"0\", \"4px\", \"8px\", \"16px\", \"2rem\"],\n  widths: [0, 16, 32, 64, 128, 256, 550],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, \"1px solid #eee\", \"1px solid #b6c2ff\"],\n  borderWidths: [\"0\", \"1px\", \"2px\", \"4px\"],\n  shadows: [\n    \"0\",\n    \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n    \"0 7px 14px rgba(50,50,93,.1)\",\n    \"1px 1px 0px rgba(0,0,0,0.2)\",\n    \"0px 0px 16px 2px rgba(0,54,255,0.3)\"\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: blue.base,\n    \"gradient-bg\": \"linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)\",\n    \"primary-light\": blue.light[1],\n    \"primary-dark\": blue.dark[1],\n    bgBlue: \"#0030e0\",\n    blue: \"#0036ff\",\n    tick: \"#00b84a\",\n    \"dark-blue\": \"#00219a\",\n    skyBlue: \"#00abfe\",\n    lightBlue: \"#79f4e1\",\n    copyColor: \"#3F3D4B\",\n    subColor: \"#a7a7a7\",\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#000000\",\n    border: \"#EAEAEA\",\n    connect: \"#0042F5\",\n    newblue: \"#2B65D9\",\n    alert: \"#ff9900\",\n    arrowActive: \"#4f4f4f\",\n    arrowInactive: \"#d8d8d8\",\n    selectBgFocused: \"#fbfbfb\",\n    selectBg: \"#ffffff\",\n    backButtonBg: \"#ffffff\",\n    lineChartStroke: \"#dbdbdb\",\n    wrongNetworkBannerBg: \"#ffffff\",\n    dashboardBg: \"#f9fafd\",\n    statValue: \"#959595\",\n    boxBorder: \"#eeeeee\",\n    cellTitle: \"#a3a4a5\",\n    cellText: \"#8e8d8d\",\n    divider: \"#d8d8d8\",\n    divider2: \"#EBEBEB\",\n    counter: \"#5d5d5d\",\n    redeem: \"#00a9fe\",\n    link: \"#0036ff\",\n    deposit: \"#0239ff\",\n    migrate: \"#00a9fe\",\n    legend: \"#c9c9c9\",\n    menuBg: \"#fff\",\n    menuHover: \"#f3f6ff\",\n    cardBg: \"#fff\",\n    flashColor: \"#3f4e9a\",\n    menuRightBorder: \"#eee\",\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#fafafa\",\n    cardHoverShadow: \"0px 0px 0px 1px rgba(0, 54, 255, 0.3)\",\n    cardBgHover: \"#f7f8ff\",\n    cardBorder: \"#eee\",\n    pageActive: \"#4f4f4f\",\n    pageInactive: \"#d8d8d8\",\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    transactions: {\n      action: {\n        send: \"#10a0dd\",\n        swap: \"#3d53c0\",\n        boost: \"#ffff00\",\n        redeem: \"#10a0dd\",\n        swapout: \"#10a0dd\",\n        deposit: \"#3d53c0\",\n        curvein: \"#10a0dd\",\n        receive: \"#3d53c0\",\n        migrate: \"#3d53c0\",\n        default: \"#4f4f4f\",\n        curveout: \"#3d53c0\",\n        withdraw: \"#10a0dd\",\n        curvedepositin: \"#10a0dd\",\n        curvedepositout: \"#3d53c0\"\n      },\n      actionBg: {\n        send: \"#ceeff6\",\n        swap: \"#ced6ff\",\n        boost: \"#ff7979\",\n        redeem: \"#ceeff6\",\n        swapout: \"#ceeff6\",\n        deposit: \"#ced6ff\",\n        curvein: \"#ceeff6\",\n        default: \"#dadada\",\n        receive: \"#ced6ff\",\n        migrate: \"#ced6ff\",\n        withdraw: \"#ceeff6\",\n        curveout: \"#ced6ff\",\n        curvedepositin: \"#ceeff6\",\n        curvedepositout: \"#ced6ff\"\n      },\n      status: {\n        completed: \"#00b84a\",\n        pending: \"#a5a5a5\",\n        failed: \"#fa0000\"\n      }\n    },\n    blacks: [\n      \"rgba(0,0,0,.0125)\",\n      \"rgba(0,0,0,.025)\",\n      \"rgba(0,0,0,.05)\",\n      \"rgba(0,0,0,.1)\",\n      \"rgba(0,0,0,.2)\",\n      \"rgba(0,0,0,.3)\",\n      \"rgba(0,0,0,.4)\",\n      \"rgba(0,0,0,.5)\",\n      \"rgba(0,0,0,.6)\",\n      \"rgba(0,0,0,.7)\",\n      \"rgba(0,0,0,.8)\",\n      \"rgba(0,0,0,.9)\"\n    ],\n    whites: [\n      \"rgba(255,255,255,.0125)\",\n      \"rgba(255,255,255,.025)\",\n      \"rgba(255,255,255,.05)\",\n      \"rgba(255,255,255,.1)\",\n      \"rgba(255,255,255,.2)\",\n      \"rgba(255,255,255,.3)\",\n      \"rgba(255,255,255,.4)\",\n      \"rgba(255,255,255,.5)\",\n      \"rgba(255,255,255,.6)\",\n      \"rgba(255,255,255,.7)\",\n      \"rgba(255,255,255,.8)\",\n      \"rgba(255,255,255,.9)\"\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, \"#AAA\"),\n      backgroundColor: tint(0.9, \"#AAA\"),\n      borderColor: \"#AAA\"\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: \"#f3f6ff\",\n      borderColor: \"#b6c2ff\"\n    }\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      \"--main-color\": blue.base,\n      \"--contrast-color\": blue.text\n    },\n    normal: {\n      color: baseColors.black,\n      \"--contrast-color\": baseColors.black\n    },\n    success: {\n      \"--main-color\": green.base,\n      \"--contrast-color\": green.text\n    },\n    danger: {\n      \"--main-color\": red.base,\n      \"--contrast-color\": red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: \"0.75rem\",\n      height: \"2rem\",\n      minWidth: \"2rem\",\n      padding: \"0 1rem\"\n    },\n    medium: {\n      fontSize: \"1rem\",\n      height: \"3rem\",\n      minWidth: \"3rem\"\n    },\n    large: {\n      fontSize: \"1.5rem\",\n      height: \"4rem\",\n      minWidth: \"4rem\",\n      borderRadius: \"2rem\"\n    }\n  }\n};\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import React, { Component } from 'react';\nimport { Flex, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass TooltipText extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n        {...this.props.flexProps}\n      >\n        <Text\n          fontWeight={3}\n          fontSize={[1,2]}\n          color={'cellText'}\n          {...this.props.textProps}\n        >\n          {this.props.text}\n        </Text>\n        <Tooltip\n          placement={'top'}\n          message={this.props.message}\n          {...this.props.tooltipProps}\n        >\n          <Icon\n            ml={1}\n            style={{\n              cursor:'pointer'\n            }}\n            name={\"Info\"}\n            color={'cellTitle'}\n            size={ this.props.isMobile ? '0.8em' : '1em'}\n            {...this.props.iconProps}\n          />\n        </Tooltip>\n      </Flex>\n    );\n  }\n}\n\nexport default TooltipText;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let tokenSymbol = null;\n    let tokenConfig = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(transaction.hash)}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n      tokenSymbol = transaction.tokenSymbol.toUpperCase();\n      tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        output = (\n          <Text {...fieldProps}>{tokenConfig && tokenConfig.label ? tokenConfig.label : tokenSymbol}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      const disabledTokens = this.functionsUtil.getArrayPath(['disabledTokens',currentNetworkId],this.tokenConfig);\n\n      if (disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import Web3 from \"web3\";\nimport React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\nimport availableTokens from '../configs/availableTokens';\nimport IAaveIncentivesController from '../abis/aave/IAaveIncentivesController.json';\n\nconst ethereumjsABI = require('ethereumjs-abi');\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props) {\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber(typeof s === 'object' ? s : String(s))\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'), ...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'), ...props); }\n  getContractByName = (contractName, networkId = null) => {\n    networkId = networkId || this.props.network.required.id;\n    let contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    if (this.props.network && this.props.network.required && this.props.network.current && (!this.props.network.isCorrectNetwork || networkId !== this.props.network.current.id) && this.props.contractsNetworks && this.props.contractsNetworks[networkId]) {\n      contract = this.props.contractsNetworks[networkId].find(c => c && c.name && c.name === contractName);\n    } else {\n      contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    }\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g, \"\\n\")\n      .replace(/<p>/g, \"\")\n      .replace(/<br>/g, \"\")\n      .replace(/&nbsp;/g, \" \")\n      .replace(/<\\/p>/g, \"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0, 1).toUpperCase() + str.substr(1) : '';\n  }\n  strToMoment = (date, format = null) => {\n    return moment(date, format);\n  }\n  replaceArrayProps = (arr1, arr2) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1, arr2, props = null) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p] === 'function') {\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p] === 'object') {\n          arr1[p] = { ...arr1[p], ...this.replaceArrayPropsRecursive(arr1, arr2[p], props) };\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n    var tmp = document.createElement(\"DIV\");\n    tmp.innerHTML = html;\n    return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d / 2;\n      if (t < 1) return c / 2 * t * t + b;\n      t--;\n      return -c / 2 * (t * (t - 2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n      currentTime += increment;\n      var val = Math.easeInOutQuad(currentTime, start, change, duration);\n      window.scrollTo(0, val);\n      if (currentTime < duration) {\n        window.setTimeout(animateScroll, increment);\n      }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx, tokenConfig) => {\n\n    if (!tokenConfig.idle) {\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx) {\n      action = 'Deposit';\n    } else if (isRedeemTx) {\n      action = 'Redeem';\n    } else if (isMigrationTx) {\n      action = 'Migrate';\n    } else if (isSendTransferTx) {\n      action = 'Send';\n    } else if (isReceiveTransferTx) {\n      action = 'Receive';\n    } else if (isSwapTx) {\n      action = 'Swap';\n    } else if (isSwapTx) {\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = (hash, startLen = 7, endLen = 4) => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, startLen);\n    const txEnd = shortHash.substr(shortHash.length - endLen);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n\n  switchEthereumChain = (chainId) => {\n    const web3 = this.getInjectedWeb3();\n\n    // console.log('switchEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    const params = [{\n      chainId: web3.utils.toHex(chainId)\n    }];\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_switchEthereumChain',\n    });\n  }\n\n  addEthereumChain = (chainId) => {\n    const web3 = this.getInjectedWeb3();\n\n    // console.log('addEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    if (chainId === 1) {\n      return this.switchEthereumChain(chainId);\n    }\n\n    const chainName = networkConfig.chainName || networkConfig.name;\n    const providerConfig = this.getGlobalConfig(['network', 'providers', networkConfig.provider]);\n    const blockExplorerUrl = this.getGlobalConfig(['network', 'providers', networkConfig.explorer, 'baseUrl', chainId]);\n    const rpcUrl = (providerConfig.publicRpc && providerConfig.publicRpc[chainId]) || (providerConfig.rpc[chainId] + providerConfig.key);\n    const params = [{\n      chainName,\n      rpcUrls: [rpcUrl],\n      chainId: web3.utils.toHex(chainId),\n      nativeCurrency: {\n        decimals: 18,\n        name: networkConfig.baseToken,\n        symbol: networkConfig.baseToken\n      },\n      blockExplorerUrls: [blockExplorerUrl]\n    }];\n\n    // console.log('addEthereumChain',params);\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_addEthereumChain',\n    });\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.getRequiredNetworkId();\n    const ensConfig = this.getGlobalConfig(['network', 'providers', 'ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)) {\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3) {\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1) {\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name) {\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, ensName.name, TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches = null, account = null) => {\n    const portfolio = {\n      transactions: [],\n      stakingRewards: {},\n      tranchesBalance: [],\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches) {\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches), async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(Object.keys(tranches), async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n\n          let [\n            trancheTokenBalance,\n            trancheUserInfo,\n            stakingRewards,\n            trancheStakedBalance,\n          ] = await Promise.all([\n            this.getContractBalance(trancheConfig.name,account),\n            this.getTrancheUserInfo(tokenConfig, trancheConfig, account),\n            this.getTrancheStakingRewards(account,trancheConfig,trancheConfig.functions.rewards),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,null,trancheConfig.functions.stakedBalance),\n          ]);\n\n          if (trancheUserInfo && trancheUserInfo.transactions){\n            portfolio.transactions = [...portfolio.transactions, ...trancheUserInfo.transactions];\n          }\n\n          // Get staking rewards amounts\n          Object.keys(stakingRewards).forEach( rewardToken => {\n            if (!portfolio.stakingRewards[rewardToken]){\n              portfolio.stakingRewards[rewardToken] = {\n                tokenAmount:this.BNify(0),\n                conversionRate:this.BNify(0),\n                tokenAmountConverted:this.BNify(0)\n              }\n            }\n            const tokenAmount = !this.BNify(stakingRewards[rewardToken]).isNaN() ? this.BNify(stakingRewards[rewardToken]) : this.BNify(0);\n            portfolio.stakingRewards[rewardToken].tokenAmount = portfolio.stakingRewards[rewardToken].tokenAmount.plus(tokenAmount);\n          });\n\n          if ((trancheTokenBalance && this.BNify(trancheTokenBalance).gt(0)) || (trancheStakedBalance && this.BNify(trancheStakedBalance).gt(0))) {\n            trancheTokenBalance = this.fixTokenDecimals(trancheTokenBalance,trancheConfig.decimals);\n            trancheStakedBalance = this.fixTokenDecimals(trancheStakedBalance,trancheConfig.decimals);\n            trancheTokenBalance = trancheTokenBalance.plus(trancheStakedBalance);\n\n            // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5));\n\n            if (this.BNify(trancheTokenBalance).gt(0)) {\n              const [\n                tranchePrice,\n                tranchePool\n              ] = await Promise.all([\n                this.loadTrancheFieldRaw('tranchePrice', {}, protocol, token, tranche, tokenConfig, trancheConfig, account),\n                this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n              ]);\n\n              if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tranchePool).isNaN()) {\n                const tokenBalance = trancheTokenBalance.times(tranchePrice);\n                const [\n                  tokenBalanceConverted,\n                  trancheEarnings,\n                  trancheApy\n                ] = await Promise.all([\n                  this.convertTrancheTokenBalance(tokenBalance,tokenConfig),\n                  this.convertTrancheTokenBalance(tokenBalance.minus(trancheUserInfo.amountDeposited),tokenConfig),\n                  this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n                ])\n\n                const poolShare = tokenBalanceConverted.div(tranchePool);\n                const amountDeposited = trancheUserInfo.amountDepositedConverted;\n\n                // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5),'trancheStakedBalance',trancheStakedBalance.toFixed(5),'tranchePrice',tranchePrice.toFixed(5),'tokenBalance',tokenBalance.toFixed(5),'amountDeposited',trancheUserInfo.amountDeposited.toFixed(5),'tokenBalanceConverted',tokenBalanceConverted.toFixed(5),'amountDepositedConverted',amountDeposited.toFixed(5),'trancheEarnings',trancheEarnings.toFixed(5));\n\n                portfolio.tranchesBalance.push({\n                  token,\n                  tranche,\n                  protocol,\n                  poolShare,\n                  trancheApy,\n                  tranchePrice,\n                  trancheEarnings,\n                  amountDeposited,\n                  trancheTokenBalance,\n                  trancheStakedBalance,\n                  tokenBalance:tokenBalanceConverted\n                });\n\n                // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n                // Increment total balance\n                portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalanceConverted);\n              }\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalBalance = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach(trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings) {\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy) {\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited) {\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n        // console.log(trancheInfo.protocol,trancheInfo.token,trancheInfo.tranche,trancheInfo.amountDeposited.toFixed(5),totalAmountLent.toFixed(5));\n      }\n\n      if (trancheInfo.tokenBalance){\n        totalBalance = totalBalance.plus(trancheInfo.tokenBalance);\n      }\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    // Get staking rewards conversion rates\n    await this.asyncForEach(Object.keys(portfolio.stakingRewards), async (rewardToken) => {\n      const rewardTokenConfig = this.getGlobalConfig(['govTokens',rewardToken]);\n      if (rewardTokenConfig.showBalance && portfolio.stakingRewards[rewardToken].tokenAmount.gt(0)){\n        const rewardTokenConversionRate = await this.getTokenConversionRateUniswap(rewardTokenConfig);\n        portfolio.stakingRewards[rewardToken].conversionRate = rewardTokenConversionRate;\n        portfolio.stakingRewards[rewardToken].tokenAmountConverted = portfolio.stakingRewards[rewardToken].tokenAmount.times(rewardTokenConversionRate);\n\n        // console.log(rewardToken,portfolio.stakingRewards[rewardToken].tokenAmountConverted.toFixed(5));\n\n        totalBalance = totalBalance.plus(portfolio.stakingRewards[rewardToken].tokenAmountConverted);\n      }\n    });\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalBalance = totalBalance;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // console.log('portfolio',portfolio);\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens = null, account = null) => {\n    const portfolio = {\n      tokensBalance: {},\n      tokensToMigrate: {},\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n      totalBalanceConverted: this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens) {\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        },\n        idleTokenBalance\n      ] = await Promise.all([\n        this.checkMigration(tokenConfig, this.props.account),\n        this.getTokenBalance(tokenConfig.idle.token, account)\n      ]);\n\n      if (migrationEnabled) {\n        const tokenKey = this.props.selectedStrategy ? token : tokenConfig.idle.token;\n        portfolio.tokensToMigrate[tokenKey] = {\n          token,\n          tokenConfig,\n          oldContractBalanceFormatted,\n          strategy: this.props.selectedStrategy\n        };\n      }\n\n      if (idleTokenBalance) {\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance, token, tokenConfig, isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()) {\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach(token => {\n      if (portfolio.tokensBalance[token]) {\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => (this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0)));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens, async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        tokenAprs,\n        amountDeposited\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig),\n        this.getAmountDeposited(tokenConfig, account)\n      ]);\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited, token, tokenConfig, isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings) {\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY) {\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken) {\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n    portfolio.totalBalance = totalAmountLent.plus(totalEarnings);\n\n    // debugger;\n\n    return portfolio;\n  }\n  getInjectedWeb3 = () => {\n    let currentWeb3 = null;\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    }\n\n    return currentWeb3;\n  }\n  getCurrentWeb3 = () => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork.id]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.getGlobalConfig(['network', 'providers', provider, 'key']);\n    const web3Rpc = this.getGlobalConfig(['network', 'providers', provider, 'rpc', requiredNetwork.id]) + web3RpcKey;\n\n    let currentWeb3 = this.props.web3;\n    \n    if (!currentWeb3){\n      if (window.ethereum) {\n        currentWeb3 = new Web3(window.ethereum);\n      } else if (window.web3) {\n        currentWeb3 = new Web3(window.web3);\n      } else {\n        currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Rpc));\n      }\n    }\n\n    return currentWeb3;\n  }\n  getCurveAvgSlippage = async (enabledTokens = [], account = null, fixDecimals = true) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]) {\n              processedTxs[tx.hash] = {\n                price: null,\n                received: null,\n                slippage: null,\n                deposited: this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null) {\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]) {\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)) {\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach(tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens = [], account = null) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        if (!processedTxs[tx.hash]) {\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)) {\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)) {\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    enabledTokens.forEach(selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance = this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice) {\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action) {\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n              break;\n            default:\n              break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)) {\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx) {\n                firstDepositTx = tx;\n              }\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section, env = null) => {\n    const envUrl = this.getGlobalConfig(['environments', env, 'url']);\n    const baseUrl = env && envUrl ? envUrl : window.location.origin;\n    return `${baseUrl}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens = [], account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens, account);\n    if (firstDepositTxs) {\n      return Object.keys(firstDepositTxs).reduce((acc, token) => {\n        if (firstDepositTxs[token]) {\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      }, {});\n    }\n    return null;\n  }\n\n  getTrancheStakingRewardsDistributions = async (tokenConfig,trancheConfig) => {\n    const stakingDistributions = {};\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from: tokenConfig.CDO.address,\n        to: trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer',tokenConfig.blockNumber,'latest', {filter: eventFilters });\n\n      if (transfers && transfers.length>0){\n        stakingDistributions[token] = transfers;\n      }\n    });\n\n    return stakingDistributions;\n  }\n  getTrancheHarvests = async (tokenConfig,trancheConfig) => {\n    const [\n      stakingRewardsDistributions,\n      autoFarming\n    ] = await Promise.all([\n      this.getTrancheStakingRewardsDistributions(tokenConfig,trancheConfig),\n      this.loadTrancheFieldRaw('autoFarming',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig)\n    ])\n\n    const harvestsList = stakingRewardsDistributions || {};\n    \n    await this.asyncForEach(Object.keys(autoFarming),async (token) => {\n      const eventFilters = {\n        to: tokenConfig.CDO.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer',tokenConfig.blockNumber,'latest', {filter: eventFilters });\n\n      if (transfers && transfers.length > 0) {\n        harvestsList[token] = transfers;\n      }\n    });\n\n    return harvestsList;\n  }\n  getTrancheLastHarvest = async (tokenConfig) => {\n    const strategyConfig = tokenConfig.Strategy;\n    \n    // Create Tranche Strategy contract\n    const idleStrategyAddress = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'strategy', 3600);\n    if (idleStrategyAddress) {\n      await this.props.initContract(strategyConfig.name, idleStrategyAddress, strategyConfig.abi);\n      const latestHarvestBlock = await this.genericContractCall(strategyConfig.name,'latestHarvestBlock');\n      if (latestHarvestBlock){\n        const eventFilters = {\n          to: idleStrategyAddress\n        };\n        const [\n          blockInfo,\n          transfers,\n        ] = await Promise.all([\n          this.getBlockInfo(latestHarvestBlock),\n          this.getContractEvents(tokenConfig.token, 'Transfer', latestHarvestBlock, parseInt(latestHarvestBlock)+1, {filter: eventFilters })\n        ]);\n\n        if (transfers && transfers.length) {\n          const totalAmount = transfers.reduce( (amount,t) => {\n            amount = amount.plus(this.BNify(t.returnValues.value));\n            return amount;\n          },this.BNify(0));\n\n          return {\n            amount:totalAmount,\n            timestamp:blockInfo.timestamp,\n            blockNumber:latestHarvestBlock,\n            transactionHash:transfers[0].transactionHash\n          };\n        }\n      }\n    }\n\n    return null;\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig, trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards), async (token) => {\n\n      let firstHarvest = null;\n      let prevBlockInfo = null;\n      let lastBlockInfo = null;\n      let latestHarvest = null;\n      let tokenApr = this.BNify(0);\n      let tokenApy = this.BNify(0);\n      let distributionEnded = null;\n      let lastAmount = this.BNify(0);\n      let totalAmount = this.BNify(0);\n      let tokensPerDay = this.BNify(0);\n      let distributionSpeedUnit = null;\n      let tokensPerYear = this.BNify(0);\n      let conversionRate = this.BNify(0);\n      let tokensPerBlock = this.BNify(0);\n      let tranchePoolSize = this.BNify(0);\n      let tokensPerSecond = this.BNify(0);\n      let lastBlockPoolSize = this.BNify(0);\n      let distributionSpeed = this.BNify(0);\n      let convertedTokensPerYear = this.BNify(0);\n\n      const govTokenConfig = this.getGlobalConfig(['stats', 'tokens', token]);\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      const rewardsRateMethod = trancheConfig.functions.rewardsRate;\n      const periodFinishMethod = trancheConfig.functions.periodFinish;\n\n      if (periodFinishMethod){\n        const periodFinish = await this.genericContractCall(trancheConfig.CDORewards.name,periodFinishMethod);\n        if (periodFinish){\n          distributionEnded = parseInt(periodFinish)<=parseInt(Date.now()/1000);\n        }\n      }\n\n      if (rewardsRateMethod){\n\n        if (!distributionEnded){\n          [\n            conversionRate,\n            tokensPerSecond,\n            totalAmount,\n            tranchePoolSize\n          ] = await Promise.all([\n            this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n            this.genericContractCallCached(trancheConfig.CDORewards.name,rewardsRateMethod),\n            this.genericContractCallCached(token,'balanceOf',[trancheConfig.CDORewards.address]),\n            this.loadTrancheFieldRaw('tranchePool', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig)\n          ]);\n\n          tranchePoolSize = await this.convertTrancheTokenBalance(tranchePoolSize,tokenConfig);\n          tokensPerSecond = this.fixTokenDecimals(tokensPerSecond,trancheConfig.CDORewards.decimals);\n          tokensPerDay = this.BNify(tokensPerSecond).times(86400);\n          tokensPerYear = this.BNify(tokensPerSecond).times(this.getGlobalConfig(['network', 'secondsPerYear']));\n          tokensPerBlock = tokensPerYear.div(this.getGlobalConfig(['network', 'blocksPerYear']));\n          convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          tokenApr = convertedTokensPerYear.div(tranchePoolSize);\n          tokenApy = this.apr2apy(tokenApr).times(100);\n          distributionSpeed = tokensPerDay;\n        }\n\n        distributionSpeedUnit = '/day';\n\n        tokensDistribution[token] = {\n          lastAmount,\n          totalAmount,\n          tokensPerDay,\n          firstHarvest,\n          apr: tokenApr,\n          apy: tokenApy,\n          tokensPerYear,\n          latestHarvest,\n          tokensPerBlock,\n          tokensPerSecond,\n          distributionSpeed,\n          distributionSpeedUnit,\n          convertedTokensPerYear\n        };\n\n      } else {\n        const eventFilters = {\n          from: tokenConfig.CDO.address,\n          to: trancheConfig.CDORewards.address\n        }\n\n        const transfers = await this.getContractEvents(token, 'Transfer', tokenConfig.blockNumber, 'latest', { filter: eventFilters });\n\n        if (transfers && transfers.length > 0) {\n          const firstHarvest = transfers.length ? transfers[0] : null;\n          const latestHarvest = transfers[transfers.length - 1];\n          const firstBlock = firstHarvest ? firstHarvest.blockNumber : tokenConfig.blockNumber;\n          [\n            prevBlockInfo,\n            lastBlockInfo,\n            conversionRate,\n            lastBlockPoolSize\n          ] = await Promise.all([\n            this.getBlockInfo(firstBlock),\n            this.getBlockInfo(latestHarvest.blockNumber),\n            this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n            this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue', [], {}, latestHarvest.blockNumber)\n          ]);\n\n          if (prevBlockInfo && lastBlockInfo) {\n            let poolSize = this.fixTokenDecimals(lastBlockPoolSize, tokenConfig.CDO.decimals);\n            const elapsedBlocks = latestHarvest.blockNumber - firstBlock;\n            const elapsedSeconds = lastBlockInfo.timestamp - prevBlockInfo.timestamp;\n\n            lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value, govTokenConfig.decimals);\n            totalAmount = transfers.reduce((total, t) => {\n              total = total.plus(this.fixTokenDecimals(t.returnValues.value, govTokenConfig.decimals));\n              return total;\n            }, this.BNify(0));\n\n            poolSize = await this.convertTrancheTokenBalance(poolSize,tokenConfig);\n\n            tokensPerBlock = totalAmount.div(elapsedBlocks);\n            tokensPerSecond = totalAmount.div(elapsedSeconds);\n            tokensPerDay = tokensPerSecond.times(86400);\n            tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network', 'secondsPerYear']));\n            convertedTokensPerYear = tokensPerYear.times(conversionRate);\n            tokenApr = convertedTokensPerYear.div(poolSize);\n            tokenApy = this.apr2apy(tokenApr).times(100);\n\n            distributionSpeed = lastAmount;\n            distributionSpeedUnit = ' (last harvest)';\n\n            tokensDistribution[token] = {\n              lastAmount,\n              totalAmount,\n              tokensPerDay,\n              firstHarvest,\n              apr: tokenApr,\n              apy: tokenApy,\n              tokensPerYear,\n              latestHarvest,\n              tokensPerBlock,\n              tokensPerSecond,\n              distributionSpeed,\n              distributionSpeedUnit,\n              convertedTokensPerYear\n            };\n          }\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig, trancheConfig, account) => {\n    account = account || this.props.account;\n    // const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    // const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // if (cachedData && !this.BNify(cachedData).isNaN()) {\n    //   return this.BNify(cachedData);\n    // }\n\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters_deposits = {};\n    underlyingEventsFilters_deposits[underlyingEventsConfig.to] = [tokenConfig.CDO.address];\n    underlyingEventsFilters_deposits[underlyingEventsConfig.from] = [this.props.account];\n\n    const underlyingEventsFilters_redeems = {};\n    underlyingEventsFilters_redeems[underlyingEventsConfig.to] = [this.props.account];\n    underlyingEventsFilters_redeems[underlyingEventsConfig.from] = [tokenConfig.CDO.address];\n\n    // console.log('getTrancheUserInfo_1',trancheConfig.name,trancheConfig.blockNumber,'underlyingEventsFilters',underlyingEventsFilters);\n\n    let [\n      underlying_redeems,\n      underlying_deposits,\n      trancheToken_redeems,\n      trancheToken_deposits\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: underlyingEventsFilters_redeems }),\n      this.getContractEvents(tokenConfig.token, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: underlyingEventsFilters_deposits }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { from: [this.props.account], to: ['0x0000000000000000000000000000000000000000'] } }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { from: ['0x0000000000000000000000000000000000000000'], to: [this.props.account] } })\n    ]);\n\n    // console.log('getTrancheUserInfo_2',trancheConfig.name,trancheConfig.blockNumber,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n    let amountDepositedConverted = this.BNify(0);\n\n    // Order token transfers\n    const underlying_transfers = underlying_deposits.concat(underlying_redeems).sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n    const trancheToken_transfers = trancheToken_deposits.concat(trancheToken_redeems).sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n\n    const blocksInfo = {};\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n      if (!tokenTransferEvent) {\n        return;\n      }\n      const [\n        blockInfo,\n        tokenConversionRate\n      ] = await Promise.all([\n        this.getBlockInfo(tokenTransferEvent.blockNumber),\n        this.convertTrancheTokenBalance(1,tokenConfig,tokenTransferEvent.blockNumber)\n      ]);\n\n      blocksInfo[tokenTransferEvent.blockNumber] = {\n        blockInfo,\n        tokenConversionRate\n      };\n    });\n\n\n    trancheToken_transfers.forEach( trancheTokenTransferEvent => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent) {\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value], tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value, trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = blocksInfo[tokenTransferEvent.blockNumber].blockInfo;\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats', 'protocols', tokenConfig.protocol]);\n      const protocolIcon = protocolConfig && protocolConfig.icon ? `images/protocols/${protocolConfig.icon}` : `images/protocols/${tokenConfig.protocol}.svg`;\n\n      const tx = {\n        hashKey,\n        action: null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value: tokenAmount,\n        status: 'Completed',\n        token: tokenConfig.token,\n        tranche: trancheConfig.tranche,\n        protocol: protocolConfig.label,\n        tokenSymbol: tokenConfig.token,\n        trancheTokens: trancheTokenAmount,\n        hash: tokenTransferEvent.transactionHash,\n        blockNumber: tokenTransferEvent.blockNumber,\n        timeStamp: blockInfo ? blockInfo.timestamp : null,\n      };\n\n      const tokenAmountConverted = this.BNify(tokenAmount).times(blocksInfo[tokenTransferEvent.blockNumber].tokenConversionRate);\n\n      // Get conversion rate outside the loop\n      // await this.convertTrancheTokenBalance(tokenAmount,tokenConfig,tokenTransferEvent.blockNumber);\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        // Set first deposit tx\n        if (!firstDepositTx) {\n          firstDepositTx = tx;\n        }\n\n        tx.action = 'Deposit';\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDepositedConverted = amountDepositedConverted.plus(tokenAmountConverted);\n\n        // console.log('Deposit',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n        // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        amountDepositedConverted = amountDepositedConverted.minus(tokenAmountConverted);\n        if (amountDeposited.lt(0)) {\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n          amountDepositedConverted = this.BNify(0);\n        }\n        // console.log('Redeem',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited,\n      amountDepositedConverted\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.firstDepositTx;\n    }\n    return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig, account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance, userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice) {\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice, tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey, amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens = [], account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens, false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getBaseToken = () => {\n    const networkConfig = this.getCurrentNetwork();\n    return networkConfig ? networkConfig.baseToken : this.getGlobalConfig(['baseToken']);\n  }\n  getCurrentNetwork = () => {\n    const networkId = this.getCurrentNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetwork = () => {\n    const networkId = this.getRequiredNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.required ? parseInt(this.props.network.required.id) || parseInt(defaultNetwork) : parseInt(defaultNetwork);\n  }\n  getCurrentNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.current ? parseInt(this.props.network.current.id) || parseInt(defaultNetwork) : parseInt(defaultNetwork);\n  }\n  getPolygonBridgeTxs = async (account = false, enabledTokens = []) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !this.props.web3) {\n      return [];\n    }\n\n    const cachedDataKey = `polygonBridgeTxs_${account}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    account = account.toLowerCase();\n\n    let txs = [];\n    const currentNetwork = this.getRequiredNetwork();\n    const currentNetworkId = this.getRequiredNetworkId();\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const stateSenderConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'StateSender']);\n    const erc20PredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'ERC20Predicate']);\n    const etherPredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'EtherPredicate']);\n    const depositManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'DepositManager']);\n    const rootChainManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'RootChainManager']);\n\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? currentNetworkId : this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', currentNetworkId]);\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[polygonNetworkId]) {\n      const covalentApiUrl = covalentInfo.endpoints[polygonNetworkId];\n      const polygonAvailableTokens = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'availableTokens']);\n      const polygonEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=0&key=${covalentInfo.key}`;\n\n      const ethereumNetworkId = this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', polygonNetworkId]);\n      const etherscanApiUrl = etherscanInfo.endpoints[ethereumNetworkId];\n      const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistEndpoint = `${etherscanApiUrl}?module=account&action=txlist&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistInternalEndpoint = `${etherscanApiUrl}?module=account&action=txlistinternal&address=${this.props.account}&sort=desc`;\n\n      const [\n        last_state_id,\n        polygonTxs,\n        etherscanTxs,\n        etherscanTxlist,\n        etherscanTxlistInternal\n      ] = await Promise.all([\n        this.getPolygonCurrentLastStateId(),\n        this.makeCachedRequest(polygonEndpoint, 120),\n        this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistInternalEndpoint, etherscanInfo.keys, 120),\n      ]);\n\n      // console.log('polygonTxs',polygonTxs);\n      // console.log('etherscanTxs',etherscanTxs);\n      // console.log('etherscanTxlist',etherscanTxlist);\n      // console.log('etherscanTxlistInternal',etherscanTxlistInternal);\n\n      const rootTokensAddresses = [];\n      const childTokensAddresses = [];\n      Object.values(polygonAvailableTokens).forEach(tokenConfig => {\n        if (tokenConfig.childToken) {\n          childTokensAddresses.push(tokenConfig.childToken.address.toLowerCase())\n        }\n        if (tokenConfig.rootToken) {\n          rootTokensAddresses.push(tokenConfig.rootToken.address.toLowerCase())\n        }\n      });\n\n      let depositTxs = [];\n\n      if (etherscanTxs && etherscanTxs.data && etherscanTxs.data.result && typeof etherscanTxs.data.result.filter === 'function') {\n        depositTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.to.toLowerCase()) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n        const exitTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.from.toLowerCase()) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      const depositTxsHashes = depositTxs.map(tx => tx.hash.toLowerCase());\n      const depositETHInputRexExp = new RegExp(this.props.account.replace('0x', '').toLowerCase() + '$');\n      if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n        const depositETHTxs = etherscanTxlist.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.to.toLowerCase() === rootChainManagerConfig.address.toLowerCase() && tx.input.toLowerCase().match(depositETHInputRexExp) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (etherscanTxlistInternal && etherscanTxlistInternal.data && etherscanTxlistInternal.data.result && typeof etherscanTxlistInternal.data.result.filter === 'function') {\n        const exitETHTxs = etherscanTxlistInternal.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.from.toLowerCase() === etherPredicateConfig.address.toLowerCase() && !tx.input.toLowerCase().match(depositETHInputRexExp) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.timeStamp = parseInt(tx.timeStamp);\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (polygonTxs && polygonTxs.data && polygonTxs.data.data && polygonTxs.data.data.items && Object.values(polygonTxs.data.data.items).length) {\n        const filteredTxs = polygonTxs.data.data.items.filter(tx => tx.to_address && childTokensAddresses.includes(tx.to_address.toLowerCase()));\n        // console.log('polygonTxs',polygonTxs,filteredTxs);\n        await this.asyncForEach(filteredTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(tokenConfig => (tokenConfig.childToken && tx.to_address && tokenConfig.childToken.address.toLowerCase() === tx.to_address.toLowerCase()));\n          if (!tokenConfig || !tokenConfig.childToken) {\n            return;\n          }\n          tokenConfig.address = tokenConfig.childToken.address;\n          if (!enabledTokens || !enabledTokens.length || enabledTokens.includes(tokenConfig.token)) {\n            const polygonTx = this.normalizePolygonTx(tx, tokenConfig);\n            if (polygonTx.action === 'Withdraw') {\n              polygonTx.exited = false;\n              polygonTx.networkId = polygonNetworkId;\n              polygonTx.bridgeType = tokenConfig.bridgeType;\n              polygonTx.included = await this.props.maticPOSClient.isCheckPointed(polygonTx.hash);\n              polygonTx.exited = false;\n\n              if (tokenConfig.rootToken && polygonTx.included){\n                const erc20RootToken = this.props.maticPOSClient.erc20(tokenConfig.rootToken.address,true);\n                polygonTx.exited = await erc20RootToken.isWithdrawExited(polygonTx.hash);\n              }\n              \n              txs.push(polygonTx);\n            }\n          }\n        });\n        // debugger;\n      }\n    }\n\n    txs = txs.sort((a, b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    // console.log('getPolygonBridgeTxs',cachedDataKey,txs);\n\n    return this.setCachedData(cachedDataKey, txs, 120);\n  }\n  getPolygonBaseTxs = async (account = false, enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n    const requiredNetwork = this.getRequiredNetworkId();\n    // const selectedStrategy = this.props.selectedStrategy;\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[requiredNetwork]) {\n      const covalentApiUrl = covalentInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&key=${covalentInfo.key}`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data && baseTxs.data.data && baseTxs.data.data.items && Object.values(baseTxs.data.data.items).length) {\n\n        const cachedRows = Object.values(baseTxs.data.data.items).length;\n        const lastCachedTx = Object.values(baseTxs.data.data.items).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.block_height ? parseInt(lastCachedTx.block_height) + 1 : 0;\n\n        const covalentEndpointLastBlock = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=${cachedRows}`;\n        let latestTxs = await this.makeCachedRequest(covalentEndpointLastBlock, 15);\n\n        if (latestTxs && latestTxs.data.data.items && latestTxs.data.data.items.length) {\n          latestTxs = await this.filterPolygonTxs(latestTxs.data.data.items, enabledTokens);\n          // latestTxs = await this.filterEthereumTxs(latestTxs,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.block_height)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.data.items).includes(tx.tx_hash);\n                if (!txFound) {\n                  baseTxs.data.data.items[tx.tx_hash] = tx;\n                }\n              });\n\n              // Save covalent txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.data.items);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests_polygon = this.getCachedDataWithLocalStorage('cachedRequests_polygon',{});\n          const dataToCache = {\n            data: {\n              data:txs.data\n            },\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests_polygon', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests_polygon',cachedRequests_polygon);\n        }\n      }\n\n      if (txs && txs.data && txs.data.data && txs.data.data.items) {\n        results = txs.data.data.items;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getEtherscanBaseTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network', 'firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber, firstBlockNumber);\n\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data.result && Object.values(baseTxs.data.result).length) {\n\n        const cachedBlockNumbers = Object.values(baseTxs.data.result).map(tx => (parseInt(tx.blockNumber)));\n        const lastCachedBlockNumber = Math.max(...cachedBlockNumbers);\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        \n        let latestTxs = await this.makeEtherscanApiRequest(etherscanEndpointLastBlock, etherscanInfo.keys, 15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length) {\n\n          latestTxs = await this.filterEthereumTxs(latestTxs.data.result, enabledTokens, true, false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.blockNumber)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.result).includes(tx.hashKey);\n                if (!txFound) {\n                  baseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request without caching\n        txs = await this.makeEtherscanApiRequest(baseEndpoint, etherscanInfo.keys, 0);\n\n        /*\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          const dataToCache = {\n            data: {\n              data:txs.data\n            },\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n        */\n      }\n\n      if (txs && txs.data && txs.data.result) {\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getCurveTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = []) => {\n    const results = await this.getEtherscanTxs(account, firstBlockNumber, endBlockNumber, enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results, enabledTokens);\n  }\n  saveFetchedTransactions = (endpoint, txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')) {\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data: {\n        result: txsToStore\n      }\n    };\n\n    this.saveCachedRequest(endpoint, false, cachedRequest);\n  }\n  getEtherscanTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n\n    let resultData = null;\n    const currentNetwork = this.getRequiredNetwork();\n\n    switch (currentNetwork.explorer) {\n      case 'polygon':\n        resultData = await this.getPolygonBaseTxs(account, enabledTokens, debug);\n        break;\n      case 'etherscan':\n      default:\n        resultData = await this.getEtherscanBaseTxs(account, firstBlockNumber, endBlockNumber, enabledTokens, debug);\n        break;\n    }\n\n    // Initialize prevTxs\n    let txs = {};\n\n    if (resultData) {\n      let {\n        results,\n        baseTxs,\n        baseEndpoint\n      } = resultData;\n\n      if (baseTxs) {\n        // Filter txs for token\n        txs = await this.processStoredTxs(results, enabledTokens);\n      } else {\n        const allAvailableTokens = Object.keys(this.props.availableTokens);\n        // Save base endpoint with all available tokens\n        switch (currentNetwork.explorer) {\n          case 'polygon':\n            txs = await this.filterPolygonTxs(results, allAvailableTokens);\n            // console.log('polygon txs',results,allAvailableTokens,txs);\n            break;\n          case 'etherscan':\n          default:\n            txs = await this.filterEthereumTxs(results, allAvailableTokens);\n            break;\n        }\n\n        // Store filtered txs\n        if (txs && Object.keys(txs).length) {\n          this.saveFetchedTransactions(baseEndpoint, txs);\n        }\n      }\n    }\n\n    // console.log('DEBUG - TXS -',txs);\n\n    return Object\n      .values(txs)\n      .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n      .sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  getPolygonCurrentLastStateId = async () => {\n    const contractInstance = new this.props.web3Polygon.eth.Contract(\n      [\n        {\n          constant: true,\n          inputs: [],\n          name: \"lastStateId\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n          payable: false,\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ],\n      \"0x0000000000000000000000000000000000001001\"\n    );\n\n    return parseInt(await contractInstance.methods.lastStateId().call());\n  }\n  checkPolygonTransactionIncluded = async (txHash) => {\n    const [\n      last_state_id,\n      tx,\n    ] = await Promise.all([\n      this.getPolygonCurrentLastStateId(),\n      this.props.web3Polygon.eth.getTransactionReceipt(txHash)\n    ]);\n\n    const tx_state_id = tx && tx.logs && tx.logs.length && this.props.web3.utils ? this.props.web3.utils.hexToNumberString(tx.logs[tx.logs.length - 1].topics[1]) : null;\n\n    return tx_state_id ? parseInt(last_state_id) >= parseInt(tx_state_id) : null;\n  }\n  filterCurveTxs = async (results, enabledTokens = []) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter(tx => (enabledTokens.includes(tx.token) && ['CurveIn', 'CurveOut', 'CurveZapIn', 'CurveZapOut', 'CurveTransferIn', 'CurveTransferOut', 'CurveDepositIn', 'CurveDepositOut'].includes(tx.action)));\n\n    if (curveTxs.length) {\n      curveTxs.sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  normalizePolygonTx = (tx, tokenConfig = null) => {\n    tokenConfig = tokenConfig || Object.values(this.props.availableTokens).find(tokenConfig => tx.to_address && tokenConfig.idle.address.toLowerCase() === tx.to_address.toLowerCase());\n\n    const depositLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const redeemLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const withdrawLogEvent = tx.log_events && tokenConfig && tokenConfig.address ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === '0x0000000000000000000000000000000000000000') : null;\n\n    const tokenDecimal = tokenConfig.decimals;\n    const tokenSymbol = tokenConfig.name || tokenConfig.token;\n    const hashKey = `${tx.tx_hash}_${tokenSymbol}`;\n    const idleToken = tokenConfig.idle ? tokenConfig.idle.token : null;\n    const action = depositLogEvent ? 'Deposit' : (redeemLogEvent ? 'Redeem' : (withdrawLogEvent ? 'Withdraw' : null));\n    const timeStamp = parseInt(this.strToMoment(tx.block_signed_at)._d.getTime() / 1000);\n\n    let logEvent = null;\n    switch (action) {\n      case 'Deposit':\n        logEvent = depositLogEvent;\n        break;\n      case 'Redeem':\n        logEvent = redeemLogEvent;\n        break;\n      case 'Withdraw':\n        logEvent = withdrawLogEvent;\n        break;\n      default:\n        break;\n    }\n\n    const logs = tx.log_events ? tx.log_events.map(log => ({\n      topics: log.raw_log_topics\n    })) : [];\n    const value = logEvent ? this.fixTokenDecimals(logEvent.decoded.params.find(param => param.name === 'value').value, tokenDecimal) : this.fixTokenDecimals(tx.value, tokenDecimal);\n\n    const blockNumber = tx.log_events && tx.log_events.length ? tx.log_events[0].block_height : null;\n\n    return {\n      logs,\n      value,\n      action,\n      hashKey,\n      timeStamp,\n      idleToken,\n      tokenSymbol,\n      blockNumber,\n      tokenDecimal,\n      hash: tx.tx_hash,\n      to: tx.to_address,\n      status: 'Completed',\n      from: tx.from_address,\n      gasUsed: tx.gas_spent,\n      gasPrice: tx.gas_price,\n      token: tokenConfig.token,\n      contractAddress: tokenConfig.address,\n    };\n  }\n  filterPolygonTxs = async (txs, enabledTokens, processTransactions = true) => {\n    const idleTokensAddresses = Object.values(this.props.availableTokens).map(tokenConfig => tokenConfig.idle.address.toLowerCase());\n    const polygonTxs = txs ? txs.filter(tx => tx.to_address && idleTokensAddresses.includes(tx.to_address.toLowerCase())).reduce((output, tx) => {\n      const mappedTx = this.normalizePolygonTx(tx);\n      output[mappedTx.hashKey] = mappedTx;\n      return output;\n    }, {}) : {};\n\n    return processTransactions ? await this.processTransactions(polygonTxs, enabledTokens) : polygonTxs;\n  }\n  filterEtherscanTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    return await this.filterEthereumTxs(results, enabledTokens, processTxs, processStoredTxs);\n  }\n  filterEthereumTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve', 'migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve', 'depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', tokenConfig.idle.token]);\n\n      results.forEach(tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length > 1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length > 0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find(iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0)));\n        const isRedeemInternalTx = isRightToken && internalTxs.find(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase());\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length > 1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase())).length > 0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find(tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase())));\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut) {\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx) {\n            action = 'Deposit';\n          } else if (isRedeemTx) {\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx) {\n            action = 'Migrate';\n          } else if (isSendTransferTx) {\n            action = 'Send';\n          } else if (isReceiveTransferTx) {\n            action = 'Receive';\n          } else if (isSwapTx) {\n            action = 'Swap';\n          } else if (isSwapOutTx) {\n            action = 'SwapOut';\n          } else if (isWithdrawTx) {\n            action = 'Withdraw';\n          } else if (isCurveDepositTx) {\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx) {\n            action = 'CurveOut';\n          } else if (isCurveZapIn) {\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut) {\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn) {\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut) {\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn) {\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut) {\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx) {\n            hashKey += '_' + tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value, curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)) {\n              hashKey += '_' + action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()) {\n            tokenDecimals = 18;\n          } else if (isCurveTx) {\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]) {\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action) {\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx) {\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value, tokenDecimals);\n                }\n                break;\n              default:\n                if (!curveTx) {\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value, tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n                break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut) {\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTokens = this.fixTokenDecimals(tx.value, curvePoolContract.decimals);\n                curveTransfersTxs.push({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n              }\n            } else {\n              etherscanTxs[hashKey] = ({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action) {\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length > 0) {\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value, iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                  break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                  break;\n                default:\n                  break;\n              }\n            }\n          }\n        }\n      });\n    });\n\n    curveTransfersTxs.forEach(tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n\n    if (processTxs) {\n      etherscanTxs = await this.processTransactions(etherscanTxs, enabledTokens, processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey, transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]) {\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]) {\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]) {\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions', JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account = null, tokenKey = null, selectedToken = null) => {\n    const storedTxs = this.getStoredItem('transactions', true, {});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account) {\n      if (storedTxs[account]) {\n        output = storedTxs[account];\n        if (tokenKey) {\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken) {\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()) {\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processTransactions = async (etherscanTxs, enabledTokens = [], processStoredTxs = true) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object') {\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    Object.keys(curveAvailableTokens).forEach(token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats', 'tokens', curveTokenConfig.baseToken.toUpperCase()]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object') {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = { ...storedTxs[this.props.account][tokenKey] };\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        await this.asyncForEach(filteredTxs, async (tx, index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n\n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()) {\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig, tx.blockNumber, tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash) {\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action) {\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n              break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount) {\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n              break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n              break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n              break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n              break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount) {\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length - 1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x', '').toLowerCase()}`));\n\n                  this.customLog('filteredLogs', filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length) {\n                    filteredLogs.forEach(log => {\n                      let tokenAmount = parseInt(log.data, 16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount, tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount (' + tx.hash + ')', baseTokensConfig.token, tokenAmount.toFixed(5), storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n              break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens) {\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n                  const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (log.address.toLowerCase() === idleTokenAddress));\n                  if (filteredLogs && filteredLogs.length) {\n                    idleTokens = parseInt(filteredLogs[0].data, 16);\n                    idleTokens = this.fixTokenDecimals(idleTokens, idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n              break;\n            default:\n              break;\n          }\n\n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs) {\n        etherscanTxs = await this.processStoredTxs(etherscanTxs, [selectedToken], this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs, enabledTokens = [], txsToProcess = null) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions', true, {})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]) {\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({}, etherscanTxs);\n\n    const networkId = this.getRequiredNetworkId();\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]) {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account, tokenKey, selectedToken);\n\n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess), async (txKey, i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))) {\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken: 'Deposit',\n          redeemIdleToken: 'Redeem',\n          migrateFromToIdle: 'Migrate',\n          mintIdleTokensProxy: 'Deposit',\n          migrateFromAaveToIdle: 'Migrate',\n          migrateFromIearnToIdle: 'Migrate',\n          executeMetaTransaction: 'Migrate',\n          migrateFromFulcrumToIdle: 'Migrate',\n          migrateFromCompoundToIdle: 'Migrate',\n        };\n        const pendingStatus = ['pending', 'started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice) {\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length) {\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status: 'Pending',\n            token: selectedToken,\n            action: allowedMethods[tx.method],\n            timeStamp: parseInt(tx.created / 1000),\n            hash: txHash ? tx.transactionHash : null,\n            tokenSymbol: isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0], decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed) {\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx) {\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise(async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash, (err, txReceipt) => {\n              if (err) {\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())) {\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig, realTx.blockNumber, realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created / 1000);\n\n        let txValue = null;\n        switch (tx.method) {\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()) {\n              // Remove wrong contract tx\n              if (isStoredTx) {\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0], tokenConfig.decimals).toString() : 0;\n            if (!txValue) {\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n            break;\n          case 'redeemIdleToken':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice) {\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0], 18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n            break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt) {\n              executeMetaTransactionReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract', 'deposit', 'proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo) {\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x', '').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length) {\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data, 16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data, 16) : null;\n\n            if (!metaTxValue) {\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue, tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n            break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract) {\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt) {\n              migrationTxReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x', '');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x', '');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length >= 3 && tx.topics[tx.topics.length - 2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length) {\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ], migrationInternalTransfer.data, migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token) {\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue, tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n            break;\n          default:\n            break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx) {\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint, alias = false, data) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    return this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    // return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress', false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress', customAddress);\n  }\n  getCachedRequest = (endpoint, alias = false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]) {\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  buildSubgraphQuery = (entity,fields,params={}) => {\n    params = JSON.stringify(params);\n    params = params.substr(1).substr(0,params.length-2).replace(/\"([^\"]+)\":/g, '$1:');;\n    return `{\n      ${entity}(${params}){\n        ${fields.join(\",\")}\n      }\n    }`;\n  }\n\n  getSubgraphTrancheInfo = async (trancheAddress,startTimestamp=null,endTimestamp=null,fields=null) => {\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n\n    if (!subgraphConfig.enabled){\n      return false;\n    }\n\n    const currTime = parseInt(Date.now()/1000);\n    const queryParams = {\n      first:1000,\n      orderBy:\"timeStamp\",\n      orderDirection:\"asc\",\n      where:{\n        \"Tranche\":trancheAddress.toLowerCase()\n      }\n    };\n    if (startTimestamp){\n      queryParams.where.timeStamp_gte = startTimestamp;\n    }\n    if (endTimestamp){\n      queryParams.where.timeStamp_lte = endTimestamp;\n    }\n\n    fields = fields || subgraphConfig.entities.trancheInfos;\n    const subgraphQuery = this.buildSubgraphQuery('trancheInfos',fields,queryParams);\n    const postData = {\n      query:subgraphQuery\n    }\n\n    const results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n    let subgraphData = this.getArrayPath(['data','data','trancheInfos'],results);\n    const lastTimestamp = subgraphData && subgraphData.length>0 ? parseInt(subgraphData[subgraphData.length-1].timeStamp) : null;\n\n    if (lastTimestamp && lastTimestamp>startTimestamp && lastTimestamp<endTimestamp && currTime-lastTimestamp>86400){\n      const subgraphData_2 = await this.getSubgraphTrancheInfo(trancheAddress,lastTimestamp+1,endTimestamp,fields);\n      if (subgraphData_2){\n        subgraphData = subgraphData.concat(subgraphData_2);\n      }\n    }\n    return subgraphData;\n  }\n  getBestTranche = async (trancheType=null,maxApy=null)=>{\n\n    const cachedDataKey = `getBestTranche_${trancheType}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n    \n    const blockInfo = await this.getBlockInfo();\n    const timestamp = blockInfo.timestamp-7200;\n    \n    const query=`{\n      trancheInfos(orderBy:\"timeStamp\", orderDirection:\"asc\", where:{timeStamp_gt:\"${timestamp}\"}){\n        id\n        apr\n        timeStamp\n        Tranche{\n          id\n          CDO{\n            id\n          }\n          type\n        }\n      }\n    }`;\n\n    const postData={\n      query\n    };\n\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n    let results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n\n    if(!results || !this.getArrayPath(['data','data','trancheInfos'],results)){\n      return false;\n    }\n    \n    results = this.getArrayPath(['data','data','trancheInfos'],results);\n    const size = results.length;\n\n    if (!size){\n      return false;\n    }\n      \n    // Get only latest results\n    if(results[0].timetamp !== results[size-1].timeStamp){\n      results = results.splice(Math.ceil(size/2));\n    }\n\n    const trancheTypes = Object.keys(this.getGlobalConfig(['tranches']));\n    const trancheStrategyConfig = this.getGlobalConfig(['strategies','tranches']);\n\n    let output = {};\n    trancheTypes.forEach( type => {\n      output[type] = {\n        apr:null,\n        token:null,\n        protocol:null,\n      };\n    });\n    \n    // const tranches = results.filter( result => (result.Tranche.type===\"BBTranche\"));\n    Object.keys(this.props.availableTranches).forEach( protocol => {\n      Object.keys(this.props.availableTranches[protocol]).forEach( token => {\n\n        const availableTrancheInfo = this.props.availableTranches[protocol][token];\n\n        trancheTypes.forEach( type => {\n          const trancheInfo = results.find( tInfo => tInfo.Tranche.id.toLowerCase() === availableTrancheInfo[type].address.toLowerCase() );\n          if (!output[type].apr || (trancheInfo && this.BNify(trancheInfo.apr).gt(output[type].apr) && (!maxApy || this.apr2apy(this.fixTokenDecimals(trancheInfo.apr,18).div(100)).times(100).lt(maxApy)) )){\n            output[type].token = token;\n            output[type].protocol = protocol;\n            output[type].apr = trancheInfo.apr;\n          }\n        });\n\n      })\n    });\n\n    trancheTypes.forEach( type => {\n      if (!output[type].token){\n        output[type].token = trancheStrategyConfig.token;\n        output[type].protocol = trancheStrategyConfig.protocol;\n      }\n    });\n\n    if (trancheType && output[trancheType]){\n      output = output[trancheType];\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output, 1800);\n  }\n  makePostRequest = async (endpoint, postData={}, error_callback = false, config = null) => {\n    const data = await axios\n      .post(endpoint, postData, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    return data;\n  }\n  makeRequest = async (endpoint, error_callback = false, config = null) => {\n    const data = await axios\n      .get(endpoint, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    if (data) {\n      return data;\n    } else {\n      return axios(config);\n    }\n  }\n  makeEtherscanApiRequest = async (endpoint, keys = [], TTL = 180, apiKeyIndex = 0) => {\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp - cachedRequests[endpoint].timestamp < TTL) {\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint + '&apikey=' + apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && (data.data.message.match(/^OK/) || data.data.message === \"No transactions found\")) {\n      if (TTL>0){\n        const dataToCache = {\n          data:{\n            data:data.data\n          },\n          timestamp\n        };\n        this.addKeyToCachedDataWithLocalStorage('cachedRequests', endpoint, dataToCache);\n      }\n      return data;\n    } else if (apiKeyIndex < keys.length - 1) {\n      return await this.makeEtherscanApiRequest(endpoint, keys, TTL, apiKeyIndex + 1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint, TTL = 60, return_data = false, alias = false, config = null, error_callback = false) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // console.log('makeCachedRequest',endpoint,TTL,cachedRequests[key],(cachedRequests[key] ? timestamp-cachedRequests[key].timestamp : null));\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    let data = await this.makeRequest(endpoint, error_callback, config);\n\n    const dataToCache = {\n      data:{\n        data:data.data\n      },\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  makeCachedPostRequest = async (endpoint, postData={}, TTL=60, return_data=false, alias=false, config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makePostRequest(endpoint, postData, false, config);\n    const dataToCache = {\n      data:{\n        data:data.data\n      },\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)) {\n      const errorCode = parseInt(error.code);\n      switch (errorCode) {\n        case 4001:\n          output = 'denied';\n          break;\n        default:\n          output = `error_${errorCode}`;\n          break;\n      }\n    } else if (error.message) {\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path, array) => {\n    if (!array) {\n      return null;\n    }\n    path = Object.assign([], path);\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path, array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path, configs = false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return configs[prop] !== undefined ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path, configs[prop]);\n      }\n    }\n    return null;\n  }\n  getAppUrl = (path) => {\n    return globalConfigs.baseURL + '/' + path;\n  }\n  getCurrentEnvironment = () => {\n    let environment = Object.keys(globalConfigs.environments).find(env => {\n      const envUrl = globalConfigs.environments[env].url;\n      return envUrl.toLowerCase() === window.location.origin.toLowerCase();\n    });\n    return environment || 'beta';\n  }\n  checkChristmas = () => {\n    return ['24','25','26','27'].includes(this.strToMoment().format('DD')) && this.strToMoment().format('MM')==='12';\n  }\n  checkUrlPolygon = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.polygonUrl.toLowerCase());\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page = null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics', 'google', 'pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga) {\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData, callback = null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && (debugEnabled || originOk)) {\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet) {\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1) {\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n          // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise(async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function') {\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function') {\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return { name, contract };\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\", name, address, error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider = null) => {\n    return this.getStoredItem('walletProvider', false, defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo, simpleID) => {\n    if (!userInfo.address && this.props.account) {\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider) {\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email) {\n      delete userInfo.email;\n    }\n    if (!userInfo.address) {\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID) {\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly = false) => {\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network', 'providers', 'snapshot', 'whitelist']).map(addr => addr.toLowerCase());\n    const endpoint = this.getGlobalConfig(['network', 'providers', 'snapshot', 'endpoints', 'proposals']);\n    const query = activeOnly ? this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposalsActive']) : this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposals']);\n\n    const data = {\n      query: `${query}`\n    }\n\n    let proposals = await this.makeCachedPostRequest(endpoint, data, 1440, true, false);\n    if (proposals && proposals.data && proposals.data.proposals){\n      proposals = proposals.data.proposals;\n      const currTime = parseInt(Date.now() / 1000);\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        if (p.end <= currTime || whitelist.includes(p.author.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.snapshot;\n          let checkedStrategies = false;\n          await this.asyncForEach(p.strategies, async (s) => {\n            if (checkedStrategies) {\n              return;\n            }\n            if (s.name === 'erc20-balance-of') {\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract) {\n                const tokenBalance = await this.getTokenBalance(tokenName, tokenContract.address, true, blockNumber);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)) {\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n          });\n\n          // Add proposal is passed token balances check\n          if (checkedStrategies) {\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey, validProposals);\n    }\n  }\n  getAprsFromApi = async (networkId = null) => {\n    const config = this.getGlobalConfig(['stats', 'config']);\n    if (!networkId || !this.getGlobalConfig(['network', 'enabledNetworks']).includes(networkId)) {\n      networkId = this.getRequiredNetworkId();\n    }\n    const endpointInfo = this.getGlobalConfig(['stats', 'aprs']);\n    const aprs = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n    return aprs;\n  }\n  getTokenApiData = async (address, isRisk = null, startTimestamp = null, endTimestamp = null, forceStartTimestamp = false, frequency = null, order = null, limit = null) => {\n    const networkId = this.getRequiredNetworkId();\n    // const statsConfig = this.getGlobalConfig(['stats']);\n    // const statsEnabled = statsConfig.enabled && statsConfig.availableNetworks.includes(networkId);\n    // if (!statsEnabled){\n    //   return [];\n    // }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${networkId}_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null) {\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter(c => ((c.startTimestamp === null || (startTimestamp && c.startTimestamp <= startTimestamp)) && (c.endTimestamp === null || (endTimestamp && c.endTimestamp >= endTimestamp))))\n      if (filteredCachedData && filteredCachedData.length > 0) {\n        let filteredData = filteredCachedData.pop().data;\n        if (filteredData) {\n          filteredData = filteredData.filter(d => ((!startTimestamp || d.timestamp >= startTimestamp) && (!endTimestamp || d.timestamp <= endTimestamp)));\n          if (filteredData.length > 0) {\n            return filteredData;\n          }\n        }\n      }\n      // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    let endpoint = `${apiInfo.endpoint[networkId]}${address}`;\n\n    // console.log('getTokenApiData',cachedDataKey,apiInfo,endpoint);\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null) {\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)) {\n        if (forceStartTimestamp) {\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp - (60 * 60 * 24 * 2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)) {\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null) {\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)) {\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null) {\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)) {\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length) {\n        endpoint += '?' + params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    let output = await this.makeRequest(endpoint, false, config);\n    if (!output) {\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null) {\n      filteredData = data.filter(d => (d.isRisk === isRisk));\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data: filteredData,\n    });\n\n    this.setCachedData(cachedDataKey, cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName, exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName, exchangeRateParams.name, exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, exchangeRate, null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName) {\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats', 'tokens', contractName.toUpperCase()]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName, 'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, decimals, null);\n  }\n  getAvgApr = (aprs, allocations, totalAllocation) => {\n    if (aprs && allocations && totalAllocation) {\n      let avgApr = Object.keys(aprs).reduce((aprWeighted, protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      }, 0);\n\n      if (avgApr) {\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency, quantity = 1) => {\n    const frequency_seconds = {\n      hour: 3600,\n      day: 86400,\n      week: 604800\n    };\n    return frequency_seconds[frequency] * quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools', 'stake', 'props', 'availableTokens', 'IDLE', 'feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n      return etherscanTxlist.data.result.filter(tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0)));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed(0);\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance, tokenDecimals, round = true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed(0);\n  }\n  fixTokenDecimals = (tokenBalance, tokenDecimals, exchangeRate = null) => {\n    if (!tokenDecimals) {\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()) {\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName = null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key, parse_json = true, return_default = null) => {\n    let output = return_default;\n    if (window.localStorage) {\n      const item = localStorage.getItem(key);\n      if (item) {\n        output = item;\n        if (parse_json) {\n          try {\n            output = JSON.parse(item);\n          } catch (err) {\n            // Reset output and clear key\n            output = null;\n            this.removeStoredItem(key);\n          }\n        }\n      }\n    }\n    if (!output) {\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys = []) => {\n    if (window.localStorage) {\n\n      if (!excludeKeys || !excludeKeys.length) {\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i = 0; i < window.localStorage.length; i++) {\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)) {\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage) {\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key, value, stringify = false) => {\n    if (window.localStorage) {\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key, value);\n        return true;\n      } catch (error) {\n        console.error('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig) {\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length) {\n      return false;\n    }\n\n    for (let protocolIndex = 0; protocolIndex < allocations.length; protocolIndex++) {\n      const lastAllocationsPromise = new Promise(async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations) {\n      return true;\n    }\n\n    const diff = allocations.filter((alloc, index) => alloc !== newAllocations[index]);\n\n    return diff.length > 0;\n  }\n  checkMigration = async (tokenConfig, account) => {\n\n    if (!tokenConfig || !account) {\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled) {\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract) {\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName, account);\n\n        if (oldContractBalance) {\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance, oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  // getContractEvents = async (contractName, eventName, params = {}) => {\n  //   return await this.getContractPastEvents(contractName, eventName, params);\n  // }\n\n  getContractEvents = async (contractName, eventName, startBlock=0, endBlock='latest', params = {}) => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const blocksPerCall = requiredNetwork.blocksPerCall || 10000;\n    const lastBlockNumber = endBlock === 'latest' ? await this.props.web3.eth.getBlockNumber() : parseInt(endBlock);\n    startBlock = parseInt(startBlock) || lastBlockNumber-blocksPerCall;\n\n    const calls = [];\n\n    if (!parseInt(startBlock) || !parseInt(lastBlockNumber)){\n      return calls;\n    }\n\n    for (var blockNumber = startBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      let toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      if (toBlock === lastBlockNumber && endBlock === 'latest'){\n        toBlock = 'latest';\n      }\n      calls.push(this.getContractPastEvents(contractName, eventName, {fromBlock: blockNumber, toBlock, ...params}));\n    }\n\n    const all_past_events = await Promise.all(calls);\n    return all_past_events.reduce( (events,d) => {\n      events = events.concat(d);\n      return events;\n    },[]);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]) {\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n\n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({ from: account })\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit) {\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice, 9).times(gasLimit), 9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function (hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function (confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\", receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null, error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\", \"address\", \"uint256\", \"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network', 'providers', 'biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`, null, {\n      headers: {\n        'x-api-key': biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data) {\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName, methodName, methodParams, nonce, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]) {\n      callback(null, 'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try {\n      const userAddress = this.props.account;\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null, error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName, tokenAddress, permitType, callData, gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data: callData,\n      token: tokenAddress,\n      to: contract._address,\n      txGas: parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise(async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req, metaInfo, callback, callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({ req, metaInfo });\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null, true);\n      return false;\n    }\n\n    if (!transactionHash) {\n      // console.log('!transactionHash ERROR');\n      callback(null, true);\n      return false;\n    }\n\n    const tx = {\n      method: 'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(() => {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt) => {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if (!err && receipt) {\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx, err);\n\n          if (typeof window.updateTransaction === 'function') {\n            window.updateTransaction(tx, transactionHash, tx.status, null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName, functionSignature, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    try {\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null, error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce = 0, value = null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit', baseContractName]);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce > 0) {\n      nonce = parseInt(nonce) + parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion) {\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n        break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n        break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit = null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters) {\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find(f => f.name === methodName);\n      const useNonce = methodAbi ? methodAbi.inputs.find(i => i.name === 'nonce') : true;\n      if (!isNaN(parseInt(nonce)) && useNonce) {\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null, 'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName, contractAddress, functionSignature, callback, callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null, error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n\n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName, contractAddr, walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName, walletAddr, false),\n      this.getAllowance(contractName, contractAddr, walletAddr)\n    ]);\n    this.customLog('checkTokenApproved', contractName, this.BNify(allowance).toFixed(), this.BNify(balance).toFixed(), (allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName, contractAddr, walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr) {\n      return false;\n    }\n    this.customLog('getAllowance', contractName, contractAddr, walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName, methodName, params, value, callback, callback_receipt, txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName, methodName, params, callback, callback_receipt, txData = null, send_raw = false, raw_tx_data = null) => {\n    try {\n      this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx) => {\n        if (typeof callback === 'function') {\n          callback(tx);\n        }\n      }, (tx) => {\n        if (typeof callback_receipt === 'function') {\n          callback_receipt(tx);\n        }\n      }, null, txData, send_raw, raw_tx_data);\n    } catch (error) {\n      callback(null, error);\n    }\n  }\n  disableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20MaxAllowance = (contractName, address, allowance, callback, callback_receipt) => {\n    console.log('enableERC20MaxAllowance',contractName, address, allowance);\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.integerValue(allowance) // Approve for a specific allowance\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  getBestToken = async (networkId=null,availableTokens=null) => {\n    let highestValue = null;\n    let selectedToken = null;\n    if (!networkId){\n      networkId = this.getRequiredNetworkId();\n    }\n    const aprs = await this.getAprsFromApi(networkId);\n    if (aprs && aprs.lendRates){\n      aprs.lendRates.forEach( aprInfo => {\n        const tokenAPR = this.BNify(aprInfo.apy);\n        if (tokenAPR){\n          const token = aprInfo.tokenSymbol;\n          if ((!highestValue || highestValue.lt(tokenAPR)) && (!availableTokens || availableTokens[token])){\n            highestValue = tokenAPR;\n            selectedToken = token;\n          }\n        }\n      });\n    } else if (availableTokens) {\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAPR = await this.getTokenAprs(tokenConfig);\n        if (tokenAPR && tokenAPR.avgApr !== null){\n          if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n            highestValue = tokenAPR.avgApr;\n            selectedToken = token;\n          }\n        }\n      });\n    }\n    return selectedToken;\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null,methodName='usersStakes') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName, methodName, [walletAddr]);\n    if (stakedBalance) {\n      if (decimals) {\n        stakedBalance = this.fixTokenDecimals(stakedBalance, decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, stakedBalance, 30);\n      }\n    }\n    return this.BNify(0);\n  }\n  calculateGaugeBoost = async (gaugeName,stakedBalance,account) => {\n\n    let boost = this.BNify(1);\n\n    account = account ? account : this.props.account;\n    const veTokenConfig = this.getGlobalConfig(['tools','gauges','props','veToken']);\n    const gaugeConfig = this.getGlobalConfig(['tools','gauges','props','availableGauges',gaugeName]);\n    if (!gaugeConfig || !account){\n      return boost;\n    }\n\n    const aggcalls = await Promise.all([\n      this.getTokenBalance(veTokenConfig.token,account,false),\n      this.getTokenTotalSupply(veTokenConfig.token),\n      this.genericContractCallCached(gaugeConfig.name,'working_balances',[account]),\n      this.genericContractCallCached(gaugeConfig.name,'working_supply'),\n      this.genericContractCallCached(gaugeConfig.name,'totalSupply'),\n      this.getTokenBalance(gaugeConfig.name,account)\n    ]);\n\n    let decoded = aggcalls.map(n => this.BNify(n));\n\n    if (this.BNify(stakedBalance).isNaN()){\n      stakedBalance = this.BNify(0);\n    }\n    stakedBalance = this.BNify(stakedBalance).plus(decoded[5]);\n\n    let l = this.BNify(this.normalizeTokenAmount(stakedBalance,18));\n    let voting_balance = decoded[0];\n    let voting_total = decoded[1];\n    let working_balances = decoded[2];\n    let working_supply = decoded[3];\n    let L = decoded[4].plus(l);\n    \n    let TOKENLESS_PRODUCTION = this.BNify(40);\n    let lim = l.times(TOKENLESS_PRODUCTION).div(100);\n\n    lim = lim.plus(L.times(voting_balance).div(voting_total).times((this.BNify(100).minus(TOKENLESS_PRODUCTION)).div(100)));\n    lim = Math.min(l, lim);\n    \n    let old_bal = working_balances;\n    let noboost_lim = TOKENLESS_PRODUCTION.times(l).div(100);\n    let noboost_supply = working_supply.plus(noboost_lim).minus(old_bal);\n    let _working_supply = working_supply.plus(lim).minus(old_bal);\n\n    boost = this.BNify(lim).div(_working_supply).div(noboost_lim.div(noboost_supply));\n\n    console.log('calculateGaugeBoost',gaugeName,voting_balance.toFixed(),voting_total.toFixed(),l.toFixed(),L.toFixed(),lim.toFixed(),_working_supply.toFixed(),noboost_lim.toFixed(),noboost_supply.toFixed(),boost.toFixed());\n\n    return boost;\n  }\n  getGaugeRewardsTokens = async (gaugeConfig, account=null) => {\n    const rewardTokensRate = {};\n    const rewardTokensBalances = {};\n    const rewardTokens = gaugeConfig.rewardTokens ? gaugeConfig.rewardTokens : [];\n\n    if (rewardTokens.length){\n      const claimableTokens = account ? await this.genericContractCall(gaugeConfig.name,'claimable_tokens',[account]) : this.BNify(0);\n      rewardTokensBalances[rewardTokens[0]] = this.BNify(claimableTokens);\n    }\n\n    // Add multiRewards tokens\n    const rewardContractAddress = await this.genericContractCallCached(gaugeConfig.name,'reward_contract');\n    if (rewardContractAddress && rewardContractAddress !== '0x0000000000000000000000000000000000000000'){\n      const multiRewardsContractName = `${gaugeConfig.name}_multireward_${rewardContractAddress}`;\n\n      const multiRewardsConfig = this.getGlobalConfig(['tools','gauges','props','contracts','MultiRewards']);\n\n      const MultirewardsAbi = multiRewardsConfig.abi;\n      await this.props.initContract(multiRewardsContractName, rewardContractAddress, MultirewardsAbi);\n\n      const tokenIndexes = Array.from(Array(multiRewardsConfig.maxRewards).keys());\n      await this.asyncForEach(tokenIndexes,async (tokenIndex) => {\n        try {\n          const rewardTokenAddress = await this.genericContractCallCached(multiRewardsContractName,'rewardTokens',[tokenIndex]);\n          if (rewardTokenAddress){\n            const tokenConfig = this.getTokenConfigByAddress(rewardTokenAddress);\n            if (tokenConfig){\n              const [\n                rewardData,\n                rewardTokenBalance\n              ] = await Promise.all([\n                this.genericContractCall(multiRewardsContractName,'rewardData',[rewardTokenAddress]),\n                account ? this.genericContractCall(gaugeConfig.name,'claimable_reward_write',[account,rewardTokenAddress]) : this.BNify(0)\n              ]);\n\n              if (rewardData && this.BNify(rewardData.rewardRate).gt(0)){\n                rewardTokens.push(tokenConfig.token);\n                rewardTokensBalances[tokenConfig.token] = this.BNify(rewardTokenBalance);\n                rewardTokensRate[tokenConfig.token] = this.fixTokenDecimals(rewardData.rewardRate,18).times(86400);\n              }\n            }\n          }\n        } catch (err) {\n\n        }\n      });\n    }\n\n    return rewardTokens ? rewardTokens.reduce( (rewardTokens,rewardToken) => {\n      rewardTokens[rewardToken] = this.getGlobalConfig(['stats','tokens',rewardToken.toUpperCase()]) || {};\n      rewardTokens[rewardToken].rate = rewardTokensRate[rewardToken] || this.BNify(0);\n      rewardTokens[rewardToken].balance = rewardTokensBalances[rewardToken] || this.BNify(0);\n      return rewardTokens;\n    },{}) : null;\n  }\n  getTrancheStakingRewards = async (account, trancheConfig, methodName='expectedUserReward') => {\n    const stakingRewards = {};\n\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]);\n      tokenConfig = { ...tokenConfig, ...tokenGlobalConfig };\n\n      const stakingRewardsContract = this.getContractByName(trancheConfig.CDORewards.name);\n      if (!stakingRewardsContract){\n        return;\n      }\n\n      const methodAbi = stakingRewardsContract._jsonInterface.find(f => f.name === methodName);\n\n      const methodParams = [account];\n      if (methodAbi.inputs.length>1){\n        methodParams.push(tokenConfig.address);\n      }\n\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name, methodName, methodParams);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount, tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens = true) => {\n    const result = await this.loadTrancheField(field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens, false);\n    return result;\n  }\n  loadTrancheField = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account = null, addGovTokens = true, formatValue = true, addTokenName = true) => {\n    let output = null;\n    let rewardsTokensInfo = null;\n    const maxPrecision = (fieldProps && parseInt(fieldProps.maxPrecision)>0) ? fieldProps.maxPrecision : 5;\n    const decimals = (fieldProps && parseInt(fieldProps.decimals)>0) ? fieldProps.decimals : (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && parseInt(fieldProps.minPrecision)>0) ? fieldProps.minPrecision : (this.props.isMobile ? 3 : 4);\n\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const stakingRewards = tokenConfig && tranche ? tokenConfig[tranche].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length>0 ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0 ? true : false;\n    const tokenName = this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'label']) || this.capitalize(token);\n\n    const gaugeConfig = this.getGlobalConfig(['tools','gauges','props','availableGauges',token]);\n    // console.log('loadTrancheField',protocol,token,tranche,stakingRewards,stakingEnabled);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const show_idle_apy = internal_view && parseInt(internal_view) === 1;\n    \n    // Create Tranche Strategy contract\n    const idleStrategyAddress = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'strategy', 3600);\n    if (idleStrategyAddress) {\n      await this.props.initContract(strategyConfig.name, idleStrategyAddress, strategyConfig.abi);\n    }\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    switch (field) {\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats', 'protocols', protocol, 'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches', tranche, 'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue');\n        if (!this.BNify(poolSize).isNaN()) {\n          output = this.fixTokenDecimals(poolSize, tokenConfig.CDO.decimals);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision);\n          }\n        }\n      break;\n      case 'poolConverted':\n        output = await this.loadTrancheFieldRaw('pool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'seniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens, formatValue, false);\n      break;\n      case 'juniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens, formatValue, false);\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name, 'latest', 180),\n          this.loadTrancheField('tranchePrice', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()) {\n          output = this.fixTokenDecimals(totalSupply, tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'tranchePoolConverted':\n        output = await this.loadTrancheFieldRaw('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig, trancheConfig, account);\n        output = output || this.BNify(0);\n        output = this.BNify(deposited);\n        if (output.gt(0)) {\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'fee', 3600);\n        if (output) {\n          output = this.BNify(output).div(this.BNify(100000));\n        }\n      break;\n      case 'trancheRealPrice':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'tranchePrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, trancheConfig.decimals);\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'virtualPrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        output = formatValue ? 'N/A' : this.BNify(0);\n        let [\n          gaugeBalance,\n          lastPrice1,\n          staked1\n        ] = await Promise.all([\n          gaugeConfig ? this.getTokenBalance(gaugeConfig.name, account) : null,\n          this.loadTrancheField(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          stakingEnabled ? this.getTrancheStakedBalance(trancheConfig.CDORewards.name, account, trancheConfig.CDORewards.decimals,trancheConfig.functions.stakedBalance) : null\n        ]);\n\n        let totalStaked = this.BNify(0);\n        if (staked1){\n          totalStaked = totalStaked.plus(staked1);\n        }\n        if (gaugeBalance){\n          totalStaked = totalStaked.plus(gaugeBalance);\n        }\n\n        if (totalStaked.gt(0) && lastPrice1) {\n          output = this.BNify(totalStaked).times(lastPrice1);\n          // console.log('trancheStaked',staked1,gaugeBalance,lastPrice1.toString(),output.toString());\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name, account),\n          this.loadTrancheFieldRaw(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice) {\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2) {\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheBaseApy`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (deposited3 && earningsStart && trancheApy2) {\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter) {\n          const feesEnd = earningsCounter.earningsEnd.times(trancheFee);\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3) {\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n        if (!this.BNify(redeemable2).isNaN() && !this.BNify(deposited2).isNaN()){\n          output = redeemable2.div(deposited2).minus(1).times(100);\n          if (formatValue) {\n            output = output.toFixed(decimals) + '%';\n          }\n        }\n      break;\n      case 'trancheApy':\n      case 'trancheBaseApy':\n      case 'trancheApyWithTooltip':\n        let tokensApy = {};\n        let trancheApy = null;\n        output = this.BNify(0);\n        let apy = this.BNify(0);\n        let trancheApyDecimals = 2;\n        let baseApy = this.BNify(0);\n        let curveBaseApy = this.BNify(0);\n\n        [\n          rewardsTokensInfo,\n          curveBaseApy,\n          trancheApy\n        ] = await Promise.all([\n          this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig),\n          tokenConfig.curveApyPath ? this.getCurveAPYs(tokenConfig.curveApyPath) : null,\n          this.genericContractCallCached(tokenConfig.CDO.name, 'getApr', [trancheConfig.address])\n        ]);\n\n        if (trancheApy){\n          let apr = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n\n          apy = this.apr2apy(apr.div(100)).times(100);\n          baseApy = apy;\n\n          if (!this.BNify(curveBaseApy).isNaN()){\n            apy = apy.plus(curveBaseApy);\n            tokensApy['Curve vAPR'] = curveBaseApy;\n          }\n\n          // Add rewards tokens APRs\n          if (rewardsTokensInfo && field !== 'trancheBaseApy'){\n            Object.keys(rewardsTokensInfo).forEach( token => {\n              const rewardTokenInfo = rewardsTokensInfo[token];\n              if (!this.BNify(rewardTokenInfo.apy).isNaN() && (token !== 'IDLE' || show_idle_apy)){\n                const tokenApy = this.BNify(rewardTokenInfo.apy);\n                apy = apy.plus(tokenApy);\n                tokensApy[token] = tokenApy;\n              }\n            });\n          }\n\n          if (apy.gt(9999)){\n            trancheApyDecimals = 0;\n            output = this.BNify(9999);\n          } else {\n            output = this.BNify(apy);\n          }\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n            if (apy.gt(9999)){\n              output = `>${output}`;\n            }\n          }\n        } else {\n          baseApy = output;\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n          }\n        }\n\n        if (field === 'trancheApyWithTooltip'){\n          const formattedApy = output;\n          output = {\n            baseApy,\n            tokensApy,\n            formattedApy\n          };\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig, trancheConfig, account),\n          this.loadTrancheFieldRaw(`earningsPerc`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx) {\n          const secondsFromFirstTx = parseInt(Date.now() / 1000) - parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue) {\n            output = output.toFixed(2) + '%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        output = null;\n        rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig, trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE) {\n          if (field === 'trancheIDLEDistribution') {\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond, idleGovTokenConfig.distributionFrequency);\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE <a href=\"${this.getEtherscanTransactionUrl(rewardsTokensInfo.IDLE.latestHarvest.transactionHash)}\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">(last harvest)</a>`\n            }\n          }\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,rewardsTokensInfo,output);\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'trancheAPRSplitRatio':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'trancheAPRSplitRatio',3600);\n        output= output/1000;\n        output= output.toString()+\"/\"+(100-output).toString();\n      break;\n      case 'trancheAPRRatio':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'trancheAPRSplitRatio',3600);\n        output = this.BNify(output).div(1000);\n        if (tranche === 'BB'){\n          output = this.BNify(100).minus(output);\n        }\n        if (formatValue){\n          output = output.toFixed(0)+'%';\n        }\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321', decimals, maxPrecision, minPrecision) + ` IDLE/day`;\n      break;\n      case 'statusBadge':\n      case 'trancheLimit':\n      case 'experimentalBadge':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'limit',3600);\n        if (output){\n          output = this.fixTokenDecimals(output, tokenConfig.CDO.decimals);\n\n          if (field === 'trancheLimit'){\n            if (output.gt(0)){\n              if (formatValue) {\n                output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n              }\n            } else {\n              output = this.BNify(0);\n              if (formatValue){\n                output = 'None';\n              }\n            }\n          }\n        }\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCallCachedTTL(strategyConfig.name, 'getRewardTokens',3600),\n          this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'getIncentiveTokens',3600)\n        ]);\n\n        // Pick Senior Tranche by default\n        if (!trancheConfig){\n          trancheConfig = tokenConfig.AA;\n        }\n\n        const stakingRewards = trancheConfig ? trancheConfig.CDORewards.stakingRewards.map(tokenConfig => (tokenConfig.address.toLowerCase())) : null;\n        const govTokens = field === 'stakingRewards' && stakingRewards ? stakingRewards : (field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter(rewardTokenAddr => incentiveTokens && !incentiveTokens.map(addr => addr.toLowerCase()).includes(rewardTokenAddr.toLowerCase())) : incentiveTokens));\n\n        if (govTokens) {\n          govTokens.forEach(tokenAddress => {\n            const govTokenConfig = this.getTokenConfigByAddress(tokenAddress);\n            // Skip reward token if globally disabled\n            if (!govTokenConfig || !govTokenConfig.enabled) {\n              return;\n            }\n            // Skip reward token if not enabled for this specific tranche\n            const stakingRewardsTokenConfig = trancheConfig ? trancheConfig.CDORewards.stakingRewards.find(tokenConfig => tokenConfig.address.toLowerCase() === tokenAddress.toLowerCase()) : null;\n            if (stakingRewardsTokenConfig && !stakingRewardsTokenConfig.enabled) {\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n\n        // Add hard-coded tokens\n        if (tokenConfig[field] && typeof tokenConfig[field].forEach === 'function'){\n          tokenConfig[field].forEach( govToken => {\n            const govTokenConfig = this.getGlobalConfig(['stats','tokens',govToken.toUpperCase()]);\n            if (govTokenConfig){\n              output[govToken] = govTokenConfig;\n            }\n          });\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,tokenConfig,trancheConfig,stakingRewards,govTokens,output);\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field, token, tokenConfig, account, addGovTokens = true, addCurveApy = false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const showIdleAPR = internal_view && parseInt(internal_view) === 1;\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies', this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined') {\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken) {\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig) {\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)) {\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field) {\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([], account),\n          this.getCurveTokenBalance(account, true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance) {\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage) {\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n        break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1, redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)) {\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n        break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n        break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n        break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n        break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy', token, tokenConfig, account),\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve) {\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n        break;\n      case 'earningsPerc':\n        let [amountLent1, redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)) {\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n        break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp', token, tokenConfig, account);\n        if (depositTimestamp) {\n          const currTimestamp = parseInt(Date.now() / 1000);\n          output = (currTimestamp - depositTimestamp) / 86400;\n        }\n        break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig, addGovTokens);\n        }\n        break;\n      case 'userDistributionSpeed':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account, govTokenAvailableTokens);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n          if (output) {\n            output = this.fixDistributionSpeed(output, tokenConfig.distributionFrequency, tokenConfig.distributionMode);\n          }\n        }\n        break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance', 'props', 'tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens', tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output) {\n\n          output = this.fixTokenDecimals(output, govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency) {\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n              break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n              break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n              break;\n            case 'year':\n              output = output.times(blocksPerYear);\n              break;\n            default:\n              break;\n          }\n        }\n        break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n        }\n        break;\n      case 'apr':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n            break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n            if (tokenAprs && tokenAprs.avgApr !== null) {\n              output = tokenAprs.avgApr;\n            }\n            break;\n        }\n        break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()) {\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy) {\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY) {\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n        break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token], account),\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]) {\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig, firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n        break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account),\n          this.loadAssetField('earningsPerc', token, tokenConfig, account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc) {\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n        break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token], account) : false;\n        if (depositTimestamps && depositTimestamps[token]) {\n          output = depositTimestamps[token];\n        }\n        break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig, account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n        break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = {\n            address: this.getContractByName('DAI')._address\n          };\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig, govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()) {\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n        break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig, account);\n        break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getTokenBalance(token, account);\n          if (!output || output.isNaN()) {\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token, account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()) {\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n        break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token, account) : false;\n        if (idleTokenBalance) {\n          output = idleTokenBalance;\n        }\n        break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1, amountLent2, redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy', token, tokenConfig, account, false),\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2) {\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n        break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig, account, govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance', token, tokenConfig, account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account, govTokenAvailableTokens, token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1) {\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()) {\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n        break;\n      case 'earningsCurve':\n        let [amountLentCurve2, redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (!amountLentCurve2) {\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1) {\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n        break;\n      case 'earnings':\n        let [amountLent, redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (!amountLent) {\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2) {\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))) {\n          output = this.BNify(0);\n        }\n        break;\n      default:\n        break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken, blockNumber = 'latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken, blockNumber);\n    if (idleTokenSupply) {\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig, account, blockNumber = 'latest') => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n\n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))) {\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig, blockNumber = 'latest', timestamp = false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp) {\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp) - (60 * 60);\n      const endTimestamp = parseInt(timestamp) + (60 * 60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, endTimestamp, true);\n\n      let beforePrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      let afterPrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      tokenData.forEach(d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp) - parseInt(timestamp));\n        if (parseInt(d.timestamp) < parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff < beforePrice.timeDiff)) {\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp) > parseInt(timestamp) && !afterPrice.timeDiff) {\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data) {\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()) {\n      tokenPrice = this.fixTokenDecimals(tokenPrice, decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)) {\n      tokenPrice = this.BNify(1);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice);\n  }\n  clearCachedData = (clear_all = false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function') {\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData(null, clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL);\n    }\n    return data;\n  }\n  addKeyToCachedDataWithLocalStorage = (parent_key, key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function' && JSON.stringify(data).length<=3000000) {\n      const cachedData = this.getCachedDataWithLocalStorage(parent_key, {});\n      cachedData[key] = data;\n      this.props.setCachedData(parent_key, cachedData, TTL, true);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL, true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key, defaultValue = null) => {\n    return this.getCachedData(key, defaultValue, true);\n  }\n  getCachedData = (key, defaultValue = null, useLocalStorage = false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    const requiredNetworkId = this.getRequiredNetworkId();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[requiredNetworkId] && this.props.cachedData[requiredNetworkId][key]) {\n      cachedData = this.props.cachedData[requiredNetworkId][key];\n      // Get cache from local storage\n    } else if (useLocalStorage) {\n      const allCachedData = this.getStoredItem('cachedData');\n      if (allCachedData && allCachedData[requiredNetworkId] && allCachedData[requiredNetworkId][key]) {\n        cachedData = allCachedData[requiredNetworkId][key];\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || parseInt(cachedData.expirationDate) >= parseInt(Date.now()/1000));\n\n    // console.log(`getCachedDataWithLocalStorage - ${requiredNetworkId} - ${key}`,cachedData,cachedDataValid);\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid) {\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr, tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, walletAddr, false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)) {\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url, '_blank', 'noopener');\n  }\n  getActiveCoverages = async (account = null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account) {\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now() / 1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools', 'coverProtocol']);\n    if (coverProtocolConfig.enabled) {\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name, tokenConfig.address, tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name, account);\n        if (balance && balance.gt(0)) {\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp <= currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n    if (nexusMutualConfig.enabled) {\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach(coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance', 'nexusMutual', 'label']);\n        const protocolImage = this.getGlobalConfig(['insurance', 'nexusMutual', 'image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance', 'nexusMutual', 'imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil) <= currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n\n    await Promise.all([\n      this.props.initContract(incidentsInfo.name, incidentsInfo.address, incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name, feeDistributorConfig.address, feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n      this.getContractEvents(feeDistributorConfig.name, 'CoverBought', fromBlock, 'latest', {filter: { buyer: account } }),\n      this.getContractEvents(feeDistributorConfig.name, 'ClaimSubmitted', fromBlock, 'latest', {filter: { buyer: account } })\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents, async (cover) => {\n      // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find(claim => parseInt(claim.returnValues.coverId) === coverId);\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name, 'getCover', [coverId]),\n        this.getContractEvents(incidentsInfo.name, 'IncidentAdded', cover.blockNumber, 'latest', { filter: { productId: cover.contractAddress } })\n      ]);\n\n      if (!coverDetails) {\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents ? incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n          this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n          this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n          parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      }) : [];\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find(tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase());\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured, yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find(underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase());\n      const expiryDate = this.strToMoment(coverDetails.validUntil * 1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name, 'getPayoutOutcome', [claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent) {\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find(log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase()) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data, 16), coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured, coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount, coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token, account, false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice, yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance, yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2) + '%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? { ...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date) } : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint, 1800, true);\n      if (transactions && typeof transactions.result === 'object') {\n        return transactions.result.filter(tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase());\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account = null, filter_by_status = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools', 'batchDeposit']);\n    if (!batchDepositConfig.enabled) {\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name, 'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex); batchIndex++) {\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name, 'batchTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchRedeemedTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchDeposits', [this.props.account, batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null) {\n          batchTotals = this.fixTokenDecimals(batchTotal, tokenConfig.decimals);\n        }\n        if (batchDeposit !== null) {\n          batchRedeem = this.fixTokenDecimals(batchRedeem, 18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit, tokenConfig.decimals);\n          if (batchDeposit.gt(0)) {\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)) {\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status) {\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, batchedDeposits);\n  }\n  getETHBalance = async (walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName, walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    // Init token contract if not initialized yet\n    const tokenContract = this.getContractByName(contractName);\n    if (!tokenContract){\n      const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName.toUpperCase()]);\n      if (tokenConfig){\n        await this.props.initContract(contractName, tokenConfig.address, ERC20);\n      } else {\n        return false;\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName, walletAddr, blockNumber)\n    ]);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance, 30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ', contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function') {\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url, props, callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props) {\n      Object.keys(props).forEach((attr, i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function') {\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function () {\n          if (script.readyState === 'loaded' || script.readyState === 'complete') {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)) {\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, totalSupply);\n  }\n  getTokenPrice = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName, 'tokenPrice', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice, 60);\n  }\n  getContractBalance = async (contractName, address, blockNumber = 'latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, balance, 30);\n  }\n  getProtocolBalance = async (contractName, address) => {\n    return await this.getContractBalance(contractName, address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs) {\n      const result = {\n        aprs: aprs[1],\n        addresses: aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey, result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxReceipt = async (txHash, web3 = null) => {\n    web3 = web3 || this.props.web3;\n    if (!web3 || !web3.eth) {\n      return null;\n    }\n    return await (new Promise(async (resolve, reject) => {\n      web3.eth.getTransactionReceipt(txHash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n  getTxDecodedLogs = async (tx, logAddr, decodeLogs, storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt) {\n      txReceipt = await (new Promise(async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n          if (err) {\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt) {\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length) {\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs, internalTransfers[0].data, internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    if (!this.props.web3) {\n      return false;\n    }\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber='latest') => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n    \n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n\n    if (blockInfo){\n      const blockInfoToSave = {\n        hash:blockInfo.hash,\n        number:blockInfo.number,\n        timestamp:blockInfo.timestamp\n      };\n      const TTL  = blockNumber === 'latest' ? this.getGlobalConfig(['cache','TTL']) : null;\n      this.setCachedDataWithLocalStorage(cachedDataKey, blockInfoToSave, TTL);\n      return blockInfo;\n    }\n\n    return null;\n  }\n  getContractPastEvents = async (contractName, methodName, params = {}) => {\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    const cachedDataKey = `getContractPastEvents_${contractName}_${methodName}_${JSON.stringify(params)}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    let TTL = this.getGlobalConfig(['cache','TTL']);\n    if (params.toBlock && params.toBlock !== 'latest') {\n      TTL = null;\n    }\n\n    const events = await contract.getPastEvents(methodName, params);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, events, TTL);\n  }\n\n  genericContractCallCachedTTL = async (contractName, methodName, TTL = 180, params = [], callParams = {}, blockNumber = 'latest',) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    // console.log(`genericContractCallCached - ${cachedDataKey}`,cachedData);\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  cachedContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    return await this.genericContractCallCached(contractName, methodName, params, callParams, blockNumber, TTL);\n  }\n\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', count = 0) => {\n\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try {\n      // console.log(`genericContractCall - ${contractName} - ${methodName} - [${params.join(',')}]`);\n      const value = await contract.methods[methodName](...params).call(callParams, blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n      // if (count<=3){\n      //   await this.asyncTimeout(1000);\n      //   return await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, count+1);\n      // }\n    }\n  }\n  asyncForEach = async (array, callback, async = true) => {\n    let output = [];\n    if (async) {\n      output = await Promise.all(array.map((c, index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        output.push(await callback(array[index], index, array));\n      }\n    }\n    return output;\n  }\n  apr2apy = (apr) => {\n    return this.BNify((this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1).toFixed(20));\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token, tokenConfig.idle.address);\n    if (unlentBalance) {\n      unlentBalance = this.fixTokenDecimals(unlentBalance, tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig, addGovTokens = true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent) {\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getLastAllocations = async (tokenConfig) => {\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    const aprs = await this.getAprs(tokenConfig.idle.token);\n    const allAvailableTokens = aprs ? aprs.addresses : null;\n    if (allAvailableTokens) {\n      const tokenAllocations = await this.asyncForEach(allAvailableTokens, async (protocolAddr, index) => {\n        return await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [index]);\n      });\n      return allAvailableTokens.reduce((lastAllocations, protocolAddr, index) => {\n        lastAllocations[protocolAddr.toLowerCase()] = tokenAllocations[index];\n        return lastAllocations;\n      }, {});\n    }\n\n    return {};\n  }\n  getTokenAllocation = async (tokenConfig, protocolsAprs = false, addGovTokens = true) => {\n\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance: null,\n      totalAllocation: null,\n      protocolsAllocations: null,\n      protocolsAllocationsPerc: null,\n      totalAllocationConverted: null,\n      totalAllocationWithUnlent: null,\n      totalAllocationWithUnlentConverted: null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      lastAllocations,\n      tokenUsdConversionRate,\n      totalSupply,\n      govTokensBalances,\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getLastAllocations(tokenConfig),\n      this.getTokenConversionRate(tokenConfig, false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n    ]);\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice).minus(unlentBalance);\n\n    if (lastAllocations) {\n      Object.keys(lastAllocations).forEach((protocolAddr) => {\n        const protocolInfo = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n        if (protocolInfo && protocolInfo.enabled) {\n          const protocolAllocationPerc = this.BNify(lastAllocations[protocolAddr]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance) {\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total) {\n      if (tokenUsdConversionRate) {\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate) {\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs) {\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs, protocolsAllocations, totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey, tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName, 'token0'),\n      this.genericContractCallCached(contractName, 'token1'),\n      this.genericContractCallCached(contractName, 'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply) {\n      const token0_config = {\n        address: token0_address\n      };\n      const token1_config = {\n        address: token1_address\n      };\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig, token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig, token1_config)\n      ]);\n\n      if (token0_price && token1_price) {\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0], 18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1], 18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply, 18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom, tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter', 'getAmountsIn', [one.toFixed(), path]);\n\n      // console.log('getSushiswapConversionRate',path,res);\n\n      if (res) {\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest', useWETH=true) => {\n\n    if (tokenConfigDest.addressForPrice) {\n      tokenConfigDest = Object.assign({}, tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (useWETH && WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter', 'getAmountsIn', [one.toFixed(), path], {}, blockNumber);\n\n      if (unires) {\n        const price = this.BNify(unires[0]).div(one);\n        const TTL = blockNumber === 'latest' ? this.getGlobalConfig(['cache','TTL']) : null;\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price, TTL);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account, enabledTokens = []) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach(tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]) {\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action) {\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n          break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])) {\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)) {\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)) {\n        Object.keys(idleTokensBalances).forEach(token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)) {\n            if (tokenBalance.gt(remainingCurveTokens)) {\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts, max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPYs = async (path=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        if (path){\n          let curveApy = this.getArrayPath(path, results.data);\n          if (curveApy) {\n            curveApy = this.BNify(curveApy).times(100);\n            if (!this.BNify(curveApy).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n            }\n          }\n        } else {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, results.data);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path, results.data);\n        if (curveApy) {\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()) {\n            return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies) {\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce((availableTokens, token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled) {\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    }, {});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber) {\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice, prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name, 'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name, 'get_virtual_price', [], {}, blockNumber - blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice) {\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account = null, fixDecimals = true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name, account, fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber = 'latest', fixDecimals = true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name, 'get_virtual_price', [], {}, blockNumber);\n    if (curveTokenPrice) {\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals) {\n        const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice, curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice, curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice) {\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve', 'depositContract']);\n    if (depositContractInfo) {\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi) {\n        curveDepositContract = await this.props.initContract(depositContractInfo.name, depositContractInfo.address, depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve', 'zapContract']);\n    if (zapContractInfo) {\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi) {\n        curveZapContract = await this.props.initContract(zapContractInfo.name, zapContractInfo.address, zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve', 'poolContract']);\n    if (poolContractInfo) {\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi) {\n        curvePoolContract = await this.props.initContract(poolContractInfo.name, poolContractInfo.address, poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve', 'migrationContract']);\n    if (migrationContractInfo) {\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi) {\n        migrationContract = await this.props.initContract(migrationContractInfo.name, migrationContractInfo.address, migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account = null, curveTokenBalance = null, max_slippage = null) => {\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage) {\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]);\n        if (curveIdleTokens) {\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage) {\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account = null, curveTokenBalance = null, fixDecimals = false, useCoinIndex = false) => {\n\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals) {\n          tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token, amount, deposit = false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount) > 0) {\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount, 18);\n        if (!deposit) {\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount, curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts, deposit = true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract) {\n      return await this.genericContractCall(migrationContract.name, 'calc_token_amount', [amounts, deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token, amount, deposit = true, uneven_amounts = null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract) {\n\n      const n_coins = this.getGlobalConfig(['curve', 'params', 'n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)) {\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins) {\n        amounts = await this.getCurveAmounts(token, amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name, 'get_virtual_price'),\n        this.genericContractCall(depositContract.name, 'calc_token_amount', [amounts, deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount) {\n        amount = this.fixTokenDecimals(amount, 18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice, 18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount, 18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit) {\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit) {\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig, aTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const currentNetworkId = this.getRequiredNetworkId();\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find(p => p.name === stkAAVETokenConfig.protocol);\n\n    // console.log('getStkAaveDistribution_1',tokenConfig.idle.token,aTokenConfig.token);\n    const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], stkAAVETokenConfig) || [];\n\n    if (!aTokenConfig || disabledTokens.includes(tokenConfig.idle.token)) {\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token, 'getIncentivesController');\n\n    if (!aaveIncentivesController_address) {\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aaveIncentivesController_address}`;\n    await this.props.initContract(IAaveIncentivesController_name, aaveIncentivesController_address, IAaveIncentivesController);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig, false, false),\n      this.genericContractCall(IAaveIncentivesController_name, 'assets', [aTokenConfig.address]),\n    ]);\n\n    // console.log('getStkAaveDistribution',IAaveIncentivesController_name,aTokenConfig.address,assetData);\n\n    if (assetData && tokenAllocation) {\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)) {\n        if (!aTokenIdleSupply) {\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token, 'balanceOf', [tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData.emissionPerSecond);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network', 'secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize) {\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        if (!this.BNify(aaveDistribution).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find(p => (p.name === stkAAVETokenConfig.protocol));\n      if (aTokenInfo) {\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getStkAaveDistribution(tokenConfig, null, false),\n        ]);\n\n        if (aaveDistribution && userPoolShare && !this.BNify(aaveDistribution).isNaN() && !this.BNify(userPoolShare).isNaN()) {\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getWMaticApr = async (token, tokenConfig, maticConversionRate = null) => {\n    const wMaticTokenConfig = this.getGlobalConfig(['govTokens', 'WMATIC']);\n    if (!wMaticTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getWMaticApr_${tokenConfig.idle.token}_${maticConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let wMaticApr = this.BNify(0);\n    const distributionSpeed = await this.getStkAaveDistribution(tokenConfig);\n\n    if (distributionSpeed && this.BNify(distributionSpeed).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!maticConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: wMaticTokenConfig.addressForPrice || wMaticTokenConfig.address\n          };\n          maticConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!maticConversionRate || maticConversionRate.isNaN()) {\n          maticConversionRate = this.BNify(1);\n        }\n      }\n\n      const wMaticValue = this.BNify(maticConversionRate).times(distributionSpeed);\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),tokenAllocation);\n\n      if (tokenAllocation) {\n        wMaticApr = wMaticValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),wMaticValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),wMaticApr.toFixed());\n\n        if (!this.BNify(wMaticApr).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, wMaticApr);\n        }\n      }\n    }\n\n    return wMaticApr;\n  }\n  getStkAaveApr = async (token, tokenConfig, aaveConversionRate = null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    if (!stkAAVETokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()) {\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      if (tokenAllocation) {\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token, tokenConfig, cTokenIdleSupply = null, compConversionRate = null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens', 'COMP']);\n    if (!COMPTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig, cTokenIdleSupply);\n\n    if (compDistribution) {\n\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      // Get COMP conversion rate\n      if (!compConversionRate) {\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig, COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()) {\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      console.log('getCompAPR', tokenConfig.idle.token, compConversionRate.toFixed(5), compDistribution.toFixed(5), compValue.toFixed(5), tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation) {\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller', 'compSupplySpeeds', [cTokenAddress]);\n    if (compSpeed) {\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig, cTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n    if (cTokenInfo) {\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)) {\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply) {\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply) {\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token, tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply) {\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network', 'blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize) {\n              compDistribution = this.fixTokenDecimals(compDistribution, 18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n      if (cTokenInfo) {\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getCompDistribution(tokenConfig, null, false),\n        ]);\n\n        if (compDistribution && userPoolShare) {\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens = null) => {\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr, tokenAllocation] = await Promise.all([\n        this.getCompAPR(token, tokenConfig),\n        this.getTokenAllocation(tokenConfig, false, false)\n      ]);\n\n      if (compApr && tokenAllocation) {\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function () {\n      return this.reduce(function (pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function () {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function () {\n      return this.sum() / this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, 7200, 'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length - 1];\n\n        rates.forEach(r => {\n          if (!protocols) {\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach(p1 => {\n              const foundProtocol = tokenConfig.protocols.find(p2 => (p2.address.toLowerCase() === p1.protocolAddr.toLowerCase()));\n              if (foundProtocol) {\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach(p => {\n              header.push('APR ' + p.name);\n              header.push('SCORE ' + p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp * 1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach(pInfo => {\n            const pData = r.protocolsData.find(p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()));\n            let pRate = '';\n            let pScore = '';\n            if (pData) {\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined') {\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()) {\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n                if (!isNaN(parseFloat(pRate))) {\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))) {\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach(p => {\n          const avgRate = aprAvg[p].sum() / aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach(p => {\n          const avgScore = scoreAvg[p].sum() / scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken = null, availableTokens = null, convertToken = null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address, convertToken, enabledTokens);\n      if (compTokenBalance && compTokenBalance.total) {\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken) {\n      this.idleGovToken = new IdleGovToken(this.props);\n    } else {\n      this.idleGovToken.setProps(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getGovTokensFarming = () => {\n    const output = {};\n    const availableTokens = this.props.availableTokens;\n\n    Object.keys(availableTokens).forEach(token => {\n      const tokenGovTokens = this.getTokenGovTokens(availableTokens[token]);\n      Object.keys(tokenGovTokens).forEach(govToken => {\n        output[govToken] = tokenGovTokens[govToken];\n      });\n    });\n\n    return output;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const currentNetworkId = this.getRequiredNetworkId();\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach(govToken => {\n      const govTokenConfig = govTokens[govToken];\n      const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], govTokenConfig) || [];\n      if (!govTokenConfig.enabled || disabledTokens.includes(tokenConfig.idle.token) || (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(currentNetworkId))) {\n        return;\n      }\n\n      if (govTokenConfig.protocol === 'idle') {\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find(p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()))\n        if (foundProtocol) {\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed, frequency = 'day', mode = 'block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network', 'secondsPerYear']));\n    const multipliers = {\n      'day': {\n        'block': blocksPerYear.div(365.242199),\n        'second': secondsPerYear.div(365.242199)\n      },\n      'week': {\n        'block': blocksPerYear.div(52.1429),\n        'second': secondsPerYear.div(52.1429)\n      },\n      'month': {\n        'block': blocksPerYear.div(12),\n        'second': secondsPerYear.div(12)\n      },\n      'year': {\n        'block': blocksPerYear.div(1),\n        'second': secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()) {\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account, tokenConfig = null, enabledTokens = null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken) {\n        case 'COMP':\n          output = await this.getCompUserDistribution(account, availableTokens);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account, availableTokens);\n          break;\n        default:\n          break;\n      }\n\n      if (output) {\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency) {\n          output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig, enabledTokens = null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n\n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken) {\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig, null, false);\n          break;\n        case 'WMATIC':\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig, null, false);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n          break;\n        default:\n          break;\n      }\n\n      if (govSpeed) {\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode) {\n          govSpeed = this.fixDistributionSpeed(govSpeed, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token, tokenConfig, enabledTokens = null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false) {\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken) {\n        case 'WMATIC':\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation) {\n                const aTokenConfig = tokenConfig.protocols.find(p => (p.name === govTokenConfig.protocol));\n                if (aTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]) {\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getCompAPR(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation) {\n                const cTokenConfig = tokenConfig.protocols.find(p => (p.name === 'compound'));\n                if (cTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]) {\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode) {\n            case 'apr':\n              output = await idleGovToken.getAPR(token, tokenConfig);\n              break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output) {\n                output = this.fixTokenDecimals(output, 18);\n                output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n              }\n              break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n              break;\n            default:\n              break;\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)) {\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address = null, convertToken = 'DAI', enabledTokens = null) => {\n    if (!address) {\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const destTokenConfig = {\n        address: govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token, address);\n\n      if (govTokenBalance) {\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken) {\n          const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance, govTokens[token].decimals, tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total) {\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, govTokensBalances);\n  }\n  getTokenIcon = (token) => {\n    if (!token){\n      return null;\n    }\n    const tokenConfigStats = this.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n    return tokenConfigStats && tokenConfigStats.icon ? tokenConfigStats.icon : `images/tokens/${token}.svg`;\n  }\n  getTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const tokensConfigs = this.getGlobalConfig(['stats','tokens']);\n    let foundToken = Object.keys(tokensConfigs).find(token => {\n      const tokenConfig = tokensConfigs[token];\n      return tokenConfig.enabled && tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase();\n    });\n    let foundTokenConfig = null;\n    if (foundToken){\n      foundTokenConfig = tokensConfigs[foundToken];\n      foundTokenConfig.token = foundToken;\n    } else {\n      foundTokenConfig = this.getGovTokenConfigByAddress(address);\n    }\n    return foundTokenConfig;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find(tokenConfig => (tokenConfig.enabled && tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase()));\n  }\n  getGovTokensUserTotalBalance = async (account = null, availableTokens = null, convertToken = null, checkShowBalance = true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${availableTokens ? JSON.stringify(Object.keys(availableTokens)) : 'null'}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, null, checkShowBalance);\n    if (govTokensUserBalances) {\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce((acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account, tokenConfig) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token, account);\n    if (govTokensAmounts) {\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token, govTokenIndex);\n\n        if (govTokenAddress) {\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig) {\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token, govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'govTokens', [govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress, null);\n  }\n  getGovTokensUserAmounts = async (token, account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'getGovTokensAmounts', [account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account = null, availableTokens = null, convertToken = null, govTokenConfigForced = null, checkShowBalance = false) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token, account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts) {\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token, govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress) {\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()) {\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken) {\n                const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n                if (fromTokenConfig) {\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, govTokenConfig);\n                  } catch (error) {\n\n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount, govTokenConfig.decimals, tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]) {\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee) {\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig = null, account = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig) {\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent', tokenConfig.token, tokenConfig, account),\n      this.loadAssetField('redeemableBalance', tokenConfig.token, tokenConfig, account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance) {\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig, account = null, availableTokens = null, convertToken = null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce((totalTVL, tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()) {\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    }, this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens: {},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL, token, tokenConfig, isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens) {\n          await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken, tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n            ]);\n\n            if (govTokenBalance && govTokenConversionRate) {\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance, govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()) {\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n          const oldTokenConfig = Object.assign({}, tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols) {\n            oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n              if (foundProtocol) {\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply) {\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply, 18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL, token, oldTokenConfig, isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()) {\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint[networkId], false, config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length > 0) {\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey, latestFeed, endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAvailableTokenAddress = (token, strategy) => {\n    const networkId = this.getRequiredNetworkId();\n    const tokenConfig = this.getArrayPath([networkId, strategy, token], availableTokens);\n    return tokenConfig ? tokenConfig.address : null;\n  }\n  getTrancheAggregatedStats = async (tranches = null) => {\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    if (!tranches || !tranches.length) {\n      tranches = Object.keys(this.getGlobalConfig(['tranches']));\n    }\n    await this.asyncForEach(Object.keys(this.props.availableTranches), async (protocol) => {\n      const protocolConfig = this.props.availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(tranches, async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const [\n            trancheApy,\n            tranchePool\n          ] = await Promise.all([\n            this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, null),\n            this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, null)\n          ]);\n\n          avgAPY = avgAPY.plus(this.BNify(trancheApy).times(this.BNify(tranchePool)));\n          totalAUM = totalAUM.plus(this.BNify(tranchePool));\n\n          // console.log('getTrancheAggregatedStats',protocol, token, tranche, trancheApy.toFixed(5), tranchePool.toFixed(5),totalAUM.toFixed(5));\n        });\n      });\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    // console.log('getTrancheAggregatedStats',avgAPY.toFixed(5),totalAUM.toFixed(5));\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats = async (addGovTokens = true, allNetworks = false) => {\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'tvls']);\n    let networkIds = [networkId];\n    if (allNetworks) {\n      networkIds = Object.keys(endpointInfo.endpoint);\n    }\n\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n\n    await this.asyncForEach(networkIds, async (networkId) => {\n      let tvls = null;\n      try {\n        tvls = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n      } catch (err){\n        // console.log('getAggregatedStats - ERROR', err);\n      }\n\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalTVL)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalTVL));\n      }\n    });\n\n    if (!totalAUM || this.BNify(totalAUM).isNaN() || this.BNify(totalAUM).lte(0)){\n      avgAPY = this.BNify(0);\n      totalAUM = this.BNify(0);\n      let tvls = await this.getAggregatedStats_chain();\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalTVL)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalTVL));\n      }\n    }\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats_chain = async (addGovTokens = true, networkId = null) => {\n\n    networkId = networkId || this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}_${networkId}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())) {\n      return {\n        avgAPR: this.BNify(cachedData.avgAPR),\n        avgAPY: this.BNify(cachedData.avgAPY),\n        totalAUM: this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategiesNetworks), async (networkId) => {\n      const strategies = this.props.availableStrategiesNetworks[networkId];\n      await this.asyncForEach(Object.keys(strategies), async (strategy) => {\n        const isRisk = strategy === 'risk';\n        const availableTokens = strategies[strategy];\n        await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n          const tokenConfig = availableTokens[token];\n          const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n          const tokenAprs = await this.getTokenAprs(tokenConfig, tokenAllocation, addGovTokens);\n          if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()) {\n            const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent, token, tokenConfig, isRisk);\n            totalAUM = totalAUM.plus(tokenAUM);\n            // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n            if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()) {\n              avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n              avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n            }\n          }\n\n          // Add Gov Tokens\n          const govTokens = this.getTokenGovTokens(tokenConfig);\n          if (govTokens) {\n            await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n              const govTokenConfig = govTokens[govToken];\n              const [\n                tokenBalance,\n                tokenConversionRate\n              ] = await Promise.all([\n                this.getProtocolBalance(govToken, tokenConfig.idle.address),\n                this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n              ]);\n\n              if (tokenBalance && tokenConversionRate) {\n                const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance, govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n                if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()) {\n                  // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                  totalAUM = totalAUM.plus(tokenBalanceConverted);\n                }\n              }\n            });\n          }\n\n          // Get old token allocation\n          if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n            const oldTokenConfig = Object.assign({}, tokenConfig);\n            oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n            oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols) {\n              oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n                if (foundProtocol) {\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig, false, false);\n            if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()) {\n              const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation, token, oldTokenConfig, isRisk);\n              totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n              // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n            }\n          }\n        });\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null) {\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy = null) => {\n\n    if (!this.props.availableStrategies || !this.props.account) {\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy) {\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig, this.props.account);\n\n        if (migrationEnabled) {\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol = null) => {\n    if (!this.props.account) {\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'availableTokens']);\n    if (protocolsTokens) {\n      await this.asyncForEach(Object.keys(protocolsTokens), async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase()) {\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi) {\n          tokenContract = await this.props.initContract(tokenConfig.token, tokenConfig.address, tokenConfig.abi);\n        }\n        if (tokenContract) {\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token, this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)) {\n            tokenBalances[token] = {\n              tokenConfig,\n              balance: tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  getTokenConversionRateField = (token) => {\n    return this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'conversionRateField']);\n  }\n  convertTrancheTokenBalance = async (tokenBalance, tokenConfig, blockNumber='latest') => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n\n    const conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n    if (!conversionRateField) {\n      return tokenBalance;\n    }\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRateUniswap(tokenConfig,blockNumber);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance, token, tokenConfig, isRisk = false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)) {\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig, isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  getAvgAPYStats = async (address, isRisk, startTimestamp = null, endTimestamp = null) => {\n    const apiResults = await this.getTokenApiData(address, isRisk, startTimestamp, endTimestamp, true, 7200);\n    if (apiResults && apiResults.length) {\n      const apr = apiResults.reduce((sum, r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate, 18);\n        return sum.plus(idleRate);\n      }, this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n  getTokenConversionRateUniswap = async (tokenConfig, blockNumber='latest') => {\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const statsTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : null;\n\n    // Replace from token address\n    if (statsTokenConfig.addressForPriceFrom){\n      DAITokenConfig.address = statsTokenConfig.addressForPriceFrom;\n    }\n\n    const ToTokenConfig = statsTokenConfig || tokenConfig;\n\n    // Don't use WETH in the path\n    const useWETH = !statsTokenConfig.addressForPriceFrom;\n\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig, blockNumber, useWETH);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return conversionRate;\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig, isRisk, conversionRateField = null, count = 0) => {\n\n    if (!conversionRateField) {\n      conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n      if (!conversionRateField) {\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, null, 'desc', 1);\n    if (tokenData && tokenData.length) {\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()) {\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField], 18);\n        if (!this.BNify(conversionRate).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : tokenConfig;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n    }\n\n    if (count < 3) {\n      return await this.getTokenConversionRate(tokenConfig, isRisk, conversionRateField, count + 1);\n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config),\n      this.getTokenAllocation(tokenConfig, false, false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation) {\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach(protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)) {\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length > 0 ? tokenData[0].protocolsData.find(p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase())) : null;\n          if (protocolInfo) {\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)) {\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig) {\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()) {\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)) {\n      tokenScore = await this.getTokenScoreApi(tokenConfig, isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'scores']);\n\n    if (!apiInfo.endpoint[networkId]) {\n      return this.BNify(0);\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config);\n\n    if (scores && scores.length > 0) {\n      let tokenData = scores.find(s => s.address.toLowerCase() === tokenConfig.address.toLowerCase());\n      if (tokenData) {\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)) {\n          // Set cached data\n          return this.setCachedData(cachedDataKey, tokenScore);\n          // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now() / 1000);\n          const startTimestamp = parseInt(timestamp) - (60 * 60 * 24);\n          tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, null, true, null, 'DESC');\n\n          const filteredTokenData = tokenData.filter(d => (this.BNify(d.idleScore).gt(0)));\n          if (filteredTokenData.length) {\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig, tokenAllocation = false, addGovTokens = true, showIdleAPR = false) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle) {\n      return tokenAprs;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${networkId}_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    // console.log('getTokenAprs-1',tokenConfig.idle.token,networkId,cachedDataKey,cachedData);\n\n    if (cachedData && (cachedData.avgApr && this.BNify(cachedData.avgApr).gt(0)) && (cachedData.avgApy && this.BNify(cachedData.avgApy).gt(0))) {\n      return {\n        avgApr: this.BNify(cachedData.avgApr),\n        avgApy: this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCall(tokenConfig.idle.token, 'getAvgAPR');\n    if (tokenAprs.avgApr) {\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr, 18);\n    }\n\n    // console.log('getTokenAprs-2',tokenConfig.idle.token,networkId,this.getContractByName(tokenConfig.idle.token)._address,tokenAprs);\n\n    if (tokenAprs.avgApr) {\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = showIdleAPR || this.getGlobalConfig(['govTokens', 'IDLE', 'showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens', 'IDLE', 'enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR) {\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token, tokenConfig);\n        if (idleAPR) {\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs-3',tokenConfig.idle.token,networkId,tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()) {\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()) {\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value, decimals = 3, maxPrecision = 5, minPrecision = 0) => {\n\n    const isNegative = parseFloat(value) < 0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\", \"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1, maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value >= 1000) {\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2, decimals) : null;\n      newValue = parseInt(newValue).toString() + (decimalPart ? '.' + decimalPart : '');\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue >= 1 && (newValue.length - 1) > maxPrecision) {\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length - 1) < minPrecision) {\n      const difference = minPrecision - (newValue.length - 1);\n      const append = this.BNify(value).abs().toString().replace('.', '').substr((newValue.length - 1), difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative) {\n      newValue = '-' + newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance, label, decimals, maxLen, highlightedDecimals) {\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.', '').length;\n    if (numLen > maxLen) {\n      decimals = Math.max(0, decimals - (numLen - maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance % 1).toPrecision(decimals).substr(2, decimals);;\n    decPart = (decPart + (\"0\".repeat(decimals))).substr(0, decimals);\n\n    if (highlightedDecimals) {\n      const highlightedDec = decPart.substr(0, highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? (<>{highlightedIntPart}<small style={{ fontSize: '70%' }}>{decPart}</small> <Text.span fontSize={[1, 2]}>{label}</Text.span></>) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? (<>{intPart}<small>.{decPart}</small>{label !== '%' ? ' ' : null}{label ? <Text.span fontSize={[1, 2]}>{label}</Text.span> : null}</>) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver: false\n  }\n\n  setMouseOver(mouseOver) {\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p: 0,\n      border: 1,\n      boxShadow: 1,\n      borderRadius: 2,\n      borderColor: null,\n      position: 'relative',\n      minHeight: 'initial',\n      backgroundColor: 'cardBg'\n    };\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length) {\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    if (isActive || (isInteractive && this.state.mouseOver)) {\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]) {\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length > 0 &&\n          <Flex\n            mt={[3, 4]}\n            ml={[3, 4]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            {...this.props.titleParentProps}\n          >\n            <Heading.h4\n              fontWeight={4}\n              fontSize={[2, 3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Heading.h4>\n            {\n              this.props.description && this.props.description.length > 0 &&\n              <Tooltip\n                placement={'top'}\n                message={this.props.description}\n              >\n                <Icon\n                  ml={2}\n                  name={\"Info\"}\n                  size={'1em'}\n                  color={'cellTitle'}\n                />\n              </Tooltip>\n            }\n\n          </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={isInteractive ? e => this.props.handleClick(this.props) : null}\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (!fieldInfo || fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        const CustomComponent = fieldInfo.fieldComponent;\n\n                        let fieldProps = fieldInfo.props;\n\n                        // Merge with funcProps\n                        if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                          fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                        }\n\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            {\n                              CustomComponent ? (\n                                <CustomComponent\n                                  {...this.props}\n                                  {...fieldProps}\n                                />\n                              ) : (\n                                <FieldComponent\n                                  {...this.props}\n                                  fieldInfo={fieldInfo}\n                                  colProps={colInfo.props}\n                                  parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                />\n                              )\n                            }\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                return (\n                  <ImageButton\n                    caption={token}\n                    imageSrc={imageSrc}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              {\n                this.props.children ?\n                  this.props.children\n                : this.props.buyText ? (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} mt={3} dangerouslySetInnerHTML={{__html:this.props.buyText}}></Text>\n                ) : (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]}>\n                    {\n                      (this.props.showInline && this.props.buyToken ? ( Object.keys(this.state.availableMethods).length>0 ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `Ops... you don't have any ${this.props.buyToken} in your wallet.` ) : `How do you prefer to buy ${this.state.selectedToken}?`)\n                    }\n                  </Text>\n                )\n              }\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  width={1}\n                  maxWidth={this.props.showInline ? '31em' : 'initial'}\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={imageSrc} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nimport TrancheStakingRewards from '../contracts/TrancheStakingRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      token:'DAI',\n      decimals:18,\n      protocol:'idle',\n      blockNumber:13054628,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleDAIYield'\n      },\n      description:'This strategy accrue additional interest after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      messages:{\n        withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI AA',\n        blockNumber:13054628,\n        name:'AA_idleDAIYield',\n        token:'AA_idleDAIYield',\n        address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:false,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI BB',\n        blockNumber:13054628,\n        name:'BB_idleDAIYield',\n        token:'BB_idleDAIYield',\n        address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n      }\n    },\n    FEI:{\n      token:'FEI',\n      decimals:18,\n      protocol:'idle',\n      blockNumber:13575397,\n      address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleFEIYield',\n        address:'0x77648a2661687ef3b05214d824503f6717311596'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleFEIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_AA',\n          address:'0x8fcD21253AaA7E228531291cC6f644d13B3cF0Ba',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleFEI AA',\n        blockNumber:13575397,\n        name:'AA_idleFEIYield',\n        token:'AA_idleFEIYield',\n        address:'0x9cE3a740Df498646939BcBb213A66BBFa1440af6'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        label:'idleFEI BB',\n        blockNumber:13575397,\n        name:'BB_idleFEIYield',\n        token:'BB_idleFEIYield',\n        address:'0x2490D810BF6429264397Ba721A488b0C439aA745'\n      }\n    }\n  },\n  lido:{\n    stETH:{\n      abi:ERC20,\n      decimals:18,\n      token:'stETH',\n      protocol:'lido',\n      blockNumber:13776954,\n      address:'0xae7ab96520de3a18e5e111b5eaab095312d7fe84',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_lido_stETH',\n        address:'0x34dcd573c5de4672c8248cd12a99f875ca112ad8'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_lido_stETH'\n      },\n      messages:{\n        buyInstructions:'To get stETH token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://stake.lido.fi\">Lido ETH staking</a>.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'exit',\n          rewards:'earned',\n          claim:'getReward',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          rewardsRate:'rewardRate',\n          stakedBalance:'balanceOf',\n          periodFinish:'periodFinish'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:false,\n          stakingRewards:[\n            {\n              token:'LDO',\n              enabled:true,\n              address:'0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n            }\n          ],\n          abi:TrancheStakingRewards,\n          name:'TrancheStakingRewards_lido_stETH_AA',\n          address:'0xd7c1b48877a7dfa7d51cf1144c89c0a3f134f935'\n        },\n        blockNumber:13776954,\n        name:'AA_lido_stETH',\n        token:'AA_lido_stETH',\n        label:'lido stETH AA',\n        address:'0x2688fc68c4eac90d9e5e1b94776cf14eade8d877'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_lido_stETH_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13776954,\n        name:'BB_lido_stETH',\n        token:'BB_lido_stETH',\n        label:'lido stETH BB',\n        address:'0x3a52fa30c33caf05faee0f9c5dfe5fd5fe8b3978'\n      }\n    }\n  },\n  /*\n  mstable:{\n    mUSD:{\n      abi:ERC20,\n      decimals:18,\n      token:'mUSD',\n      protocol:'mstable',\n      autoFarming:['MTA'],\n      blockNumber:14184007,\n      address:'0xe2f2a5c287993345a840db3b0845fbc70f5935a5',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_mstable_mUSD',\n        address:'0x70320A388c6755Fc826bE0EF9f98bcb6bCCc6FeA'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_mstable_mUSD'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'exit',\n          rewards:'earned',\n          claim:'getReward',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          rewardsRate:'rewardRate',\n          stakedBalance:'balanceOf'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:false,\n          abi:TrancheStakingRewards,\n          name:'TrancheStakingRewards_mstable_mUSD_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14184007,\n        name:'AA_mstable_mUSD',\n        token:'AA_mstable_mUSD',\n        label:'mstable mUSD AA',\n        address:'0xfC558914b53BE1DfAd084fA5Da7f281F798227E7'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_mstable_mUSD_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14184007,\n        name:'BB_mstable_mUSD',\n        token:'BB_mstable_mUSD',\n        label:'mstable mUSD BB',\n        address:'0x91fb938FEa02DFd5303ACeF5a8A2c0CaB62b94C7'\n      }\n    }\n  },\n  */\n  convex:{\n    FRAX3CRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'FRAX3CRV',\n      protocol:'convex',\n      blockNumber:13812864,\n      autoFarming:['CVX','CRV'],\n      curveApyPath:['apy','day','frax'],\n      address:'0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_frax3crv',\n        address:'0x4ccaf1392a17203edab55a1f2af3079a8ac513e7'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_frax3crv'\n      },\n      description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      messages:{\n        withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        buyInstructions:'To get FRAX3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/frax/deposit\">FRAX Curve Pool</a>.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_frax3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13812864,\n        name:'AA_convex_frax3crv',\n        token:'AA_convex_frax3crv',\n        label:'convex frax3crv AA',\n        address:'0x15794da4dcf34e674c18bbfaf4a67ff6189690f5'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_frax3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13812864,\n        name:'BB_convex_frax3crv',\n        token:'BB_convex_frax3crv',\n        label:'convex frax3crv BB',\n        address:'0x18cf59480d8c16856701f66028444546b7041307'\n      }\n    },\n    MIM3CRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'MIM3CRV',\n      protocol:'convex',\n      blockNumber:13848124,\n      curveApyPath:['apy','day','mim'],\n      autoFarming:['CVX','CRV','SPELL'],\n      address:'0x5a6A4D54456819380173272A5E8E9B9904BdF41B',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_mim3crv',\n        address:'0x151e89e117728ac6c93aae94c621358b0ebd1866'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_mim3crv'\n      },\n      description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      messages:{\n        withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        buyInstructions:'To get MIM3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/mim/deposit\">MIM Curve Pool</a>.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_mim3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13848124,\n        name:'AA_convex_mim3crv',\n        token:'AA_convex_mim3crv',\n        label:'convex mim3crv AA',\n        address:'0xFC96989b3Df087C96C806318436B16e44c697102'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_mim3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13848124,\n        name:'BB_convex_mim3crv',\n        token:'BB_convex_mim3crv',\n        label:'convex mim3crv BB',\n        address:'0x5346217536852CD30A5266647ccBB6f73449Cbd1'\n      }\n    },\n    steCRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'steCRV',\n      protocol:'convex',\n      blockNumber:14182975,\n      autoFarming:['CVX','CRV','LDO'],\n      curveApyPath:['apy','day','steth'],\n      address:'0x06325440D014e39736583c165C2963BA99fAf14E',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_steCRV',\n        address:'0x7ecfc031758190eb1cb303d8238d553b1d4bc8ef'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_steCRV'\n      },\n      description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      messages:{\n        withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        buyInstructions:'To get steCRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/steth/deposit\">stETH Curve Pool</a>.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_steCRV',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14182975,\n        name:'AA_convex_steCRV',\n        token:'AA_convex_steCRV',\n        label:'convex steCRV AA',\n        address:'0x060a53BCfdc0452F35eBd2196c6914e0152379A6'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_steCRV',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14182975,\n        name:'BB_convex_steCRV',\n        token:'BB_convex_steCRV',\n        label:'convex steCRV BB',\n        address:'0xd83246d2bCBC00e85E248A6e9AA35D0A1548968E'\n      }\n    },\n    ALUSD3CRV:{\n      abi:ERC20,\n      decimals:18,\n      protocol:'convex',\n      token:'ALUSD3CRV',\n      blockNumber:14177732,\n      autoFarming:['CVX','CRV'],\n      address:'0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_alusd3crv',\n        address:'0x008c589c471fd0a13ac2b9338b69f5f7a1a843e1'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_alusd3crv'\n      },\n      description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      messages:{\n        withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        buyInstructions:'To get ALUSD3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/alusd/deposit\">ALUSD Curve Pool</a>.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_alusd3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177732,\n        name:'AA_convex_alusd3crv',\n        token:'AA_convex_alusd3crv',\n        label:'convex alusd3crv AA',\n        address:'0x790E38D85a364DD03F682f5EcdC88f8FF7299908'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_alusd3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177732,\n        name:'BB_convex_alusd3crv',\n        token:'BB_convex_alusd3crv',\n        label:'convex alusd3crv BB',\n        address:'0xa0E8C9088afb3Fa0F40eCDf8B551071C34AA1aa4'\n      }\n    },\n    \"3EUR\":{\n      abi:ERC20,\n      decimals:18,\n      token:'3EUR',\n      protocol:'convex',\n      blockNumber:14177892,\n      autoFarming:['CVX','CRV','ANGLE'],\n      address:'0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_3eur',\n        address:'0x858F5A3a5C767F8965cF7b77C51FD178C4A92F05'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_3eur'\n      },\n      description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      messages:{\n        withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        buyInstructions:'To get 3EUR token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/factory/66/deposit\">3EUR Curve Pool</a>.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_3eur_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177892,\n        name:'AA_convex_3eur',\n        token:'AA_convex_3eur',\n        label:'convex 3eur AA',\n        address:'0x158e04225777BBEa34D2762b5Df9eBD695C158D2'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_3eur_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177892,\n        name:'BB_convex_3eur',\n        token:'BB_convex_3eur',\n        label:'convex 3eur BB',\n        address:'0x3061C652b49Ae901BBeCF622624cc9f633d01bbd'\n      }\n    },\n    MUSD3CRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'MUSD3CRV',\n      protocol:'convex',\n      blockNumber:14177794,\n      autoFarming:['CVX','CRV'],\n      address:'0x1AEf73d49Dedc4b1778d0706583995958Dc862e6',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_musd3crv',\n        address:'0x16d88C635e1B439D8678e7BAc689ac60376fBfA6'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_musd3crv'\n      },\n      description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      messages:{\n        withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        buyInstructions:'To get MUSD3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/musd/deposit\">MUSD Curve Pool</a>.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_musd3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177794,\n        name:'AA_convex_musd3crv',\n        token:'AA_convex_musd3crv',\n        label:'convex musd3crv AA',\n        address:'0x4585F56B06D098D4EDBFc5e438b8897105991c6A'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_musd3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177794,\n        name:'BB_convex_musd3crv',\n        token:'BB_convex_musd3crv',\n        label:'convex musd3crv BB',\n        address:'0xFb08404617B6afab0b19f6cEb2Ef9E07058D043C'\n      }\n    }\n  }\n};\n\nexport default availableTranches;\n","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n      if (this.props.approveMaxAllowance && !this.functionsUtil.BNify(this.props.approveMaxAllowance).isNaN()){\n        this.functionsUtil.enableERC20MaxAllowance(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.approveMaxAllowance,callbackApprove,callbackReceiptApprove);\n      } else {\n        this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n\n      const txSucceeded = tx && tx.status === 'success';\n\n      // Send Google Analytics event\n      if (tx){\n        const eventData = {\n          eventLabel: tx.status,\n          eventCategory: `CurveDeposit`,\n          eventValue: inputValue.toFixed(),\n          eventAction: this.props.tokenConfig.token,\n        };\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    let params = null;\n\n    // Check contract approved without permit\n    let contractName = this.props.contractInfo.name;\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      if (this.props.getTransactionParams_async){\n        params = await this.props.getTransactionParams_async(_amount,this.state.fastBalanceSelector);\n      } else {\n        params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n      }\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n      contractName = params.contractName || this.props.contractInfo.name;\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    \n    const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n\n    // console.log('checkContractApproved',this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account,contractApproved);\n\n    return contractApproved;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const approveEnabled = !!this.props.approveEnabled;\n\n\n    if (this.props.contractInfo){\n      await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    }\n\n    const contractApproved = approveEnabled ? await this.checkContractApproved() : true;\n\n    const newState = {\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    };\n\n    this.setState(newState);\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                dangerouslySetInnerHTML={{\n                                  __html: this.props.balanceSelectorInfo.text\n                                }}\n                              />\n                              {\n                                this.props.balanceSelectorInfo.tooltip && (\n                                  <Tooltip\n                                    placement={'top'}\n                                    message={this.props.balanceSelectorInfo.tooltip}\n                                  >\n                                    <Icon\n                                      ml={1}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                      name={\"InfoOutline\"}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.label || this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Heading, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass Gauges extends Component {\n\n  state = {\n    canVote:true,\n    infoBox:null,\n    claimText:null,\n    unlockDate:null,\n    inputValue:null,\n    balanceProp:null,\n    tokenConfig:null,\n    noFundsText:null,\n    gaugeConfig:null,\n    contractInfo:null,\n    lastUserVote:null,\n    selectedToken:null,\n    rewardsTokens:null,\n    veTokenBalance:null,\n    approveEnabled:null,\n    claimSucceded:false,\n    claimToken:'default',\n    buttonDisabled:false,\n    availableGauges:null,\n    claimableTokens:null,\n    votingPowerUsed:null,\n    availableTokens:null,\n    stakeAction:'deposit',\n    selectedAction:'vote',\n    gaugeTotalSupply:null,\n    distributionRate:null,\n    gaugeWorkingSupply:null,\n    veTokenTotalSupply:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    trancheTokenBalance:null,\n    availableVotingPower:null,\n    gaugePeriodTimestamp:null,\n    gaugeWorkingBalances:null,\n    claimableRewardsTokens:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    this.loadEmptyGauges();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.setState({\n        infoBox:null,\n        gaugeConfig:null,\n        claimSucceded:false\n      },() => {\n        this.loadGaugeData();\n      })\n    }\n\n    const stakeActionChanged = prevState.stakeAction !== this.state.stakeAction;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChanged || stakeActionChanged){\n      this.setState({\n        infoBox:null,\n        claimSucceded:false\n      },() => {\n        this.loadTokenData();\n      });\n    }\n  }\n\n  loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableGauges).reduce((obj, token) => {\n      const gaugeConfig = this.props.toolProps.availableGauges[token];\n      const baseTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n\n      const tokenConfig = {};\n      tokenConfig.token = token;\n      tokenConfig.abi = gaugeConfig.abi;\n      tokenConfig.address = gaugeConfig.address;\n      tokenConfig.decimals = baseTokenConfig.decimals;\n      obj[token] = tokenConfig;\n      return obj;\n    }, {});\n\n    const selectedToken = this.props.urlParams.param2 && Object.keys(availableTokens).includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : Object.keys(availableTokens)[0];\n\n    this.setState({\n      selectedToken,\n      availableTokens\n    },() => {\n      this.loadGaugeData();\n    });\n  }\n\n  calculateGaugeBoost(stakedBalance=null) {\n\n    if (this.functionsUtil.BNify(stakedBalance).isNaN()){\n      stakedBalance = this.functionsUtil.BNify(0);\n    }\n\n    stakedBalance = this.functionsUtil.BNify(stakedBalance).plus(this.state.stakedBalance);\n\n    let l = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(stakedBalance,18));\n    let voting_balance = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(this.state.veTokenBalance,18));\n    let voting_total = this.functionsUtil.BNify(this.state.veTokenTotalSupply);\n    // let period_timestamp = this.functionsUtil.BNify(this.state.gaugePeriodTimestamp);\n    let working_balances = this.functionsUtil.BNify(this.state.gaugeWorkingBalances);\n    let working_supply = this.functionsUtil.BNify(this.state.gaugeWorkingSupply);\n    let L = this.functionsUtil.BNify(this.state.gaugeTotalSupply).plus(l);\n    \n    let TOKENLESS_PRODUCTION = this.functionsUtil.BNify(40);\n    let lim = l.times(TOKENLESS_PRODUCTION).div(100);\n    lim = lim.plus(L.times(voting_balance).div(voting_total).times((this.functionsUtil.BNify(100).minus(TOKENLESS_PRODUCTION)).div(100)));\n    lim = Math.min(l, lim);\n    \n    let old_bal = working_balances;\n    let noboost_lim = TOKENLESS_PRODUCTION.times(l).div(100);\n    let noboost_supply = working_supply.plus(noboost_lim).minus(old_bal);\n    let _working_supply = working_supply.plus(lim).minus(old_bal);\n\n    let boost = this.functionsUtil.BNify(lim).div(_working_supply).div(noboost_lim.div(noboost_supply));\n\n    if (!boost || boost.isNaN()){\n      boost = this.functionsUtil.BNify(1);\n    }\n\n    // console.log('calculateGaugeBoost',voting_balance.toFixed(),voting_total.toFixed(),l.toFixed(),L.toFixed(),lim.toFixed(),_working_supply.toFixed(),noboost_lim.toFixed(),noboost_supply.toFixed(),boost.toFixed());\n\n    return boost;\n  }\n\n  async loadGaugeData(){\n    const veTokenConfig = this.props.toolProps.veToken;\n    const gaugeConfig = this.props.toolProps.availableGauges[this.state.selectedToken];\n\n    // Initialize veToken\n    const veTokenContract = this.functionsUtil.getContractByName(veTokenConfig.token);\n    if (!veTokenContract && veTokenConfig.abi){\n      await this.props.initContract(veTokenConfig.token,veTokenConfig.address,veTokenConfig.abi);\n    }\n\n    // Initialize tranche token\n    const trancheTokenConfig = gaugeConfig.trancheToken;\n    const trancheTokenContract = this.functionsUtil.getContractByName(trancheTokenConfig.name);\n    if (!trancheTokenContract && trancheTokenConfig.abi){\n      await this.props.initContract(trancheTokenConfig.token,trancheTokenConfig.address,trancheTokenConfig.abi);\n    }\n\n    // Initialize Liquidity Gauge contract\n    const liquidityGaugeConfig = this.functionsUtil.getContractByName(gaugeConfig.name);\n    if (!liquidityGaugeConfig && gaugeConfig.abi){\n      await this.props.initContract(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi);\n    }\n\n    let [\n      blockInfo,\n      gaugeTotalSupply,\n      veTokenTotalSupply,\n      distributionRate,\n      stakedBalance,\n      rewardsTokens,\n      gaugeWorkingSupply,\n      veTokenBalance,\n      gaugePeriodTimestamp,\n      trancheTokenBalance,\n      votingPowerUsed,\n      gaugeWorkingBalances,\n      lastUserVote\n    ] = await Promise.all([\n      this.functionsUtil.getBlockInfo(),\n      this.functionsUtil.getTokenTotalSupply(gaugeConfig.name),\n      this.functionsUtil.getTokenTotalSupply(veTokenConfig.token),\n      this.functionsUtil.genericContractCall('GaugeDistributor','rate'),\n      this.functionsUtil.getTokenBalance(gaugeConfig.name,this.props.account),\n      this.functionsUtil.getGaugeRewardsTokens(gaugeConfig,this.props.account),\n      this.functionsUtil.genericContractCall(gaugeConfig.name,'working_supply'),\n      this.functionsUtil.getTokenBalance(veTokenConfig.token,this.props.account),\n      this.functionsUtil.genericContractCall(gaugeConfig.name,'period_timestamp',[0]),\n      this.functionsUtil.getTokenBalance(trancheTokenConfig.token,this.props.account),\n      this.functionsUtil.genericContractCall('GaugeController','vote_user_power',[this.props.account]),\n      this.functionsUtil.genericContractCall(gaugeConfig.name,'working_balances',[this.props.account]),\n      this.functionsUtil.genericContractCall('GaugeController','last_user_vote',[this.props.account,gaugeConfig.address])\n    ]);\n\n    // console.log('distributionRate',distributionRate);\n\n    const claimableRewardsTokens = Object.keys(rewardsTokens).filter( token => token !== 'IDLE' ).reduce( (claimableRewards,token) => {\n      const tokenConfig = rewardsTokens[token];\n      if (tokenConfig.balance.gt(0)){\n        claimableRewards[token] = this.functionsUtil.fixTokenDecimals(tokenConfig.balance,tokenConfig.decimals);\n      }\n      return claimableRewards;\n    },{});\n\n    const claimableTokens = this.functionsUtil.fixTokenDecimals(rewardsTokens.IDLE.balance,18);\n\n    if (distributionRate){\n      distributionRate = this.functionsUtil.fixTokenDecimals(distributionRate,18).times(86400);\n    }\n\n    votingPowerUsed = this.functionsUtil.BNify(votingPowerUsed).div(10000);\n\n    this.setState({\n      blockInfo,\n      gaugeConfig,\n      lastUserVote,\n      rewardsTokens,\n      stakedBalance,\n      veTokenBalance,\n      votingPowerUsed,\n      claimableTokens,\n      gaugeTotalSupply,\n      distributionRate,\n      gaugeWorkingSupply,\n      veTokenTotalSupply,\n      trancheTokenBalance,\n      gaugeWorkingBalances,\n      gaugePeriodTimestamp,\n      claimableRewardsTokens\n    },() => {\n      this.loadTokenData(true);\n    });\n  }\n\n  async loadTokenData(loadGauges=false){\n\n    if (!this.state.gaugeConfig){\n      this.loadGaugeData();\n    }\n\n    const veTokenConfig = this.props.toolProps.veToken;\n    const gaugeConfig = this.props.toolProps.availableGauges[this.state.selectedToken];\n    const trancheTokenConfig = gaugeConfig.trancheToken;\n\n    let canVote = true;\n    let unlockDate = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let noFundsText = null;\n    let contractInfo = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n    let balanceSelectorInfo = null;\n\n    switch (this.state.selectedAction){\n      case 'vote':\n        approveEnabled = false;\n        tokenConfig = veTokenConfig;\n        const veTokenBalanceUsed = this.functionsUtil.BNify(this.state.veTokenBalance).times(this.state.votingPowerUsed);\n        balanceProp = this.functionsUtil.BNify(this.state.veTokenBalance).minus(veTokenBalanceUsed);\n        balanceSelectorInfo = {\n          color:`copyColor`,\n          text:`Allocated power: ${this.functionsUtil.BNify(this.state.votingPowerUsed).times(100).toFixed(2)}%`\n        };\n        contractInfo = this.functionsUtil.getGlobalConfig(['contracts',1,'GaugeController']);\n        noFundsText = `Stake your ${this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} tokens to allocate your voting power to this Gauge and boost the daily rewards you receive.`;\n\n        const nextUnlockTime = this.state.lastUserVote ? parseInt(this.state.lastUserVote)+this.props.toolProps.WEIGHT_VOTE_DELAY : null;\n        canVote = !nextUnlockTime || this.state.blockInfo.timestamp>=nextUnlockTime;\n\n        unlockDate = nextUnlockTime ? this.functionsUtil.strToMoment(nextUnlockTime*1000).utc().format('YYYY-MM-DD HH:mm') : null;\n      break;\n      case 'stake':\n        switch (this.state.stakeAction){\n          case 'deposit':\n            approveEnabled = true;\n            contractInfo = gaugeConfig;\n            tokenConfig = trancheTokenConfig;\n            balanceProp = this.state.trancheTokenBalance;\n            noFundsText = `You don't have any <strong>${tokenConfig.token}</strong> in your wallet to deposit.`;\n            approveDescription = `Approve the Gauge contract to deposit your <strong>${trancheTokenConfig.token}</strong> tokens`;\n\n            const boost = this.calculateGaugeBoost(0);\n            balanceSelectorInfo = {\n              color:`copyColor`,\n              tooltip:this.functionsUtil.getGlobalConfig(['messages','gaugeBoost']),\n              text:`Boost: <span style=\"color:${this.props.theme.colors.transactions.status.completed}\">${boost.toFixed(2)}x</span>`,\n            };\n          break;\n          case 'claim':\n            approveEnabled = false;\n            contractInfo = this.functionsUtil.getGlobalConfig(['contracts',1,'GaugeDistributor']);\n          break;\n          case 'withdraw':\n            approveEnabled = false;\n            contractInfo = gaugeConfig;\n            tokenConfig = trancheTokenConfig;\n            balanceProp = this.state.stakedBalance;\n            noFundsText = `You don't have any <strong>${tokenConfig.token}</strong> in the Gauge contract to withdraw.`;\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      canVote,\n      unlockDate,\n      noFundsText,\n      tokenConfig,\n      gaugeConfig,\n      balanceProp,\n      contractInfo,\n      approveEnabled,\n      approveDescription,\n      balanceSelectorInfo\n    },() => {\n      if (loadGauges || !this.state.availableGauges){\n        this.loadGauges();\n      }\n    });\n  }\n\n  async loadEmptyGauges(){\n    const availableGauges = {};\n    Object.keys(this.props.toolProps.availableGauges).forEach( gaugeToken => {\n      const gaugeConfig = this.props.toolProps.availableGauges[gaugeToken];\n      const trancheConfig = this.props.availableTranches[gaugeConfig.protocol] ? this.props.availableTranches[gaugeConfig.protocol][gaugeToken] : null;\n\n      if (!trancheConfig){\n        return;\n      }\n\n      if (!availableGauges[gaugeConfig.protocol]){\n        availableGauges[gaugeConfig.protocol] = {};\n      }\n\n      availableGauges[gaugeConfig.protocol][gaugeToken] = trancheConfig;\n      availableGauges[gaugeConfig.protocol][gaugeToken].weight = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].totalSupply = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].rewardsTokens = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].stakedBalance = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].claimableTokens = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].distributionRate = null;\n    });\n\n    this.setState({\n      availableGauges\n    });\n  }\n\n  async loadGauges(){\n\n    const availableGauges = {};\n    const veTokenConfig = this.props.toolProps.veToken;\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableGauges), async (gaugeToken) => {\n      const gaugeConfig = this.props.toolProps.availableGauges[gaugeToken];\n      if (!availableGauges[gaugeConfig.protocol]){\n        availableGauges[gaugeConfig.protocol] = {};\n      }\n\n      const trancheConfig = this.props.availableTranches[gaugeConfig.protocol] ? this.props.availableTranches[gaugeConfig.protocol][gaugeToken] : null;\n\n      if (trancheConfig){\n\n        const liquidityGaugeContract = this.functionsUtil.getContractByName(gaugeConfig.name);\n        if (!liquidityGaugeContract && gaugeConfig.abi){\n          await this.props.initContract(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi);\n        }\n\n        let [\n          gaugeTotalSupply,\n          stakedBalance,\n          rewardsTokens,\n          gaugeWeight,\n        ] = await Promise.all([\n          this.functionsUtil.getTokenTotalSupply(gaugeConfig.name),\n          this.functionsUtil.getTokenBalance(gaugeConfig.name,this.props.account),\n          this.functionsUtil.getGaugeRewardsTokens(gaugeConfig,this.props.account),\n          this.functionsUtil.genericContractCall('GaugeController','gauge_relative_weight',[gaugeConfig.address])\n        ]);\n\n        const claimableRewardsTokens = Object.keys(rewardsTokens).reduce( (claimableRewards,token) => {\n          const tokenConfig = rewardsTokens[token];\n          if (tokenConfig.balance.gt(0)){\n            claimableRewards[token] = this.functionsUtil.fixTokenDecimals(tokenConfig.balance,tokenConfig.decimals);\n          }\n          return claimableRewards;\n        },{});\n\n        let gaugeUserShare = null;\n        let userBoostedDistribution = null;\n        gaugeWeight = this.functionsUtil.fixTokenDecimals(gaugeWeight,18);\n        gaugeTotalSupply = this.functionsUtil.fixTokenDecimals(gaugeTotalSupply,18);\n        const gaugeDistributionRate = this.state.distributionRate.times(gaugeWeight);\n\n        if (this.props.account){\n          gaugeUserShare = stakedBalance.div(gaugeTotalSupply);\n          const veTokenShare = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(this.state.veTokenBalance,18)).div(this.state.veTokenTotalSupply);\n          const userBaseDistribution = gaugeDistributionRate.times(gaugeUserShare);\n          const boostMultiplier = veTokenShare.times(1.5).plus(1);\n          userBoostedDistribution = boostMultiplier.times(userBaseDistribution);\n          if (userBoostedDistribution.gt(gaugeDistributionRate)){\n            userBoostedDistribution = gaugeDistributionRate;\n          }\n          // console.log(gaugeConfig.name,stakedBalance.toFixed(),gaugeTotalSupply.toFixed());\n          // console.log(gaugeConfig.name,'veTokenShare',veTokenShare.toFixed(8),'gaugeUserShare',gaugeUserShare.toFixed(8),'userBaseDistribution',userBaseDistribution.toFixed(8),'userBoostedDistribution',userBoostedDistribution.toFixed(8),'gaugeDistributionRate',gaugeDistributionRate.toFixed(8));\n        } else {\n          stakedBalance = this.functionsUtil.BNify(0);\n        }\n\n        const claimableTokens = Object.keys(claimableRewardsTokens).length ? Object.keys(claimableRewardsTokens).map( token => {\n          const tokenBalance = claimableRewardsTokens[token];\n          let text = `${tokenBalance.toFixed(4)} ${token}`;\n          if (this.props.account){\n            if (!this.functionsUtil.BNify(userBoostedDistribution).isNaN() && token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n              text += ` (~${userBoostedDistribution.toFixed(4)}/day)`;\n            } else if (rewardsTokens[token].rate){\n              let userDistributionRate = rewardsTokens[token].rate.times(gaugeUserShare);\n              if (userDistributionRate.gt(rewardsTokens[token].rate)){\n                userDistributionRate = rewardsTokens[token].rate;\n              }\n              text += ` (~${userDistributionRate.toFixed(4)}/day)`;\n            }\n          }\n          return text;\n        }).join('<br />') : '-';\n\n        const distributionRate = Object.keys(rewardsTokens).length ? Object.keys(rewardsTokens).map( token => {\n          if (token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n            return `${gaugeDistributionRate.toFixed(4)} ${token}/day`;\n          } else {\n            const tokenDistributionRate = rewardsTokens[token].rate;\n            return `${tokenDistributionRate.toFixed(4)} ${token}/day`;\n          }\n        }).join('<br />') : '-';\n\n        availableGauges[gaugeConfig.protocol][gaugeToken] = trancheConfig;\n        availableGauges[gaugeConfig.protocol][gaugeToken].rewardsTokens = rewardsTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].stakedBalance = stakedBalance;\n        availableGauges[gaugeConfig.protocol][gaugeToken].totalSupply = gaugeTotalSupply;\n        availableGauges[gaugeConfig.protocol][gaugeToken].claimableTokens = claimableTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].distributionRate = distributionRate; //`${gaugeDistributionRate.toFixed(4)} IDLE/day`;\n        availableGauges[gaugeConfig.protocol][gaugeToken].weight = gaugeWeight.times(100).toFixed(2)+'%';\n      }\n    });\n\n    this.setState({\n      availableGauges\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setClaimToken(claimToken){\n    if (claimToken !== this.state.claimToken){\n      this.setState({\n        claimToken,\n        claimSucceded:null\n      });\n    }\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      const infoBox = null;\n      const inputValue = null;\n      this.setState({\n        infoBox,\n        inputValue,\n        selectedAction\n      });\n    }\n  }\n\n  setStakeAction(stakeAction){\n    if (stakeAction !== this.state.stakeAction){\n      this.setState({\n        stakeAction\n      });\n    }\n  }\n\n  async transactionSucceeded(tx,amount,params){\n\n    let infoBox = null;\n    let claimText = null;\n    let claimSucceded = false;\n\n    switch (this.state.selectedAction){\n      case 'vote':\n        const votingWeight = this.functionsUtil.BNify(params.methodParams[1]).div(100).toFixed(2);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully allocated <strong>${votingWeight}%</strong> of your voting power to this Gauge`\n        };\n      break;\n      case 'stake':\n        switch (this.state.stakeAction){\n          case 'deposit':\n            const depositedAmount = this.functionsUtil.fixTokenDecimals(params.methodParams[0],18);\n            infoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully deposited <strong>${depositedAmount.toFixed(4)} ${this.state.tokenConfig.token}</strong> in the Gauge.`\n            };\n          break;\n          case 'claim':\n            claimSucceded = true;\n            switch (this.state.claimToken){\n              case 'additional':\n                claimText = `You have successfully claimed your additional rewards.`;\n              break;\n              default:\n              case 'default':\n                claimText = `You have successfully claimed <strong>${this.state.claimableTokens.toFixed(8)} IDLE</strong>.`;\n              break;\n            }\n          break;\n          case 'withdraw':\n            const withdrawnAmount = this.functionsUtil.fixTokenDecimals(params.methodParams[0],18);\n            infoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully withdrawn <strong>${withdrawnAmount.toFixed(4)} ${this.state.tokenConfig.token}</strong> from the Gauge.`\n            };\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      claimText,\n      claimSucceded\n    },() => {\n      this.loadGaugeData();\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    let infoBox = null;\n    let votingWeight = null;\n    let balanceSelectorInfo = null;\n\n    inputValue = this.functionsUtil.BNify(inputValue);\n    switch (this.state.selectedAction){\n      case 'vote':\n        if (inputValue.gt(0)){\n          const votingPowerPercentage = this.state.veTokenBalance.gt(0) ? inputValue.div(this.state.veTokenBalance).times(100).toFixed(2) : this.functionsUtil.BNify(0);\n          votingWeight = this.state.veTokenBalance.gt(0) ? this.functionsUtil.integerValue(inputValue.div(this.state.veTokenBalance).times(10000)) : this.functionsUtil.BNify(0);\n          infoBox = {\n            icon:'Info',\n            text:`You are allocating <strong>${votingPowerPercentage}%</strong> of your voting power to this Gauge`\n          };\n        }\n      break;\n      case 'stake':\n        switch (this.state.stakeAction){\n          case 'deposit':\n            const boost = this.calculateGaugeBoost(inputValue);\n            balanceSelectorInfo = {\n              color:`copyColor`,\n              tooltip:this.functionsUtil.getGlobalConfig(['messages','gaugeBoost']),\n              text:`Boost: <span style=\"color:${this.props.theme.colors.transactions.status.completed}\">${boost.toFixed(2)}x</span>`,\n            };\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      inputValue,\n      votingWeight,\n      balanceSelectorInfo\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const gaugeAddress = this.props.toolProps.availableGauges[this.state.selectedToken].address;\n    switch (this.state.selectedAction){\n      case 'vote':\n        methodName = 'vote_for_gauge_weights';\n        methodParams = [gaugeAddress,this.state.votingWeight];\n      break;\n      case 'stake':\n        const amount = this.functionsUtil.normalizeTokenAmount(this.state.inputValue,18);\n        switch (this.state.stakeAction){\n          case 'deposit':\n            methodName = 'deposit';\n            methodParams = [amount];\n          break;\n          case 'withdraw':\n            methodName = 'withdraw';\n            methodParams = [amount];\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1, '35em']}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select Gauge:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              onChange={this.selectToken.bind(this)}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.state.availableTokens}\n            />\n          </Box>\n          {\n            !this.state.gaugeConfig ? (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection: 'row'\n                }}\n                loaderProps={{\n                  size: '30px'\n                }}\n                textProps={{\n                  ml: 2\n                }}\n                text={'Loading Gauge info...'}\n              />\n            ) : (\n              <Box\n                width={1}\n              >\n                <Box\n                  mt={1}\n                  mb={2}\n                  width={1}\n                >\n                  <Text\n                    mb={1}\n                  >\n                    Choose action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <CardIconButton\n                      {...this.props}\n                      cardProps={{\n                        px:3,\n                        py:2,\n                        width:0.49\n                      }}\n                      textProps={{\n                        fontSize:[1,2]\n                      }}\n                      text={'Vote'}\n                      iconColor={'redeem'}\n                      iconBgColor={'#3f5fff'}\n                      image={'images/vote.svg'}\n                      isActive={ this.state.selectedAction === 'vote' }\n                      handleClick={ e => this.setSelectedAction('vote') }\n                    />\n                    <CardIconButton\n                      {...this.props}\n                      cardProps={{\n                        px:3,\n                        py:2,\n                        width:0.49\n                      }}\n                      textProps={{\n                        fontSize:[1,2]\n                      }}\n                      text={'Stake'}\n                      icon={'Layers'}\n                      iconColor={'deposit'}\n                      iconBgColor={'#ced6ff'}\n                      isActive={ this.state.selectedAction === 'stake' }\n                      handleClick={ e => this.setSelectedAction('stake') }\n                    />\n                  </Flex>\n                </Box>\n                {\n                  this.state.selectedAction === 'stake' && (\n                    <Box\n                      mb={2}\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Choose stake action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2]\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.32\n                          }}\n                          text={'Deposit'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.stakeAction === 'deposit' }\n                          handleClick={ e => this.setStakeAction('deposit') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2]\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.32\n                          }}\n                          text={'Claim'}\n                          iconColor={'#dd0000'}\n                          icon={'CardGiftcard'}\n                          iconBgColor={'#ffd979'}\n                          isActive={ this.state.stakeAction === 'claim' }\n                          handleClick={ e => this.setStakeAction('claim') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2]\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.32\n                          }}\n                          text={'Withdraw'}\n                          icon={'ArrowUpward'}\n                          iconColor={'redeem'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.stakeAction === 'withdraw' }\n                          handleClick={ e => this.setStakeAction('withdraw') }\n                        />\n                      </Flex>\n                    </Box>\n                  )\n                }\n                {\n                  this.state.selectedAction === 'stake' && this.state.stakeAction === 'claim' && this.state.rewardsTokens && Object.keys(this.state.rewardsTokens).length>1 && (\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Choose claim method:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2],\n                            fontWeight:500\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.49\n                          }}\n                          imageProps={{\n                            mr:2,\n                            width:'1.8em',\n                            height:'1.8em'\n                          }}\n                          text={'Claim IDLE'}\n                          image={'images/tokens/IDLE.svg'}\n                          isActive={ this.state.claimToken === 'default' }\n                          handleClick={ e => this.setClaimToken('default') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2],\n                            fontWeight:500\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.49\n                          }}\n                          imageProps={{\n                            mr:2,\n                            width:'1.8em',\n                            height:'1.8em'\n                          }}\n                          handleClick={ e => this.setClaimToken('additional') }\n                          isActive={ this.state.claimToken === 'additional' }\n                          text={`Claim ${Object.keys(this.state.rewardsTokens).splice(1).join(', ')}`}\n                          image={this.functionsUtil.getTokenIcon(Object.keys(this.state.rewardsTokens)[1])}\n                        />\n                      </Flex>\n                    </Box>\n                  )\n                }\n                {\n                  this.state.selectedAction === 'vote' && !this.state.canVote ? (\n                    <IconBox\n                      cardProps={{\n                        mt:1\n                      }}\n                      icon={'AccessTime'}\n                      text={`Please wait until <strong>${this.state.unlockDate} UTC</strong> to allocate your voting power to this Gauge.`}\n                    />\n                  ) : (this.state.selectedAction === 'vote' || this.state.stakeAction !== 'claim') && this.state.tokenConfig ? (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      permitEnabled={false}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.state.selectedAction === 'vote' ? 'Vote' : this.functionsUtil.capitalize(this.state.stakeAction)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.1em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                            dangerouslySetInnerHTML={{\n                              __html:this.state.noFundsText\n                            }}\n                          />\n                          {\n                            this.state.selectedAction === 'vote' && (\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,1/2]\n                                }}\n                                handleClick={e => this.props.goToSection(`stake`)}\n                              >\n                                Stake\n                              </RoundButton>\n                            )\n                          }\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  ) : this.state.stakeAction === 'claim' &&\n                    this.state.claimSucceded ? (\n                      <IconBox\n                        cardProps={{\n                          mt:2\n                        }}\n                        icon={'DoneAll'}\n                        text={this.state.claimText}\n                        iconProps={{\n                          size:this.props.isMobile ? '1.8em' : '2.1em',\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                      />\n                    ) : this.state.claimToken === 'default' ?\n                      !this.props.account ? (\n                        <ConnectBox\n                          {...this.props}\n                        />\n                      ) : (this.state.claimableTokens && this.state.claimableTokens.gt(0)) ? (\n                        <Flex\n                          mt={2}\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              p:3,\n                              mb:1\n                            }}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                color={'cellText'}\n                                name={'MonetizationOn'}\n                                size={this.props.isMobile ? '1.8em' : '2.1em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={[2,3]}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You can claim <strong>{this.state.claimableTokens.toFixed(8)} IDLE</strong>.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/3],\n                                  value:'Claim',\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                }}\n                                action={'Claim'}\n                                methodName={'distribute'}\n                                contractName={'GaugeDistributorProxy'}\n                                callback={this.transactionSucceeded.bind(this)}\n                                getTransactionParams={ e => [this.props.toolProps.availableGauges[this.state.selectedToken].address] }\n                              />\n                            </Flex>\n                          </DashboardCard>\n                        </Flex>\n                      ) : (\n                        <IconBox\n                          cardProps={{\n                            mt:2\n                          }}\n                          icon={'MoneyOff'}\n                          iconProps={{\n                            size:this.props.isMobile ? '1.8em' : '2.1em'\n                          }}\n                          text={`You don't have any IDLE to claim for this Gauge.`}\n                        />\n                      )\n                    : this.state.claimToken === 'additional' &&\n                      !this.props.account ? (\n                        <ConnectBox\n                          {...this.props}\n                        />\n                      ) : (this.state.claimableRewardsTokens && Object.keys(this.state.claimableRewardsTokens).length>0) ? (\n                        <Flex\n                          mt={2}\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              p:3,\n                              mb:1\n                            }}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                color={'cellText'}\n                                name={'MonetizationOn'}\n                                size={this.props.isMobile ? '1.8em' : '2.1em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={[2,3]}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You can claim {Object.keys(this.state.claimableRewardsTokens).map( token => (<strong>{this.state.claimableRewardsTokens[token].toFixed(8)} {token}</strong>) )}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/3],\n                                  value:'Claim',\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                }}\n                                action={'Claim'}\n                                methodName={'claim_rewards'}\n                                contractName={this.state.gaugeConfig.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          </DashboardCard>\n                        </Flex>\n                      ) : (\n                        <IconBox\n                          cardProps={{\n                            mt:2\n                          }}\n                          icon={'MoneyOff'}\n                          iconProps={{\n                            size:this.props.isMobile ? '1.8em' : '2.1em'\n                          }}\n                          text={`You don't have any additional reward to claim for this Gauge.`}\n                        />\n                      )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n        {\n          this.state.availableGauges && (\n            <Flex\n              mt={3}\n              width={1}\n              mb={[3,4]}\n              flexDirection={'column'}\n            >\n              <Flex\n                pb={2}\n                width={1}\n                mb={[2,3]}\n                borderColor={'divider'}\n                borderBottom={'1px solid transparent'}\n              >\n                <Heading.h4\n                  fontSize={[2,4]}\n                  fontWeight={[3,4]}\n                >\n                  Available Gauges\n                </Heading.h4>\n              </Flex>\n              <TranchesList\n                handleClick={null}\n                enabledProtocols={[]}\n                colsProps={{\n                  fontSize:['10px','14px'],\n                }}\n                cols={[\n                  {\n                    title:'PROTOCOL', \n                    props:{\n                      width:[0.35, 0.14]\n                    },\n                    fields:[\n                      {\n                        name:'protocolIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        name:'protocolName'\n                      },\n                      {\n                        mobile:false,\n                        name:'experimentalBadge',\n                        props:{\n                          ml:1,\n                          height:'1.5em'\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.16, 0.14],\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'GAUGE WEIGHT',\n                    props:{\n                      width:[0.25,0.11],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','weight']\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOTAL SUPPLY',\n                    props:{\n                      width:[0.26, 0.10],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','totalSupply'],\n                        props:{\n                          decimals:2,\n                          minPrecision:1,\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                        }\n                      }\n                    ]\n                  },\n                  /*\n                  {\n                    title:'SENIOR APY',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                    props:{\n                      width:[0.27,0.14],\n                    },\n                    parentProps:{\n                      flexDirection:'column',\n                      alignItems:'flex-start',\n                    },\n                    fields:[\n                      {\n                        name:'seniorApy',\n                        showTooltip:true\n                      },\n                    ],\n                  },\n                  */\n                  {\n                    mobile:false,\n                    title:'DEPOSITED',\n                    props:{\n                      width:[0.27,0.09],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','stakedBalance'],\n                        props:{\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          minPrecision:1,\n                          decimals:this.props.isMobile ? 0 : 2,\n                        }\n                      },\n                    ],\n                  },\n                  {\n                    title:this.props.isMobile ? 'REWARDS' : 'REWARDS TOKENS',\n                    props:{\n                      width:[0.23, 0.12],\n                    },\n                    fields:[\n                      {\n                        name:'custom',\n                        showLoader:true,\n                        type:'tokensList',\n                        path:['tokenConfig','rewardsTokens'],\n                        props:{\n                          \n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'DISTRIBUTION RATE',\n                    props:{\n                      width:[0.15, 0.13],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        name:'custom',\n                        showLoader:true,\n                        props:{\n                          fontSize:1,\n                          lineHeight:1.3,\n                        },\n                        path:['tokenConfig','distributionRate'],\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'CLAIMABLE REWARDS',\n                    props:{\n                      width:[0.25,0.17],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        showLoader:true,\n                        props:{\n                          fontSize:1,\n                          lineHeight:1.3,\n                        },\n                        name:'custom',\n                        path:['tokenConfig','claimableTokens']\n                      }\n                    ]\n                  },\n                ]}\n                {...this.props}\n                availableTranches={this.state.availableGauges}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Gauges;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TooltipText from '../TooltipText/TooltipText';\nimport { Flex, Text, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      tokenBalance,\n      trancheBalance,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        maxWidth={['100%','45em']}\n      >\n        {\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${trancheDetails.color.hex}`}\n          > \n            <Image\n              mr={2}\n              src={trancheDetails.image}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[3,4]}\n              color={'copyColor'}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                text={'Auto-Compounding'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','autoFarming'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                text={'Staking Rewards'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <TooltipText\n                text={'APY'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','apyTranches'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApyWithTooltip',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              {\n                stakingRewards.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <TrancheField\n                      {...this.props}\n                      fieldInfo={{\n                        name:'trancheIDLELastHarvest',\n                        props:{\n                          decimals:4,\n                          fontSize:1,\n                          fontWeight:2,\n                          lineHeight:'1',\n                          color:'cellText'\n                        }\n                      }}\n                      token={this.props.selectedToken}\n                      tranche={this.props.selectedTranche}\n                      tokenConfig={this.props.tokenConfig}\n                      protocol={this.props.selectedProtocol}\n                      trancheConfig={this.props.trancheConfig}\n                    />\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                text={'Apr Ratio'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','aprRatio'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheAPRRatio',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Status\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'statusBadge',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            {\n              (this.props.tokenConfig.experimental || !this.props.isMobile) && (\n                <Flex\n                  mb={3}\n                  width={[0.5,0.33]}\n                  flexDirection={'column'}\n                  alignItems={'flex-start'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Limit Cap\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheLimit',\n                      props:{\n                        decimals:3,\n                        fontWeight:3,\n                        fontSize:[2,3],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n              )\n            }\n          </Flex>\n          {\n            this.props.showSelectButton ? (\n                <Button\n                  mt={3}\n                  width={1}\n                  contrastColor={'cardBg'}\n                  icon={trancheDetails.icon}\n                  mainColor={trancheDetails.color.hex}\n                  onClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </Button>\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ImageButton from '../ImageButton/ImageButton';\nimport TooltipText from '../TooltipText/TooltipText';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\n// import StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport { Flex, Text, Image, Box, Icon, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    modalApy:null,\n    trancheAPY:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    actionLabel:null,\n    modalAction:null,\n    balanceProp:null,\n    lastHarvest:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakeEnabled:true,\n    stakedBalance:null,\n    unstakeEnabled:true,\n    trancheBaseApy:null,\n    trancheBalance:null,\n    stakingEnabled:true,\n    approveEnabled:null,\n    buttonDisabled:false,\n    selectedTranche:null,\n    availableTranches:null,\n    approveDescription:null,\n    selectedAction:'deposit',\n    selectedTrancheOption:null,\n    selectedStakeAction:'stake',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const selectedStakeActionChanged = prevState.selectedStakeAction !== this.state.selectedStakeAction;\n    if (selectedActionChanged || selectedStakeActionChanged){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    const [\n      // blockNumber,\n      lastHarvest,\n      tokenBalance,\n      trancheBalance,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice,\n      trancheBaseApy\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTrancheLastHarvest(this.props.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('tranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('trancheBaseApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n    ]);\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    const availableTranches = Object.values(this.functionsUtil.getGlobalConfig(['tranches'])).map( trancheInfo => ({\n      value:trancheInfo.type,\n      icon:trancheInfo.image,\n      label:trancheInfo.name,\n      tranche:trancheInfo.type,\n      trancheConfig:this.props.tokenConfig[trancheInfo.type]\n    }));\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const selectedTrancheOption = availableTranches.find( trancheInfo => trancheInfo.value === this.props.selectedTranche );\n    const selectedTranche = selectedTrancheOption.value;\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    let stakingEnabled = stakingRewards.length>0;\n    const stakeEnabled = stakingEnabled;\n    const unstakeEnabled = stakedBalance && this.functionsUtil.BNify(stakedBalance).gt(0);\n\n    // console.log('stakingRewards',stakingRewards,stakingEnabled,unstakeEnabled);\n\n    if (!stakingEnabled && unstakeEnabled){\n      stakingEnabled = true;\n    }\n\n    let selectedStakeAction = 'stake';\n    if (!stakeEnabled && unstakeEnabled){\n      selectedStakeAction = 'unstake';\n    }\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      lastHarvest,\n      tokenBalance,\n      stakeEnabled,\n      tranchePrice,\n      stakedBalance,\n      trancheBaseApy,\n      stakingEnabled,\n      trancheBalance,\n      unstakeEnabled,\n      selectedTranche,\n      availableTranches,\n      selectedStakeAction,\n      selectedTrancheOption,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    let actionLabel = this.state.selectedAction;\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const gaugeConfig = this.functionsUtil.getGlobalConfig(['tools','gauges','props','availableGauges',this.props.selectedToken]);\n    let infoText = this.functionsUtil.getArrayPath(['messages',this.state.selectedAction],this.props.tokenConfig) || trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n        \n        if (gaugeConfig && gaugeConfig.trancheToken.token.toLowerCase() === this.props.tokenConfig[this.props.selectedTranche].token.toLowerCase() && this.state.trancheBalance && this.state.trancheBalance.gt(0)){\n          infoText = `Stake your ${gaugeConfig.trancheToken.token} in the Liquidity Gauge and get rewarded!`;\n        }\n      break;\n      case 'stake':\n        actionLabel = this.state.selectedStakeAction;\n        switch (this.state.selectedStakeAction){\n          case 'stake':\n            approveEnabled = true;\n            tokenConfig = this.props.trancheConfig;\n            balanceProp = this.state.trancheBalance;\n            contractInfo = this.props.trancheConfig.CDORewards;\n          break;\n          case 'unstake':\n            approveEnabled = false;\n            tokenConfig = this.props.trancheConfig;\n            contractInfo = this.props.trancheConfig.CDORewards;\n            balanceProp = this.state.stakedBalance;\n            if (!this.state.canUnstake){\n              buttonDisabled = true;\n              infoText = trancheDetails.description.cantUnstake;\n            }\n          break;\n          default:\n          break;\n        }\n        if (this.state.stakingEnabled){\n          infoText = trancheDetails.description[this.state.selectedStakeAction];\n        } else {\n          infoText = null;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.trancheConfig;\n        // balanceProp = this.state.trancheBalance;\n\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.trancheBalance ? this.state.trancheBalance.times(this.state.tranchePrice) : null;\n\n        // console.log('balanceProp',this.state.trancheBalance,this.state.tranchePrice,balanceProp);\n\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = tokenConfig ? `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.` : null;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      actionLabel,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount,selectedPercentage){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      if (this.state.selectedAction === 'withdraw'){\n        let trancheTokenToRedeem = null;\n        if (selectedPercentage) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance).times(this.functionsUtil.BNify(selectedPercentage).div(100));\n        } else {\n          trancheTokenToRedeem = this.functionsUtil.BNify(amount).div(this.functionsUtil.normalizeTokenAmount(this.state.tranchePrice,18));\n        }\n\n        // Check if idleTokens to redeem > idleToken balance\n        if (trancheTokenToRedeem.gt(this.functionsUtil.BNify(this.state.trancheBalance))) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance);\n        }\n\n        // Normalize number\n        trancheTokenToRedeem = this.functionsUtil.normalizeTokenAmount(trancheTokenToRedeem, 18);\n\n        methodParams = [trancheTokenToRedeem];\n      } else {\n        if (this.state.selectedAction === 'stake'){\n          methodName = this.props.trancheConfig.functions[this.state.selectedStakeAction];\n        }\n\n        methodParams = [amount];\n      }\n    }\n\n    // console.log('getTransactionParams',this.state.selectedAction,amount,this.functionsUtil.BNify(this.state.trancheBalance).toFixed(),selectedPercentage,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    if (trancheLimit.gt(0)){\n      const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n      if (poolSize.plus(amount).gt(trancheLimit)){\n        this.setState({\n          activeModal:'limit'\n        })\n        return false;\n      }\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n\n    if (typeof this.props.transactionSucceeded === 'function'){\n      this.props.transactionSucceeded();\n    }\n\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        if (this.state.selectedAction === 'deposit' || this.state.selectedStakeAction === 'stake'){\n          const modalAction = this.state.selectedAction === 'deposit' ? 'deposited' : 'staked';\n          const modalApy = this.state.selectedAction === 'deposit' ? this.state.trancheBaseApy : this.state.trancheAPY;\n          this.setState({\n            modalApy,\n            modalAction,\n            activeModal:'share'\n          });\n        }\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setStakeAction(selectedStakeAction){\n    this.setState({\n      selectedStakeAction\n    });\n  }\n\n  selectTranche(trancheType){\n    // console.log('selectTranche',trancheType);\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',trancheType]);\n    if (trancheDetails){\n      this.props.selectTrancheType(trancheDetails.route);\n    }\n  }\n\n  render() {\n\n    const isStake = this.state.selectedAction === 'stake';\n    const isDeposit = this.state.selectedAction === 'deposit';\n    const isWithdraw = this.state.selectedAction === 'withdraw';\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n\n    const CustomOptionValue = props => {\n      const selectedOption = props.options.find( option => option.value === props.value );\n      if (!selectedOption){\n        return null;\n      }\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={selectedOption.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.options.find( option => option.value === props.selectProps.value.value );\n      // console.log('CustomValueContainer',props.selectProps.options,props.selectProps.value,selectProps);\n      if (!selectProps){\n        return null;\n      }\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <Image\n              mr={2}\n              src={selectProps.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {selectProps.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTranches ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tranches...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n              maxWidth={['100%','42em']}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Tranche:\n                </Text>\n                <GenericSelector\n                  {...this.props}\n                  name={'tranches'}\n                  isSearchable={false}\n                  CustomOptionValue={CustomOptionValue}\n                  options={this.state.availableTranches}\n                  onChange={this.selectTranche.bind(this)}\n                  CustomValueContainer={CustomValueContainer}\n                  defaultValue={this.state.selectedTrancheOption}\n                />\n              </Box>\n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Tranche details:\n                </Text>\n                <DashboardCard\n                  cardProps={{\n                    py:1,\n                    px:3,\n                    mb:2\n                  }}\n                  isActive={false}\n                >\n                  <Flex\n                    mt={1}\n                    mb={1}\n                    width={1}\n                    style={{\n                      flexBasis:'0',\n                      flex:'1 1 0px',\n                      flexWrap:'wrap'\n                    }}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Protocol\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Token\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Pool Size\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tranchePool',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Auto-Compounding'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','autoFarming'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'autoFarming',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Staking Rewards'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'stakingRewards',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'APY'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','apyTranches'])}\n                      />\n                      <Flex\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheApyWithTooltip',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        {\n                          stakingRewards.length>0 && (\n                            <Flex\n                              width={1}\n                              flexDirection={'row'}\n                              alignItems={'flex-start'}\n                            >\n                              <TrancheField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'trancheIDLELastHarvest',\n                                  props:{\n                                    decimals:4,\n                                    fontSize:1,\n                                    fontWeight:2,\n                                    lineHeight:'1',\n                                    color:'cellText'\n                                  }\n                                }}\n                                token={this.props.selectedToken}\n                                tranche={this.props.selectedTranche}\n                                tokenConfig={this.props.tokenConfig}\n                                protocol={this.props.selectedProtocol}\n                                trancheConfig={this.props.trancheConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Apr Ratio'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','aprRatio'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheAPRRatio',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Status\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'statusBadge'\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Limit Cap\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheLimit',\n                            props:{\n                              decimals:3,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                  {\n                    this.props.tokenConfig.description && (\n                      <Flex\n                        pt={2}\n                        mb={2}\n                        width={1}\n                        flexDirection={'column'}\n                        borderTop={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontSize={[1,2]}\n                          color={'cellText'}\n                          fontWeight={[2,3]}\n                        >\n                          Strategy Description\n                        </Text>\n                        <Flex\n                          mt={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={'15px'}\n                            textAlign={'justify'}\n                          >\n                            {this.props.tokenConfig.description}\n                          </Text>\n                        </Flex>\n                        {\n                          this.state.lastHarvest && (\n                            <Flex\n                              pt={2}\n                              mt={2}\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              borderTop={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                              >\n                                <Text\n                                  mr={1}\n                                  fontSize={'15px'}\n                                  color={'cellText'}\n                                  fontWeight={[2,3]}\n                                >\n                                  Last harvest date:\n                                </Text>\n                                <ExtLink\n                                  href={this.functionsUtil.getEtherscanTransactionUrl(this.state.lastHarvest.transactionHash)}\n                                >\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      fontSize={'15px'}\n                                    >\n                                      {this.functionsUtil.strToMoment(this.state.lastHarvest.timestamp*1000).utc().format(\"MMM DD YYYY HH:mm\")} UTC\n                                    </Text>\n                                    <Icon\n                                      ml={1}\n                                      size={'1.1em'}\n                                      name={'OpenInNew'}\n                                      color={'copyColor'}\n                                    />\n                                  </Flex>\n                                </ExtLink>\n                              </Flex>\n                              <Flex\n                                mt={1}\n                                flexDirection={'row'}\n                              >\n                                <Text\n                                  mr={1}\n                                  fontSize={'15px'}\n                                  color={'cellText'}\n                                  fontWeight={[2,3]}\n                                >\n                                  Last harvest amount:\n                                </Text>\n                                <Text\n                                  fontWeight={2}\n                                  fontSize={'15px'}\n                                >\n                                  {this.functionsUtil.fixTokenDecimals(this.state.lastHarvest.amount,this.props.tokenConfig.decimals).toFixed(8)} {this.props.tokenConfig.token}\n                                </Text>\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    )\n                  }\n                </DashboardCard>\n              </Box>\n              {\n                this.props.selectedToken === 'stETH' && this.props.selectedTranche === 'AA' && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:2,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.8em',\n                      color:'flashColor'\n                    }}\n                    icon={'AssignmentLate'}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    text={`With the <a href=\"https://medium.com/idle-finance/introducing-stkidle-gauges-a-new-stakers-centric-paradigm-for-pyts-and-lps-8c0ef167232e\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" class=\"link\">IDLE Gauges release</a>, LDO rewards are going to be distributed via a different staking contract on <strong>Thursday 14 April 2022 16:30:00 GMT</strong>. Please make sure to unstake your stETH from the current staking contract after that date and deposit in the <a href=\"${this.functionsUtil.getDashboardSectionUrl(`gauges/stETH`)}\" class=\"link\">stETH Gauge</a> contract to continue receiving the LDO rewards, alongside the IDLE distribution from Gauges`}\n                  />\n                )\n              }\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Action:\n                </Text>\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={['column','row']}\n                  justifyContent={'space-between'}\n                >\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isDeposit ? 2 : 0\n                    }}\n                    caption={'Deposit'}\n                    width={[1,'32%']}\n                    isMobile={this.props.isMobile}\n                    imageSrc={'images/deposit.png'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isDeposit}\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isStake ? 2 : 0,\n                      disabled:!this.state.stakingEnabled\n                    }}\n                    width={[1,'32%']}\n                    caption={'Stake / Unstake'}\n                    imageSrc={'images/mint.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isStake}\n                    handleClick={ e => this.setSelectedAction('stake') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isWithdraw ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isWithdraw}\n                    handleClick={ e => this.setSelectedAction('withdraw') }\n                  />\n                </Flex>\n              </Box>\n              {\n                isStake && this.state.stakingEnabled && (\n                  <Box\n                    mb={2}\n                    width={1}\n                  >\n                    <Text mb={1}>\n                      Choose stake action:\n                    </Text>\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        handleClick={ e => this.setStakeAction('stake') }\n                        isActive={ this.state.selectedStakeAction === 'stake' }\n                      />\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isDisabled={ !this.state.unstakeEnabled }\n                        isActive={ this.state.selectedStakeAction === 'unstake' }\n                        handleClick={ e => this.state.unstakeEnabled ? this.setStakeAction('unstake') : null }\n                      />\n                    </Flex>\n                  </Box>\n                )\n              }\n              {\n                this.state.infoText && this.props.account && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:3,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.2em',\n                      color:'flashColor'\n                    }}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    icon={'LightbulbOutline'}\n                    text={this.state.infoText}\n                  />\n                )\n              }\n              <Flex\n                width={1}\n                alignItems={'stretch'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  ((isStake && !this.state.stakingEnabled) || (isStake && this.state.selectedStakeAction === 'stake' && !this.state.stakeEnabled)) ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        mt: 3\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'DoNotDisturb'}\n                        />\n                        <Text\n                          mt={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Staking is not enabled for this Tranche.\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  ) : isStake && this.state.selectedStakeAction === 'unstake' && !this.props.trancheConfig.CDORewards.unstakeWithBalance ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        pb: 3,\n                        mt: 3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'MonetizationOn'}\n                        />\n                        <Text\n                          mt={1}\n                          mb={3}\n                          fontSize={[2,3]}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          You can unstake <strong>{this.state.stakedBalance.toFixed(8)} {this.state.tokenConfig.label}</strong>.\n                        </Text>\n                        <ExecuteTransaction\n                          params={[]}\n                          {...this.props}\n                          Component={Button}\n                          parentProps={{\n                            width:1,\n                            alignItems:'center',\n                            justifyContent:'center'\n                          }}\n                          componentProps={{\n                            fontSize:3,\n                            fontWeight:3,\n                            size:'medium',\n                            width:[1,1/3],\n                            borderRadius:4,\n                            value:'Unstake',\n                            mainColor:'redeem',\n                          }}\n                          action={'Unstake'}\n                          contractName={this.state.contractInfo.name}\n                          callback={this.transactionSucceeded.bind(this)}\n                          methodName={this.props.trancheConfig.functions.unstake}\n                        />\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      buttonProps={{\n                        width:[1,0.45]\n                      }}\n                      permitEnabled={false}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      checkLimit={this.checkLimit.bind(this)}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      contractApproved={this.contractApprovedCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.functionsUtil.capitalize(this.state.actionLabel)}\n                    >\n                      {\n                        isDeposit ? (\n                          <Flex\n                            width={1}\n                            alignItems={'stretch'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <BuyModal\n                              {...this.props}\n                              showInline={true}\n                              availableMethods={[]}\n                              buyToken={this.props.selectedToken}\n                            >\n                              {\n                                this.props.tokenConfig.messages && this.props.tokenConfig.messages.buyInstructions ? (\n                                  <DashboardCard\n                                    cardProps={{\n                                      p: 2,\n                                      my: 2\n                                    }}\n                                  >\n                                    <Flex\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'column'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        size={'1.8em'}\n                                        name={'MoneyOff'}\n                                        color={'cellText'}\n                                      />\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                      >\n                                        You don't have any <strong>{this.props.selectedToken}</strong> to deposit.\n                                      </Text>\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                        dangerouslySetInnerHTML={{__html:this.props.tokenConfig.messages.buyInstructions}}>\n                                      </Text>\n                                    </Flex>\n                                  </DashboardCard>\n                                ) : null\n                              }\n                            </BuyModal>\n                          </Flex>\n                        ) : isStake ? (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any <strong>{this.state.tokenConfig.label}</strong> token to {this.state.selectedStakeAction}.\n                              </Text>\n                            </Flex>\n                          </DashboardCard>\n                        ) : isWithdraw && (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.selectedToken} to withdraw.<br />If you have staked your <strong>{this.state.tokenConfig.label}</strong> tokens please unstake them to be able to withdraw your {this.props.selectedToken}.\n                            </Text>\n                            </Flex>\n                          </DashboardCard>\n                        )\n                      }\n                    </SendTxWithBalance>\n                  )\n                }\n              </Flex>\n              <LimitReachedModal\n                {...this.props}\n                limit={trancheLimit}\n                closeModal={this.resetModal}\n                isOpen={this.state.activeModal === 'limit'}\n              />\n              <ShareModal\n                confettiEnabled={true}\n                icon={`images/medal.svg`}\n                title={`Congratulations!`}\n                account={this.props.account}\n                closeModal={this.resetModal}\n                tokenName={this.props.selectedToken}\n                isOpen={this.state.activeModal === 'share'}\n                text={`You have successfully ${this.state.modalAction} in Idle!<br />Enjoy <strong>${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n                tweet={`I'm earning ${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    const tokensData = {};\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(filteredTxs,async (tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n\n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const tranche = tx.tranche;\n          const protocol = tx.protocol;\n          const blockNumber = tx.blockNumber;\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n          if (!tranchePrice.isNaN() && !trancheTokens.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              tranche,\n              protocol,\n              timeStamp,\n              tokenAmount,\n              blockNumber,\n              tranchePrice,\n              trancheTokens\n            });\n\n            tokensBalance[selectedToken] = tokensBalance[selectedToken].sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1));\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    // let lastTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 00:00:00','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n    // const lastBlockNumber = await this.functionsUtil.getBlockNumber();\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      if (tokensBalance[token].length){\n        const tokenBalanceConfig = tokensBalance[token][0];\n        const firstTokenTx = tokensBalance[token][0];\n        const firstAATokenTx = tokensBalance[token].find( tx => tx.tranche==='AA' ) || null;\n        const firstBBTokenTx = tokensBalance[token].find( tx => tx.tranche==='BB' ) || null;\n\n        // const firstBlockNumber = firstTokenTx.blockNumber;\n\n        const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n        const tokenConfig = this.props.availableTranches[tokenBalanceConfig.protocol.toLowerCase()][token];\n\n        const [\n          trancheAAInfos,\n          trancheBBInfos\n        ] = await Promise.all([\n          firstAATokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.AA.address,firstAATokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n          firstBBTokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.BB.address,firstBBTokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n        ]);\n\n        const timeStamp_start = Math.min(firstAATokenTx ? firstAATokenTx.timeStamp : firstTokenTx.timeStamp,firstBBTokenTx ? firstBBTokenTx.timeStamp : firstTokenTx.timeStamp);\n\n        const trancheInfos = trancheAAInfos.concat(trancheBBInfos).sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1));\n\n        const conversionRatesTimestamps = {};\n        if (conversionRateField){\n          const blocksTimestamps = {};\n          const conversionRateBlocksCalls = {};\n          for (let timeStamp=timeStamp_start;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n            const blockInfo = trancheInfos.reduce( (blockInfo,trancheInfo) => {\n              const distance = Math.abs(parseInt(trancheInfo.timeStamp)-parseInt(timeStamp));\n              if (blockInfo.distance === null || distance<blockInfo.distance){\n                blockInfo.distance = distance;\n                blockInfo.trancheInfo = trancheInfo;\n              }\n              return blockInfo;\n            },{\n              distance:null,\n              trancheInfo:null\n            });\n\n            if (blockInfo && blockInfo.trancheInfo){\n              if (!blocksTimestamps[blockInfo.trancheInfo.blockNumber]){\n                blocksTimestamps[blockInfo.trancheInfo.blockNumber] = [];\n              }\n              blocksTimestamps[blockInfo.trancheInfo.blockNumber].push(blockInfo.trancheInfo.timeStamp);\n              conversionRateBlocksCalls[blockInfo.trancheInfo.blockNumber] = this.functionsUtil.getTokenConversionRateUniswap(tokenConfig,blockInfo.trancheInfo.blockNumber);\n            }\n          }\n\n          const conversionRates = await Promise.all(Object.values(conversionRateBlocksCalls));\n\n          conversionRates.forEach( (conversionRate,index) => {\n            const blockNumber = Object.keys(conversionRateBlocksCalls)[index];\n            blocksTimestamps[blockNumber].forEach( timeStamp => {\n              const momentDate = this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD');\n              conversionRatesTimestamps[momentDate] = conversionRate;\n            });\n          });\n\n        }\n\n        // console.log(token,startTokenConversionRate ? startTokenConversionRate.toString() : null,lastTokenConversionRate ? lastTokenConversionRate.toString() : null);\n\n        if (!tokensData[token]){\n          tokensData[token] = [];\n        }\n\n        if (trancheAAInfos){\n          trancheAAInfos.forEach( (trancheInfo,index) => {\n            const tokenDataAA = {\n              tranche:'AA',\n              timeStamp:trancheInfo.timeStamp,\n              tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n            };\n            const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n            if (conversionRateField && conversionRatesTimestamps[momentDate]){\n              tokenDataAA[conversionRateField] = conversionRatesTimestamps[momentDate];\n            }\n            tokensData[token].push(tokenDataAA);\n          });\n        }\n\n        if (trancheBBInfos){\n          trancheBBInfos.forEach( (trancheInfo,index) => {\n            const tokenDataBB = {\n              tranche:'BB',\n              timeStamp:trancheInfo.timeStamp,\n              tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n            };\n            const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n            if (conversionRateField && conversionRatesTimestamps[momentDate]){\n              tokenDataBB[conversionRateField] = conversionRatesTimestamps[momentDate];\n            }\n            tokensData[token].push(tokenDataBB);\n          });\n        }\n      }\n    });\n\n    // console.log('tokensData',tokensData);\n    // console.log('transactions',transactions);\n    // console.log('tokensBalance',tokensBalance);\n\n    const tranches = this.functionsUtil.getGlobalConfig(['tranches']);\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n\n      const foundBalances = {};\n      const tokensBalances = {};\n\n      // Shift timestamp to end of the day\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      timeStamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n      \n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach( token => {\n\n        if (!prevBalances[token]){\n          prevBalances[token] = {};\n        }\n        if (!foundBalances[token]){\n          foundBalances[token] = {};\n        }\n        if (!tokensBalances[token]){\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = {};\n        }\n\n        Object.keys(tranches).forEach( tranche => {\n\n          // Skip tranche if no balance\n          const filteredTrancheBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche));\n          if (!filteredTrancheBalances || !filteredTrancheBalances.length) {\n            return;\n          }\n\n          let lastTokenData = null;\n          const lastTokenDataUnfiltered = tokensData[token] ? Object.values(tokensData[token].filter( tx => tx.tranche===tranche )).pop() : null;\n          let filteredTokenData = tokensData[token] ? tokensData[token].filter(tx => (tx.tranche===tranche && tx.timeStamp>=prevTimestamp && tx.timeStamp<=timeStamp)) : null;\n          if (filteredTokenData && filteredTokenData.length){\n            lastTokenData = filteredTokenData.pop();\n          } else {\n            lastTokenData = lastTokenDataUnfiltered;\n            if (lastTokenData && lastTokenData.timeStamp>timeStamp){\n              lastTokenData = null;\n            }\n          }\n\n          if (!trancheTokenBalance[token][tranche]){\n            trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n          }\n\n          if (!prevBalances[token][tranche]){\n            prevBalances[token][tranche] = null;\n          }\n\n          if (!foundBalances[token][tranche]){\n            foundBalances[token][tranche] = null;\n          }\n\n          const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'decimals']);\n          let filteredBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche && tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n          \n          if (!filteredBalances.length){\n            if (prevBalances && prevBalances[token] && prevBalances[token][tranche]){\n              filteredBalances = prevBalances[token][tranche];\n              const lastFilteredTx = Object.values(filteredBalances).pop();\n              const currentBalance = parseFloat(lastFilteredTx.balance);\n\n              // Take tranchePrice from API and calculate new balance\n              if (currentBalance>0){\n                if (timeStamp>firstTxTimestamp && lastTokenData){\n                  const trancheTokens = trancheTokenBalance[token][tranche];\n                  const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n                  let newBalance = trancheTokens.times(tranchePrice);\n\n                  // Set new balance and tranchePrice\n                  lastFilteredTx.balance = newBalance;\n                  lastFilteredTx.tranchePrice = tranchePrice;\n                  filteredBalances = [lastFilteredTx];\n                }\n              } else {\n                filteredBalances = [{\n                  balance:this.functionsUtil.BNify(0),\n                  tranchePrice:this.functionsUtil.BNify(0)\n                }];\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tranchePrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            // if (token === 'FEI'){\n              // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),timeStamp,token,tranche,lastTokenData,(lastTokenData ? this.functionsUtil.strToMoment(lastTokenData.timeStamp*1000).format('DD/MM/YYYY HH:mm:ss') : null),(lastTokenData ? lastTokenData.tranchePrice.toFixed(5) : null ));\n            // }\n            filteredBalances.forEach(tx => {\n              switch (tx.action){\n                case 'Deposit':\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].plus(tx.trancheTokens);\n                break;\n                default:\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].minus(tx.trancheTokens);\n                  if (trancheTokenBalance[token][tranche].lt(0)){\n                    trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n                  }\n                break;\n              }\n            });\n          }\n\n          const lastTx = Object.values(filteredBalances).pop();\n          let lastTxBalance = trancheTokenBalance[token][tranche].times(lastTx.tranchePrice);\n          if (lastTxBalance.gt(0)){\n            // Convert token balance to USD\n            const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n            if (/*!this.props.chartToken && */conversionRateField){\n              const tokenUsdConversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n              if (tokenUsdConversionRate && this.functionsUtil.BNify(tokenUsdConversionRate).gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n              \n            aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n            tokensBalances[token] = tokensBalances[token].plus(lastTxBalance);\n\n            // if (token === 'FEI'){\n              // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),token,tranche,trancheTokenBalance[token][tranche].toFixed(5),lastTx.tranchePrice.toFixed(5),lastTxBalance.toFixed(5));\n            // }\n          }\n\n          foundBalances[token][tranche] = filteredBalances;\n        });\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n    const colWidth = stakingEnabled ? 1/6 : 1/5;\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            {\n              stakingEnabled && (\n                <Flex\n                  mb={[2,0]}\n                  width={[1,colWidth]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'flex-start'}\n                >\n                  <Title\n                    mb={2}\n                    fontSize={[3,4]}\n                    component={Heading.h3}\n                  >\n                    Staked Amount\n                  </Title>\n                  <TrancheField\n                    {...this.props}\n                    addTokenName={false}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:7,\n                        fontWeight:300,\n                        maxPrecision:8,\n                        fontSize:['1.8em','1.9em'],\n                        color:this.props.theme.colors.counter,\n                        flexProps:{\n                          justifyContent:'center'\n                        }\n                      }\n                    }}\n                  />\n                </Flex>\n              )\n            }\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import Title from '../Title/Title';\nimport { Button, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      trancheBalance,\n      rewardTokensInfo,\n      stakingRewards,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig,this.props.trancheConfig.functions.rewards),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',rewardToken.toUpperCase()]);\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      const tokenAmount = !this.functionsUtil.BNify(stakingRewards[rewardToken]).isNaN() ? this.functionsUtil.BNify(stakingRewards[rewardToken]) : this.functionsUtil.BNify(0);\n\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.distributionSpeed : null;\n      if (trancheBalanceInfo && distributionSpeed){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+rewardTokenInfo.distributionSpeedUnit : this.functionsUtil.BNify(0).toFixed(8)\n      });\n    });\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:Button,\n                      componentProps:{\n                        style:{\n                          width:'100%'\n                        },\n                        value:'Claim',\n                        borderRadius:4,\n                        mainColor:'redeem',\n                        size:this.props.isMobile ? 'small' : 'medium'\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      callback:this.claimCallback.bind(this),\n                      methodName:this.props.trancheConfig.functions.claim,\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport { Box, Flex/*, Icon, Text*/ } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\n// import TrancheHarvests from '../TrancheHarvests/TrancheHarvests';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TrancheDepositRedeem from '../TrancheDepositRedeem/TrancheDepositRedeem';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    userHasFunds:false,\n    stakingEnabled:false,\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const trancheTypeChanged = prevProps.trancheType !== this.props.trancheType;\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged || tokenConfigChanged || trancheTypeChanged){\n      this.loadData();\n    }\n  }\n\n  loadData(){\n    const componentLoaded = true;\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n    const userHasFunds = this.props.portfolio && this.props.portfolio.tranchesBalance.find( balanceInfo => balanceInfo.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && balanceInfo.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || balanceInfo.tranche.toLowerCase() === this.props.trancheType.toLowerCase()) ) ? true : false;\n\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n\n    // console.log('loadData',this.props.tokenConfig,this.props.trancheType,this.props.tokenConfig[this.props.trancheType].CDORewards,stakingRewards,stakingRewardsEnabled,stakingEnabled);\n\n    this.setState({\n      transactions,\n      userHasFunds,\n      stakingEnabled,\n      componentLoaded\n    });\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          this.props.selectedProtocol === 'lido' && this.props.selectedToken === 'stETH' && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p: 2,\n                  mb: 3,\n                  width: 1,\n                  maxWidth:['100%',this.props.trancheDetails ? '42em' : '100%']\n                }}\n                isActive={true}\n                isInteractive={false}\n              >\n                <Flex\n                  alignItems={\"center\"}\n                  justifyContent={\"center\"}\n                  flexDirection={[\"column\", \"row\"]}\n                >\n                  <Icon\n                    mr={1}\n                    size={\"1.2em\"}\n                    name={'InfoOutline'}\n                    color={\"flashColor\"}\n                  />\n                  <Text\n                    fontWeight={500}\n                    fontSize={\"15px\"}\n                    color={\"flashColor\"}\n                    textAlign={\"center\"}\n                  >\n                    LDO rewards will be resumed on Sunday 6th of March!\n                  </Text>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          )\n          */\n        }\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,(1/filteredTranchesTypes.length)-0.02]}\n                  >\n                    {\n                      this.props.trancheType ? (\n                        <TrancheDepositRedeem\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          transactionSucceeded={this.props.loadPortfolio}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      ) : (\n                        <TrancheDetails\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      )\n                    }\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <Flex\n              width={1}\n              mb={[0,4]}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          this.state.componentLoaded && this.state.stakingEnabled && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          /*\n          this.state.componentLoaded && this.props.account && this.props.trancheType && (\n            <TrancheHarvests\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n          )\n          */\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              width={1}\n              mb={[3,4]}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheField from \"../TrancheField/TrancheField\";\nimport { Box, Flex, Icon, Text, Image } from \"rimble-ui\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass Base extends Component {\n  // Utils\n  functionsUtil = null;\n\n  state = {\n    token:null,\n    protocol:null,\n    tokenConfig:null\n  };\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    let token=null;\n    let protocol=null;\n\n    const bestTrancheInfo = await this.functionsUtil.getBestTranche(this.props.trancheDetails.type,9999);\n    if(bestTrancheInfo){\n      token = bestTrancheInfo.token;\n      protocol = bestTrancheInfo.protocol;\n    } else {\n      const strategyInfo = this.functionsUtil.getGlobalConfig([\"strategies\",\"tranches\"]);\n      token = strategyInfo.token;\n      protocol = strategyInfo.protocol;\n    }\n    \n    const tokenConfig = this.props.availableTranches[protocol][token];\n\n    return this.setState({\n      token,\n      protocol,\n      tokenConfig\n    });\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const tokenConfig = this.props.tokenConfig || this.state.tokenConfig;\n\n    return (\n      <Box\n        my={[3, 0]}\n        boxShadow={1}\n        borderRadius={2}\n        width={[1, 0.49]}\n      >\n        <Flex\n          p={0}\n          mx={0}\n          border={\"0\"}\n          height={\"100%\"}\n          borderRadius={2}\n          overflow={\"hidden\"}\n          flexDirection={\"column\"}\n          backgroundColor={\"cardBg\"}\n          borderColor={\"transparent\"}\n          justifyContent={[\"center\",trancheDetails.type === \"AA\" ? \"left\" : \"right\"]}\n        >\n          <Box\n            width={1}\n            borderBottom={`1px solid ${this.props.theme.colors.divider2}`}\n          >\n            <Flex\n              pb={2}\n              mx={2}\n              my={3}\n              flexDirection={\"column\"}\n            >\n              <Flex mt={3} alignItems={\"center\"}>\n                <Image\n                  ml={3}\n                  mr={1}\n                  alt={trancheDetails.name}\n                  src={trancheDetails.image}\n                  size={this.props.isMobile ? \"2em\" : \"2.4em\"}\n                />\n                <Flex mx={1}>\n                  <Text\n                    ml={[2, 0]}\n                    fontWeight={4}\n                    fontSize={[4, 5]}\n                    lineHeight={1}\n                  >\n                    {trancheDetails.name}\n                  </Text>\n                </Flex>\n              </Flex>\n              <Box\n                ml={5}\n                mr={3}\n                mt={3}\n                alignItems={\"flex-start\"}\n                flexDirection={\"column\"}\n              >\n                <Flex\n                  mr={1}\n                  flexDirection={\"row\"}\n                  alignItems={\"baseline\"}\n                >\n                  <TrancheField\n                    fieldInfo={{\n                      showTooltip: false,\n                      name: `${trancheDetails.baseName}Apy`,\n                      props: {\n                        decimals: 2,\n                        fontWeight: 4,\n                        lineHeight: \"1\",\n                        fontSize: [3, 4],\n                        textAlign: \"center\",\n                        flexProps: {\n                          justifyItems: \"flex-end\"\n                        },\n                        color: this.props.trancheDetails.color.hex\n                      }\n                    }}\n                    {...this.props}\n                    token={this.state.token}\n                    tokenConfig={tokenConfig}\n                    tranche={this.props.tranche}\n                    protocol={this.state.protocol}\n                  />\n                  <Text\n                    my={1}\n                    ml={[2, 3]}\n                    fontSize={1}\n                    lineHeight={\"1\"}\n                    textAlign={\"left\"}\n                    color={\"cellText\"}\n                  >\n                    Current APY for {this.state.token}\n                  </Text>\n                </Flex>\n                <Text\n                  mt={3}\n                  fontWeight={2}\n                  fontSize={[1, 2]}\n                  textAlign={\"left\"}\n                  lineHeight={\"1.5\"}\n                  color={\"copyColor\"}\n                >\n                  {trancheDetails.description.long}\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n          <Flex\n            height={\"100%\"}\n            bg={\"cardBgContrast\"}\n            flexDirection={'column'}\n            justifyContent={'space-between'}\n          >\n            <Box\n              mt={3}\n              my={3}\n              pl={2}\n              width={1}\n            >\n              {trancheDetails.features.map((feature, index) => (\n                <Flex\n                  mb={2}\n                  my={1}\n                  px={2}\n                  mt={[2, 1]}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    ml={3}\n                    name={\"Done\"}\n                    color={\"tick\"}\n                    size={this.props.isMobile ? \"1.6em\" : \"1.8em\"}\n                  />\n                  <Text ml={[2, 1]} fontSize={[1, 2]} fontWeight={\"500\"}>\n                    {feature}\n                  </Text>\n                </Flex>\n              ))}\n            </Box>\n            <Flex\n              width={1}\n              height={\"auto\"}\n              alignItems={\"flex-end\"}\n              justifyContent={\"center\"}\n            >\n              <RoundButton\n                buttonProps={{\n                  my: 3,\n                  width: 0.85,\n                  fontSize: 2,\n                  contrastColor: \"white\",\n                  mainColor: trancheDetails.color.hex\n                }}\n                handleClick={e =>\n                  this.props.selectTrancheType(trancheDetails.route)\n                }\n              >\n                {this.props.tokenConfig\n                  ? `Go to ${trancheDetails.name}`\n                  : `Enter the ${trancheDetails.name}`}\n              </RoundButton>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from \"react\";\nimport { Link, Flex, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass TrancheFlash extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const flashData = this.functionsUtil.getGlobalConfig([\"tranchflash\"]);\n    return (\n      <Flex\n        width={1}\n        mx={4}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent={\"center\"}\n      >\n        <Flex mx={2} my={[2, 4]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex justifyContent={\"left\"} my={3} width={[1, 0.7]}>\n            <Text\n              bold={\"true\"}\n              fontWeight={4}\n              lineHeight={1}\n              color={\"white\"}\n              fontSize={[5, 6]}\n              textAlign={\"left\"}\n            >\n              {flashData.subtitle}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            width={1}\n            mb={[2, 3]}\n            justifyContent={\"left\"}\n          >\n            <Text\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n            >\n              {flashData.desc}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            mb={2}\n            width={1}\n            flexDirection={\"column\"}\n          >\n            {\n              flashData.questions.map( (question,index) => (\n                <Flex\n                  my={2}\n                  key={`question_${index}`}\n                  alignItems={\"flex-start\"}\n                >\n                  <Link\n                    fontSize={2}\n                    fontWeight={2}\n                    opacity={\"50%\"}\n                    color={\"white\"}\n                    textAlign={\"left\"}\n                    onClick={e =>\n                      this.props.openTooltipModal(question.desc, question.msg)\n                    }\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={\"flex-start\"}\n                    >\n                      <Image\n                        mr={2}\n                        src={flashData.helpcircle}\n                      />\n                      {question.desc}\n                    </Flex>\n                  </Link>\n                </Flex>\n              ))\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          mt={6}\n          width={0.2}\n          hidden={this.props.isMobile ? 1 : 0}\n          alignItems={\"flex-start\"}\n        >\n          <Image hidden={this.props.isMobile ? 1 : 0} src={flashData.arrows} />\n        </Flex>\n        <Flex ml={2} my={[3, 5]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"AA\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.seniorinfo\n              }}\n            ></Text>\n          </Flex>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              ml={[0, 4]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"BB\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.juniorinfo\n              }}\n            ></Text>\n          </Flex>\n        </Flex>\n        {/*<Flex width={0.3}>\n          <Text>ABC</Text>\n        </Flex>*/}\n      </Flex>\n    );\n  }\n}\nexport default TrancheFlash;\n","import Title from \"../Title/Title\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport styles from \"./TrancheWelcome.module.scss\";\nimport TrancheBox from \"../TrancheBox/TrancheBox\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheFlash from \"../TrancheFlash/TrancheFlash\";\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\n\nclass TrancheWelcome extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig([\"tranches\"]);\n    return (\n      <Flex\n        width={1}\n        alignItems={\"center\"}\n        flexDirection={'column'}\n        justifyContent={\"center\"}\n      >\n        <AssetsUnderManagement\n          {...this.props}\n          flexProps={{\n            mb:[3,0]\n          }}\n          loaderAlign={'flex-end'}\n          subtitle={'Total Value Locked on Tranches'}\n          aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n        />\n        <Flex\n          mb={3}\n          width={1}\n          maxWidth={8}\n          alignItems={\"center\"}\n          flexDirection={\"column\"}\n          justifyContent={\"center\"}\n        >\n          {!this.props.tokenConfig ? (\n            <>\n              <Title\n                fontSize={[5,6]}\n              >\n                Perpetual Yield Tranches\n              </Title>\n              <Flex\n                mt={[2,3]}\n                border={1}\n                borderRadius={2}\n                borderColor={\"transparent\"}\n                backgroundColor={\"newblue\"}\n                className={[styles.trancheFlash,this.props.isMobile ? styles.mobile : null]}\n              >\n                <TrancheFlash {...this.props}></TrancheFlash>\n              </Flex>\n            </>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3, 4]}\n              color={\"copyColor\"}\n              textAlign={\"center\"}\n            >\n              Select your preferred Tranche\n            </Title>\n          )}\n          <Flex my={3} mx={0} justifyContent={\"center\"}>\n            <Flex\n              width={1}\n              flexDirection={[\"column\", \"row\"]}\n              justifyContent={\"space-between\"}\n            >\n              {Object.keys(tranchesDetails).map((trancheType, index) => (\n                <TrancheBox\n                  {...this.props}\n                  tranche={trancheType}\n                  key={`tranche_${index}`}\n                  tokenConfig={this.props.tokenConfig}\n                  trancheDetails={tranchesDetails[trancheType]}\n                />\n              ))}\n            </Flex>\n          </Flex>\n          <Flex\n            mt={3}\n            width={1}\n            px={[0,5]}\n            justifyContent={\"center\"}\n          >\n            <Text\n              fontSize={[0,1]}\n              color={'statValue'}\n              textAlign={\"center\"}\n            >\n              If you're still unsure in which Tranche to pick, reach out to us on our <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['forumURL'])}>Forum</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['discordURL'])}>Discord</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['telegramURL'])}>Telegram</ExtLink> or <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['twitterURL'])}>Twitter</ExtLink>.<br />The team and the community would be happy to help!\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheWelcome;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat ? this.props.tooltipFormat : (v => v),\n      sliceLabel: this.props.sliceLabel,// ? this.props.sliceLabel : (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        Object.assign({\n          itemWidth: 60,\n          itemHeight: 18,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          symbolShape: 'circle',\n          translateY: this.props.isMobile ? 25 : 50,\n          itemTextColor: this.props.theme.colors.legend,\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        },this.props.legendProps)\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.valueHover || this.state.selectedSlice.value}\n                      {...this.state.selectedSlice.valueHoverProps}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    // const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterStart = portfolio.totalBalance;\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip, Image } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    transactions:[],\n    tokenConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    remainingTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    depositedTranches:{},\n    remainingTranches:{},\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    this.loadPortfolio().then( () => {\n      const componentLoaded = true;\n      const trancheRoute = this.props.urlParams.param1;\n      const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n      const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n      if (trancheDetails !== undefined) {\n        const trancheType = trancheDetails.type;\n        const useTrancheType = !this.state.userHasFunds;\n        const selectedToken = this.props.urlParams.param3;\n        const selectedProtocol = this.props.urlParams.param2;\n        const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null) : null;\n\n        if (this.state.userHasFunds && !tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        this.setState({\n          trancheType,\n          tokenConfig,\n          trancheRoute,\n          selectedToken,\n          trancheDetails,\n          useTrancheType,\n          selectedProtocol\n        });\n      } else {\n        const selectedToken = this.props.urlParams.param2;\n        const selectedProtocol = this.props.urlParams.param1;\n        const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n        if (tokenConfig){\n          this.setState({\n            tokenConfig,\n            selectedToken,\n            selectedProtocol\n          });\n        }\n      }\n\n      this.setState({\n        componentLoaded\n      });\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n\n    if (portfolio){\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      \n      const depositedTranches = {};\n      const remainingTranches = {};\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        \n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n      \n      Object.keys(this.props.availableTranches).forEach(protocol => {\n        Object.keys(this.props.availableTranches[protocol]).forEach( tranche=> {\n          if(depositedTokens.includes(tranche)) {\n              if(!depositedTranches[protocol]){\n                depositedTranches[protocol]={};\n              }\n              depositedTranches[protocol][tranche]={}\n              depositedTranches[protocol][tranche]=this.props.availableTranches[protocol][tranche];\n          }\n          else{\n            if(!remainingTranches[protocol]){\n              remainingTranches[protocol]={};\n            }\n            remainingTranches[protocol][tranche]={};\n            remainingTranches[protocol][tranche]=this.props.availableTranches[protocol][tranche];\n          }\n        })\n      })\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenPercentage = tranchesTokens[token].div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          valueHoverProps:{\n            unit:'$',\n            unitPos:'left',\n            unitProps:{\n              mr:2,\n              fontWeight:4,\n              fontSize:[3,4]\n            }\n          },\n          valueHover:balanceValue,\n          value:Math.round(tokenPercentage),\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n        };\n      });\n\n      // Add Staking rewards to Portfolio Donut\n      Object.keys(portfolio.stakingRewards).forEach( token => {\n        const balanceValue = parseFloat(portfolio.stakingRewards[token].tokenAmountConverted.toFixed(4));\n        const tokenPercentage = portfolio.stakingRewards[token].tokenAmountConverted.div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n        const govTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',token]);\n        if (govTokenConfig.showBalance){\n          portfolioDonutData.push({\n            id:token,\n            name:token,\n            label:token,\n            valueHoverProps:{\n              unit:'$',\n              unitPos:'left',\n              unitProps:{\n                mr:2,\n                fontWeight:4,\n                fontSize:[3,4]\n              }\n            },\n            valueHover:balanceValue,\n            value:Math.round(tokenPercentage),\n            description: `$ ${balanceValue} in ${token}`,\n            color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n            image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n          });\n        }\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      // console.log('loadPortfolio - remainingTranches',remainingTranches);\n\n      this.setState({\n        portfolio,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        depositedTranches,\n        remainingTranches,\n        portfolioDonutData,\n        allocationChartData,\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedToken}`;\n    }\n    this.props.goToSection(route);\n  }\n  selectTrancheAndType(type,protocol,token){\n    let trancheRoute=null\n    if (type===\"AA\")\n     trancheRoute=\"senior\"\n    else\n       trancheRoute=\"junior\"\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if(tokenConfig){\n      route += `/${protocol}/${token}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedToken){\n      breadcrumbPath.push(this.state.selectedToken);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              loadPortfolio={this.loadPortfolio.bind(this)}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={2}\n                      src={this.state.trancheDetails.image}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Title\n                    mb={3}\n                  >\n                    Perpetual Yield Tranches\n                  </Title>\n                </Box>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            legendProps={{\n                              itemWidth:80,\n                              itemsSpacing:8\n                            }}\n                            tooltipFormat={v => v+'%'}\n                            defaultLabel={'Total Funds'}\n                            sliceLabel={d => {\n                              if (parseFloat(d.value)>=5){\n                                return d.value+'%';\n                              } else {\n                                return null;\n                              }\n                            }}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 && (\n                  <Flex\n                    width={1}\n                    mb={[3,4]}\n                    id={\"migrate-assets\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Deposited Tranches\n                      </Heading.h4>\n                    </Flex>\n                    <TranchesList\n                      enabledProtocols={[]}\n                      trancheType={this.state.trancheType}\n                      handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                      colsProps={{\n                        fontSize:['10px','14px'],\n                      }}\n                      cols={[\n                        {\n                          title:'PROTOCOL', \n                          props:{\n                            width:[0.34, this.state.useTrancheType ? 0.15 : 0.13]\n                          },\n                          fields:[\n                            {\n                              name:'protocolIcon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              name:'protocolName'\n                            },\n                            {\n                              mobile:false,\n                              name:'experimentalBadge',\n                              props:{\n                                ml:1,\n                                height:'1.5em'\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.15, 0.13],\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        \n                        /*\n                        {\n                          title:'TYPE',\n                          props:{\n                            width:[0.29,0.13],\n                          },\n                          fields:[\n                            {\n                              name:'trancheTypeIcon',\n                              props:{\n                                flexProps:{\n                                  mr:2\n                                },\n                                size:'1.4em'\n                              }\n                            },\n                            {\n                              name:'trancheType'\n                            }\n                          ],\n                          visible:this.state.useTrancheType\n                        },\n                        */\n                        {\n                          title:'POOL',\n                          props:{\n                            width:[0.25, this.state.useTrancheType ? 0.1 : 0.09],\n                          },\n                          fields:[\n                            {\n                              name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolNoLabel` : 'pool',\n                              props:{\n                                minPrecision:1,\n                                decimals:this.props.isMobile ? 0 : 2,\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                          visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                          props:{\n                            width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                          },\n                          parentProps:{\n                            flexDirection:'column',\n                            alignItems:'flex-start',\n                          },\n                          fields:[\n                            {\n                              name:'seniorApy',\n                              showTooltip:true\n                            },\n                          ],\n                        },\n                        {\n                          title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                          visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                          props:{\n                            width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                          },\n                          parentProps:{\n                            flexDirection:'column',\n                            alignItems:'flex-start',\n                          },\n                          fields:[\n                            {\n                              name:'juniorApy',\n                              props:{\n                                flexProps:{\n                                  mr:3\n                                }\n                              },\n                              showTooltip:true\n                            },\n                          ],\n                        },\n                        {\n                          mobile:false,\n                          title:'APR RATIO',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','aprRatio']),\n                          props:{\n                            width:[0.15, 0.1],\n                          },\n                          fields:[\n                            {\n                              name:'trancheAPRSplitRatio',\n                              props:{\n                                flexProps:{\n                                  mr:2\n                                },\n                                height:['1.4em','2em']\n                              }\n                            },\n                            \n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'AUTO-COMPOUNDING',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','autoFarming']),\n                          props:{\n                            width:[0.25,0.17],\n                          },\n                          fields:[\n                            {\n                              name:'autoFarming'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STAKING REWARDS',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','stakingRewards']),\n                          props:{\n                            width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                          },\n                          fields:[\n                            {\n                              name:'stakingRewards'\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:true,\n                          title:'TOKENS',\n                          props:{\n                            width:[0.16,0.17],\n                          },\n                          fields:[\n                            {\n                              name:'govTokens'\n                            }\n                          ]\n                        },\n                        */\n                        {\n                          title:'',\n                          mobile:false,\n                          props:{\n                            width:[0.29, 0.15],\n                          },\n                          parentProps:{\n                            width:1\n                          },\n                          fields:[\n                            {\n                              name:'button',\n                              label: 'Manage',\n                              props:{\n                                width:1,\n                                fontSize:3,\n                                fontWeight:3,\n                                height:'45px',\n                                borderRadius:4,\n                                boxShadow:null,\n                                mainColor:'redeem',\n                                size: this.props.isMobile ? 'small' : 'medium',\n                                handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                              }\n                            }\n                          ]\n                        }\n                      ]}\n                      {...this.props}\n                      availableTranches={this.state.depositedTranches}\n                    />\n                  </Flex>\n                )\n              }\n              {(Object.keys(this.state.remainingTranches).length>0 || !this.props.account) && (\n                <Flex\n                  width={1}\n                  mb={[3,4]}\n                  id={\"migrate-assets\"}\n                  flexDirection={'column'}\n                >\n                  <Flex\n                    pb={2}\n                    width={1}\n                    mb={[2,3]}\n                    borderColor={'divider'}\n                    borderBottom={'1px solid transparent'}\n                  >\n                    <Heading.h4\n                      fontSize={[2,4]}\n                      fontWeight={[3,4]}\n                    >\n                      Available Tranches\n                    </Heading.h4>\n                  </Flex>\n                  <TranchesList\n                    enabledProtocols={[]}\n                    trancheType={this.state.trancheType}\n                    handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                    colsProps={{\n                      fontSize:['10px','14px'],\n                    }}\n                    cols={[\n                      {\n                        title:'PROTOCOL', \n                        props:{\n                          width:[0.34, this.state.useTrancheType ? 0.15 : 0.13]\n                        },\n                        fields:[\n                          {\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          },\n                          {\n                            name:'protocolName'\n                          },\n                          {\n                            mobile:false,\n                            name:'experimentalBadge',\n                            props:{\n                              ml:1,\n                              height:'1.5em'\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:'TOKEN',\n                        props:{\n                          width:[0.15, 0.13],\n                        },\n                        fields:[\n                          {\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          },\n                          {\n                            mobile:false,\n                            name:'tokenName'\n                          }\n                        ]\n                      },\n                      \n                      /*\n                      {\n                        title:'TYPE',\n                        props:{\n                          width:[0.29,0.13],\n                        },\n                        fields:[\n                          {\n                            name:'trancheTypeIcon',\n                            props:{\n                              flexProps:{\n                                mr:2\n                              },\n                              size:'1.4em'\n                            }\n                          },\n                          {\n                            name:'trancheType'\n                          }\n                        ],\n                        visible:this.state.useTrancheType\n                      },\n                      */\n                      {\n                        title:'POOL',\n                        props:{\n                          width:[0.25, this.state.useTrancheType ? 0.1 : 0.09],\n                        },\n                        fields:[\n                          {\n                            name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolNoLabel` : 'pool',\n                            props:{\n                              minPrecision:1,\n                              decimals:this.props.isMobile ? 0 : 2,\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                        visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                        props:{\n                          width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'seniorApy',\n                            showTooltip:true\n                          },\n                        ],\n                      },\n                      {\n                        title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                        visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                        props:{\n                          width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'juniorApy',\n                            props:{\n                              flexProps:{\n                                mr:3\n                              }\n                            },\n                            showTooltip:true\n                          },\n                        ],\n                      },\n                      {\n                        mobile:false,\n                        title:'APR RATIO',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','aprRatio']),\n                        props:{\n                          width:[0.15, 0.1],\n                        },\n                        fields:[\n                          {\n                            name:'trancheAPRSplitRatio',\n                            props:{\n                              flexProps:{\n                                mr:2\n                              },\n                              height:['1.4em','2em']\n                            }\n                          },\n                          \n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'AUTO-COMPOUNDING',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','autoFarming']),\n                        props:{\n                          width:[0.25,0.17],\n                        },\n                        fields:[\n                          {\n                            name:'autoFarming'\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'STAKING REWARDS',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','stakingRewards']),\n                        props:{\n                          width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                        },\n                        fields:[\n                          {\n                            name:'stakingRewards'\n                          }\n                        ]\n                      },\n                      /*\n                      {\n                        mobile:true,\n                        title:'TOKENS',\n                        props:{\n                          width:[0.16,0.17],\n                        },\n                        fields:[\n                          {\n                            name:'govTokens'\n                          }\n                        ]\n                      },\n                      */\n                      {\n                        title:'',\n                        mobile:false,\n                        props:{\n                          width:[0.29, 0.15],\n                        },\n                        parentProps:{\n                          width:1\n                        },\n                        fields:[\n                          {\n                            name:'button',\n                            label: 'Deposit',\n                            props:{\n                              width:1,\n                              fontSize:3,\n                              fontWeight:3,\n                              height:'45px',\n                              borderRadius:4,\n                              boxShadow:null,\n                              mainColor:'deposit',\n                              size: this.props.isMobile ? 'small' : 'medium',\n                              handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                            }\n                          }\n                        ]\n                      }\n                    ]}\n                    {...this.props}\n                    availableTranches={this.props.account?this.state.remainingTranches:this.props.availableTranches}\n\n                  />\n                </Flex>\n              )\n              }\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    programEnded:false,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    programEndDate:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },0) : null;\n\n    const programEndDate = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programEndDate\n    });\n\n    const programEnded = programEndTime && programEndTime*1000<=Date.now();\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      programEnded,\n      totalRewards,\n      programEndDate,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = {\n          address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n        };\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = {\n      address:this.functionsUtil.getContractByName('DAI')._address\n    };\n    const rewardTokenConfig = {\n      address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n    };\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                isStake && this.state.programEnded ? (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      mt:1\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        name={'Warning'}\n                        color={'cellText'}\n                        size={this.props.isMobile ? '1.8em' : '2.3em'}\n                      />\n                      <Text\n                        mt={1}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        The {this.props.selectedToken} staking program ended on {this.state.programEndDate}.\n                      </Text>\n                    </Flex>\n                  </DashboardCard>\n                ) : (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const cardProps = {\n      p:3,\n      mb:2,\n      width:'49%',\n      ...this.props.cardProps\n    };\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        title={this.props.title}\n        titleProps={{\n          fontSize:1,\n          fontWeight:3,\n        }}\n        titleParentProps={{\n          mt:0,\n          ml:0\n        }}\n        description={this.props.description}\n      >\n        {\n          this.props.value ? (\n            <Text\n              mt={1}\n              fontSize={[2,3]}\n              color={'statValue'}\n              {...this.props.textProps}\n            >\n              {this.props.value}\n            </Text>\n          ) : (this.props.children || null)\n        }\n      </DashboardCard>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from 'react';\nimport { Text, Flex, Button, Icon } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStakingDisapprove extends Component {\n\n  state = {\n    disapproveAllowance:false,\n    transactionSucceeded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const requiredNetworkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (requiredNetworkChanged || accountChanged || accountInizialized || contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account || !this.props.contractsInitialized) {\n      return false;\n    }\n\n    const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    const stkIdleConfig = this.functionsUtil.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','contract']);\n\n    await Promise.all([\n      this.props.initContract(stkIdleConfig.name,stkIdleConfig.address,stkIdleConfig.abi)\n    ]);\n\n    let [\n      stkIdleBalance,\n      idleBalance,\n      idleAllowance\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(stkIdleConfig.name,this.props.account),\n      this.functionsUtil.getTokenBalance(governanceTokenName,this.props.account),\n      this.functionsUtil.getAllowance(governanceTokenName,stkIdleConfig.address,this.props.account),\n    ]);\n\n    idleBalance = this.functionsUtil.BNify(idleBalance);\n    stkIdleBalance = this.functionsUtil.BNify(stkIdleBalance);\n    const disapproveAllowance = idleBalance.gt(0) && this.functionsUtil.BNify(idleAllowance).gt(idleBalance) && stkIdleBalance.gt(0);\n\n    return this.setState({\n      disapproveAllowance\n    });\n  }\n\n  async transactionSucceeded(tx){\n    this.setState({\n      transactionSucceeded:true\n    });\n  }\n\n  render() {\n    const viewOnly = this.props.connectorName === 'custom';\n    const stkIdleConfig = this.functionsUtil.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','contract']);\n    return !viewOnly && (this.state.disapproveAllowance || this.state.transactionSucceeded) ? (\n      <Flex\n        p={2}\n        my={2}\n        width={1}\n        border={2}\n        borderRadius={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'cardBgHover'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          {\n            this.state.transactionSucceeded ? (\n              <Icon\n                size={'1.8em'}\n                name={'DoneAll'}\n                color={this.props.theme.colors.transactions.status.completed}\n              />\n            ) : (\n              <Icon\n                size={'1.8em'}\n                name={'Warning'}\n                color={'#f6851a'}\n              />\n            )\n          }\n          <Text\n            mb={1}\n            fontWeight={500}\n            fontSize={'15px'}\n            color={'flashColor'}\n            textAlign={'center'}\n          >\n            {\n              this.state.transactionSucceeded ?\n                'You have succesfully reduced the allowance for the staking contract.'\n              :\n                'You approved the staking contract to spend an amount of IDLE greater then your IDLE balance. It\\'s advised to reduce the allowance for security reasons.'\n            }\n          </Text>\n          {\n            !this.state.transactionSucceeded && (\n              <ExecuteTransaction\n                {...this.props}\n                Component={Button}\n                parentProps={{\n                  width:1,\n                  alignItems:'center',\n                  justifyContent:'center'\n                }}\n                componentProps={{\n                  fontWeight:3,\n                  size:'small',\n                  width:'auto',\n                  style:{\n                    fontSize:'14px',\n                  },\n                  mainColor:'blue',\n                  value:'Reduce allowance',\n                }}\n                contractName={'IDLE'}\n                methodName={'approve'}\n                action={'Reduce allowance'}\n                callback={this.transactionSucceeded.bind(this)}\n                params={[stkIdleConfig.address,this.props.web3.utils.toTwosComplement('0')]}\n              />\n            )\n          }\n        </Flex>\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default IdleStakingDisapprove;\n","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport IdleStakingDisapprove from \"../IdleStakingDisapprove/IdleStakingDisapprove\";\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    maxTime:126144000,// 4 * 365 * 86400  # 4 years\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    approveMaxAllowance:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n\n    let minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    minDate = this.functionsUtil.strToMoment(minDate.format('YYYY-MM-DD'),'YYYY-MM-DD');\n\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodInput+' '+this.functionsUtil.strToMoment().format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss');\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  async getMaxStakeTimestamp(){\n    const blockInfo = await this.functionsUtil.getBlockInfo();\n    let timestamp = parseInt(Date.now()/1000);\n    if (blockInfo){\n      timestamp = blockInfo.timestamp;\n    }\n    timestamp += this.state.maxTime;\n    return timestamp;\n  }\n\n  async calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n          const maxDate = this.functionsUtil.strToMoment(maxStakeTimestamp*1000);\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    let _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',this.props.tokenConfig.feeDistributor.fromBlock,'latest'),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',this.props.contractInfo.fromBlock,'latest',{filter:{provider:this.props.account}}) : []\n    ]);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    if (claimEvents){\n      await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n        if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n          const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n          if (blockInfo){\n            const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n            totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n            claimedRewards.push({\n              amount:claimedAmount,\n              hash:e.transactionHash,\n              tokenName:this.props.contractInfo.rewardToken,\n              date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n            });\n          }\n        }\n      });\n    }\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0].value : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1].value : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2].value : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents ? depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0)) : this.functionsUtil.BNify(0);\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  async changeLockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // Check if lockPeriodTimestamp > maxStakeTimestamp\n      const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n      if (lockPeriodTimestamp>maxStakeTimestamp){\n        lockPeriodTimestamp = maxStakeTimestamp;\n      }\n\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      },() => {\n        this.checkButtonDisabled()\n      });\n    }\n  }\n\n  async selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // Check if lockPeriodTimestamp > maxStakeTimestamp\n    const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n    if (lockPeriodTimestamp>maxStakeTimestamp){\n      lockPeriodTimestamp = maxStakeTimestamp;\n    }\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const statsLoaded = false;\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      statsLoaded,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n        newState.approveMaxAllowance = this.functionsUtil.normalizeTokenAmount(newState.tokenBalance,this.props.tokenConfig.decimals);\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveEnabled = this.state.increaseAction === 'amount';\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n        newState.approveMaxAllowance = this.functionsUtil.normalizeTokenAmount(newState.tokenBalance,this.props.tokenConfig.decimals);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDateTimestamp = await this.getMaxStakeTimestamp();\n    const maxDate = this.functionsUtil.strToMoment(maxDateTimestamp*1000).format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.isDashboard && (\n          <IdleStakingDisapprove\n            {...this.props}\n          />\n        )\n      }\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCardSmall\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCardSmall\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Box\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.45 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.4 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.15 : 0.3}\n                              >\n                                { this.props.isMobile ? '' : 'Hash' }\n                              </Text>\n                            </Flex>\n                            <Box\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              overflow={['visible','scroll']}\n                              maxHeight={['initial','500px']}\n                            >\n                              {\n                                this.state.distributedRewards.map( (reward,index) => (\n                                  <Flex\n                                    width={1}\n                                    py={[2,1]}\n                                    flexDirection={'row'}\n                                    key={`rewards_${index}`}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.45 : 0.4}\n                                    >\n                                      {reward.date}\n                                    </Text>\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.4 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      {reward.amount.toFixed(4)} {reward.tokenName}\n                                    </Text>\n                                    <Flex\n                                      width={this.props.isMobile ? 0.15 : 0.13}\n                                      justifyContent={this.props.isMobile ? 'flex-end' : 'flex-start'}\n                                    >\n                                      <ExtLink\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          {\n                                            !this.props.isMobile && (\n                                              <Text\n                                                fontSize={2}\n                                                fontWeight={2}\n                                                color={'link'}\n                                              >\n                                                {this.functionsUtil.shortenHash(reward.hash)}\n                                              </Text>\n                                            )\n                                          }\n                                          <Icon\n                                            ml={1}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                            size={this.props.isMobile ? '1.4em' : '1.2em'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    </Flex>\n                                  </Flex>\n                                ))\n                              }\n                            </Box>\n                          </Box>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changeLockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        approveMaxAllowance={this.state.approveMaxAllowance}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          color:'hsl('+tokenColorHsl+')',\n          value:Math.round(tokenPercentage),\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken.toUpperCase(),'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass PolygonBridgeTransactions extends Component {\n\n  state = {\n    loaded:false,\n    bridgeEnabled:false,\n    polygonTransactions:null,\n    polygonTransactionsAvailableTokens:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const maticPOSClientChanged = prevProps.maticPOSClient !== this.props.maticPOSClient;\n    if (accountChanged || maticPOSClientChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (!this.props.account || !this.props.maticPOSClient){\n      return false;\n    }\n\n    let polygonTransactionsAvailableTokens = null;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const bridgeEnabled = polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id);\n\n    if (!bridgeEnabled){\n      return this.setState({\n        loaded:true,\n        bridgeEnabled\n      });\n    }\n\n    const polygonTransactions = await this.functionsUtil.getPolygonBridgeTxs(this.props.account);\n\n    // console.log('polygonTransactions',this.props.account,this.props.web3,polygonTransactions);\n\n    if (polygonTransactions && polygonTransactions.length>0){\n      polygonTransactionsAvailableTokens = polygonTransactions.map( (tx) => {\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge','props','availableTokens',tx.tokenSymbol]);\n        let actionIcon = null;\n        switch (tx.action){\n          default:\n          case 'Deposit':\n            actionIcon = 'ArrowDownward';\n          break;\n          case 'Withdraw':\n            actionIcon = 'ArrowUpward';\n          break;\n          case 'Exit':\n            actionIcon = 'Undo';\n          break;\n        }\n        const depositInfo = {\n          actionIcon,\n          amount:tx.value,\n          token:tx.tokenSymbol,\n          action:tx.action.toUpperCase(),\n          bridgeType:tx.bridgeType.toUpperCase(),\n          status:tx.included ? 'Completed' : 'pending',\n          hash:this.functionsUtil.shortenHash(tx.hash),\n          statusIcon:tx.included ? 'Done' : 'Timelapse',\n          actionIconProps:{\n            color:this.props.theme.colors.transactions.action[tx.action.toLowerCase()],\n            bgColor:this.props.theme.colors.transactions.actionBg[tx.action.toLowerCase()]\n          },\n          url:this.functionsUtil.getEtherscanTransactionUrl(tx.hash,tx.networkId),\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('DD MMM, YYYY'),\n          statusIconProps:{\n            color:tx.included ? this.props.theme.colors.transactions.status.completed : this.props.theme.colors.transactions.status.pending\n          },\n          tokenIcon:tokenConfig.icon || this.functionsUtil.getGlobalConfig(['stats','tokens',tx.tokenSymbol.toUpperCase(),'icon']) || `images/tokens/${tx.tokenSymbol}.svg`\n        };\n        return depositInfo;\n      });\n    }\n\n    // console.log('PolygonBridgeTransactions',polygonTransactions,polygonTransactionsAvailableTokens);\n\n    this.setState({\n      loaded:true,\n      bridgeEnabled,\n      polygonTransactions,\n      polygonTransactionsAvailableTokens\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded || !this.state.bridgeEnabled){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0 ? (\n            <CustomList\n              paginationEnabled={true}\n              handleClick={(props) => this.functionsUtil.openWindow(props.row.url)}\n              cols={[\n                {\n                  title:'HASH',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.18],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'bgIcon',\n                      path:['actionIcon'],\n                    },\n                    {\n                      type:'text',\n                      path:['hash'],\n                      props:{\n                        ml:[0,2]\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  props:{\n                    width:[0.25,0.14],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['action'],\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['date'],\n                    },\n                  ]\n                },\n                {\n                  title:'BRIDGE',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['bridgeType'],\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      mobile:false,\n                      path:['statusIcon'],\n                      props:{\n                        mr:2,\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.25, 0.15],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['amount'],\n                      props:{\n                        decimals: 4\n                      }\n                    },\n                    {\n                      name:'tokenName',\n                      props:{\n                        ml:2\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.25,0.13]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      path:['tokenIcon'],\n                      props:{\n                        mr:2,\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                    }\n                  ]\n                },\n              ]}\n              {...this.props}\n              rows={this.state.polygonTransactionsAvailableTokens}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default PolygonBridgeTransactions;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\n// import ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport PolygonBridgeTransactions from '../PolygonBridgeTransactions/PolygonBridgeTransactions';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    portfolioLoading:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week',\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      this.setStateSafe({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return await this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n    // const currentNetwork = this.functionsUtil.getRequiredNetwork();\n\n    if (this.state.portfolioLoaded || this.state.portfolioLoading){\n      return false;\n    }\n\n    await this.setStateSafe({\n      portfolioLoading:true\n    });\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load and process Etherscan Txs\n      this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n\n      // Load data\n      const [\n        batchedDeposits,\n        portfolio,\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n      newState.depositedTokens = [];\n      newState.tokensToMigrate = [];\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        // let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        // let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            // tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            // this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          // if (!tokenScore.isNaN() && tokenScore.gt(0)){\n          //   avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n          //   totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          // }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n        //   avgScore = avgScore.div(totalBalanceWithScore);\n        // }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        // newState.avgScore = avgScore;\n        newState.tokensToMigrate = portfolio.tokensToMigrate;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.portfolioLoaded = true;\n      newState.portfolioLoading = false;\n      \n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        portfolioLoading:false,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    // const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title']);\n    const toolsToShow = ['addFunds','nexusMutual','tokenSwap'].filter( toolName => {\n      const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n      return toolConfig.enabled && (!toolConfig.availableNetworks.length || toolConfig.availableNetworks.includes(parseInt(currentNetwork.id)));\n    })\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {strategyName} strategy\n        </Title>\n        {\n          /*\n          currentNetwork.id === 137 ? (\n            <Flex\n              width={1}\n              minHeight={'45vh'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  width:[1,0.5],\n                }}\n              >\n                <Flex\n                  aligItems={'center'}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'AccessTime'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Hang on, please!<br />The {strategyName} strategy has not yet been activated in Polygon.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,1/2]\n                    }}\n                    handleClick={e => this.props.goToSection(`stake`)}\n                  >\n                    Go to Staking\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          ) :\n          */\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    mt={1}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    {\n                                      /*\n                                      <Flex\n                                        width={0.45}\n                                        alignItems={'center'}\n                                        justifyContent={'flex-end'}\n                                      >\n                                        <Text\n                                          fontSize={1}\n                                          fontWeight={3}\n                                          fontFamily={this.props.theme.fonts.counter}\n                                          color={this.props.theme.colors.transactions.status.completed}\n                                        >\n                                          +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                        </Text>\n                                      </Flex>\n                                      <Text\n                                        mx={1}\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >|</Text>\n                                      */\n                                    }\n                                    <TotalEarningsCounter\n                                      {...this.props}\n                                      unit={'+$'}\n                                      decimals={4}\n                                      counterStyle={{\n                                        fontSize:14,\n                                        fontWeight:600,\n                                        color:this.props.theme.colors.transactions.status.completed\n                                      }}\n                                      portfolio={this.state.portfolio}\n                                    />\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: '<small>+</small>'+this.state.portfolio.totalEarningsPerc.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Profit\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','totalProfitPerc'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && toolsToShow.length>=2 && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                              width={[1,1/toolsToShow.length]}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                /*\n                nexusMutualConfig.enabled && nexusMutualConfig.availableNetworks.includes(currentNetwork.id) && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n                */\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.26,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                showLoader:false,\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'OLD APY',\n                            props:{\n                              width:[0.26,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'oldApy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            props:{\n                              width:[0.21,0.11],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.13],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.15],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:true,\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            props:{\n                              width:[0.21, 0.13],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'FARMING',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.22,0.16],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(this.functionsUtil.getGovTokensFarming())}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id) && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                    id={'polygon-transactions'}\n                  >\n                    <PolygonBridgeTransactions\n                      {...this.props}\n                      title={'Polygon Bridge Transactions'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport { Button, Flex, Box, Text, Icon } from \"rimble-ui\";\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass PolygonBridge extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    txsToExit:[],\n    infoBox:null,\n    polygonTxs:[],\n    inputValue:null,\n    dataLoaded:false,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    availableTokens:null,\n    availableNetworks:[],\n    approveEnabled:false,\n    contractApproved:false,\n    defaultTransaction:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    selectedTransaction:null,\n    transactionSucceeded:null,\n    selectedTransactionHash:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  async loadPolygonTxs(){\n    const polygonTxs = await this.functionsUtil.getPolygonBridgeTxs();\n    this.setState({\n      polygonTxs,\n      dataLoaded:true\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const rootTokenConfig = tokenConfig.rootToken;\n      const childTokenConfig = tokenConfig.childToken;\n\n      // Init contracts\n      await Promise.all([\n        rootTokenConfig ? this.props.initContract(rootTokenConfig.name,rootTokenConfig.address,rootTokenConfig.abi) : null,\n        childTokenConfig ? this.props.initContract(childTokenConfig.name,childTokenConfig.address,childTokenConfig.abi) : null\n      ]);\n\n      this.setState({\n        tokenConfig\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.updateData();\n      }\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n  }\n\n  getTransactionParams(amount){\n    let value = null;\n    let methodName = null;\n    let methodParams = [];\n    let contractName = null;\n    amount = this.functionsUtil.toBN(amount);\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        switch (this.state.selectedToken){\n          case 'WETH':\n            methodName = 'depositEtherFor';\n            contractName = 'RootChainManager';\n            value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            methodParams = [this.props.account];\n          break;\n          default:\n            const depositData = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            switch (bridgeType){\n              case 'plasma':\n                contractName = 'DepositManager';\n                methodName = 'depositERC20ForUser';\n                methodParams = [this.state.tokenConfig.rootToken.address,this.props.account,depositData];\n              break;\n              default:\n              case 'pos':\n                methodName = 'depositFor';\n                contractName = 'RootChainManager';\n                methodParams = [this.props.account,this.state.tokenConfig.rootToken.address,depositData];\n              break;\n            }\n          break;\n        }\n      break;\n      case 'Withdraw':\n        methodName = 'withdraw';\n        methodParams = [amount];\n        contractName = this.state.tokenConfig.childToken.name;\n        if (this.state.tokenConfig.sendValue){\n          value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',{\n    //   value,\n    //   methodName,\n    //   methodParams,\n    //   contractName\n    // });\n\n    return {\n      value,\n      methodName,\n      methodParams,\n      contractName\n    };\n  }\n\n  exitCallback(){\n\n  }\n\n  async getExitTransactionParams(){\n    const txHash = this.state.selectedTransactionHash;\n\n    const logEventSignature = this.props.toolProps.genericParams.erc20LogEventSignature;\n    const exitCalldata = await this.props.maticPOSClient.exitUtil.buildPayloadForExit(txHash,logEventSignature,false);\n    \n    if (exitCalldata){\n      return [exitCalldata];\n    }\n    return null;\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async selectTransaction(selectedTransactionHash){\n    const selectedTransaction = this.state.polygonTxs.find( tx => tx.hash.toLowerCase() === selectedTransactionHash.toLowerCase() );\n    this.setState({\n      selectedTransaction,\n      selectedTransactionHash\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    /*\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        const depositedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      break;\n      case 'Withdraw':\n        const withdrawnTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (tx.txReceipt && tx.txReceipt.events && tx.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(tx.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n      break;\n      default:\n      break;\n    }\n    */\n    const transactionSucceeded = tx;\n    this.setState({\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(){\n    const newState = {};\n    const isETH = this.state.selectedToken==='WETH';\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        newState.steps = [];\n        newState.permitEnabled = false;\n        newState.availableNetworks = [1,5];\n        newState.approveEnabled = !isETH;\n        newState.approveDescription = `Approve the contract to deposit your ${this.state.selectedToken}`;\n        newState.contractInfo = bridgeType === 'pos' ? this.props.toolProps.contracts.ERC20Predicate : this.props.toolProps.contracts.DepositManager;\n        newState.balanceProp = isETH ? await this.functionsUtil.getETHBalance(this.props.account) : await this.functionsUtil.getTokenBalance(this.state.tokenConfig.rootToken.name,this.props.account);\n        if (this.state.transactionSucceeded){\n          let depositedTokensLog = null;\n          let depositedTokensEvent = null;\n          if (!isETH){\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          } else {\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          }\n          const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : ( depositedTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensEvent.raw.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully deposited <strong>${depositedTokens.toFixed(4)} ${this.state.selectedToken}</strong> in the Polygon chain. Please wait ~7-8 minutes for your balance to be accounted in the Polygon chain.`\n          }\n        } else {\n          newState.infoBox = {\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n            text:`Please note that deposit of funds takes ~7-8 minutes to be accounted in the Polygon chain.`\n          }\n        }\n        // console.log('updateData',newState);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.availableNetworks = [137,80001];\n        newState.contractInfo = this.state.tokenConfig.childToken;\n        newState.balanceProp = await this.functionsUtil.getTokenBalance(this.state.tokenConfig.childToken.name,this.props.account);\n\n        const currentNetwork = this.functionsUtil.getRequiredNetwork();\n        const maticNetwork = currentNetwork.name;\n        const mainNetworkId = this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetwork.id]);\n        const mainNetworkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',mainNetworkId,'name']);\n        newState.steps = [\n          {\n            icon:'LooksOne',\n            completed:false,\n            description:`Withdraw ${this.state.selectedToken} from ${maticNetwork} network`\n          },\n          {\n            icon:'LooksTwo',\n            completed:false,\n            description:`Wait for the checkpoint to be submitted`\n          },\n          {\n            icon:'Looks3',\n            completed:false,\n            description:`Exit ${this.state.selectedToken} from ${mainNetworkName} network`\n          },\n        ];\n        if (this.state.transactionSucceeded){\n          const withdrawnTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events && this.state.transactionSucceeded.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(this.state.transactionSucceeded.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : ( withdrawnTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensEvent.raw.data,16),this.state.tokenConfig.decimals)  : this.functionsUtil.BNify(0)));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully withdrawn <strong>${withdrawnTokens.toFixed(4)} ${this.state.selectedToken}</strong> from the Polygon chain. Please wait up to 2-3 hours to be able to complete the withdrawal.`\n          }\n        } else {\n          let text = '';\n          switch (bridgeType){\n            case 'plasma':\n              text = `Please note that withdraw of funds takes ~7 days in Plasma.`;\n            break;\n            default:\n            case 'pos':\n              text = `Please note that withdraw of funds takes ~45 mins to 1 hour in PoS.`;\n            break;\n          }\n          newState.infoBox = {\n            text,\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          }\n        }\n      break;\n      case 'Exit':\n        newState.availableNetworks = [1,5];\n        newState.txsToExit = this.state.polygonTxs.filter( tx => tx.action === 'Withdraw' && !tx.exited && tx.tokenSymbol.toUpperCase() === this.state.selectedToken.toUpperCase() ).map( tx => {\n          const label = this.functionsUtil.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm')+' - '+tx.value.toFixed(6)+' '+tx.token;\n          return {\n            label,\n            data:tx,\n            value:tx.hash\n          }\n        });\n\n        newState.defaultTransaction = newState.txsToExit.length>0 ? newState.txsToExit[0] : null;\n        newState.selectedTransaction = newState.defaultTransaction ? newState.defaultTransaction.data : null;\n        newState.selectedTransactionHash = newState.selectedTransaction ? newState.selectedTransaction.hash : null;\n      break;\n      default:\n      break;\n    }\n\n    if (!newState.balanceProp){\n      newState.balanceProp = this.functionsUtil.BNify(0);\n    }\n\n    // console.log('updateData',newState);\n\n    this.setState(newState);\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          label:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const paramIsToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2];\n    const selectedToken = paramIsToken ? this.props.urlParams.param2 : (this.props.selectedToken || this.state.selectedToken || availableTokens[0].value);\n    const selectedOption = availableTokens.find( t => t.value === selectedToken );\n    const defaultAction = !paramIsToken ? (currentNetwork.provider === 'infura' ? 'Deposit' : 'Withdraw') : 'Deposit';\n    const selectedAction = this.props.action || this.state.action || defaultAction;\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n\n    // console.log('loadData',this.props.urlParams);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    },() => {\n      this.loadPolygonTxs();\n    });\n  }\n\n  async exitSelectedTransaction(){\n\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const fullWidth = !!this.props.fullWidth;\n    const isExit = this.state.selectedAction === 'Exit';\n    const isDeposit = this.state.selectedAction === 'Deposit';\n    const isWithdraw = this.state.selectedAction === 'Withdraw';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const currentNetworkId = currentNetwork.id;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    width={[1,fullWidth ? 1 : '33em']}\n                  >\n                    {\n                      !this.props.selectedToken && (\n                        <Box\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Select Token:\n                          </Text>\n                          <AssetSelector\n                            id={'tokens'}\n                            {...this.props}\n                            showBalance={false}\n                            isSearchable={false}\n                            onChange={this.selectToken.bind(this)}\n                            selectedToken={this.state.selectedToken}\n                            availableTokens={this.props.toolProps.availableTokens}\n                          />\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          {\n                            !this.props.action && (\n                              <Box\n                                width={1}\n                              >\n                                <Text\n                                  mb={2}\n                                >\n                                  Choose the action:\n                                </Text>\n                                <Flex\n                                  mb={3}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'space-between'}\n                                >\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Deposit'}\n                                    iconColor={'deposit'}\n                                    icon={'ArrowDownward'}\n                                    iconBgColor={'#ced6ff'}\n                                    handleClick={ e => this.setAction('Deposit') }\n                                    isActive={ this.state.selectedAction === 'Deposit' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Withdraw'}\n                                    iconColor={'redeem'}\n                                    icon={'ArrowUpward'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Withdraw') }\n                                    isActive={ this.state.selectedAction === 'Withdraw' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Exit'}\n                                    icon={'SwapHoriz'}\n                                    iconColor={'redeem'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Exit') }\n                                    isActive={ this.state.selectedAction === 'Exit' }\n                                  />\n                                </Flex>\n                              </Box>\n                            )\n                          }\n                          {\n                            !this.state.availableNetworks.includes(currentNetworkId) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mb:3,\n                                  width:1\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    The <strong>{this.functionsUtil.capitalize(currentNetwork.name)} network</strong> is not supported for this function, please switch to <strong>{this.functionsUtil.getGlobalConfig(['network','availableNetworks',this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]),'name'])} network</strong>.\n                                  </Text>\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,1/2],\n                                      fontSize:[1,2]\n                                    }}\n                                    handleClick={e => this.props.setRequiredNetwork(this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]))}\n                                  >\n                                    Switch Network\n                                  </RoundButton>\n                                </Flex>\n                              </DashboardCard>\n                            ) : (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo) ? (\n                              <Box\n                                mt={1}\n                                width={1}\n                                mb={[4,3]}\n                              >\n                                {\n                                  (isDeposit || isWithdraw) ? (\n                                    <SendTxWithBalance\n                                      {...this.props}\n                                      error={this.state.error}\n                                      steps={this.state.steps}\n                                      infoBox={this.state.infoBox}\n                                      action={this.state.selectedAction}\n                                      tokenConfig={this.state.tokenConfig}\n                                      tokenBalance={this.state.balanceProp}\n                                      contractInfo={this.state.contractInfo}\n                                      permitEnabled={this.state.permitEnabled}\n                                      approveEnabled={this.state.approveEnabled}\n                                      callback={this.transactionSucceeded.bind(this)}\n                                      approveDescription={this.state.approveDescription}\n                                      contractApproved={this.contractApproved.bind(this)}\n                                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                      changeInputCallback={this.changeInputCallback.bind(this)}\n                                      getTransactionParams={this.getTransactionParams.bind(this)}\n                                    >\n                                      {\n                                        isDeposit ? (\n                                          <Flex\n                                            width={1}\n                                            alignItems={'stretch'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <BuyModal\n                                              {...this.props}\n                                              showInline={true}\n                                              availableMethods={[]}\n                                              buyToken={this.state.selectedToken}\n                                            />\n                                          </Flex>\n                                          // `You don't have any ${this.state.selectedToken} in your wallet.`\n                                        ) : isWithdraw && (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                name={'MoneyOff'}\n                                                color={'cellText'}\n                                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You don't have any {this.state.selectedToken} to withdraw.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </SendTxWithBalance>\n                                  ) : isExit && (\n                                    <Box\n                                      width={1}\n                                    >\n                                      {\n                                        !this.state.dataLoaded ? (\n                                          <Flex\n                                            mt={4}\n                                            flexDirection={'column'}\n                                          >\n                                            <FlexLoader\n                                              flexProps={{\n                                                flexDirection:'row'\n                                              }}\n                                              loaderProps={{\n                                                size:'30px'\n                                              }}\n                                              textProps={{\n                                                ml:2\n                                              }}\n                                              text={'Loading transactions...'}\n                                            />\n                                          </Flex>\n                                        ) : this.state.txsToExit.length ? (\n                                          <Box\n                                            width={1}\n                                          >\n                                            <Text mb={1}>\n                                              Select Transaction:\n                                            </Text>\n                                            <GenericSelector\n                                              {...this.props}\n                                              isSearchable={false}\n                                              name={'transactions'}\n                                              options={this.state.txsToExit}\n                                              onChange={this.selectTransaction.bind(this)}\n                                              defaultValue={this.state.defaultTransaction}\n                                            />\n                                            {\n                                              this.state.selectedTransaction && \n                                                !this.state.selectedTransaction.included ? (\n                                                  <IconBox\n                                                    cardProps={{\n                                                      mt:3,\n                                                      width:1\n                                                    }}\n                                                    icon={'AccessTime'}\n                                                    text={'This transaction has not been included in the checkpoint yet.<br />Please wait up to 2-3 hours to be able to complete the withdrawal.'}\n                                                  />\n                                                ) : (\n                                                  <ExecuteTransaction\n                                                    action={'Exit'}\n                                                    Component={Button}\n                                                    parentProps={{\n                                                      mt:3,\n                                                      alignItems:'center',\n                                                      justifyContent:'center'\n                                                    }}\n                                                    componentProps={{\n                                                      fontWeight:3,\n                                                      width:[1,1/3],\n                                                      size:'medium',\n                                                      height:'45px',\n                                                      fontSize:[2,3],\n                                                      boxShadow:null,\n                                                      borderRadius:4,\n                                                      mainColor:'redeem',\n                                                      value:'Exit Transaction',\n                                                    }}\n                                                    params={[]}\n                                                    methodName={'exit'}\n                                                    sendRawTransaction={true}\n                                                    contractName={'RootChainManager'}\n                                                    callback={this.exitCallback.bind(this)}\n                                                    getTransactionParamsAsync={this.getExitTransactionParams.bind(this)}\n                                                    {...this.props}\n                                                  >\n                                                    <Flex\n                                                      flexDirection={'row'}\n                                                      alignItems={'center'}\n                                                      justifyContent={'center'}\n                                                    >\n                                                      <Icon\n                                                        mr={1}\n                                                        name={'Done'}\n                                                        size={'1.4em'}\n                                                        color={this.props.theme.colors.transactions.status.completed}\n                                                      />\n                                                      <Text\n                                                        fontWeight={500}\n                                                        fontSize={'15px'}\n                                                        color={'copyColor'}\n                                                        textAlign={'center'}\n                                                      >\n                                                        Transaction successfully exited!\n                                                      </Text>\n                                                    </Flex>\n                                                  </ExecuteTransaction>\n                                                )\n                                            }\n                                          </Box>\n                                        ) : (\n                                          <IconBox\n                                            cardProps={{\n                                              mt:3,\n                                              width:1\n                                            }}\n                                            icon={'Warning'}\n                                            text={'You cannot exit any transaction yet.'}\n                                          />\n                                        )\n                                      }\n                                    </Box>\n                                  )\n                                }\n                              </Box>\n                            ) : (\n                              <Flex\n                                mt={3}\n                                mb={3}\n                                width={1}\n                              >\n                                <FlexLoader\n                                  flexProps={{\n                                    flexDirection:'row'\n                                  }}\n                                  loaderProps={{\n                                    size:'30px'\n                                  }}\n                                  textProps={{\n                                    ml:2\n                                  }}\n                                  text={'Loading info...'}\n                                />\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PolygonBridge;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Gauges from \"../Gauges/Gauges\";\nimport Staking from \"../Staking/Staking\";\nimport DAI from '../abis/tokens/DAI.json';\nimport IDLE from '../contracts/IDLE.json';\nimport Tranches from '../Tranches/Tranches';\nimport USDC from '../abis/tokens/USDC.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from \"../abis/curve/CurvePool.json\";\nimport NexusMutual from \"../NexusMutual/NexusMutual\";\nimport CoverMint from \"../abis/cover/CoverMint.json\";\nimport LockedIDLE from \"../contracts/LockedIDLE.json\";\nimport LpStakingAbi from \"../contracts/LpStaking.json\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TokenWrapper from \"../TokenWrapper/TokenWrapper\";\nimport PriceOracle from \"../contracts/PriceOracle.json\";\nimport FeeTreasury from \"../contracts/FeeTreasury.json\";\nimport IdleTokenV2 from \"../contracts/IdleTokenV2.json\";\nimport StrategyPage from \"../StrategyPage/StrategyPage\";\nimport BuyModal from \"../utilities/components/BuyModal\";\nimport IdleTokenV3 from \"../contracts/IdleTokenV3.json\";\nimport IdleTokenV4 from \"../contracts/IdleTokenV4.json\";\nimport BatchDeposit from \"../BatchDeposit/BatchDeposit\";\nimport ChildERC20 from '../abis/polygon/ChildERC20.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport MultiRewards from '../contracts/MultiRewards.json';\nimport PolygonBridge from '../PolygonBridge/PolygonBridge';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport GovernorBravo from '../contracts/GovernorBravo.json'\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport LiquidityGauge from '../contracts/LiquidityGauge.json';\nimport GaugeController from '../contracts/GaugeController.json';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport ERC20Predicate from '../abis/polygon/ERC20Predicate.json';\nimport EtherPredicate from '../abis/polygon/EtherPredicate.json';\nimport DepositManager from '../abis/polygon/DepositManager.json';\nimport GaugeDistributor from '../contracts/GaugeDistributor.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport RootChainManager from '../abis/polygon/RootChainManager.json';\nimport SushiV2Router02 from \"../abis/sushiswap/SushiV2Router02.json\";\nimport IdleBatchConverter from \"../contracts/IdleBatchConverter.json\";\nimport UniswapV2Router02 from \"../abis/uniswap/UniswapV2Router02.json\";\nimport ChildChainManager from '../abis/polygon/ChildChainManager.json';\nimport IdleDepositForwarder from \"../contracts/IdleDepositForwarder.json\";\nimport ProtocolDataProvider from '../abis/aave/ProtocolDataProvider.json';\nimport SushiLiquidityPool from \"../abis/sushiswap/SushiLiquidityPool.json\";\nimport NexusMutualIncidents from \"../abis/nexus/NexusMutualIncidents.json\";\nimport GaugeDistributorProxy from '../contracts/GaugeDistributorProxy.json';\nimport StakingFeeDistributor from \"../contracts/StakingFeeDistributor.json\";\nimport NexusMutualDistributor from \"../abis/nexus/NexusMutualDistributor.json\";\nimport BalancerExchangeProxy from \"../abis/balancer/BalancerExchangeProxy.json\";\nimport IdleConverterPersonalSignV4 from \"../contracts/IdleConverterPersonalSignV4.json\";\nimport MinimalInitializableProxyFactory from \"../contracts/MinimalInitializableProxyFactory.json\";\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: \"Idle\",\n  version: \"v6.5\",\n  baseToken: \"ETH\",\n  baseURL: \"https://idle.finance\",\n  forumURL: \"https://gov.idle.finance\",\n  telegramURL: \"https://t.me/idlefinance\",\n  discordURL: \"https://discord.gg/mpySAJp\",\n  twitterURL: \"https://twitter.com/idlefinance\",\n  cache: {\n    TTL:300,\n    clearAll:true\n  },\n  theme: {\n    darkModeEnabled: true\n  },\n  environments: {\n    live: {\n      requiredNetwork: 1,\n      url: \"https://idle.finance\"\n    },\n    beta: {\n      requiredNetwork: 1,\n      url: \"https://beta.idle.finance\"\n    },\n    polygon: {\n      requiredNetwork: 137,\n      url: \"https://polygon.idle.finance\"\n    }\n  },\n  betaURL: \"https://beta.idle.finance\",\n  countries: {\n    USA: \"United States of America\",\n    GBR: \"United Kingdom\",\n    AUS: \"Australia\",\n    BRA: \"Brazil\",\n    CHN: \"China\",\n    CAN: \"Canada\",\n    EUR: \"Europe\",\n    HKG: \"Hong Kong\",\n    IND: \"India\",\n    MEX: \"Mexico\",\n    RUS: \"Russia\",\n    ZAF: \"South Africa\",\n    KOR: \"South Korea\"\n  },\n  logs: {\n    // Enable logs levels\n    errorsEnabled: false,\n    messagesEnabled: false\n  },\n  connectors: {\n    // Connectors props\n    metamask: {\n      enabled: true,\n      subcaption: \"Browser extension\"\n    },\n    opera: {\n      enabled: true,\n      subcaption: \"Opera injected wallet\"\n    },\n    dapper: {\n      enabled: true,\n      icon: \"dapper.png\",\n      subcaption: \"Browser extension\"\n    },\n    coinbase: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      subcaption: \"Connect with Coinbase wallet\"\n    },\n    trustwallet: {\n      enabled: true,\n      subcaption: \"Connect with Trust Wallet\"\n    },\n    walletconnect: {\n      enabled: true,\n      iconModal: \"walletconnect.png\",\n      subcaption: \"Connect with QR code\"\n    },\n    walletlink: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      name: \"Coinbase Wallet\",\n      subcaption: \"Connect with QR code\"\n    },\n    gnosis: {\n      enabled: true,\n      // icon:'coinbase.png',\n      name: \"Gnosis Safe App\",\n      subcaption: \"Connect with Gnosis Safe App\"\n    },\n    fortmatic: {\n      enabled: true,\n      subcaption: \"Login with phone-number\"\n    },\n    portis: {\n      enabled: true,\n      subcaption: \"Login with e-mail\"\n    },\n    authereum: {\n      enabled: true,\n      subcaption: \"Cross-device wallet\"\n    },\n    torus: {\n      enabled: true,\n      icon: \"torus.png\",\n      subcaption: \"One-Click login for Web 3.0\"\n    },\n    trezor: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledger: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledgerlive: {\n      enabled: true,\n      subcaption: \"Ledger Live Browser\"\n    },\n    custom: {\n      enabled: true,\n      subcaption: \"Custom address\"\n    }\n  },\n  newsletterSubscription: {\n    endpoint: \"https://dev.lapisgroup.it/idle/newsletter.php\"\n  },\n  messages: {\n    scoreShort: \"Protocol Risk Score\",\n    apyShort: \"Annual Percentage Yield\",\n    totalProfitPerc: \"Total percentage profit generated on your balance\",\n    tokenPrice: \"The token price is calculated using Uniswap spot prices.\",\n    cheapRedeem: \"Amount of unlent funds available for low gas fees redeem\",\n    aprRatio:\"The % share of the underlying yield this tranche is currently receiving\",\n    gaugeBoost: \"Increase the boost by staking your IDLE tokens and increasing your voting power\",\n    curveBonusSlippage: \"Slippage or bonus depending on if the coin is low or high in the Curve Pool\",\n    distributionSpeed: \"The distribution indicates the amount of tokens distributed for the entire pool.\",\n    directMint: \"Pay an additional gas fee to rebalance the pool and help all users gain an additional APR\",\n    autoFarming:\"Tokens earned and re-invested for more underlying token which is deposited back into the strategy\",\n    performanceFee: \"This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE\",\n    userDistributionSpeed: \"The distribution indicates the amount of tokens distributed for your account based on your current pool share.\",\n    govTokenApr: \"Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.\",\n    apyTranches: \"The annualized rate of return earned on an investment, taking into account the effect of auto-compounding interest and harvests\",\n    stakingRewards:\"Current staking rewards received by this tranche. This requires users to deposit the tranche tokens using the staking function\",\n    govTokenRedeemableBalance: \"The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.\",\n    riskScoreShort: \"It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.\",\n    redeemSkipGov: \"This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool\",\n    batchDepositExecutionSchedule: \"Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.\",\n    riskAdjustedDisabledMessageDeposit: `The Risk Adjusted strategy is no longer available.<br />Please consider to deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to have a similar risk profile.`,\n    apyLong: \"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.\",\n    riskScore: `It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions: `<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`,\n    yieldFarming: 'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\" class=\"link\">Read more here</a>.',\n    riskAdjustedDisabledMessageRedeem: `The Risk Adjusted strategy is no longer available, please redeem your funds from this strategy. You can deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to maintain a similar risk profile and receive an incentive. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://gov.idle.finance/t/risk-adjusted-removal-for-tranches-migration/673\" class=\"link\">Read more here</a>.`,\n  },\n  analytics: {\n    google: {\n      events: {\n        enabled: true, // Enable Google Analytics events\n        debugEnabled: false, // Enable sending for test environments\n        addPostfixForTestnet: true // Append testnet to eventCategory\n      },\n      pageView: {\n        enabled: true\n      }\n    }\n  },\n  modals: {\n    // Enable modals\n    first_deposit_referral: false, // Referral share modal\n    first_deposit_share: true, // First deposit share modal\n    migrate: {\n      enabled: true,\n      availableNetworks: [1]\n    },\n    welcome: {\n      // Welcome modal\n      enabled: true,\n      frequency: 604800 // One week\n    }\n  },\n  dashboard: {\n    baseRoute: \"/dashboard\",\n    theme: {\n      mode: \"light\",\n      darkModeEnabled: true\n    }\n  },\n  governance: {\n    test: false,\n    enabled: true,\n    startBlock: 11333729,\n    availableNetworks: [1],\n    baseRoute: '/governance',\n    props: {\n      tokenName: 'IDLE',\n      availableContracts: {\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        GovernorBravo,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals: {\n      18: {\n        description: `This IIP includes Governor bravo update, M1-2022 Leagues budget transfer, Idle Smart Treasury migration, and Enzyme Bug Bounty. For more information, check: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895\">https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895</a>.`,\n      },\n      12: {\n        description: 'Details in the gov forum post: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>.'\n      },\n      7: {\n        description: `Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>.`\n      }\n    },\n    contracts: {\n      delegates: \"IDLE\",\n      governance: {\n        v1:{\n          name:\"GovernorAlpha\",\n          toBlock:\"14057088\"\n        },\n        v2:{\n          name:\"GovernorBravo\",\n          toBlock:\"latest\"\n        }\n      }\n    }\n  },\n  curve: {\n    enabled: false,\n    params: {\n      n_coins: 3,\n      label: \"Curve\",\n      route: \"/dashboard/curve\",\n      image: \"images/protocols/curve.svg\",\n      imageInactive: \"images/protocols/curve-off.svg\"\n    },\n    rates: {\n      path: [\"apy\", \"day\", \"idle\"],\n      endpoint: \"https://stats.curve.fi/raw-stats/apys.json\"\n    },\n    poolContract: {\n      decimals: 18,\n      abi: CurvePool,\n      name: \"idleDAI+idleUSDC+idleUSDT\",\n      token: \"idleDAI+idleUSDC+idleUSDT\",\n      address: \"0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05\"\n    },\n    depositContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\"\n    },\n    gaugeContract: {\n      abi: LiquidityGaugeV2,\n      name: \"LiquidityGaugeV2\",\n      address: \"0xd69ac8d9D25e99446171B5D0B3E4234dAd294890\"\n    },\n    zapContract: {\n      abi: CurveZap,\n      name: \"idleCurveZap\",\n      address: \"0x456974df1042ba7a46fd49512a8778ac3b840a21\"\n    },\n    migrationContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\",\n      functions: [\n        {\n          label: \"Deposit\",\n          name: \"add_liquidity\"\n        }\n      ]\n    },\n    availableTokens: {\n      idleDAIYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"DAI\",\n        token: \"idleDAIYield\",\n        address: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 0\n        }\n      },\n      idleUSDCYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDC\",\n        token: \"idleUSDCYield\",\n        address: \"0x5274891bEC421B39D23760c04A6755eCB444797C\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 1\n        }\n      },\n      idleUSDTYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDT\",\n        token: \"idleUSDTYield\",\n        address: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 2\n        }\n      }\n    }\n  },\n  permit: {\n    DAI: {\n      version: 1,\n      EIPVersion: null,\n      nonceMethod: \"nonces\",\n      name: \"Dai Stablecoin\",\n      type: [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" }\n      ]\n    },\n    USDC: {\n      version: 2,\n      name: \"USD Coin\",\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    },\n    SLP: {\n      version: 1,\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      name: \"SushiSwap LP Token\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    }\n  },\n  govTokens: {\n    IDLE: {\n      abi: IDLE,\n      decimals: 18,\n      token: \"IDLE\",\n      enabled: true,\n      showAUM: false, // Include IDLE balance in AUM\n      showAPR: false, // Include IDLE Apr\n      protocol: \"idle\",\n      showPrice: false, // Show price in Yield Farming section\n      showBalance: false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode: false,\n      distributionMode: \"block\",\n      availableNetworks: [1, 137],\n      distributionFrequency: \"day\", // Multiply distribution per block\n      color: \"hsl(162, 100%, 41%)\",\n      icon: \"images/tokens/IDLE.svg\",\n      addresses: {\n        1: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\",\n        137: \"0xc25351811983818c9fe6d8c580531819c8ade90f\"\n      },\n      address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // MAIN\n      disabledTokens: {\n        1: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"],\n        137: [\"idleDAIYield\", \"idleUSDCYield\", \"idleWETHYield\"],\n      }\n    },\n    COMP: {\n      abi: COMP,\n      decimals: 18,\n      token: \"COMP\",\n      enabled: true,\n      showAUM: true, // Include IDLE balance in AUM\n      showAPR: true, // Include COMP Apr\n      showPrice: true,\n      showBalance: true, // Include COMP balance in Portfolio Donut\n      disabledTokens: [],\n      protocol: \"compound\",\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      color: \"hsl(162, 100%, 41%)\",\n      address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    LDO: {\n      abi: ERC20,\n      token: \"LDO\",\n      decimals: 18,\n      enabled: true,\n      showAUM: true, // Include balance in AUM\n      showAPR: true, // Include Apr\n      showPrice: true,\n      protocol: \"lido\",\n      showBalance: true, // Include balance in Portfolio Donut\n      disabledTokens: [],\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      color: \"hsl(9, 86%, 75%)\",\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      address: \"0x5a98fcbea516cf06857215779fd812ca3bef1b32\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE: {\n      abi: aToken,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      showPrice: true,\n      token: 'stkAAVE',\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      address: '0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens: {\n        1: [\"idleTUSDYield\", \"idleSUSDYield\", \"idleFEIYield\"]\n      }\n    },\n    WMATIC: {\n      abi: ERC20,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      token: 'WMATIC',\n      showPrice: true,\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      disabledTokens: [],\n      aprTooltipMode: false,\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      availableNetworks: [137, 80001],\n      // address:'0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', // Mumbai\n      address: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', // Polygon\n      addressForPrice: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0' // Mainnet\n    }\n  },\n  contracts: {\n    137: {\n      ProtocolDataProvider: {\n        abi: ProtocolDataProvider,\n        address: '0x7551b5D2763519d4e37e8B81929D336De671d46d'\n      },\n      ChildChainManager: {\n        abi: ChildChainManager,\n        // address:'0x2e5e27d50EFa501D90Ad3638ff8441a0C0C0d75e' // Mumbai\n        address: '0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa' // Matic\n      },\n      UniswapRouter: {\n        networkId: 1,\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506'\n      },\n    },\n    1: {\n      DepositManager: {\n        abi: DepositManager,\n        address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n      },\n      RootChainManager: {\n        abi: RootChainManager,\n        // address:'0xBbD7cBFA79faee899Eaf900F13C9065bF03B1A74' // Goerli\n        address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n      },\n      ProxyFactory: {\n        abi: MinimalInitializableProxyFactory,\n        address: \"0x91baced76e3e327ba7850ef82a7a8251f6e43fb8\"\n      },\n      LockedIDLE: {\n        abi: LockedIDLE,\n        address: '0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n      },\n      FeeTreasury: {\n        abi: FeeTreasury,\n        address: '0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n      },\n      PriceOracle: {\n        abi: PriceOracle,\n        address: '0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n        // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n      },\n      Timelock: {\n        abi: Timelock,\n        address: '0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n        // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n      },\n      EcosystemFund: {\n        abi: EcosystemFund,\n        address: '0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n        // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n      },\n      VesterFactory: {\n        abi: VesterFactory,\n        address: '0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n        // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n      },\n      IdleController: {\n        abi: IdleController,\n        address: '0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n        // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n      },\n      EarlyRewards: {\n        abi: EarlyRewards,\n        address: '0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n      },\n      GovernorAlpha: {\n        abi: GovernorAlpha,\n        address: '0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n        // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n      },\n      GovernorBravo: {\n        abi: GovernorBravo,\n        address: '0x3D5Fc645320be0A085A32885F078F7121e5E5375'\n      },\n      Comptroller: {\n        abi: Comptroller,\n        address: '0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n        // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n      },\n      UniswapRouter: {\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      BalancerExchangeProxy: {\n        abi: BalancerExchangeProxy,\n        address: '0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n      },\n      GaugeController:{\n        abi:GaugeController,\n        address:'0xaC69078141f76A1e257Ee889920d02Cc547d632f'\n      },\n      GaugeDistributor:{\n        abi:GaugeDistributor,\n        address:'0x1276A8ee84900bD8CcA6e9b3ccB99FF4771Fe329'\n      },\n      GaugeDistributorProxy:{\n        abi:GaugeDistributorProxy,\n        address:'0x074306BC6a6Fc1bD02B425dd41D742ADf36Ca9C6'\n      }\n    }\n  },\n  tokens: {\n    DAI: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    },\n    USDC: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    }\n  },\n  tranchflash: {\n    name: \"perpetual yield tranches\",\n    subtitle: \"Make yield your own.\",\n    desc: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\",\n    arrows: \"images/idlearrows.svg\",\n    juniorinfo:\n      \"<b>Junior Tranches</b><br>Higher risk, leveraged for variable rate rewards\",\n    seniorinfo:\n      \"<b>Senior Tranches</b><br>Lower risk, built-in coverage for variable rate rewards\",\n    helpcircle: \"images/help-circle.svg\",\n    questions: [\n      {\n        desc: \"How it Works?\",\n        msg: \"This product aggregates user deposits into underlying markets and allocates the accrued yield on the sum between two different risk profile subsets. You get to choose the strategy according to your risk tolerance. Users are able to deposit funds into either the Junior or Senior Tranches in exchange for a token indicating their claim on their principal and whatever yield is allocated for them. These aggregated holdings are then deposited into the specified originating lending market, in this current version Idle Best-Yield strategy.\"\n      },\n      {\n        desc: \"What happens in a case of a default?\",\n        msg: \"In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).\"\n      }\n    ]\n  },\n  tranches: {\n    AA: {\n      color: {\n        hex: \"#337de5\",\n        rgb: [51, 125, 229],\n        hsl: [\"215\", \"77%\", \"55%\"]\n      },\n      type: \"AA\",\n      route: \"senior\",\n      icon: \"Security\",\n      image: \"images/SeniorTranche.svg\",\n      bubble: \"images/SeniorBubble.svg\",\n      baseName: \"senior\",\n      name: \"Senior Tranche\",\n      features: [\n        \"Covered by Junior tranches funds\",\n        \"Minimized risk exposure\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds' coverage given by Junior Tranches\",\n        deposit: \"By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    },\n    BB: {\n      color: {\n        hex: \"#FAB325\",\n        rgb: [250, 179, 37],\n        hsl: [\"40\", \"95%\", \"56%\"]\n      },\n      type: \"BB\",\n      route: \"junior\",\n      icon: \"TrendingUp\",\n      image: \"images/JuniorTranche.svg\",\n      bubble: \"images/JuniorBubble.svg\",\n      baseName: \"junior\",\n      name: \"Junior Tranche\",\n      features: [\n        \"Leverage yield using Senior tranches funds\",\n        \"Higher risk exposure by protecting senior tranches\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches\",\n        deposit: \"By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    }\n  },\n  extraicons: {\n    best: {\n      icon: \"images/sidebar/best-on.svg\",\n      iconDark: \"images/sidebar/best-on-dark.svg\",\n      iconInactive: \"images/sidebar/best-off.svg\",\n      iconInactiveDark: \"images/sidebar/best-off-dark.svg\",\n    },\n    gauges: {\n      icon: \"images/sidebar/gauges-on.svg\",\n      iconDark: \"images/sidebar/gauges-on-dark.svg\",\n      iconInactive: \"images/sidebar/gauges-off.svg\",\n      iconInactiveDark: \"images/sidebar/gauges-off-dark.svg\",\n    },\n    tranches: {\n      icon: \"images/sidebar/tranches-on.svg\",\n      iconDark: \"images/sidebar/tranches-on-dark.svg\",\n      iconInactive: \"images/strategies/tranches-off.svg\",\n      iconInactiveDark: \"images/strategies/tranches-off-dark.svg\"\n    },\n    risk: {\n      icon: \"images/sidebar/risk-on.svg\",\n      iconDark: \"images/sidebar/risk-on-dark.svg\",\n      iconInactive: \"images/sidebar/risk-off.svg\",\n      iconInactiveDark: \"images/sidebar/risk-off-dark.svg\"\n    },\n    stats: {\n      icon: \"images/sidebar/stats-on.svg\",\n      iconDark: \"images/sidebar/stats-on-dark.svg\",\n      iconInactive: \"images/sidebar/stats-off.svg\",\n      iconInactiveDark: \"images/sidebar/stats-off-dark.svg\"\n    },\n    tools: {\n      icon: \"images/sidebar/tools-on.svg\",\n      iconDark: \"images/sidebar/tools-on-dark.svg\",\n      iconInactive: \"images/sidebar/tools-off.svg\",\n      iconInactiveDark: \"images/sidebar/tools-off-dark.svg\"\n    },\n    forum: {\n      icon: \"images/sidebar/forum-on.svg\",\n      iconDark: \"images/sidebar/forum-on-dark.svg\",\n      iconInactive: \"images/sidebar/forum-off.svg\",\n      iconInactiveDark: \"images/sidebar/forum-off-dark.svg\"\n    },\n    stake: {\n      icon: \"images/sidebar/stake-on.svg\",\n      iconDark: \"images/sidebar/stake-on-dark.svg\",\n      iconInactive: \"images/sidebar/stake-off.svg\",\n      iconInactiveDark: \"images/sidebar/stake-off-dark.svg\"\n    },\n    leaderboard: {\n      icon: \"images/sidebar/leaderboard-on.svg\",\n      iconDark: \"images/sidebar/leaderboard-on-dark.svg\",\n      iconInactive: \"images/sidebar/leaderboard-off.svg\",\n      iconInactiveDark: \"images/sidebar/leaderboard-off-dark.svg\"\n    }, overview: {\n      icon: \"images/sidebar/overview-on.svg\",\n      iconDark: \"images/sidebar/overview-on-dark.svg\",\n      iconInactive: \"images/sidebar/overview-off.svg\",\n      iconInactiveDark: \"images/sidebar/overview-off-dark.svg\"\n    }, proposals: {\n      icon: \"images/sidebar/proposals-on.svg\",\n      iconDark: \"images/sidebar/proposals-on-dark.svg\",\n      iconInactive: \"images/sidebar/proposals-off.svg\",\n      iconInactiveDark: \"images/sidebar/proposals-off-dark.svg\"\n    }, delegate: {\n      icon: \"images/sidebar/delegate-on.svg\",\n      iconDark: \"images/sidebar/delegate-on-dark.svg\",\n      iconInactive: \"images/sidebar/delegate-off.svg\",\n      iconInactiveDark: \"images/sidebar/delegate-off-dark.svg\"\n    },\n  },\n  landingStrategies: {\n    tranches: {\n      networkId: 1,\n      visible: true,\n      token: \"stETH\",\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"lido\",\n      color: \"#f32121\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      strategy: 'tranches',\n      component: Tranches,\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      title: \"Perpetual Tranches\",\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      networkId: 1,\n      token: \"DAI\",\n      visible: true,\n      strategy: 'best',\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    polygon: {\n      token: \"DAI\",\n      visible: true,\n      networkId: 137,\n      enabledEnvs: [],\n      strategy: 'best',\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-on.svg\",\n      iconInactiveDark: \"images/strategies/best-on.svg\",\n      desc: \"Maximize your returns on Polygon across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    }\n  },\n  strategies: {\n    tranches: {\n      token: \"FEI\",\n      visible: true,\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      component: Tranches,\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      availableNetworks: [1, 137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    risk: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#2196F3\",\n      type: \"strategy\",\n      comingSoon: false,\n      titlePostfix: null,\n      addGovTokens: true,\n      iconName: \"Security\",\n      availableNetworks: [1],\n      title: \"Risk-Adjusted\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(211,67%,47%)\",\n      icon: \"images/strategies/risk-on.svg\",\n      iconInactive: \"images/strategies/risk-off.svg\",\n      iconInactiveDark: \"images/strategies/risk-white.svg\",\n      desc: \"Optimize your risk exposure across DeFi protocols\",\n      descLong: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.\",\n      descShort: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.\"\n    }\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats: {\n    enabled: true, // Enable endpoint\n    availableNetworks: [1, 137],\n    rates: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/rates/\",\n        137: \"https://api-polygon.idle.finance/rates/\"\n      }\n    },\n    tvls: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/tvls/\",\n        137: \"https://api-polygon.idle.finance/tvls/\"\n      }\n    },\n    aprs: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/aprs/\",\n        137: \"https://api-polygon.idle.finance/aprs/\"\n      }\n    },\n    substack: {\n      TTL: 1800,\n      endpoint: {\n        1: \"https://api.idle.finance/substack/\",\n        137: \"https://api-polygon.idle.finance/substack/\"\n      }\n    },\n    scores: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/scores/\"\n      }\n    },\n    config: {\n      timeout:15000,\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {},\n    },\n    versions: {\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3: {\n        label: \"Idle V3\",\n        additionalProtocols: [],\n        endTimestamp: 1597237542,\n        startTimestamp: 1589801874,\n        showPerformanceTooltip: false,\n        strategiesParams: {\n          risk: {\n            endTimestamp: 1597233922\n          }\n        },\n        enabledStrategies: [\"best\", \"risk\"],\n        enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"]\n      },\n      v4: {\n        label: \"Idle V4\",\n        endTimestamp: null,\n        startTimestamp: 1597442400, // 1598220000\n        enabledStrategies: [\"best\", \"risk\"],\n        showPerformanceTooltip: true,\n        strategiesParams: {\n          risk: {\n            startTimestamp: 1599183170\n          }\n        },\n        enabledTokens: ['DAI', 'USDC', 'USDT', 'TUSD', 'SUSD', 'WBTC', 'WETH', 'RAI', 'FEI'],\n        additionalProtocols: [\n          {\n            decimals: 16,\n            protocol: \"compound\",\n            name: \"compoundWithCOMP\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\"]\n          },\n          {\n            decimals: 18,\n            protocol: \"aavev2\",\n            name: \"aavev2WithStkAAVE\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\", \"RAI\"]\n          }\n        ]\n      }\n    },\n    tokens: {\n      DAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          rgb: [250, 184, 51],\n          hex: '#F7B24A',\n          hsl: ['40', '95%', '59%']\n        },\n        chart: {\n          labelTextColorModifiers: ['darker', 2]\n        },\n        startTimestamp: '2020-02-11',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip: 'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      ETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      STETH: {\n        decimals: 18,\n        enabled: true,\n        label: 'stETH',\n        color: {\n          hex: '#00a3ff',\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        },\n        icon: \"images/tokens/stETH.svg\",\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      CVX: {\n        decimals: 18,\n        enabled: true,\n        label: 'CVX',\n        color: {\n          hex: '#3a3a3a',\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        },\n        address: '0x4e3fbd56cd56c3e72c1403e103b45db9da5b9d2b'\n      },\n      LDO: {\n        label: 'LDO',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#f69988',\n          rgb: [246, 153, 136],\n          hsl: ['9', '86%', '75%']\n        },\n        address: '0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n      },\n      MTA: {\n        label: 'MTA',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#000',\n          rgb: [0, 0, 0],\n          hsl: ['0', '0%', '0%']\n        },\n        address: '0xa3BeD4E1c75D00fa6f4E5E6922DB7261B5E9AcD2'\n      },\n      CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'CRV',\n        color: {\n          hex: '#3466a3',\n          rgb: [52, 102, 163],\n          hsl: ['213', '52%', '42%']\n        },\n        address: '0xD533a949740bb3306d119CC777fa900bA034cd52'\n      },\n      FRAX3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'FRAX3CRV',\n        icon: \"images/tokens/FRAX3CRV.png\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B'\n      },\n      MIM3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MIM3CRV',\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x5a6A4D54456819380173272A5E8E9B9904BdF41B'\n      },\n      ALUSD3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'ALUSD3CRV',\n        icon: \"images/tokens/ALUSD3CRV.png\",\n        color: {\n          hex: '#ffbf93',\n          rgb: [255, 191, 147],\n          hsl: ['24, 100%, 79%']\n        },\n        address: '0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c'\n      },\n      MUSD3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MUSD3CRV',\n        icon: \"images/tokens/MUSD3CRV.png\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x1AEf73d49Dedc4b1778d0706583995958Dc862e6'\n      },\n      MUSD: {\n        decimals: 18,\n        enabled: true,\n        label: 'mUSD',\n        icon: \"images/tokens/mUSD.svg\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xe2f2a5c287993345a840db3b0845fbc70f5935a5'\n      },\n      ANGLE: {\n        decimals: 18,\n        enabled: true,\n        label: 'ANGLE',\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x31429d1856ad1377a8a0079410b297e1a9e214c2'\n      },\n      \"3EUR\": {\n        decimals: 18,\n        enabled: true,\n        label: '3EUR',\n        color: {\n          hex: '#cc9768',\n          rgb: [204, 151, 104],\n          hsl: ['28', '50%', '60%']\n        },\n        conversionRateField: \"eurDAIPrice\",\n        address: '0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571',\n        addressForPrice: '0x1a7e4e63778b4f12a199c062f3efdd288afcbce8',\n        addressForPriceFrom: '0x956f47f50a910163d8bf957cf5846d573e7f87ca'\n      },\n      STECRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'steCRV',\n        icon: \"images/tokens/steCRV.svg\",\n        color: {\n          hex: '#81c8ff',\n          rgb: [129, 200, 255],\n          hsl: ['206', '100%', '75%']\n        },\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0x06325440D014e39736583c165C2963BA99fAf14E',\n        addressForPrice: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      SPELL: {\n        decimals: 18,\n        enabled: true,\n        label: 'SPELL',\n        icon: \"images/tokens/SPELL.png\",\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x090185f2135308bad17527004364ebcc2d37e5f6'\n      },\n      MATIC: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#8247E5',\n          rgb: [130, 71, 229],\n          hsl: ['262, 75%, 59%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      USD: {\n        enabled: true,\n        color: {\n          hex: \"#85bb65\",\n          rgb: [133, 187, 101],\n          hsl: [\"98\", \"39%\", \"56%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        address: null,\n        startTimestamp: \"2020-02-04\"\n      },\n      USDC: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USDT: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#22a079\",\n          rgb: [34, 160, 121],\n          hsl: [\"161\", \"65%\", \"38%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      TUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"0340a1\",\n          rgb: [3, 64, 161],\n          hsl: [\"217\", \"96%\", \"32%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\"\n      },\n      SUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#1e1a31\",\n          rgb: [30, 26, 49],\n          hsl: [\"250\", \"31%\", \"15%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x57ab1ec28d129707052df4df418d58a2d46d5f51\"\n      },\n      WBTC: {\n        decimals: 8,\n        enabled: true,\n        color: {\n          hex: \"#eb9444\",\n          rgb: [235, 148, 68],\n          hsl: [\"29\", \"81%\", \"59%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"wbtcDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      WETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#ee1f79\",\n          rgb: [238, 31, 121],\n          hsl: [\"334\", \"86%\", \"53%\"]\n        },\n        startTimestamp: \"2021-02-16\",\n        conversionRateField: \"wethDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      COMP: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#00d395\",\n          rgb: [0, 211, 149],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\"\n      },\n      STKAAVE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        startTimestamp: \"2021-04-30\",\n        icon: \"images/tokens/stkAAVE.svg\",\n        conversionRateField: \"aaveDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\"\n      },\n      IDLE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#0d55bb\",\n          rgb: [13, 85, 187],\n          hsl: [\"215\", \"87%\", \"39%\"]\n        },\n        startTimestamp: \"2020-11-10\",\n        conversionRateField: \"idleDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n      },\n      RAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#378879\",\n          rgb: [55, 136, 121],\n          hsl: [\"169\", \"42%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-11-16\",\n        icon: \"images/tokens/RAI.png\",\n        conversionRateField: \"raiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x03ab458634910aad20ef5f1c8ee96f1d6ac54919\"\n      },\n      FEI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#229b6e',\n          rgb: [34, 155, 110],\n          hsl: ['158', '64%', '37%']\n        },\n        disabledCharts: ['score'],\n        startTimestamp: '2021-09-24',\n        conversionRateField: 'feiDAIPrice',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      WMATIC: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#2891f8',\n          rgb: [40, 145, 248],\n          hsl: ['210', '94%', '56%']\n        },\n        startTimestamp: '2021-05-25',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0',\n      },\n      'idleDAI+idleUSDC+idleUSDT': {\n        decimals: 18,\n        enabled: false,\n        name: 'Curve.fi',\n        color: {\n          hex: '#ff0000',\n          rgb: [255, 0, 0],\n          hsl: ['0', '100%', '50%']\n        },\n        startTimestamp: \"2020-06-15\"\n      }\n    },\n    protocols: {\n      compound: {\n        legend: true,\n        enabled: true,\n        label: \"Compound\",\n        color: {\n          rgb: [0, 209, 146],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        }\n      },\n      aavev2WithStkAAVE: {\n        enabled: true,\n        label: \"Aave V2 + stkAAVE\",\n        startTimestamp: \"2021-05-08 14:30:00\",\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        rateField: [\"rate\", \"aaveAdditionalAPR\"]\n      },\n      compoundWithCOMP: {\n        enabled: true,\n        label: \"Compound + COMP\",\n        color: {\n          rgb: [0, 153, 107],\n          hsl: [\"162\", \"100%\", \"30%\"]\n        },\n        rateField: [\"rate\", \"compoundAdditionalAPR\"]\n      },\n      fulcrum: {\n        legend: false,\n        enabled: false,\n        label: \"Fulcrum\",\n        color: {\n          rgb: [2, 138, 192],\n          hsl: [\"197\", \"98%\", \"38%\"]\n        }\n      },\n      dsr: {\n        label: \"DSR\",\n        enabled: false,\n        icon: \"CHAI.png\",\n        color: {\n          rgb: [222, 52, 67],\n          hsl: [\"355\", \"72%\", \"54%\"]\n        }\n      },\n      dydx: {\n        legend: true,\n        label: \"DyDx\",\n        enabled: true,\n        color: {\n          rgb: [87, 87, 90],\n          hsl: [\"240\", \"2%\", \"35%\"]\n        }\n      },\n      iearn: {\n        label: \"Yearn\",\n        enabled: true\n      },\n      aave: {\n        label: \"Aave V1\",\n        legend: false,\n        enabled: false,\n        color: {\n          rgb: [230, 131, 206],\n          hsl: [\"315\", \"66%\", \"71%\"]\n        }\n      },\n      aavev2: {\n        legend: true,\n        enabled: true,\n        icon: \"aave.svg\",\n        label: \"Aave V2\",\n        color: {\n          rgb: [151, 79, 141],\n          hsl: [\"308\", \"31%\", \"45%\"]\n        }\n      },\n      cream: {\n        legend: false,\n        enabled: true,\n        label: \"Cream\",\n        icon: \"cream.svg\",\n        color: {\n          rgb: [105, 226, 220],\n          hsl: [\"177\", \"68%\", \"65%\"]\n        }\n      },\n      lido: {\n        legend: false,\n        enabled: true,\n        label: \"Lido\",\n        icon: \"lido.png\",\n        color: {\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        }\n      },\n      convex: {\n        legend: false,\n        enabled: true,\n        label: \"Convex\",\n        color: {\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        }\n      },\n      mstable: {\n        legend: false,\n        enabled: true,\n        label: \"mStable\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: ['0', '0%', '0%']\n        }\n      },\n      fuse: {\n        legend: true,\n        enabled: true,\n        label: \"Fuse\",\n        icon: \"fuse.png\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: [\"0\", \"0%\", \"0%\"]\n        }\n      },\n      curve: {\n        label: \"\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      },\n      idle: {\n        label: \"Idle\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      }\n    }\n  },\n  contract: {\n    methods: {\n      refreshIdleSpeed: {\n        enabled: true,\n        availableNetworks: [1]\n      },\n      redeem: {\n        skipRebalance: true,\n        metaTransactionsEnabled: false\n      },\n      deposit: {\n        skipMint: true,\n        minAmountForMint: 100000,\n        erc20ForwarderEnabled: true,\n        skipMintCheckboxEnabled: true,\n        metaTransactionsEnabled: false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract: {\n          forwarder: {\n            enabled: true,\n            abi: erc20Forwarder,\n            name: \"erc20Forwarder\",\n            function: \"emitMessage\",\n            address: \"0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda\" // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens: {\n            DAI: {\n              enabled: true,\n              permitType: \"DAI_Permit\",\n              abi: IdleDepositForwarder,\n              function: \"permitAndDeposit\", // foo\n              name: \"IdleDepositForwarderDAI\",\n              address: \"0xDe3c769cCD1878372864375e9f89956806B86daA\" // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC: {\n              enabled: true,\n              abi: IdleDepositForwarder,\n              permitType: \"EIP2612_Permit\",\n              name: \"IdleDepositForwarderUSDC\",\n              function: \"permitEIP2612AndDeposit\", // 'foo'\n              address: \"0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761\" // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            }\n          }\n        },\n        proxyContract: {\n          enabled: false,\n          abi: IdleProxyMinter,\n          name: \"IdleProxyMinter\",\n          function: \"mintIdleTokensProxy\",\n          address: \"0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a\"\n        }\n      },\n      migrate: {\n        skipRebalance: true,\n        minAmountForRebalance: 10000,\n        minAmountForRebalanceMetaTx: 10000\n      },\n      redeemGovTokens: {\n        enabled: true\n      },\n      redeemSkipGov: {\n        enabled: true,\n        disabledTokens: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"]\n      },\n      rebalance: {\n        enabled: true,\n        abi: IdleRebalancerV3\n      }\n    }\n  },\n  network: { // Network configurations\n    availableNetworks: {\n      1: {\n        version: 'v1',\n        name: 'Ethereum',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        network: 'mainnet',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Mainnet',\n      },\n      42: {\n        name: 'Kovan',\n        color: '#9064ff',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Kovan',\n      },\n      3: {\n        name: 'Ropsten',\n        color: '#ff4a8d',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Ropsten',\n      },\n      4: {\n        name: 'Rinkeby',\n        color: '#f6c343',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Rinkeby',\n      },\n      137: {\n        version: 'v1',\n        name: 'Polygon',\n        color: '#8247E5',\n        network: 'mainnet',\n        baseToken: 'MATIC',\n        explorer: 'polygon',\n        provider: 'polygon',\n        blocksPerCall: 1000000,\n        chainName: 'Matic(Polygon) Mainnet',\n      },\n      5: {\n        name: 'Görli',\n        color: '#3099f2',\n        baseToken: 'ETH',\n        version: 'mumbai',\n        network: 'testnet',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Görli',\n      },\n      1337: {\n        name: 'Hardhat',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Mainnet',\n      },\n      80001: {\n        name: 'Mumbai',\n        color: '#4474f1',\n        version: 'mumbai',\n        network: 'testnet',\n        baseToken: 'MATIC',\n        explorer: 'polygon',\n        provider: 'polygon',\n        blocksPerCall: 1000000,\n        chainName: 'Matic Testnet Mumbai',\n      }\n    },\n    isForked: false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork: 1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear: 2371428,\n    secondsPerYear: 31536000,\n    requiredConfirmations: 1,\n    enabledNetworks: [1, 137],\n    firstBlockNumber: 8119247,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers: {\n      infura: {\n        key: env.REACT_APP_INFURA_KEY,\n        rpc: {\n          5: 'https://goerli.infura.io/v3/',\n          42: 'https://kovan.infura.io/v3/',\n          1: 'https://mainnet.infura.io/v3/',\n          1337: 'https://mainnet.infura.io/v3/',\n          137: 'https://mainnet.infura.io/v3/',\n          80001: 'https://goerli.infura.io/v3/'\n        }\n      },\n      polygon: {\n        enabled: true,\n        // key:env.REACT_APP_POLYGON_KEY,\n        key: env.REACT_APP_INFURA_KEY,\n        baseUrl: {\n          137: 'https://polygonscan.com',\n          80001: 'https://explorer-mumbai.maticvigil.com'\n        },\n        networkPairs: {\n          1: 137,\n          137: 1,\n          5: 80001,\n          80001: 5\n        },\n        publicRpc: {\n          137: 'https://polygon-rpc.com'\n        },\n        rpc: {\n          // 1:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 5:'https://rpc-mumbai.maticvigil.com/v1/',\n          // 137:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 80001:'https://rpc-mumbai.maticvigil.com/v1/'\n\n          1: 'https://polygon-mainnet.infura.io/v3/',\n          5: 'https://polygon-mainnet.infura.io/v3/',\n          137: 'https://polygon-mainnet.infura.io/v3/',\n          80001: 'https://polygon-mainnet.infura.io/v3/'\n\n          // 1:'https://matic-mainnet.chainstacklabs.com/',\n          // 137:'https://matic-mainnet.chainstacklabs.com/',\n          // 5:'https://matic-mumbai.chainstacklabs.com/',\n          // 80001:'https://matic-mumbai.chainstacklabs.com/' \n        }\n      },\n      nexus: {\n        endpoints: {\n          1: \"https://api.nexusmutual.io/v1/\",\n          42: \"https://api.staging.nexusmutual.io/v1/\"\n        }\n      },\n      ens: {\n        enabled: true,\n        supportedNetworks: [1]\n      },\n      covalent: {\n        enabled: true,\n        key: env.REACT_APP_COVALENT_KEY,\n        endpoints: {\n          137: 'https://api.covalenthq.com/v1/137/',\n          80001: 'https://api.covalenthq.com/v1/80001/'\n        }\n      },\n      etherscan: {\n        enabled: true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints: {\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          5: 'https://api-goerli.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl: {\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          5: 'https://goerli.etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      subgraph: {\n        tranches:{\n          enabled:true,\n          endpoint:\"https://api.thegraph.com/subgraphs/name/samster91/idle-tranches\",\n          entities:{\n            trancheInfos:[\n              'id',\n              'apr',\n              'timeStamp',\n              'blockNumber',\n              'totalSupply',\n              'virtualPrice',\n              'contractValue',\n            ]\n          }\n        }\n      },\n      snapshot: {\n        whitelist: [\n          \"0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa\",\n          \"0xf12ce5807e3d3128B876aa1Cec0632D63547E22E\"\n        ],\n        endpoints: {\n          proposals: \"https://hub.snapshot.org/graphql\"\n        },\n        urls: {\n          proposals: \"https://signal.idle.finance/#/idlefinance.eth/proposal/\"\n        },\n        queries: {\n          proposals: `query Proposals {\n            proposals (\n            first: 20,\n            skip: 0,\n            where: {\n            space_in: [\"idlefinance.eth\"]\n            },\n            orderBy: \"created\",\n            orderDirection: desc\n            ) {\n            id\n            ipfs\n            strategies{\n              params\n            }\n            title\n            body\n            choices\n            start\n            end\n            snapshot\n            state\n            author\n            space {\n            id\n            name\n            }\n            }\n            }`,\n          proposalsActive: `query Proposals {\n              proposals (\n              first: 20,\n              skip: 0,\n              where: {\n              space_in: [\"idlefinance.eth\"],\n              state:\"active\"\n              },\n              orderBy: \"created\",\n              orderDirection: desc\n              ) {\n              id\n              ipfs\n              strategies{\n                params\n              }\n              title\n              body\n              choices\n              start\n              end\n              snapshot\n              state\n              author\n              space {\n              id\n              name\n              }\n              }\n              }`\n        }\n      },\n      biconomy: {\n        enabled: true,\n        enableLogin: false,\n        supportedNetworks: [1, 42],\n        disabledWallets: [\"authereum\",\"gnosis\"],\n        endpoints: {\n          limits: \"https://api.biconomy.io/api/v1/dapp/checkLimits\"\n        },\n        params: {\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: \"36572ec9-ae5c-4c4a-9530-f3ae7c7ac829\"\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID: {\n        enabled: false,\n        supportedNetworks: [1],\n        getNetwork: (networkId, availableNetworks) => {\n          let networkName = null;\n          switch (networkId) {\n            case 1:\n              networkName = \"mainnet\";\n              break;\n            default:\n              networkName = availableNetworks[networkId]\n                ? availableNetworks[networkId].toLowerCase()\n                : \"mainnet\";\n              break;\n          }\n          return networkName;\n        },\n        params: {\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: \"mainnet\"\n        }\n      }\n    }\n  },\n  events: {\n    DAI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    },\n    FEI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    }\n  },\n  notifications: [\n    /*\n    {\n      enabled: true,\n      end: 1649980799000,\n      start: 1649256804107,\n      date: \"Apr 06, 2022 16:18 UTC\",\n      image: \"/images/tokens/LDO.svg\",\n      title: \"LDO rewards migration to Gauges\",\n      hash: \"/dashboard/tranches/senior/lido/stETH\",\n      text: \"The LDO rewards distribution is migrating from stETH senior tranche to stETH Gauge\"\n    },\n    */\n    {\n      enabled: false,\n      end: 1612282726374,\n      start: 1611677841027,\n      date: \"Jan 26, 2021 16:18 UTC\",\n      title: \"Cover Protocol Available\",\n      hash: \"/dashboard/tools/cover-protocol\",\n      image: \"/images/protocols/cover-logo.svg\",\n      text: \"Protect your portfolio with Cover Protocol\"\n    }\n  ],\n  tools: {\n    gauges: {\n      enabled: true,\n      label: \"Gauges\",\n      route: \"gauges\",\n      subComponent: Gauges,\n      availableNetworks: [1],\n      image: 'images/vote.svg',\n      imageInactive: 'images/vote-inactive.svg',\n      desc: \"Allocate your voting power into your preferred Gauge and earn rewards\",\n      props: {\n        WEIGHT_VOTE_DELAY:864000,\n        veToken:{\n          abi: stkIDLE,\n          decimals: 18,\n          token: \"stkIDLE\",\n          rewardToken: \"IDLE\",\n          address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n        },\n        contracts:{\n          MultiRewards:{\n            maxRewards:3,\n            abi:MultiRewards\n          }\n        },\n        availableGauges:{\n          ALUSD3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            name: \"LiquidityGauge_aa_convex_alusd3crv\",\n            token: \"LiquidityGauge_aa_convex_alusd3crv\",\n            address:'0x21dDA17dFF89eF635964cd3910d167d562112f57',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_alusd3crv',\n              token: 'AA_convex_alusd3crv',\n              address: '0x790E38D85a364DD03F682f5EcdC88f8FF7299908'\n            }\n          },\n          stETH:{\n            protocol:'lido',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            name: \"LiquidityGauge_aa_lido_steth\",\n            token: \"LiquidityGauge_aa_lido_steth\",\n            address:'0x675eC042325535F6e176638Dd2d4994F645502B9',\n            multiRewards:{\n              rewardTokens:['LDO'],\n              name:'multiRewards_aa_lido_stETH',\n              address:'0xA357AF9430e4504419A7A05e217D4A490Ecec6FA',\n            },\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_lido_stETH',\n              token: 'AA_lido_stETH',\n              address: '0x2688fc68c4eac90d9e5e1b94776cf14eade8d877'\n            }\n          },\n          FRAX3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            name: \"LiquidityGauge_aa_convex_frax3crv\",\n            token: \"LiquidityGauge_aa_convex_frax3crv\",\n            address:'0x7ca919Cf060D95B3A51178d9B1BCb1F324c8b693',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_frax3crv',\n              token: 'AA_convex_frax3crv',\n              address: '0x15794da4dcf34e674c18bbfaf4a67ff6189690f5'\n            }\n          },\n          MIM3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            name: \"LiquidityGauge_aa_convex_mim3crv\",\n            token: \"LiquidityGauge_aa_convex_mim3crv\",\n            address:'0x8cC001dd6C9f8370dB99c1e098e13215377Ecb95',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_mim3crv',\n              token: 'AA_convex_mim3crv',\n              address: '0xFC96989b3Df087C96C806318436B16e44c697102'\n            }\n          },\n          \"3EUR\":{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            name: \"LiquidityGauge_aa_convex_3eur\",\n            token: \"LiquidityGauge_aa_convex_3eur\",\n            address:'0xDfB27F2fd160166dbeb57AEB022B9EB85EA4611C',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_3eur',\n              token: 'AA_convex_3eur',\n              address: '0x158e04225777BBEa34D2762b5Df9eBD695C158D2'\n            }\n          },\n          steCRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            name: \"LiquidityGauge_aa_convex_steCRV\",\n            token: \"LiquidityGauge_aa_convex_steCRV\",\n            address:'0x30a047d720f735Ad27ad384Ec77C36A4084dF63E',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_steCRV',\n              token: 'AA_convex_steCRV',\n              address: '0x060a53BCfdc0452F35eBd2196c6914e0152379A6'\n            }\n          },\n          MUSD3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            name: \"LiquidityGauge_aa_convex_musd3crv\",\n            token: \"LiquidityGauge_aa_convex_musd3crv\",\n            address:'0xAbd5e3888ffB552946Fc61cF4C816A73feAee42E',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_musd3crv',\n              token: 'AA_convex_musd3crv',\n              address: '0x4585F56B06D098D4EDBFc5e438b8897105991c6A'\n            }\n          },\n          mUSD:{\n            protocol:'mstable',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            name: \"LiquidityGauge_aa_mstable_musd\",\n            token: \"LiquidityGauge_aa_mstable_musd\",\n            address:'0x41653c7AF834F895Db778B1A31EF4F68Be48c37c',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_mstable_musd',\n              token: 'AA_mstable_musd',\n              address: '0xfC558914b53BE1DfAd084fA5Da7f281F798227E7'\n            }\n          },\n        }\n      }\n    },\n    stake: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      route: \"staking\",\n      subComponent: Staking,\n      availableNetworks: [1],\n      desc: \"Stake your IDLE tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          IDLE: {\n            component: IdleStaking,\n            contract: {\n              abi: stkIDLE,\n              decimals: 18,\n              name: \"stkIDLE\",\n              fromBlock: 12561464,\n              rewardToken: \"IDLE\",\n              address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n            },\n            feeDistributor: {\n              fromBlock: 12649361,\n              abi: StakingFeeDistributor,\n              name: \"StakingFeeDistributor\",\n              address: \"0xbabb82456c013fd7e3f25857e0729de8207f80e2\" // Mainnet\n            },\n            abi: IDLE,\n            name: \"IDLE\",\n            token: \"IDLE\",\n            decimals: 18,\n            enabled: true,\n            label: \"IDLE\",\n            icon: \"images/tokens/IDLE.svg\",\n            address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // Mainnet\n            poolLink:\n              \"https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n          },\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 120,\n              rewardToken: \"IDLE\",\n              address: \"0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d\" // Mainnet\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/ETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0xa7f11e026a0af768d285360a855f2bded3047530\", // Mainnet\n            poolLink:\n              \"https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530\"\n          }\n        }\n      }\n    },\n    stakePolygon: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      subComponent: Staking,\n      availableNetworks: [137],\n      route: \"staking-polygon\",\n      desc: \"Stake your Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 60,\n              rewardToken: \"IDLE\",\n              address: \"0x59CDF902b6A964CD5dB04d28f12b774bFB876Be9\" // Polygon\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/WETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\", // Polygon\n            poolLink: \"https://analytics-polygon.sushi.com/pairs/0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\"\n          }\n        }\n      }\n    },\n    nexusMutual: {\n      enabled: true,\n      icon: \"Security\",\n      route: \"coverage\",\n      label: \"Coverage\",\n      availableNetworks: [1],\n      desc: \"Buy Nexus Mutual coverage without KYC for your deposits\",\n      subComponent: NexusMutual,\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleDAIYield\",\n            token: \"idleDAIYield\", // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000011\",\n            realAddress: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\", // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleUSDTYield\",\n            token: \"idleUSDTYield\", // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000012\",\n            realAddress: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          }\n        }\n      },\n      directProps: {\n        // startBlock:25858186, // Kovan\n        startBlock: 12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo: {\n          abi: NexusMutualDistributor,\n          name: \"NexusMutualDistributor\",\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address: \"0xf2b36f823eae36e53a5408d8bd452748b24fbf76\" // Mainnet\n        },\n        incidentsInfo: {\n          abi: NexusMutualIncidents,\n          name: \"NexusMutualIncidents\",\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address: \"0x8ceba69a8e96a4ce71aa65859dbdb180b489a719\" // Mainnet\n        }\n      }\n    },\n    b2bVesting: {\n      enabled: true,\n      visible: true,\n      icon: \"CloudUpload\",\n      label: \"B2B Vesting\",\n      availableNetworks: [1],\n      route: \"b2b-vesting-contract\",\n      subComponent: DeployB2BVesting,\n      desc: 'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props: {\n        contracts: {\n          vesterImplementation: {\n            abi: B2BVester,\n            address: \"0x3024656ae91d7bf724f613c314bc56030ba2344c\"\n          }\n        }\n      }\n    },\n    polygonBridge: {\n      enabled: true,\n      route: 'polygon-bridge',\n      availableNetworks: [1, 137],\n      subComponent: PolygonBridge,\n      label: 'Ethereum ⇔ Polygon Bridge',\n      image: 'images/protocols/polygon.svg',\n      desc: 'Transfer your tokens from Ethereum to Polygon and vice versa with Plasma and PoS Bridge.',\n      props: {\n        contracts: {\n          ERC20Predicate: {\n            abi: ERC20Predicate,\n            name: 'ERC20Predicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf' // Mainnet\n          },\n          EtherPredicate: {\n            abi: EtherPredicate,\n            name: 'EtherPredicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30' // Mainnet\n          },\n          DepositManager: {\n            abi: DepositManager,\n            name: 'DepositManager',\n            address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n          },\n          RootChainManager: {\n            name: 'RootChainManager',\n            address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n          },\n          StateSender: {\n            name: 'StateSender',\n            address: '0x28e4F3a7f651294B9564800b2D01f35189A5bFbE'\n          }\n        },\n        genericParams:{\n          erc20LogEventSignature: \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\"\n        },\n        availableTokens: {\n          /*\n          DERC20:{\n            decimals:18,\n            enabled:true,\n            name:'DERC20',\n            token:'DERC20',\n            rootToken:{\n              name:'DERC20',\n              abi:DummyERC20,\n              address:'0x655F2166b0709cd575202630952D71E2bB0d61Af' // Goerli\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'DummyERC20',\n              address:'0xfe4F5145f6e09952a5ba9e956ED0C25e3Fa4c7F1' // Mumbai\n            }\n          },\n          */\n          MATIC: {\n            name: 'MATIC',\n            token: 'MATIC',\n            decimals: 18,\n            enabled: true,\n            sendValue: true,\n            bridgeType: 'plasma',\n            rootToken: {\n              abi: ERC20,\n              name: 'MATIC',\n              address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childMATIC',\n              address: '0x0000000000000000000000000000000000001010' // Matic\n            }\n          },\n          WETH: {\n            name: 'WETH',\n            token: 'ETH',\n            decimals: 18,\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken:{\n              name:'ETH',\n              address:'0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE'\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'maticWETH',\n              address: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          /*\n          WETH:{\n            name:'WETH',\n            token:'WETH',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'WETH',\n              address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          */\n          DAI: {\n            name: 'DAI',\n            token: 'DAI',\n            decimals: 18,\n            enabled: true,\n            sendValue: false,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: DAI,\n              name: 'DAI',\n              // address:'0x6311344B50D2077BF9804d376EA4C2cEDcB75C1f', // Goerli\n              address: '0x6b175474e89094c44da98b954eedeac495271d0f', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childDAI',\n              // address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F', // Mumbai\n              address: '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063' // Matic\n            }\n          },\n          USDC: {\n            decimals: 6,\n            name: 'USDC',\n            token: 'USDC',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: USDC,\n              name: 'USDC',\n              // address:'0x98339D8C260052B7ad81c28c16C0b98420f2B46a' // Goerli\n              address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              // address:'0x6D4dd09982853F08d9966aC3cA4Eb5885F16f2b2' // Mubai\n              address: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174' // Matic\n            }\n          },\n          IDLE: {\n            decimals: 18,\n            name: 'IDLE',\n            token: 'IDLE',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: IDLE,\n              name: 'IDLE',\n              address: '0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              address: '0xc25351811983818c9fe6d8c580531819c8ade90f' // Matic\n            }\n          },\n          /*\n          AAVE:{\n            decimals:18,\n            name:'AAVE',\n            token:'AAVE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'AAVE',\n              address:'0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childAAVE',\n              address:'0xD6DF932A45C0f255f85145f286eA0b292B21C90B' // Matic\n            }\n          }\n          */\n        }\n      }\n    },\n    ethWrapper: {\n      enabled: true,\n      label: 'ETH Wrapper',\n      route: 'eth-wrapper',\n      availableNetworks: [1, 42],\n      subComponent: TokenWrapper,\n      image: 'images/tokens/WETH.svg',\n      desc: 'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props: {\n        startContract: {\n          name: 'ETH',\n          token: 'ETH',\n          decimals: 18,\n          wrapMethod: 'deposit',\n        },\n        destContract: {\n          abi: WETH,\n          name: 'WETH',\n          decimals: 18,\n          token: 'WETH',\n          unwrapMethod: 'withdraw',\n          address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol: {\n      enabled: false,\n      availableNetworks: [1],\n      label: 'Cover Protocol',\n      route: 'cover-protocol',\n      subComponent: CoverProtocol,\n      image: 'images/protocols/cover-logo.svg',\n      desc: 'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl: 'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props: {\n        contract: {\n          decimals: 18,\n          abi: CoverMint,\n          name: 'CoverMint',\n          address: '0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages: [\n          {\n            collateral: \"DAI\",\n            expirationTimestamp: 1714470400,\n            tokens: {\n              Claim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                address: \"0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                  address: \"0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c\"\n                }\n              },\n              NoClaim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                address: \"0x53df0bfa014b7522299c129c5a7b318f02adb469\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                  address: \"0xce0e9e7a1163badb7ee79cfe96b5148e178cab73\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    batchDeposit: {\n      enabled: true,\n      icon: \"Storage\",\n      claimEnabled: true,\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-deposit\",\n      label: \"Batch Deposit\",\n      subComponent: BatchDeposit,\n      desc: \"Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintDAI\",\n              address: \"0x633fb4d38B24dC890b11Db2AE2B248D13F996A79\", // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  usePermit: true,\n                  label: \"Deposit\",\n                  permitName: \"permitAndDeposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 6,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintUSDC\",\n              address: \"0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B\", // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  label: \"Deposit\",\n                  usePermit: true,\n                  permitName: \"permitEIP2612AndDepositUnlimited\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    batchMigration: {\n      enabled: true,\n      claimEnabled: true,\n      icon: \"FileDownload\",\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-migration\",\n      label: \"Batch Migration\",\n      subComponent: BatchMigration,\n      desc: \"Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            name: \"idleDAIYieldV3\",\n            token: \"idleDAIYieldV3\",\n            address: \"0x78751b12da02728f467a44eac40f5cbc16bd7934\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAI\",\n              address: \"0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCYieldV3\",\n            token: \"idleUSDCYieldV3\",\n            address: \"0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDC\",\n              address: \"0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTYieldV3\",\n            token: \"idleUSDTYieldV3\",\n            address: \"0x63D27B3DA94A9E871222CB0A32232674B02D2f2D\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDT\",\n              address: \"0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleSUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"SUSD\",\n            name: \"idleSUSDYieldV3\",\n            token: \"idleSUSDYieldV3\",\n            address: \"0xe79e177d2a5c7085027d7c64c8f271c81430fc9b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterSUSD\",\n              address: \"0xE2eE519399a49f1A2004a25DA61e82867A69b9b1\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleTUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"TUSD\",\n            name: \"idleTUSDYieldV3\",\n            token: \"idleTUSDYieldV3\",\n            address: \"0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterTUSD\",\n              address: \"0x174a273f0ea28e55b6dd13259aa43d262b863a86\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleWBTCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"WBTC\",\n            name: \"idleWBTCYieldV3\",\n            token: \"idleWBTCYieldV3\",\n            address: \"0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterWBTC\",\n              address: \"0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleDAISafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"DAI\",\n            name: \"idleDAISafeV3\",\n            token: \"idleDAISafeV3\",\n            address: \"0x1846bdfDB6A0f5c473dEc610144513bd071999fB\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAISafe\",\n              address: \"0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCSafeV3\",\n            token: \"idleUSDCSafeV3\",\n            address: \"0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDCSafe\",\n              address: \"0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTSafeV3\",\n            token: \"idleUSDTSafeV3\",\n            address: \"0x42740698959761baf1b06baa51efbd88cb1d862b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDTSafe\",\n              address: \"0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    tokenMigration: {\n      enabled: true,\n      icon: \"SwapHoriz\",\n      route: \"convert\",\n      availableNetworks: [1],\n      label: \"Token Migration\",\n      desc: \"Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle\",\n      subComponent: TokenMigration,\n      props: {\n        migrationContract: {\n          name: \"IdleConverterV4\",\n          abi: IdleConverterPersonalSignV4,\n          address: \"0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743\",\n          oldAddresses: [],\n          functions: [\n            {\n              label: \"Migrate\",\n              name: \"migrateFromToIdle\"\n            }\n          ]\n        },\n        availableStrategies: [\"best\", \"risk\"],\n        availableTokens: {\n          idleDAIv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            baseToken: \"DAI\",\n            abi: IdleTokenV2,\n            token: \"idleDAIOld\",\n            icon: \"images/tokens/idleDAI.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0x10eC0D497824e342bCB0EDcE00959142aAa766dD\"\n          },\n          cDAI: {\n            decimals: 8,\n            enabled: true,\n            token: \"cDAI\",\n            baseToken: \"DAI\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\"\n          },\n          iDAI: {\n            decimals: 18,\n            enabled: false,\n            token: \"iDAI\",\n            baseToken: \"DAI\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x493c57c4763932315a328269e1adad09653b9081\"\n          },\n          aDAI: {\n            decimals: 18,\n            enabled: true,\n            token: \"aDAI\",\n            protocol: \"aave\",\n            baseToken: \"DAI\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\"\n          },\n          yDAIv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv3\",\n            abi: yDAIv3.abi,\n            baseToken: \"DAI\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xC2cB1040220768554cf699b0d863A3cd4324ce32\"\n          },\n          yDAIv2: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv2\",\n            baseToken: \"DAI\",\n            abi: yDAIv3.abi,\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\"\n          },\n          idleUSDCv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            abi: IdleTokenV2,\n            baseToken: \"USDC\",\n            token: \"idleUSDCOld\",\n            icon: \"images/tokens/idleUSDC.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0xeB66ACc3d011056B00ea521F8203580C2E5d3991\"\n          },\n          cUSDC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x39aa39c021dfbae8fac545936693ac917d5e7563\"\n          },\n          iUSDC: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\"\n          },\n          aUSDC: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDC\",\n            protocol: \"aave\",\n            baseToken: \"USDC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\"\n          },\n          yUSDCv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv3\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x26EA744E5B887E5205727f55dFBE8685e3b21951\"\n          },\n          yUSDCv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv2\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\"\n          },\n          cUSDT: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\"\n          },\n          iUSDT: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x8326645f3aa6de6420102fdb7da9e3a91855045b\"\n          },\n          aUSDT: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDT\",\n            protocol: \"aave\",\n            baseToken: \"USDT\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\"\n          },\n          yUSDTv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv3\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\"\n          },\n          yUSDTv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv2\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\"\n          },\n          idleSUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"SUSD\",\n            token: \"idleSUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleSUSDYield.svg\",\n            address: \"0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5\"\n          },\n          aSUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aSUSD\",\n            protocol: \"aave\",\n            baseToken: \"SUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x625aE63000f46200499120B906716420bd059240\"\n          },\n          ySUSDv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"ySUSDv3\",\n            abi: ySUSDv3,\n            baseToken: \"SUSD\",\n            protocol: \"iearn\",\n            availableStrategies: [\"best\"],\n            icon: \"images/tokens/ySUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xf61718057901f84c4eec4339ef8f0d86d2b45600\"\n          },\n          idleTUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"TUSD\",\n            token: \"idleTUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleTUSDYield.svg\",\n            address: \"0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6\"\n          },\n          aTUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aTUSD\",\n            protocol: \"aave\",\n            baseToken: \"TUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x4DA9b813057D04BAef4e5800E36083717b4a0341\"\n          },\n          yTUSDv3: {\n            decimals: 18,\n            enabled: true,\n            abi: yTUSDv3,\n            token: \"yTUSDv3\",\n            baseToken: \"TUSD\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yTUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x73a052500105205d34daf004eab301916da8190f\"\n          },\n          cWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\"\n          },\n          iWBTC: {\n            decimals: 8,\n            enabled: false,\n            token: \"iWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\"\n          },\n          aWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"aWBTC\",\n            protocol: \"aave\",\n            baseToken: \"WBTC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\"\n          }\n        }\n      }\n    },\n    addFunds: {\n      enabled: true,\n      route: 'add-funds',\n      label: 'Add Funds',\n      availableNetworks: [1],\n      icon: 'AddCircleOutline',\n      desc: 'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent: BuyModal,\n      directProps: {\n        showInline: true,\n        showAllTokens: true\n      }\n    },\n    tokenSwap: {\n      enabled: true,\n      icon: \"Sync\",\n      route: \"token-swap\",\n      label: \"Token Swap\",\n      availableNetworks: [1],\n      desc: \"Easily swap your tokens using Kyber Swap widget\",\n      subComponent: TokenSwap,\n      props: {\n        availableTokens: {\n          ETH: { token: \"ETH\" },\n          DAI: { token: \"DAI\" },\n          SUSD: { token: \"SUSD\" },\n          TUSD: { token: \"TUSD\" },\n          USDC: { token: \"USDC\" },\n          USDS: { token: \"USDS\" },\n          USDT: { token: \"USDT\" },\n          WBTC: { token: \"WBTC\" },\n          WETH: { token: \"WETH\" },\n          BUSD: { token: \"BUSD\" },\n          EURS: { token: \"EURS\" },\n          \"2KEY\": { token: \"2KEY\" },\n          ABT: { token: \"ABT\" },\n          ABYSS: { token: \"ABYSS\" },\n          AMPL: { token: \"AMPL\" },\n          ANT: { token: \"ANT\" },\n          BAM: { token: \"BAM\" },\n          BAND: { token: \"BAND\" },\n          BAT: { token: \"BAT\" },\n          BLZ: { token: \"BLZ\" },\n          BNT: { token: \"BNT\" },\n          BQX: { token: \"BQX\" },\n          BTU: { token: \"BTU\" },\n          CDT: { token: \"CDT\" },\n          CVC: { token: \"CVC\" },\n          DAT: { token: \"DAT\" },\n          DGX: { token: \"DGX\" },\n          EKG: { token: \"EKG\" },\n          ELF: { token: \"ELF\" },\n          ENJ: { token: \"ENJ\" },\n          EQUAD: { token: \"EQUAD\" },\n          FXC: { token: \"FXC\" },\n          GDC: { token: \"GDC\" },\n          GEN: { token: \"GEN\" },\n          GHT: { token: \"GHT\" },\n          GNO: { token: \"GNO\" },\n          IOST: { token: \"IOST\" },\n          KEY: { token: \"KEY\" },\n          KNC: { token: \"KNC\" },\n          LEND: { token: \"LEND\" },\n          LINK: { token: \"LINK\" },\n          LOOM: { token: \"LOOM\" },\n          LRC: { token: \"LRC\" },\n          MANA: { token: \"MANA\" },\n          MCO: { token: \"MCO\" },\n          MET: { token: \"MET\" },\n          MFG: { token: \"MFG\" },\n          MKR: { token: \"MKR\" },\n          MLN: { token: \"MLN\" },\n          MTL: { token: \"MTL\" },\n          MYB: { token: \"MYB\" },\n          NEXXO: { token: \"NEXXO\" },\n          NPXS: { token: \"NPXS\" },\n          OGN: { token: \"OGN\" },\n          OMG: { token: \"OMG\" },\n          OST: { token: \"OST\" },\n          PAX: { token: \"PAX\" },\n          PBTC: { token: \"PBTC\" },\n          PLR: { token: \"PLR\" },\n          PNK: { token: \"PNK\" },\n          POLY: { token: \"POLY\" },\n          POWR: { token: \"POWR\" },\n          PT: { token: \"PT\" },\n          QKC: { token: \"QKC\" },\n          QNT: { token: \"QNT\" },\n          RAE: { token: \"RAE\" },\n          REN: { token: \"REN\" },\n          REP: { token: \"REP\" },\n          REQ: { token: \"REQ\" },\n          RLC: { token: \"RLC\" },\n          RSR: { token: \"RSR\" },\n          RSV: { token: \"RSV\" },\n          SAN: { token: \"SAN\" },\n          SNT: { token: \"SNT\" },\n          SNX: { token: \"SNX\" },\n          SPIKE: { token: \"SPIKE\" },\n          SPN: { token: \"SPN\" },\n          TKN: { token: \"TKN\" },\n          TKX: { token: \"TKX\" },\n          TRYB: { token: \"TRYB\" },\n          UBT: { token: \"UBT\" },\n          UPP: { token: \"UPP\" },\n          ZRX: { token: \"ZRX\" }\n        }\n      },\n      directProps: {}\n    }\n  },\n  insurance: {\n    nexusMutual: {\n      label: \"Nexus Mutual\",\n      image: \"images/protocols/nexus-mutual.png\",\n      imageDark: \"images/protocols/nexus-mutual-white.png\"\n    },\n    coverProtocol: {\n      label: \"Cover Protocol\",\n      image: \"images/protocols/cover-logo.svg\",\n      imageDark: \"images/protocols/cover-logo.svg\"\n    }\n  },\n  payments: {\n    // Payment methods & providers\n    methods: {\n      bank: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/bank.png\",\n          caption: \"Bank Account\"\n        }\n      },\n      card: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/debit-card.png\",\n          caption: \"Credit Card\"\n        }\n      },\n      wallet: {\n        defaultProvider: \"zeroExInstant\",\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/ethereum-wallet.svg\",\n          caption: \"Ethereum Wallet\",\n          imageProps: {\n            padding: [\"0\", \"5px\"]\n          }\n        }\n      }\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: \"images/payments/wyre.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.75% fee ~\",\n        supportedMethods: [\"card\"],\n        supportedCountries: [\"USA\", \"GBR\", \"AUS\", \"BRA\", \"CHN\", \"MEX\", \"EUR\"],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        remoteResources: {},\n        env: \"prod\",\n        envParams: {\n          test: {\n            accountId: \"AC_Q2Y4AARC3TP\"\n          },\n          prod: {\n            accountId: \"AC_PQQBX33XVEQ\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n                break;\n              case \"card\":\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = \"https://pay.sendwyre.com/purchase\";\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken,\n            referrerAccountId,\n            redirectUrl: globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const wyreWidget = document.getElementById(\"wyre-widget\");\n          if (!wyreWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById(\"wyreWidget_style\")) {\n              const wyreStyle = document.createElement(\"style\");\n              wyreStyle.id = \"wyreWidget_style\";\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        }\n      },\n      ramp: {\n        enabled: true,\n        imageSrc: \"images/payments/ramp.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods: [\"bank\", \"card\"],\n        badge: {\n          text: \"NO ID REQUIRED\",\n          color: \"#fff\",\n          bgColor: \"#0cade4\"\n        },\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CAN\",\n          \"EUR\",\n          \"HKG\",\n          \"IND\",\n          \"MEX\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        getInfo: props => {\n          const info = {};\n          switch (props.selectedMethod) {\n            case \"bank\":\n              info.supportedCountries = [\"GBR\", \"EUR\"];\n              info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n            case \"card\":\n              info.supportedCountries = [\n                \"USA\",\n                \"GBR\",\n                \"AUS\",\n                \"BRA\",\n                \"CAN\",\n                \"EUR\",\n                \"HKG\",\n                \"IND\",\n                \"MEX\",\n                \"RUS\",\n                \"ZAF\",\n                \"KOR\"\n              ];\n              info.subcaption = `~ 2.90% fee ~`;\n              break;\n            default:\n              break;\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          return {\n            hostAppName: \"Idle\",\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? \"mobile\" : \"desktop\",\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset\n                ? props.tokenConfig.ramp.swapAsset\n                : props.selectedToken\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on(\"*\", async event => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type) {\n                case \"PURCHASE_SUCCESSFUL\":\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil\n                    .BNify(tokenAmount.toString())\n                    .div(\n                      functionsUtil.BNify(\n                        Math.pow(10, parseInt(tokenDecimals)).toString()\n                      )\n                    )\n                    .toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: \"light\",\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\"\n                  });\n\n                  break;\n                default:\n                  break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled: true,\n        imageSrc: \"images/payments/transak.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods: [\"bank\", \"card\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"EUR\",\n          \"IND\"\n        ],\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"],\n        remoteResources: { \"https://global.transak.com/v1/widget.js\": {} },\n        env: \"prod\",\n        badge: {\n          text: \"INSTANT\",\n          bgColor: \"#0069ee\"\n        },\n        envParams: {\n          test: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_TEST,\n            url: \"https://global.transak.com\"\n          },\n          prod: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_PROD,\n            url: \"https://global.transak.com\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === \"bank\" ? \"1.5%\" : \"4.5%\";\n\n          if (props.selectedCountry && props.selectedCountry.value) {\n            switch (props.selectedCountry.value.toUpperCase()) {\n              case \"GBR\":\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n                break;\n              case \"IND\":\n                fee = \"1.0%\";\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n                break;\n              case \"EUR\":\n                if (selectedMethod === \"bank\") {\n                  info.badge = {\n                    text: \"SEPA\",\n                    color: \"#f7cb05 \",\n                    bgColor: \"#10288a\"\n                  };\n                } else {\n                  info.badge = {\n                    text: \"INSTANT\",\n                    bgColor: \"#0069ee\"\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams =\n            globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value) {\n            switch (buyParams.selectedCountry.value.toUpperCase()) {\n              case \"IND\":\n                fiatCurrency = \"INR\";\n                break;\n              case \"GBR\":\n                fiatCurrency = \"GBP\";\n                break;\n              case \"EUR\":\n                fiatCurrency = \"EUR\";\n                break;\n              case \"USA\":\n                fiatCurrency = \"USD\";\n                break;\n              default:\n                fiatCurrency = \"GBP\";\n                break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken\n            ? buyParams.selectedToken.toLowerCase()\n            : props.tokenConfig.transak &&\n              props.tokenConfig.transak.currencyCode\n              ? props.tokenConfig.transak.currencyCode\n              : props.selectedToken;\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width: \"100%\",\n            height: \"100%\"\n            // email,\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          if (window.transakGlobal) {\n            const transakWidget = document.getElementById(\"transak-widget\");\n            if (!transakWidget) {\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById(\"transakWidget_style\")) {\n                const transakStyle = document.createElement(\"style\");\n                transakStyle.id = \"transakWidget_style\";\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, \"transak-widget-container\");\n          }\n        }\n      },\n      moonpay: {\n        enabled: true,\n        imageSrc: \"images/payments/moonpay.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 4.5% fee ~\",\n        supportedMethods: [\"card\", \"bank\"],\n        supportedCountries: [\n          \"GBR\",\n          \"EUR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"CAN\",\n          \"HKG\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        env: \"prod\",\n        envParams: {\n          test: {\n            url: \"https://buy-staging.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod: {\n            url: \"https://buy.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                if (props.selectedCountry && props.selectedCountry.value) {\n                  switch (props.selectedCountry.value.toUpperCase()) {\n                    case \"EUR\":\n                      info.badge = {\n                        text: \"SEPA\",\n                        color: \"#f7cb05 \",\n                        bgColor: \"#10288a\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                      break;\n                    case \"GBR\":\n                      info.badge = {\n                        text: \"GBP\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                      break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                      break;\n                  }\n                }\n                break;\n              case \"card\":\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams =\n            globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken\n              ? buyParams.selectedToken.toLowerCase()\n              : props.tokenConfig.moonpay &&\n                props.tokenConfig.moonpay.currencyCode\n                ? props.tokenConfig.moonpay.currencyCode\n                : props.selectedToken.toLowerCase(),\n            walletAddress: props.account,\n            baseCurrencyCode: \"USD\",\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            bank: {\n              GBR: \"gbp_bank_transfer\",\n              EUR: \"sepa_bank_transfer\"\n            },\n            card: \"credit_debit_card\"\n          };\n\n          const selectedCountry =\n            buyParams.selectedCountry && buyParams.selectedCountry.value\n              ? buyParams.selectedCountry.value.toUpperCase()\n              : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod) {\n            switch (buyParams.selectedMethod) {\n              case \"bank\":\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod][\"EUR\"];\n                switch (selectedCountry) {\n                  case \"GBR\":\n                  case \"EUR\":\n                    params.enabledPaymentMethods =\n                      methods[buyParams.selectedMethod][selectedCountry];\n                    break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(\n                      methods[buyParams.selectedMethod]\n                    ).join(\",\");\n                    break;\n                }\n                break;\n              case \"card\":\n              default:\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod];\n                break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry) {\n            case \"GBR\":\n              params.baseCurrencyCode = \"GBP\";\n              break;\n            case \"EUR\":\n              params.baseCurrencyCode = \"EUR\";\n              break;\n            default:\n              params.baseCurrencyCode = \"USD\";\n              break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (\n              !document.cookie.match(\n                /^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/\n              )\n            ) {\n              document.cookie =\n                \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const moonpayWidget = document.getElementById(\"moonpay-widget\");\n          if (!moonpayWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById(\"moonpayWidget_style\")) {\n              const moonpayStyle = document.createElement(\"style\");\n              moonpayStyle.id = \"moonpayWidget_style\";\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: \"images/payments/zeroexinstant.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        remoteResources: { \"https://instant.0x.org/v3/instant.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onSuccess,\n          onClose\n        ) => {\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context\n            ? window.RimbleWeb3_context.connectorName\n            : null;\n\n          if (!tokenParams.zeroExInstant) {\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider:\n              connectorName &&\n                connectorName !== \"Injected\" &&\n                window.RimbleWeb3_context.connector[connectorName.toLowerCase()]\n                ? window.RimbleWeb3_context.connector[\n                  window.RimbleWeb3_context.connectorName.toLowerCase()\n                ].provider\n                : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount) => {\n          if (window.zeroExInstant && initParams) {\n            if (amount) {\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: \"images/payments/kyber.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Swap with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\n          \"WETH\",\n          \"USDC\",\n          \"DAI\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"RAI\",\n          \"FEI\"\n        ],\n        web3Subscription: {\n          // Data for web3 subscription\n          enabled: true,\n          contractAddress: \"0x818e6fecd516ecc3849daf6845e3ec868087b755\",\n          decodeLogsData: [\n            {\n              internalType: \"address\",\n              name: \"_startAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"address\",\n              name: \"_tokenAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_startAmount\",\n              type: \"uint256\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_tokenAmount\",\n              type: \"uint256\"\n            }\n          ]\n        },\n        remoteResources: {\n          \"https://widget.kyber.network/v0.7.5/widget.css\": {},\n          \"https://widget.kyber.network/v0.7.5/widget.js\": {\n            parentElement: document.body,\n            precall: (props, globalConfigs, providerInfo) => {\n              // Remove previous elements\n              const buttons = document.querySelectorAll(\".kyber-widget-button\");\n              for (let i = 0; i < buttons.length; i++) {\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll(\".script_kyberSwap\");\n              for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId\n                ? props.buttonId\n                : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)) {\n                const a = document.createElement(\"a\");\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props, globalConfigs);\n                a.target = \"_blank\";\n                a.rel = \"nofollow noopener noreferrer\";\n                a.className = \"kyber-widget-button theme-ocean theme-supported\";\n                a.title = \"Swap with Kyber\";\n                a.style = \"display:none;\";\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props, globalConfigs, buyParams = null) => {\n          const baseToken = props.baseToken ? props.baseToken : \"ETH\";\n          const params = {\n            lang: \"en\",\n            type: \"swap\",\n            mode: \"iframe\",\n            theme: \"theme-ocean\",\n            paramForwarding: true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens: `${baseToken}_${props.selectedToken}`,\n            title: `Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair: `${baseToken}_${props.selectedToken}`,\n            commissionId: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n            network:\n              globalConfigs.network.requiredNetwork === 1 ? \"mainnet\" : \"test\"\n          };\n\n          const url = \"https://widget.kyber.network/v0.7.5/\";\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props) => {\n          const buttonId = props.buttonId\n            ? props.buttonId\n            : `kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a) {\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: \"images/payments/airswap.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: {\n          \"https://cdn.airswap.io/airswap-instant-widget.js\": {}\n        },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            env: \"production\",\n            mode: \"buy\",\n            token: props.tokenConfig.address,\n            baseToken: \"ETH\",\n            onComplete: onComplete ? onComplete : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.AirSwapInstant) {\n            if (amount) {\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: \"images/payments/totle.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: { \"https://widget.totle.com/latest/dist.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.TotleWidget) {\n            const nodeId = \"totle-widget\";\n            if (!document.getElementById(nodeId)) {\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(\n              initParams,\n              document.getElementById(nodeId)\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  // Goerli\n  5:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  80001:{ // Mumbai-Testnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      /*\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      */\n    },\n    risk:{\n      \n    }\n  },\n  137:{ // Matic Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x8a999F5A3546F8243205b2c0eCb0627cC10003ab',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crDAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x4eCEDdF62277eD78623f9A94995c680f8fd6C00e',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x27F8D03b3a2196956ED754baDc28D73be8830A6e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x1ee6470CD75D5686d0b2b90C0305Fa46fb0C89A1',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:16,\n            name:'cream',\n            enabled:true,\n            token:'crUSDC',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x73CF8c5D14Aa0EbC89f18272A568319F5BAB6cBD',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amUSDC',\n            address:'0x1a13F4Ca1d028320A707D99520AbFefca3998b7F',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xfdA25D931258Df948ffecb66b5518299Df6527C4',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crWETH',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x7ef18d0a9C3Fb1A716FF6c3ED0Edf52a2427F716',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            token:'aWETH',\n            name:'aavev2',\n            address:'0x28424507fefb6f7f8E9D3860F56504E4e5f5f390',\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  // Ethereum\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        token: 'USDC',\n        decimals: 6,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        ramp: {\n          swapAsset: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols: [\n          {\n            decimals: 16,\n            enabled: true,\n            token: 'cUSDC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk: {\n\n    }\n  },\n  1337: {\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crRAI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  },\n  1: { // Mainnet\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.8,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            defiScore: 8.8,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.9,\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          /*\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            token:'crRAI',\n            enabled:false,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          */\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aRAI',\n            enabled: true,\n            name: 'aavev2',\n            functions: {\n            },\n            address: '0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aFEI',\n            enabled: true,\n            functions: {},\n            name: 'aavev2',\n            address: '0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.4\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034', '1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    tick: \"#00b84a\",\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#C6CBD2\",\n    border: \"#546278\",\n    newblue: \"#2B65D9\",\n    alert: '#ff9900',\n    arrowActive: '#d8d8d8',\n    arrowInactive: '#4f4f4f',\n    selectBgFocused: '#1e3657',\n    selectBg: '#162e4d',\n    backButtonBg: '#162e4d',\n    lineChartStroke: '#a4aec6',\n    wrongNetworkBannerBg: '#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg: '#162e4d',\n    menuBg: '#162e4d',\n    menuHover: '#1e3657',\n    flashColor: '#bac5ff',\n    cardBgHover: '#1e3657',\n    cardBorder: '#0d2034',\n    pageActive: '#d8d8d8',\n    pageInactive: '#4f4f4f',\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#1e3657\",\n    menuRightBorder: '#0d2034',\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    cardHoverShadow: '0px 0px 0px 1px rgb(45 74 114)',\n    transactions: {\n      action: {\n        send: '#10a0dd',\n        swap: '#3d53c0',\n        exit: '#10a0dd',\n        boost: '#ffff00',\n        redeem: '#10a0dd',\n        swapout: '#10a0dd',\n        deposit: '#3d53c0',\n        curvein: '#10a0dd',\n        receive: '#3d53c0',\n        migrate: '#3d53c0',\n        default: '#4f4f4f',\n        curveout: '#3d53c0',\n        withdraw: '#10a0dd',\n        curvedepositin: '#10a0dd',\n        curvedepositout: '#3d53c0'\n      },\n      actionBg: {\n        send: '#ceeff6',\n        swap: '#ced6ff',\n        exit: '#ceeff6',\n        boost: '#ff7979',\n        redeem: '#ceeff6',\n        swapout: '#ceeff6',\n        deposit: '#ced6ff',\n        curvein: '#ceeff6',\n        default: '#dadada',\n        receive: '#ced6ff',\n        migrate: '#ced6ff',\n        withdraw: '#ceeff6',\n        curveout: '#ced6ff',\n        curvedepositin: '#ceeff6',\n        curvedepositout: '#ced6ff'\n      },\n      status: {\n        completed: '#00b84a',\n        pending: '#a5a5a5',\n        failed: '#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura.rpc).forEach((networkId,index) => {\n  networkId = parseInt(networkId);\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura.rpc[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: supportedNetworkURLs[defaultNetwork]\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              The network you are currently connected{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                ({this.props.network.current.name})\n              </Text.span>{\" \"}\n              is not supported - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isSupportedNetwork === false && this.props.web3 &&\n          <WrongNetworkBanner\n            network={this.props.network}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      // await this.props.context.setFirstValidConnector(['Infura']);\n      // this.props.context.setConnector('Infura');\n      this.props.context.unsetConnector();\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport { POSClient, use } from '@maticnetwork/maticjs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport { Web3ClientPlugin } from '@maticnetwork/maticjs-web3';\n// import detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  web3Polygon: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  web3Providers: {},\n  accountBalance: {},\n  maticPOSClient: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  maticPlasmaClient :{},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  contractsNetworks: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n    isSupportedNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.web3 = this.state.web3;\n    props.account = this.state.account;\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        this.handleNetworkChanged(networkId);\n        // window.location.reload();\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n    window.initAccount = this.initAccount;\n  }\n\n  handleNetworkChanged = async (networkId=null) => {\n    this.functionsUtil.removeStoredItem('cachedRequests');\n    this.functionsUtil.removeStoredItem('cachedRequests_polygon');\n    this.functionsUtil.removeStoredItem('transactions');\n    await this.props.clearCachedData(async () => {\n      // console.log(networkId,this.state.network);\n      // const network = await this.checkNetwork();\n      // if (network.isCorrectNetwork){\n      //   window.location.reload();\n      // }\n\n      if (this.state.network.required && networkId && parseInt(networkId) === parseInt(this.state.network.required.id)){\n        window.location.reload();\n      } else {\n        this.setState({\n          web3:null,\n          contracts:[],\n          biconomy:null,\n          permitClient:null,\n          contractsNetworks:{},\n          networkInitialized:false,\n          erc20ForwarderClient:null,\n          contractsInitialized:false\n        },() => {\n          this.checkNetwork();\n        });\n      }\n    });\n  }\n\n  componentDidMount = async () => {\n    // this.initSimpleID();\n    // this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('connectGnosisSafe - isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe,walletProvider);\n      if (isGnosisSafe){\n        // console.log('connectGnosisSafe - select gnosis connector');\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        // console.log('connectGnosisSafe - Reset to Infura, isGnosisSafe = false');\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      // console.log('gnosisSafeLoaded');\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if ((prevProps.connectorName !== this.props.connectorName && this.props.connectorName) || (this.props.context.active && prevProps.context.active !== this.props.context.active)){\n      // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active,this.state.networkInitialized);\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          // console.log('initWeb3_2',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active);\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect'){\n        // console.log('initWeb3_3',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n        this.initWeb3();\n      }\n    } else if ((this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      // console.log('initWeb3_4',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n      this.initWeb3();\n    }\n\n    const currentNetworkChanged = this.state.networkInitialized && prevState.network.current.id !== this.state.network.current.id;\n    if (currentNetworkChanged){\n      // console.log('currentNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.initWeb3();\n    }\n\n    const requiredNetworkChanged = prevState.network.required.id !== this.state.network.required.id;\n    if (requiredNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.setState({\n        contracts:[],\n        contractsNetworks:{},\n        contractsInitialized:false\n      }, () => {\n        this.props.setNetwork(this.state.network);\n        this.initWeb3();\n      });\n    }\n\n    const availableStrategiesChanged = (!prevProps.availableStrategies && this.props.availableStrategies) || (prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies)));\n    // console.log('availableStrategiesChanged',this.props.availableStrategies,availableStrategiesChanged);\n    if (availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    const contextAccountChanged = prevProps.context.account !== this.props.context.account;\n    const accountDisconnected = prevProps.connectorName !== this.props.connectorName && this.props.connectorName === 'Infura';\n    if (contextAccountChanged){\n      // console.log('contextAccountChanged',prevProps.context.account,this.props.context.account,contextAccountChanged);\n    }\n\n    if (accountDisconnected){\n      // console.log('accountDisconnected',prevProps.connectorName,this.props.connectorName,accountDisconnected);\n    }\n\n    if (customAddressChanged || contextAccountChanged || accountDisconnected){\n      this.initAccount();\n    }\n\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n\n    // Reset tokenDecimals if token is changed\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    const accountChanged = prevState.account !== this.state.account;\n    if (accountChanged){\n      this.initMaticPosClient();\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    const selectedNetworkChanged = prevProps.config.requiredNetwork !== this.props.config.requiredNetwork;\n    if (selectedNetworkChanged){\n      // console.log('selectedNetworkChanged',JSON.stringify(prevProps.config.requiredNetwork),this.props.config.requiredNetwork);\n      this.handleNetworkChanged();\n    }\n  }\n\n  initMaticPosClient = async () => {\n    let maticPOSClient = null;\n    let maticPlasmaClient = null;\n\n    // const infuraConfig = globalConfigs.network.providers.infura;\n    const networkId = this.state.network.required.id;\n    const polygonConfig = globalConfigs.network.providers.polygon;\n\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n\n      const maticProvider = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      const parentProvider = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n      // install web3 plugin\n      use(Web3ClientPlugin);\n\n      maticPOSClient = new POSClient();\n\n      const maticPOSClientConfig = {\n        parent: {\n          provider: parentProvider,\n          defaultConfig: {\n            from : this.state.account\n          }\n        },\n        child: {\n          provider: maticProvider,\n          defaultConfig: {\n            from : this.state.account\n          }\n        },\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n\n      await maticPOSClient.init(maticPOSClientConfig);\n    }\n\n    window.maticPOSClient = maticPOSClient;\n    window.maticPlasmaClient = maticPlasmaClient;\n\n    this.setState({\n      maticPOSClient,\n      maticPlasmaClient\n    });\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    // const metamaskProvider = await detectEthereumProvider();\n    // if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n    //   window.ethereum = metamaskProvider;\n    // }\n    if (!this.state.networkInitialized){\n      return false;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.required.id;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - START',networkId,walletProvider);\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.functionsUtil.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.functionsUtil.getGlobalConfig(['network','providers',provider,'rpc',networkId])+web3RpcKey;\n\n    const useWeb3Provider = this.state.network.isCorrectNetwork;\n    const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n    const web3Providers = Object.keys(availableNetworks).filter( netId => enabledNetworks.includes(parseInt(netId)) ).reduce( (acc,netId) => {\n      const networkConfig = availableNetworks[netId];\n      const providerConfig = this.functionsUtil.getGlobalConfig(['network','providers',networkConfig.provider]);\n      const providerRpc = providerConfig.rpc[netId]+providerConfig.key;\n      acc[netId] = new Web3(new Web3.providers.HttpProvider(providerRpc));\n      return acc;\n    },{});\n\n    let web3Polygon = null;\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n    const polygonConfig = globalConfigs.network.providers.polygon;\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      web3Polygon = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      window.web3Polygon = web3Polygon;\n    }\n\n    let web3 = useWeb3Provider ? context.library : null;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // if (connectorName !== 'Infura' && connectorName !== 'Injected' && !context.library){\n    //   connectorName = 'Infura';\n    //   this.props.setConnector('Infura',null);\n    //   if (web3 && typeof web3.currentProvider.disable === 'function'){\n    //     web3.currentProvider.disable();\n    //   } else if (context.connector && typeof context.connector.disable === 'function'){\n    //     context.connector.disable();\n    //   }\n    // }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n\n          // console.log('initWeb3 - setConnector('+connectorName+') and return web3');\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = web3Rpc;\n    let web3Provider = null;\n\n    // console.log('initWeb3-PRE',connectorName,web3,context);\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = web3InfuraRpc;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = web3InfuraRpc;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider && useWeb3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = web3Providers[networkId];\n    }\n\n    // console.log('initWeb3',connectorName,web3,context,web3Provider/*,web3Provider===context.library.currentProvider*/);\n\n    const web3Callback = async (initWeb3Index) => {\n\n      // console.log('web3Callback - CHECK INDEX',initWeb3Index,this.state.initWeb3Index,initWeb3Index === this.state.initWeb3Index);\n      if (initWeb3Index !== this.state.initWeb3Index){\n        return false;\n      }\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // console.log('web3Callback',this.state.network,this.state.biconomy,this.state.web3);\n\n      // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - web3Callback');\n\n      // After setting the web3 provider, check network\n      try {\n        // console.log('checkNetwork_call');\n        // Check network after injected web3 loaded\n        const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n        if (!this.state.network.isCorrectNetwork && isGnosisSafe){\n          await this.checkNetwork();\n        }\n\n        if (this.state.network.isSupportedNetwork){\n          await this.initializeContracts();\n          if (context.active && context.connectorName===connectorName && context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const initWeb3Index = parseInt(this.state.initWeb3Index)+1;\n\n\n    this.setState({\n      web3Infura,\n      web3Polygon,\n      initWeb3Index,\n      web3Providers,\n    },() => {\n      // this.checkNetwork();\n    });\n\n    const currentNetworkId = this.state.network.current.id;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n\n    // console.log('check biconomy enabled',this.state.network,currentNetworkId,biconomyInfo.supportedNetworks.includes(currentNetworkId));\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(currentNetworkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      const biconomyWeb3Provider = web3Provider ? web3Provider : new Web3.providers.HttpProvider(web3Host);\n      if (this.state.biconomy === null || this.state.biconomy.currentProvider !== biconomyWeb3Provider ){\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n\n          // Reset contracts initialized\n          this.setState({\n            accountInizialized:false,\n            contractsInitialized:false\n          });\n\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || (this.state.biconomy === biconomy && web3 !== this.state.web3)){\n              // console.log('biconomy already loaded',biconomyWeb3Provider,this.state.biconomy===biconomy);\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              web3Providers,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, () => web3Callback(initWeb3Index));\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                biconomy:false\n              }, () => web3Callback(initWeb3Index));\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            biconomy:false\n          }, () => web3Callback(initWeb3Index));\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3\n        }, () => web3Callback(initWeb3Index) );\n      } else if (context.account || forceCallback){\n        web3Callback(initWeb3Index);\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    // console.log(`initContract: ${name} - addr: ${address}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  initContractWithoutSet = (name, address, abi, networkId=null) => {\n    // Reset networkId is equal to injected\n    if (networkId && parseInt(networkId) === parseInt(this.state.network.required.id) && this.state.network.isCorrectNetwork){\n      networkId = null;\n    }\n    const web3Provider = networkId && this.state.web3Providers[networkId] ? this.state.web3Providers[networkId] : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    // if (name==='ERC20Predicate'){\n    //   console.log('createContract',this.state.network,web3Provider);\n    // }\n\n    if (!web3Provider || !abi){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      const contractInfo = {name, contract};\n\n      this.setState(prevState => {\n        // Remove old contract\n        const contracts = prevState.contracts.filter( c => c.name !== contractInfo.name );\n        // Insert updated contract\n        contracts.push(contractInfo);\n        return {\n          contracts\n        };\n      });\n\n      return contractInfo;\n    } catch (error) {\n      console.error(\"Could not create contract.\",name,address,abi,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      return this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      },()=>{\n        this.getAccountBalance();\n      });\n    } else if (this.props.connectorName === 'Infura' || !this.props.connectorName || !this.props.context.active){\n      return this.setState({\n        account:null,\n        accountInizialized:true\n      });\n    }\n\n    // console.log('initAccount_1',this.props.connectorName,this.props.context,this.props.context.account,account,this.state.account);\n\n    try {\n\n      if (this.props.context.active && this.props.context.connectorName===this.props.connectorName && this.props.context.account){\n        account = this.props.context.account;\n      }\n\n      if (!account){\n        const wallets = await this.state.web3.eth.getAccounts();\n\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account){\n        account = this.props.context.account;\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // console.log('initAccount_2',account);\n\n      // Request account access if needed\n      if (account){\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        },()=>{\n          // After account is complete, get the balance\n          this.getAccountBalance();\n        });\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          account:null,\n          accountInizialized: true,\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // console.log(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    if (!this.state.web3){\n      return false;\n    }\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [\n        accountBalance,\n        accountBalanceToken,\n        tokenDecimals\n      ] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      // console.log('getAccountBalance',this.state.web3,this.state.account,accountBalance,accountBalanceToken,tokenDecimals);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLog(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    if (!this.state.web3 || !this.props.availableStrategies){\n      return false;\n    }\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initializeContracts - START',this.state.network.required.id,this.props.availableStrategies,this.props.availableStrategiesNetworks);\n\n    const contracts = [];\n    const contractsNetworks = {};\n    const requiredNetworkId = parseInt(this.state.network.required.id);\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n\n    if (this.props.availableStrategiesNetworks){\n      Object.keys(this.props.availableStrategiesNetworks).forEach( networkId => {\n        contractsNetworks[networkId] = [];\n        const strategies = this.props.availableStrategiesNetworks[networkId];\n        Object.keys(strategies).forEach( strategy => {\n          const availableTokens = this.props.availableStrategiesNetworks[networkId][strategy];\n          Object.keys(availableTokens).forEach( token => {\n            const tokenConfig = availableTokens[token];\n\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi, networkId));\n\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi, networkId));\n\n            tokenConfig.protocols.forEach(async (p,i) => {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              contractsNetworks[networkId].push(this.initContractWithoutSet(p.token, p.address, p.abi, networkId));\n            });\n          })\n        });\n      });\n    }\n\n    // console.log('initializeContracts',this.state.network,this.state.web3,contracts,this.props.availableStrategies);\n\n    const contractsToInitialize = this.functionsUtil.getGlobalConfig(['contracts',requiredNetworkId]);\n    if (contractsToInitialize){\n      Object.keys(contractsToInitialize).forEach( contractName => {\n        const contractInfo = contractsToInitialize[contractName];\n        if (contractInfo.address !== null && contractInfo.abi !== null){\n          const networkId = contractInfo.networkId ? parseInt(contractInfo.networkId) : requiredNetworkId;\n          // console.log('initializeContracts, init contract', requiredNetworkId, contractName, contractInfo.address);\n          contracts.push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n          contractsNetworks[requiredNetworkId].push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n        }\n      });\n    }\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    if (govTokens){\n      Object.keys(govTokens).forEach( token => {\n        const govTokenConfig = govTokens[token];\n        if (!govTokenConfig.enabled){\n          return;\n        }\n        availableNetworks.forEach( networkId => {\n          // Initialize govToken contracts\n          const contractAddress = govTokenConfig.addresses && govTokenConfig.addresses[networkId] ? govTokenConfig.addresses[networkId] : govTokenConfig.address;\n          this.functionsUtil.customLog('initializeContracts, init contract', token, contractAddress);\n          if (parseInt(networkId) === parseInt(requiredNetworkId)){\n            contracts.push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi));\n          }\n          contractsNetworks[networkId].push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi, networkId));\n        });\n      });\n    }\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const availableTokens = this.props.availableStrategies[strategy];\n        Object.keys(availableTokens).forEach( token => {\n          const tokenConfig = availableTokens[token];\n\n          this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n          contracts.push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi));\n\n          // Initialize idleTokens contracts\n          this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n          contracts.push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi));\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n            contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              contracts.push(this.initContractWithoutSet(oldContract.name, oldContract.address, oldContract.abi));\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              contracts.push(this.initContractWithoutSet(migrationContract.name, migrationContract.address, migrationContract.abi));\n            }\n          }\n        })\n      });\n    }\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['strategies','tranches']);\n    if (this.props.availableTranches){\n      Object.keys(this.props.availableTranches).forEach( protocol => {\n        const tokens = this.props.availableTranches[protocol];\n        Object.keys(tokens).forEach( token => {\n          const tokenConfig = tokens[token];\n          if (!tranchesConfig.availableNetworks || tranchesConfig.availableNetworks.includes(requiredNetworkId)){\n            if (tokenConfig.abi){\n              contracts.push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi));\n            }\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi));\n          }\n\n          if (tokenConfig.abi){\n            contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi,1));\n          }\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi,1));\n        });\n      });\n    }\n\n    const gaugesAvailableNetworks = this.functionsUtil.getGlobalConfig(['tools','gauges','availableNetworks']);\n    const gauges = this.functionsUtil.getGlobalConfig(['tools','gauges','props','availableGauges']);\n    Object.keys(gauges).forEach(gaugeToken => {\n      const gaugeConfig = gauges[gaugeToken];\n      if (gaugesAvailableNetworks.includes(requiredNetworkId)){\n        contracts.push(this.initContractWithoutSet(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi));\n      }\n      contractsNetworks[1].push(this.initContractWithoutSet(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi,1));\n    });\n\n    const newContracts = Object.assign([],this.state.contracts);\n    contracts.forEach( contractInfo => {\n      if (contractInfo){\n        const contractFound = newContracts.find( c => c.name===contractInfo.name );\n        if (!contractFound){\n          newContracts.push(contractInfo);\n        } else {\n          const contractIndex = newContracts.indexOf(contractFound);\n          newContracts[contractIndex] = contractInfo;\n        }\n      }\n    });\n\n    // console.log('initializeContracts',newContracts);\n\n    const newState = {\n      contractsNetworks,\n      contracts:newContracts,\n      contractsInitialized:true\n    };\n\n    return this.setState(newState);\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n     const networkId = typeof this.props.config !== \"undefined\" && typeof this.props.config.requiredNetwork !== \"undefined\" ? this.props.config.requiredNetwork : globalConfigs.network.requiredNetwork;\n     const networkName = networkId && globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId].name : 'unknown';\n     return {\n       id: networkId,\n       name: networkName\n     };\n   }\n\n   getCurrentNetwork = async (networkId=null) => {\n     const currentWeb3 = this.functionsUtil.getCurrentWeb3();\n\n     // console.log('getCurrentNetwork',this.state.web3,currentWeb3);\n\n     networkId = parseInt(networkId) || await currentWeb3.eth.net.getId();\n     const networkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId,'name']) || await currentWeb3.eth.net.getNetworkType();\n\n     return {\n       id:networkId,\n       name:networkName\n     }\n   }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  checkNetwork = async (networkId=null) => {\n    const network = {...this.state.network};\n\n    network.required = this.getRequiredNetwork();\n    network.current = await this.getCurrentNetwork(networkId);\n\n    const networkInitialized = !!network.current.id;\n    network.isCorrectNetwork = !networkInitialized || network.current.id === network.required.id;\n    network.isSupportedNetwork = !network.current.id || globalConfigs.network.enabledNetworks.includes(network.current.id);\n\n    const currentNetworkChanged = network.current.id && network.current.id !== this.state.network.current.id;\n    const requiredNetworkChanged = network.required.id && network.required.id !== this.state.network.required.id;\n\n    const updateNetwork = !this.state.network.current.id || currentNetworkChanged || requiredNetworkChanged || !this.state.networkInitialized;\n\n    // console.log('checkNetwork','networkId:'+networkId,', curr: '+this.state.network.current.id,', netID: '+network.current.id,', required: '+network.required.id,', correct: '+network.isCorrectNetwork,', update: '+updateNetwork);\n    if (updateNetwork){\n      this.setState({\n        network,\n        networkInitialized\n      });\n    }\n\n    return network;\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    initWeb3Index:0,\n    transactions: {},\n    web3Providers:{},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    maticPOSClient: null,\n    accountBalance: null,\n    contractsNetworks: {},\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    maticPlasmaClient:null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    networkInitialized:false,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n          currentSection={this.props.currentSection}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n// import NetworkIndicator from \"../../NetworkIndicator/NetworkIndicator\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    let logoSrc = 'images/logo.svg';\n    let logoHeight = ['35px','48px'];\n    const isChristmas = this.functionsUtil.checkChristmas();\n    if (isChristmas){\n      logoHeight = ['42px','70px'];\n      logoSrc = 'images/logo-christmas.svg';\n    }\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                src={logoSrc}\n                position={'relative'}\n                height={logoHeight}\n              />\n            </RouterLink>\n          </Flex>\n          <Flex\n            width={[0.5,8/12]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={\"flex-end\"}\n          >\n            <Flex\n              pr={[3,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile && (\n                  <>\n                    <Link\n                      mx={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n                )\n              }\n            </Flex>\n            {\n              /*\n              <Flex\n                ml={4}\n              >\n                <NetworkIndicator\n                  {...this.props}\n                />\n              </Flex>\n              */\n            }\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from \"jquery\";\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from \"./connectors\";\nimport Web3Provider from \"web3-react\";\nimport { Web3Consumer } from \"web3-react\";\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from \"../FlexLoader/FlexLoader\";\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from \"../configs/globalConfigs\";\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from \"../configs/availableTokens\";\nimport availableTranches from \"../configs/availableTranches\";\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from \"rimble-ui\";\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import(\"../Dashboard/Dashboard\"));\nconst Governance = React.lazy(() => import(\"../Governance/Governance\"));\n\nclass App extends Component {\n  state = {\n    network: null,\n    cachedData: {},\n    buyToken: null,\n    currentEnv: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode: 'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme: theme,\n    currentSection: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedProtocol: null,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    config:globalConfigs.network,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n    availableStrategiesNetworks: null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n    // window.functionsUtil = this.functionsUtil;\n  }\n\n  closeToastMessage = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps: null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps: props\n    });\n  }\n\n  processCustomParam = (props, prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback = null, clear_all = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    const requiredNetworkId = this.state.network.required.id;\n\n    const cachedData = { ...this.state.cachedData };\n    if (cachedData[requiredNetworkId]){\n      Object.keys(cachedData[requiredNetworkId]).forEach(key => {\n        const data = cachedData[requiredNetworkId][key];\n        if (data.expirationDate !== null) {\n          delete cachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    if (storedCachedData && storedCachedData[requiredNetworkId]){\n      Object.keys(storedCachedData[requiredNetworkId]).forEach( key => {\n        const storedData = storedCachedData[requiredNetworkId][key];\n        if (storedData.expirationDate !== null){\n          delete storedCachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    this.functionsUtil.setLocalStorage('cachedData', storedCachedData, true);\n\n    await this.setState({\n      cachedData\n    }, () => {\n      if (typeof callback === 'function') {\n        callback();\n      }\n    });\n\n    return true;\n  }\n\n  setCachedData = (key, data, TTL = null, useLocalStorage = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    key = key.toLowerCase();\n    const currentTime = parseInt(Date.now()/1000);\n    const requiredNetworkId = this.state.network.required.id;\n    const cachedKeyFound = this.state.cachedData[requiredNetworkId] ? this.state.cachedData[requiredNetworkId][key] : null;\n\n    let storedCachedData = this.functionsUtil.getStoredItem('cachedData',true,{});\n    const storedKeyFound = storedCachedData[requiredNetworkId] ? storedCachedData[requiredNetworkId][key] : null;\n\n    const update_stored_key = useLocalStorage && (!storedKeyFound || ((storedKeyFound.expirationDate !== null && storedKeyFound.expirationDate <= currentTime) || JSON.stringify(storedKeyFound.data) !== JSON.stringify(data)));\n    const update_key = !cachedKeyFound || ((cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate <= currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data)) || update_stored_key;\n\n    let output = false;\n\n    if (update_key) {\n      const expirationDate = TTL ? currentTime + (TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage) {\n        if (!storedCachedData) {\n          storedCachedData = {};\n          storedCachedData[requiredNetworkId] = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [requiredNetworkId]:{\n            ...storedCachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        };\n        \n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [requiredNetworkId]:{\n            ...prevState.cachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        }\n      }), () => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)) {\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress) {\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw: false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({ ...state, selectedTab: tabIndex }));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const availableStrategiesNetworks = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : this.state.config.requiredNetwork;\n\n    // console.log('loadAvailableTokens_1',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens).filter( networkId => this.functionsUtil.getGlobalConfig(['network','enabledNetworks']).includes(parseInt(networkId)) ).forEach (networkId => {\n      availableStrategiesNetworks[networkId] = {};\n      Object.keys(availableTokens[networkId]).forEach((strategy) => {\n\n        availableStrategiesNetworks[networkId][strategy] = Object.keys(availableTokens[networkId][strategy]).reduce((enabledTokens, token) => {\n          const tokenConfig = availableTokens[networkId][strategy][token];\n          const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n          if (tokenConfig.enabled && envEnabled) {\n            enabledTokens[token] = tokenConfig;\n          }\n          return enabledTokens;\n        }, {});\n\n        if (parseInt(networkId) === parseInt(requiredNetwork)){\n          availableStrategies[strategy] = availableStrategiesNetworks[networkId][strategy];\n        }\n      });\n    });\n\n    newState.availableStrategies = availableStrategies;\n    newState.availableStrategiesNetworks = availableStrategiesNetworks;\n\n    // console.log('availableStrategiesNetworks',availableStrategiesNetworks);\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]) {\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]) {\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy, selectedToken,selectedProtocol=null) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    // console.log(selectedToken,selectedProtocol)\n    const newState = {\n      tokenConfig: !selectedToken ? null : this.state.tokenConfig,\n      availableTokens: !selectedToken ? null : this.state.availableTokens,\n      selectedToken: !selectedToken ? selectedToken : this.state.selectedToken,\n      selectedStrategy: !selectedStrategy ? selectedStrategy : this.state.selectedStrategy,\n    };\n    // console.log(\"here\",newState.selectedToken)\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n    else if(selectedStrategy==='tranches'&&selectedStrategy!==this.state.selectedStrategy)\n    {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n      \n     if (selectedToken && selectedToken !== this.state.selectedToken) {\n       // console.log(\"Step1\")\n        if(selectedStrategy==='tranches') {\n          // console.log(\"Step2\");\n          // console.log(availableTranches);\n          if(availableTranches && Object.keys(availableTranches[selectedProtocol]).includes(selectedToken)) {\n            newState.selectedToken = selectedToken;\n            newState.availableTokens = availableTranches;\n            newState.selectedProtocol = selectedProtocol;\n            newState.tokenConfig = availableTranches[selectedProtocol][selectedToken];\n          }\n        }\n      else if (this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } \n      else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',selectedStrategy,selectedToken,newState);\n    // console.log(newState);\n    await this.setState(newState, callback);\n  }\n\n\n  async setRequiredNetwork(requiredNetwork,forceChangeChain=false){\n    requiredNetwork = parseInt(requiredNetwork);\n    if (globalConfigs.network.enabledNetworks.includes(requiredNetwork)){\n      this.functionsUtil.setLocalStorage('requiredNetwork',requiredNetwork);\n      // console.log('setRequiredNetwork',requiredNetwork,forceChangeChain);\n      if (forceChangeChain || (this.state.currentSection && this.state.currentSection !== 'landing')){\n        this.functionsUtil.addEthereumChain(requiredNetwork);\n      }\n      return await this.setState(prevState => ({\n        config:{\n          ...prevState.config,\n          requiredNetwork\n        }\n      }));\n    }\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n    console.log(\"availabble\",this.state.availableStrategies)\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && (Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())||selectedStrategy==='tranches')) {\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState, callback);\n    } else if (!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig: null\n      }, callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction) {\n      window.console.error = () => { };\n      window.console.warn = () => { };\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage) {\n      this.functionsUtil.removeStoredItem('context');\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode', false);\n    if (themeMode) {\n      this.setThemeMode(themeMode);\n    }\n\n    const requiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',false);\n    if (requiredNetwork){\n      this.setRequiredNetwork(requiredNetwork);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i = 0; i < iFrames.length; i++) {\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w) {\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCurrentEnvironment();\n    this.loadCustomAddress();\n  }\n\n  async loadCurrentEnvironment() {\n    const currentEnv = this.functionsUtil.getCurrentEnvironment();\n    this.setState({\n      currentEnv\n    }, async () => {\n      // const envRequiredNetwork = this.functionsUtil.getGlobalConfig(['environments',this.state.currentEnv,'requiredNetwork']);\n      // const storedRequiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',null);\n      // if (!storedRequiredNetwork || parseInt(storedRequiredNetwork) !== parseInt(envRequiredNetwork)){\n      //   const requiredNetwork = storedRequiredNetwork || envRequiredNetwork;\n      //   console.log('setRequiredNetwork',requiredNetwork);\n      //   await this.setRequiredNetwork(requiredNetwork);\n      // }\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress() {\n    if (!this.state.customAddress) {\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom') {\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress) {\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  checkClientVersion(){\n    // Clear all localStorage data except walletProvider and connectorName if version has changed\n    const version = this.functionsUtil.getStoredItem('version', false);\n    const clientVersionChanged = version !== globalConfigs.version;\n    if (clientVersionChanged) {\n      console.log(`Client version updated from ${version} to ${globalConfigs.version}`);\n      const clearAllCache = this.functionsUtil.getGlobalConfig(['cache','clearAll']);\n      // Clear cached data\n      this.clearCachedData(() => {\n        // Reset Localstorage\n        this.functionsUtil.clearStoredData(['walletProvider', 'connectorName', 'themeMode', 'requiredNetwork']);\n        this.functionsUtil.setLocalStorage('version', globalConfigs.version);\n      }, clearAllCache);\n    }\n\n    console.log(`Client Version: ${globalConfigs.version}`);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged) {\n      if (this.state.currentSection === 'landing') {\n        this.setThemeMode('light', false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode', false) || this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const networkInitialized = !prevState.network && this.state.network;\n    if (networkInitialized){\n      this.checkClientVersion();\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged) {\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage) {\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive) {\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName, walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width: this.state.width,\n      height: this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged) {\n      if (widthChanged) {\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged) {\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken: null,\n      buyModalOpened: false\n    });\n  }\n\n  openBuyModal(e, buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened: true\n    });\n  }\n\n  async logout() {\n    // Reset Custom Address\n    this.setState({\n      customAddress: null\n    });\n    // Clear cached data\n    this.clearCachedData(() => {\n      // Reset Localstorage except some keys\n      this.functionsUtil.clearStoredData(['version', 'themeMode', 'lastLogin', 'cachedData','requiredNetwork']);\n    });\n  }\n\n  setNetwork(network) {\n    this.setState({\n      network,\n      availableStrategies:null\n    });\n  }\n\n  setConnector(connectorName, walletProvider) {\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider) {\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ((connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if (connectorName === 'Injected') {\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider) {\n        case 'Metamask':\n          if (!hasMetamask && hasDapper) {\n            walletProvider = 'Dapper';\n          }\n          break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask) {\n            walletProvider = 'Metamask';\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    }, () => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode, store = true) {\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled) {\n      themeMode = 'light';\n    }\n\n    switch (themeMode) {\n      default:\n      case 'light':\n        selectedTheme = theme;\n        break;\n      case 'dark':\n        selectedTheme = themeDark;\n        break;\n    }\n\n    if (store) {\n      this.functionsUtil.setLocalStorage('themeMode', themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection) {\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance', 'enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize: 4,\n            fontWeight: 2\n          }}\n          loaderProps={{\n            mb: 3,\n            size: '80px',\n            color: 'primary'\n          }}\n          flexProps={{\n            my: 3,\n            flexDirection: 'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer\n              recreateOnNetworkChange={false}\n              recreateOnAccountChange={false}\n            >\n              {context => {\n                //console.log('Web3Consumer render',context);\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    connectors={connectors}\n                    config={this.state.config}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    availableTranches={availableTranches}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    currentSection={this.state.currentSection}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                    availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        web3Infura,\n                        web3Polygon,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        checkNetwork,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        maticPOSClient,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        contractsNetworks,\n                        accountBalanceLow,\n                        networkInitialized,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper,\n                        initContractCustomProvider\n                      }) => {\n                        return (\n                          <Box>\n                            <Switch>\n                              <Route\n                                path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                                render={\n                                  (props) => \n                                    <Suspense\n                                      fallback={SuspenseLoader}\n                                    >\n                                      <Dashboard\n                                        {...props}\n                                        web3={web3}\n                                        modals={modals}\n                                        network={network}\n                                        context={context}\n                                        account={account}\n                                        isDashboard={true}\n                                        initWeb3={initWeb3}\n                                        biconomy={biconomy}\n                                        isMobile={isMobile}\n                                        simpleID={simpleID}\n                                        contracts={contracts}\n                                        web3Infura={web3Infura}\n                                        web3Polygon={web3Polygon}\n                                        initAccount={initAccount}\n                                        permitClient={permitClient}\n                                        initSimpleID={initSimpleID}\n                                        initContract={initContract}\n                                        transactions={transactions}\n                                        buyToken={this.state.buyToken}\n                                        logout={this.logout.bind(this)}\n                                        maticPOSClient={maticPOSClient}\n                                        accountBalance={accountBalance}\n                                        themeMode={this.state.themeMode}\n                                        theme={this.state.selectedTheme}\n                                        validateAccount={validateAccount}\n                                        currentEnv={this.state.currentEnv}\n                                        connecting={this.state.connecting}\n                                        cachedData={this.state.cachedData}\n                                        setToken={this.setToken.bind(this)}\n                                        accountValidated={accountValidated}\n                                        getTokenDecimals={getTokenDecimals}\n                                        rejectValidation={rejectValidation}\n                                        tokenConfig={this.state.tokenConfig}\n                                        contractsNetworks={contractsNetworks}\n                                        availableTranches={availableTranches}\n                                        getAccountBalance={getAccountBalance}\n                                        accountBalanceLow={accountBalanceLow}\n                                        accountInizialized={accountInizialized}\n                                        networkInitialized={networkInitialized}\n                                        selectedToken={this.state.selectedToken}\n                                        connectorName={this.state.connectorName}\n                                        setStrategy={this.setStrategy.bind(this)}\n                                        userRejectedConnect={userRejectedConnect}\n                                        accountBalanceToken={accountBalanceToken}\n                                        initializeContracts={initializeContracts}\n                                        walletProvider={this.state.walletProvider}\n                                        buyModalOpened={this.state.buyModalOpened}\n                                        erc20ForwarderClient={erc20ForwarderClient}\n                                        contractsInitialized={contractsInitialized}\n                                        openBuyModal={this.openBuyModal.bind(this)}\n                                        rejectAccountConnect={rejectAccountConnect}\n                                        handleMenuClick={this.selectTab.bind(this)}\n                                        setConnector={this.setConnector.bind(this)}\n                                        setThemeMode={this.setThemeMode.bind(this)}\n                                        availableTokens={this.state.availableTokens}\n                                        closeBuyModal={this.closeBuyModal.bind(this)}\n                                        setCachedData={this.setCachedData.bind(this)}\n                                        selectedStrategy={this.state.selectedStrategy}\n                                        selectedProtocol={this.state.selectedProtocol}\n                                        userRejectedValidation={userRejectedValidation}\n                                        clearCachedData={this.clearCachedData.bind(this)}\n                                        setStrategyToken={this.setStrategyToken.bind(this)}\n                                        accountValidationPending={accountValidationPending}\n                                        availableStrategies={this.state.availableStrategies}\n                                        setCurrentSection={this.setCurrentSection.bind(this)}\n                                        connectAndValidateAccount={connectAndValidateAccount}\n                                        contractMethodSendWrapper={contractMethodSendWrapper}\n                                        setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                        initContractCustomProvider={initContractCustomProvider}\n                                        setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                      />\n                                    </Suspense>\n\n                                }\n                              >\n                              </Route>\n                              {\n                                governanceEnabled && (\n                                  <Route\n                                    path=\"/governance/:section?/:item_id?\"\n                                    render={\n                                      (props) =>\n                                        <Suspense\n                                          fallback={SuspenseLoader}\n                                        >\n                                          <Governance\n                                            {...props}\n                                            web3={web3}\n                                            modals={modals}\n                                            network={network}\n                                            context={context}\n                                            account={account}\n                                            initWeb3={initWeb3}\n                                            biconomy={biconomy}\n                                            isMobile={isMobile}\n                                            simpleID={simpleID}\n                                            isGovernance={true}\n                                            contracts={contracts}\n                                            web3Infura={web3Infura}\n                                            web3Polygon={web3Polygon}\n                                            initAccount={initAccount}\n                                            initSimpleID={initSimpleID}\n                                            initContract={initContract}\n                                            checkNetwork={checkNetwork}\n                                            transactions={transactions}\n                                            buyToken={this.state.buyToken}\n                                            logout={this.logout.bind(this)}\n                                            accountBalance={accountBalance}\n                                            themeMode={this.state.themeMode}\n                                            theme={this.state.selectedTheme}\n                                            validateAccount={validateAccount}\n                                            currentEnv={this.state.currentEnv}\n                                            connecting={this.state.connecting}\n                                            cachedData={this.state.cachedData}\n                                            setToken={this.setToken.bind(this)}\n                                            accountValidated={accountValidated}\n                                            getTokenDecimals={getTokenDecimals}\n                                            rejectValidation={rejectValidation}\n                                            tokenConfig={this.state.tokenConfig}\n                                            contractsNetworks={contractsNetworks}\n                                            getAccountBalance={getAccountBalance}\n                                            accountBalanceLow={accountBalanceLow}\n                                            accountInizialized={accountInizialized}\n                                            networkInitialized={networkInitialized}\n                                            selectedToken={this.state.selectedToken}\n                                            connectorName={this.state.connectorName}\n                                            setStrategy={this.setStrategy.bind(this)}\n                                            userRejectedConnect={userRejectedConnect}\n                                            accountBalanceToken={accountBalanceToken}\n                                            initializeContracts={initializeContracts}\n                                            walletProvider={this.state.walletProvider}\n                                            buyModalOpened={this.state.buyModalOpened}\n                                            contractsInitialized={contractsInitialized}\n                                            openBuyModal={this.openBuyModal.bind(this)}\n                                            rejectAccountConnect={rejectAccountConnect}\n                                            handleMenuClick={this.selectTab.bind(this)}\n                                            setConnector={this.setConnector.bind(this)}\n                                            setThemeMode={this.setThemeMode.bind(this)}\n                                            availableTokens={this.state.availableTokens}\n                                            closeBuyModal={this.closeBuyModal.bind(this)}\n                                            setCachedData={this.setCachedData.bind(this)}\n                                            selectedStrategy={this.state.selectedStrategy}\n                                            userRejectedValidation={userRejectedValidation}\n                                            clearCachedData={this.clearCachedData.bind(this)}\n                                            setStrategyToken={this.setStrategyToken.bind(this)}\n                                            accountValidationPending={accountValidationPending}\n                                            availableStrategies={this.state.availableStrategies}\n                                            setCurrentSection={this.setCurrentSection.bind(this)}\n                                            connectAndValidateAccount={connectAndValidateAccount}\n                                            contractMethodSendWrapper={contractMethodSendWrapper}\n                                            setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                            setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                          />\n                                        </Suspense>\n                                    }\n                                  >\n                                  </Route>\n                                )\n                              }\n                              <Route>\n                                <Header\n                                  modals={modals}\n                                  network={network}\n                                  context={context}\n                                  account={account}\n                                  initWeb3={initWeb3}\n                                  isMobile={isMobile}\n                                  contracts={contracts}\n                                  initAccount={initAccount}\n                                  initContract={initContract}\n                                  buyToken={this.state.buyToken}\n                                  accountBalance={accountBalance}\n                                  logout={this.logout.bind(this)}\n                                  validateAccount={validateAccount}\n                                  connecting={this.state.connecting}\n                                  accountValidated={accountValidated}\n                                  getTokenDecimals={getTokenDecimals}\n                                  rejectValidation={rejectValidation}\n                                  setToken={e => { this.setToken(e) }}\n                                  tokenConfig={this.state.tokenConfig}\n                                  contractsNetworks={contractsNetworks}\n                                  getAccountBalance={getAccountBalance}\n                                  accountBalanceLow={accountBalanceLow}\n                                  networkInitialized={networkInitialized}\n                                  selectedToken={this.state.selectedToken}\n                                  connectorName={this.state.connectorName}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountBalanceToken={accountBalanceToken}\n                                  walletProvider={this.state.walletProvider}\n                                  buyModalOpened={this.state.buyModalOpened}\n                                  contractsInitialized={contractsInitialized}\n                                  openBuyModal={this.openBuyModal.bind(this)}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  handleMenuClick={this.selectTab.bind(this)}\n                                  setConnector={this.setConnector.bind(this)}\n                                  availableTokens={this.state.availableTokens}\n                                  closeBuyModal={this.closeBuyModal.bind(this)}\n                                  userRejectedValidation={userRejectedValidation}\n                                  accountValidationPending={accountValidationPending}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                  availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                />\n\n                                {\n                                  this.state.route === \"onboarding\" && (\n                                    <Web3Debugger\n                                      web3={web3}\n                                      account={account}\n                                      accountBalance={accountBalance}\n                                      accountBalanceToken={accountBalanceToken}\n                                      accountBalanceLow={accountBalanceLow}\n                                      initAccount={initAccount}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountValidated={accountValidated}\n                                      accountValidationPending={accountValidationPending}\n                                      rejectValidation={rejectValidation}\n                                      userRejectedValidation={userRejectedValidation}\n                                      validateAccount={validateAccount}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      modals={modals}\n                                      network={network}\n                                      transaction={transaction}\n                                    />\n                                  )\n                                }\n\n                                {\n                                  this.state.route === \"default\" && (\n                                    <Switch>\n                                      <Route exact path=\"/\"\n                                        render={(props) =>\n                                          <Suspense\n                                            fallback={SuspenseLoader}\n                                          >\n                                            <Landing\n                                              {...props}\n                                              web3={web3}\n                                              network={network}\n                                              account={account}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              initContract={initContract}\n                                              innerWidth={this.state.width}\n                                              logout={this.logout.bind(this)}\n                                              innerHeight={this.state.height}\n                                              accountBalance={accountBalance}\n                                              themeMode={this.state.themeMode}\n                                              theme={this.state.selectedTheme}\n                                              setToken={e => {this.setToken(e)}}\n                                              cachedData={this.state.cachedData}\n                                              currentEnv={this.state.currentEnv}\n                                              connecting={this.state.connecting}\n                                              selectedTab={this.state.selectedTab}\n                                              tokenConfig={this.state.tokenConfig}\n                                              accountBalanceLow={accountBalanceLow}\n                                              getAccountBalance={getAccountBalance}\n                                              availableTranches={availableTranches}\n                                              contractsNetworks={contractsNetworks}\n                                              networkInitialized={networkInitialized}\n                                              customAddress={this.state.customAddress}\n                                              selectedToken={this.state.selectedToken}\n                                              accountBalanceToken={accountBalanceToken}\n                                              closeToastMessage={this.closeToastMessage}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              setThemeMode={this.setThemeMode.bind(this)}\n                                              processCustomParam={this.processCustomParam}\n                                              availableTokens={this.state.availableTokens}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              updateSelectedTab={this.selectTab.bind(this)}\n                                              toastMessageProps={this.state.toastMessageProps}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              availableStrategies={this.state.availableStrategies}\n                                              setCurrentSection={this.setCurrentSection.bind(this)}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                              availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                            />\n                                            <CookieConsent\n                                              expires={365}\n                                              buttonText={\"Ok\"}\n                                              location={\"bottom\"}\n                                              acceptOnScroll={true}\n                                              cookieName={\"cookieAccepted\"}\n                                              acceptOnScrollPercentage={5}\n                                              style={{ background: \"rgba(255,255,255,0.95)\", zIndex: '9999999' }}\n                                              buttonStyle={{ display: isMobile ? \"block\" : \"none\", backgroundColor: '#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\" }}\n                                            >\n                                              <Flex flexDirection={'row'} alignItems={['flex-start', 'center']} justifyContent={'flex-start'} maxHeight={['150px', 'initial']} style={isMobile ? { overflowY: 'scroll' } : null}>\n                                                <Image display={['none', 'block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                                <Text pl={[0, 3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                                  This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                                  You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                              </Text>\n                                              </Flex>\n                                            </CookieConsent>\n                                          </Suspense>\n                                        }\n                                      ></Route>\n                                      <Route exact path=\"/terms-of-service\">\n                                        <Tos />\n                                      </Route>\n                                      <Route>\n                                        <PageNotFound />\n                                      </Route>\n                                    </Switch>\n                                  )\n                                }\n                              </Route>\n                            </Switch>\n                            <TransactionToastUtil\n                              transactions={transactions}\n                              themeMode={this.state.themeMode}\n                            />\n                          </Box>\n                        )\n                      }}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,oldContract,migrationContractApproved,this.props.selectedToken,this.props.account,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens ? this.props.availableTokens[token] : null;\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsUnderManagement extends Component {\n\n  state = {\n    totalAUM:null,\n    totalAUMEndOfYear:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalAUM();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalAUM();\n    }\n  }\n\n  async loadTotalAUM(){\n\n    const allNetworks = this.props.allNetworks || false;\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || (allNetworks && this.state.totalAUM)){\n      return true;\n    }\n\n    if (this.props.totalAUM && this.props.totalAUMEndOfYear){\n      return this.setState({\n        totalAUM:this.props.totalAUM,\n        totalAUMEndOfYear:this.props.totalAUMEndOfYear\n      });\n    }\n\n    const aggregatedStatsMethodParams = this.props.aggregatedStatsMethodParams || [true,allNetworks];\n\n    const {\n      avgAPY,\n      totalAUM\n    } = typeof this.props.aggregatedStatsMethod === 'function' ? await this.props.aggregatedStatsMethod(...aggregatedStatsMethodParams) : await this.functionsUtil.getAggregatedStats(...aggregatedStatsMethodParams);\n\n    let totalAUMEndOfYear = this.functionsUtil.BNify(0);\n    if (!this.functionsUtil.BNify(totalAUM).isNaN() && !this.functionsUtil.BNify(avgAPY).isNaN()){\n      totalAUMEndOfYear = totalAUM.plus(totalAUM.times(avgAPY.div(100)));\n    }\n\n    return this.setState({\n      totalAUM,\n      totalAUMEndOfYear\n    });\n  }\n\n  render() {\n    return this.state.totalAUM ? (\n      <Box\n        width={1}\n        {...this.props.flexProps}\n      >\n        <CountUp\n          delay={0}\n          decimals={4}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          duration={31536000}\n          start={parseFloat(this.state.totalAUM)}\n          end={parseFloat(this.state.totalAUMEndOfYear)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,4) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              style={ this.props.counterStyle ? this.props.counterStyle : {\n                display:'block',\n                color:'dark-gray',\n                whiteSpace:'nowrap',\n                fontFamily:this.props.theme.fonts.counter,\n                fontWeight:this.props.theme.fontWeights[5],\n                textAlign: this.props.isMobile ? 'center' : 'right',\n                fontSize: this.props.isMobile ? '1.6em' : this.props.theme.fontSizes[6]\n              }}\n              ref={countUpRef}\n            />\n          )}\n        </CountUp>\n        {\n          (typeof this.props.subtitle === 'undefined' || this.props.subtitle) && (\n            <Title\n              fontWeight={3}\n              fontSize={[2,2]}\n              color={'cellTitle'}\n              textAlign={['center','right']}\n              {...this.props.subtitleProps}\n            >\n              <Text.span fontWeight={'inherit'} color={'inherit'} fontSize={'inherit'}>{this.props.subtitle || 'Assets Under Management'}</Text.span>\n            </Title>\n          )\n        }\n      </Box>\n    ) : (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={this.props.loaderAlign || 'center'}\n      >\n        <Loader\n          size={\"30px\"}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsUnderManagement;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n    const depositedTokens=this.props.depositedTokens;\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n          colsProps={this.props.colsProps}\n        />\n       {\n         this.props.isDeposit?\n       (\n         depositedTokens &&\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            depositedTokens.map( token => {\n              const tokenConfig = this.props.availableTranches[token.protocol][token.token];\n              return (\n                <TableRow\n                  {...this.props}\n                  token={token.token}\n                  addTokenName={false}\n                  tranche={token.tranche}\n                  protocol={token.protocol}\n                  tokenConfig={tokenConfig}\n                  rowId={`tranche-col-${token.protocol}`}\n                  cardId={`tranche-card-${token.protocol}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                  key={`tranche-${token.protocol}-${token.token+token.tranche}`}\n                  trancheConfig={token.tranche===\"AA\"?tokenConfig.AA:tokenConfig.BB}\n                />\n              )\n            })\n          }\n        </Flex>\n       ):\n       (\n         <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              const tranche = this.props.trancheType || null;\n              return Object.keys(protocolConfig).map( token => {\n                return(\n                  <TableRow\n                    {...this.props}\n                    token={token}\n                    tranche={tranche}\n                    protocol={protocol}\n                    rowId={`tranche-col-${protocol}`}\n                    tokenConfig={protocolConfig[token]}\n                    cardId={`tranche-card-${protocol}`}\n                    key={`tranche-${protocol}-${token}`}\n                    fieldComponent={this.props.fieldComponent || TrancheField}\n                  />\n                  )\n               })\n            })\n          }\n        </Flex>\n        )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\nimport TooltipText from '../TooltipText/TooltipText';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Flex, Icon, Tooltip } from \"rimble-ui\";\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n    // console.log('componentDidMount',this.props.protocol,this.props.token,this.props.tranche);\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractsInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n    const seniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.AA.baseName);\n    const juniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.BB.baseName);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const endTimestamp = parseInt(Date.now()/1000);\n          const startTimestamp = endTimestamp-(7*24*60*60);\n\n          // Check for cached data\n          let aprChartData = [];\n          const cachedDataKey = `trancheAprChart_${this.props.tokenConfig.address}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n            const [\n              apiResults_aa,\n              apiResults_bb\n            ] = await Promise.all([\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.AA.address,startTimestamp,endTimestamp),\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.BB.address,startTimestamp,endTimestamp)\n            ]);\n\n            let itemIndex = 0;\n            let maxChartValue = 0;\n            const totalItems_aa = apiResults_aa.length;\n            const totalItems_bb = apiResults_bb.length;\n\n            aprChartData.push({\n              color:tranchesConfig.AA.color.hex,\n              id:`${this.props.token} ${seniorTrancheName} APY`,\n              data:apiResults_aa.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.apr2apy(this.functionsUtil.fixTokenDecimals(d.apr,18).div(100)).times(100));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_aa*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            itemIndex = 0;\n            aprChartData.push({\n              color:tranchesConfig.BB.color.hex,\n              id:`${this.props.token} ${juniorTrancheName} APY`,\n              data:apiResults_bb.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.apr2apy(this.functionsUtil.fixTokenDecimals(d.apr,18).div(100)).times(100));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_bb*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            if (aprChartData.length && aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = this.props.parentId && document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output !== undefined && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && parseInt(fieldProps.maxPrecision)>=0 ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && parseInt(fieldProps.decimals)>=0 ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && parseInt(fieldProps.minPrecision)>=0 ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        const protocolConfig = this.functionsUtil.getGlobalConfig(['stats', 'protocols', this.props.protocol]);\n        const protocolIcon = protocolConfig && protocolConfig.icon ? protocolConfig.icon : `${this.props.protocol}.svg`;\n        output = (\n          <Image src={`images/protocols/${protocolIcon}`} {...fieldProps} />\n        );\n      break;\n      case 'experimentalBadge':\n        output = null;\n        if (this.state.experimentalBadge && this.functionsUtil.BNify(this.state.experimentalBadge).gt(0)){\n          const limitCap = this.functionsUtil.abbreviateNumber(this.state.experimentalBadge, 2, maxPrecision, 0) + ` ${this.props.token}`;\n          output = (\n            <Tooltip\n              placement={'top'}\n              message={`This pool is experimental and has a cap limit of ${limitCap}`}\n            >\n              <Image src={`images/experimental.png`} {...fieldProps} />\n            </Tooltip>\n          );\n        }\n      break;\n      case 'statusBadge':\n        output = null;\n        let badgeText = null;\n        let badgeColor = null;\n\n        if (!this.state.statusBadge){\n          output = loader;\n        } else {\n          if (this.functionsUtil.BNify(this.state.statusBadge).gt(0)){\n            badgeText = 'Experimental';\n            badgeColor = 'experimental';\n          } else {\n            badgeText = 'Production';\n            badgeColor = 'production';\n          }\n          output = (\n            <Flex\n              px={2}\n              py={1}\n              borderRadius={2}\n              alignItems={'center'}\n              justifyContent={'center'}\n              backgroundColor={badgeColor}\n            >\n              <Text\n                fontSize={1}\n                fontWeight={3}\n                color={'white'}\n              >\n                {badgeText}\n              </Text>\n            </Flex>\n          );\n        }\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n        const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'trancheApyWithTooltip':\n        if (this.state[fieldInfo.name]){\n          let tooltipMessage = [`${this.props.token}: ${this.state[fieldInfo.name].baseApy.toFixed(decimals)+'%'}`];\n          Object.keys(this.state[fieldInfo.name].tokensApy).forEach( govToken => {\n            const value = this.state[fieldInfo.name].tokensApy[govToken].toFixed(decimals);\n            tooltipMessage.push(`${govToken}: ${value}%`);\n            // return `${govToken}: ${value}%`;\n          });//.join(\"; \");\n          tooltipMessage = tooltipMessage.join('; ');\n          const formattedApy = this.state[fieldInfo.name].formattedApy;\n          if (Object.keys(this.state[fieldInfo.name].tokensApy).length>0){\n            output = (\n              <TooltipText\n                tooltipProps={{\n                  placement:\"right\"\n                }}\n                text={formattedApy}\n                textProps={fieldProps}\n                message={tooltipMessage}\n              />\n            );\n          } else {\n            output = (<Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedApy}}></Text>);\n          }\n        } else {\n          output = (this.state[fieldInfo.name] === undefined ? loader : null);\n        }\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.keys(this.state[fieldInfo.name]).map( (govToken,govTokenIndex) => {\n                const govTokenConfig = this.state[fieldInfo.name][govToken];\n                return (\n                  <AssetField\n                    token={govToken}\n                    tokenConfig={govTokenConfig}\n                    key={`asset_${govTokenIndex}`}\n                    fieldInfo={{\n                      name:'iconTooltip',\n                      tooltipProps:{\n                        message:`${govToken}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govToken] ? `: ${this.state.getGovTokensDistributionSpeed[govToken].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                      },\n                      props:{\n                        borderRadius:'50%',\n                        position:'relative',\n                        height:['1.4em','2em'],\n                        ml:govTokenIndex ? '-10px' : 0,\n                        zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                        boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedValue}}></Text>\n        ) : (this.state[fieldInfo.name] === undefined ? loader : null)\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        color={'link'}\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontWeight:3,\n      height:'45px',\n      fontSize:[2,3],\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://idlelabs.notion.site/Idle-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n        {...props.colsProps}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport { Flex, Link, Icon, Text } from \"rimble-ui\";\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {\n    page:1,\n    rowsPerPage:5,\n    totalPages:null,\n    processedRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.processRows();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const rowsChanged = JSON.stringify(prevProps.rows) !== JSON.stringify(this.props.rows);\n\n    if (rowsChanged){\n      this.setState({\n        page:1,\n      },()=>{\n        this.processRows();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processRows();\n    }\n  }\n\n  processRows = (page=null) => {\n    page = page ? page : this.state.page;\n\n    const totalRows = this.props.rows.length;\n    const totalPages = Math.ceil(totalRows/this.state.rowsPerPage);\n    \n    let processedRows = [];\n    if (this.props.paginationEnabled){\n      this.props.rows.forEach((row, i) => {\n        if (i>=((page-1)*this.state.rowsPerPage) && i<((page-1)*this.state.rowsPerPage)+this.state.rowsPerPage) {\n          processedRows.push(row);\n        }\n      });\n    } else {\n      processedRows = this.props.rows;\n    }\n\n    this.setState({\n      totalPages,\n      processedRows\n    });\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processRows(page);\n    this.setState({\n      page\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.state.processedRows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n        {\n          this.props.paginationEnabled && (\n            <Flex\n              height={'50px'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n              id={'transactions-list-pagination'}\n            >\n              <Flex mr={3}>\n                <Link mr={1} onClick={ e => this.prevPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowLeft'}\n                    size={'2em'}\n                    color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n                <Link onClick={ e => this.nextPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowRight'}\n                    size={'2em'}\n                    color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n              </Flex>\n              <Flex alignItems={'center'}>\n                <Text \n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                >\n                  Page {this.state.page} of {this.state.totalPages}\n                </Text>\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Text, Icon, Image, Button, Link, Flex, Loader } from \"rimble-ui\";\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let output = null;\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    const showLoader = !!fieldInfo.showLoader;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = customValue ? this.functionsUtil.BNify(customValue).toString() : null;\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'link':\n        CustomComponent = Link;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'bgIcon':\n        CustomComponent = (props) => (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={props.bgColor}\n          >\n            <Icon\n              align={'center'}\n              name={customValue}\n              color={props.color}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      case 'html':\n        output = (<Text {...fieldProps} dangerouslySetInnerHTML={{\n          __html: customValue\n        }} />);\n      break;\n      case 'tokensList':\n        output = customValue && Object.keys(customValue).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.keys(customValue).map( (token,tokenIndex) => {\n                const tokenConfig = customValue[token];\n                return (\n                  <AssetField\n                    token={token}\n                    tokenConfig={tokenConfig}\n                    key={`asset_${tokenIndex}`}\n                    fieldInfo={{\n                      name:'iconTooltip',\n                      tooltipProps:{\n                        message:`${token}`\n                      },\n                      props:{\n                        borderRadius:'50%',\n                        position:'relative',\n                        height:['1.4em','2em'],\n                        ml:tokenIndex ? '-10px' : 0,\n                        zIndex:Object.values(customValue).length-tokenIndex,\n                        boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          </Flex>\n        ) : null;\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue && showLoader){\n      return (<Loader size=\"20px\" />);\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : output;\n  }\n}\n\nexport default CustomField;","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex, Link } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return null;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const tokenConfigStats = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // console.log(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens,output);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n\n              // console.log('apiResultsAprChart',this.props.tokenConfig.token,this.props.tokenConfig.address,this.props.network.required);\n\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              let itemIndex = 0;\n              const totalItems = apiResultsAprChart.length;\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                const itemPos = Math.floor(itemIndex++/totalItems*100);\n                aprChartData[0].data.push({ x, y, itemPos });\n              });\n            }\n\n            if (aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfigStats = this.props.token ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]) : null;\n    const tokenConfig = this.props.tokenConfig || tokenConfigStats;\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    const tokenIcon = tokenConfigStats && tokenConfigStats.icon ? tokenConfigStats.icon : (tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`);\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={tokenIcon} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        const tokenName = tokenConfigStats && tokenConfigStats.label ? tokenConfigStats.label : this.props.token;\n        output = (\n          <Text {...fieldProps}>{tokenName}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? (<Text {...fieldProps}>N/A</Text>) : (this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : (this.functionsUtil.BNify(this.state.score).lte(0) ? (<Text {...fieldProps}>-</Text>) : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'link':\n            CustomComponent = Link;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n\n        // Custom Field Props\n        const customFieldName = Object.values(fieldInfo.path).pop();\n        if (this.props.tokenConfig[`${customFieldName}Props`]){\n          const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n          // Replace props\n          if (customFieldProps && Object.keys(customFieldProps).length){\n            Object.keys(customFieldProps).forEach(p => {\n              fieldProps[p] = customFieldProps[p];\n            });\n          }\n        }\n\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n"],"sourceRoot":""}